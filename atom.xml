<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L66</title>
  
  <subtitle>胜天半子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://l66stbz.github.io/"/>
  <updated>2024-09-26T13:09:11.820Z</updated>
  <id>https://l66stbz.github.io/</id>
  
  <author>
    <name>L66</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes持久化文件存储</title>
    <link href="https://l66stbz.github.io/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/"/>
    <id>https://l66stbz.github.io/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/</id>
    <published>2024-09-23T13:50:00.000Z</published>
    <updated>2024-09-26T13:09:11.820Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="一、搭建nfs动态存储"><a href="#一、搭建nfs动态存储" class="headerlink" title="一、搭建nfs动态存储"></a>一、搭建nfs动态存储</h2><h3 id="1、-准备一台nfs服务器"><a href="#1、-准备一台nfs服务器" class="headerlink" title="1、 准备一台nfs服务器"></a>1、 准备一台nfs服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 1：创建数据目录</span></span><br><span class="line">$ mkdir /data/k8s -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：安装nfs</span></span><br><span class="line">$ yum install -y nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：授予数据目录权限</span></span><br><span class="line">$ chomd 777 -R /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：共享数据目录</span></span><br><span class="line">$ cat &gt;&gt; /etc/exports &lt;&lt; EOF</span><br><span class="line">/data/k8s *(rw,sync,no_root_squash)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：启动NFS服务</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now nfs-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6：测试</span></span><br><span class="line">$ showmount  -e 192.168.174.111</span><br><span class="line">Export list <span class="keyword">for</span> 192.168.174.111:</span><br><span class="line">/data/k8s *</span><br></pre></td></tr></table></figure><h3 id="2、Kubernetes集群操作"><a href="#2、Kubernetes集群操作" class="headerlink" title="2、Kubernetes集群操作"></a>2、Kubernetes集群操作</h3><p>nfs驱动下载地址：<a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner" target="_blank" rel="noopener">https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner</a></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/2.png" alt="image-20240923145525063"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：集群所有节点安装nfs-utils（所有节点）</span></span><br><span class="line">$ yum install -y nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：安装nfs驱动（k8s-master01操作）</span></span><br><span class="line">$ wget https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/archive/refs/tags/nfs-subdir-external-provisioner-4.0.18.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：解压压缩包（k8s-master01操作）</span></span><br><span class="line">$ tar xf nfs-subdir-external-provisioner-4.0.18.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：切换工作目录（k8s-master01操作）</span></span><br><span class="line">$ <span class="built_in">cd</span> nfs-subdir-external-provisioner-nfs-subdir-external-provisioner-4.0.18/deploy/</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：修改镜像地址（k8s-master01操作）</span></span><br><span class="line">$ vim deployment.yaml</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/3.png" alt="image-20240923150950242"></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/4.png" alt="image-20240923151234342"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 6：查看资源创建所处命名空间（k8s-master01操作）</span></span><br><span class="line">yamls=$(grep -rl <span class="string">'namespace: default'</span> ./)</span><br><span class="line"> <span class="keyword">for</span> yaml <span class="keyword">in</span> <span class="variable">$&#123;yamls&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$&#123;yaml&#125;</span></span><br><span class="line">  cat <span class="variable">$&#123;yaml&#125;</span> | grep <span class="string">'namespace: default'</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setp 7：创建资源所处命名空间（k8s-master01操作）</span></span><br><span class="line">$ kubectl create namespace nfs-provisioner --dry-run=client -oyaml &gt; nfs-provisioner-ns.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下：</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: nfs-provisioner</span><br><span class="line">spec: &#123;&#125;</span><br><span class="line">status: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 8：查看命名空间（k8s-master01操作）</span></span><br><span class="line">$ kubectl get ns | grep nfs</span><br><span class="line">nfs-provisioner        Active        39s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 9：替换资源创建默认命名空间（k8s-master01操作）</span></span><br><span class="line">$ sed -i <span class="string">'s/namespace: default/namespace: nfs-provisioner/g'</span> `grep -rl <span class="string">'namespace: default'</span> ./`</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 10：查看是否修改（k8s-master01操作）</span></span><br><span class="line">$ yamls=$(grep -rl <span class="string">'namespace: nfs-provisioner'</span> ./)</span><br><span class="line"> <span class="keyword">for</span> yaml <span class="keyword">in</span> <span class="variable">$&#123;yamls&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$&#123;yaml&#125;</span></span><br><span class="line">  cat <span class="variable">$&#123;yaml&#125;</span> | grep <span class="string">'namespace: nfs-provisioner'</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 11：创建资源（k8s-master01操作）</span></span><br><span class="line">$ kubectl create -k .</span><br><span class="line">storageclass.storage.k8s.io/nfs-client created</span><br><span class="line">serviceaccount/nfs-client-provisioner created</span><br><span class="line">role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created</span><br><span class="line">deployment.apps/nfs-client-provisioner created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 12：创建资源（k8s-master01操作）</span></span><br><span class="line">$ kubectl get all  -n nfs-provisioner</span><br><span class="line">NAME                                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/nfs-client-provisioner-5844696d4f-8hd28   1/1     Running   0          96s</span><br><span class="line"></span><br><span class="line">NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/nfs-client-provisioner   1/1     1            1           96s</span><br><span class="line"></span><br><span class="line">NAME                                                DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/nfs-client-provisioner-5844696d4f   1         1         1       96s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 13：查看sc</span></span><br><span class="line">kubectl  get sc</span><br><span class="line">NAME         PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">nfs-client   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate           <span class="literal">false</span>                  2m58s</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 14：测试使用动态存储（k8s-master01操作）,创建资源清单，内容如下</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">test-sc.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"nginx"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span> <span class="comment"># 副本数</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.26.0</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">"nfs-client"</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># step 15：创建资源</span></span><br><span class="line">$ kubectl create -f <span class="built_in">test</span>-sc.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 16：查看资源</span></span><br><span class="line">$ kubectl get po  -l app=nginx</span><br><span class="line">NAME      READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-0   1/1     Running   0          3m19s</span><br><span class="line">nginx-1   1/1     Running   0          2m55s</span><br><span class="line">nginx-2   1/1     Running   0          2m30s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 17：查看pv和pvc</span></span><br><span class="line">$ kubectl get pvc,pv</span><br><span class="line">NAME                                STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">persistentvolumeclaim/www-nginx-0   Bound    pvc-9e6dda2a-272f-4378-bfce-89a6539ddb7a   1Gi        RWO            nfs-client     4m11s</span><br><span class="line">persistentvolumeclaim/www-nginx-1   Bound    pvc-166f3ff2-5d9f-4dc2-9692-a652e81ee1fd   1Gi        RWO            nfs-client     3m47s</span><br><span class="line">persistentvolumeclaim/www-nginx-2   Bound    pvc-7dd6504c-1a14-42fe-8d2f-3b563d9488f1   1Gi        RWO            nfs-client     3m22s</span><br><span class="line"></span><br><span class="line">NAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                 STORAGECLASS   REASON   AGE</span><br><span class="line">persistentvolume/pvc-166f3ff2-5d9f-4dc2-9692-a652e81ee1fd   1Gi        RWO            Delete           Bound    default/www-nginx-1   nfs-client              3m47s</span><br><span class="line">persistentvolume/pvc-7dd6504c-1a14-42fe-8d2f-3b563d9488f1   1Gi        RWO            Delete           Bound    default/www-nginx-2   nfs-client              3m21s</span><br><span class="line">persistentvolume/pvc-9e6dda2a-272f-4378-bfce-89a6539ddb7a   1Gi        RWO            Delete           Bound    default/www-nginx-0   nfs-client              4m11s</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>提示：由于在sc资源清单中设置得默认得回收策略是delete，当删除pvc时自动删除pv。</code></strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 18：删除测试资源</span></span><br><span class="line">$ kubectl delete -f <span class="built_in">test</span>-sc.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment"># step 19：删除pvc</span></span><br><span class="line">$ kubectl delete pvc www-nginx-0  www-nginx-1 www-nginx-2</span><br><span class="line">persistentvolumeclaim <span class="string">"www-nginx-0"</span> deleted</span><br><span class="line">persistentvolumeclaim <span class="string">"www-nginx-1"</span> deleted</span><br><span class="line">persistentvolumeclaim <span class="string">"www-nginx-2"</span> deleted</span><br></pre></td></tr></table></figure><blockquote><p>至此<code>nfs</code>动态存储已经部署完成！</p></blockquote><h2 id="二、MySQL8-0一主两从集群容器化部署"><a href="#二、MySQL8-0一主两从集群容器化部署" class="headerlink" title="二、MySQL8.0一主两从集群容器化部署"></a>二、MySQL8.0一主两从集群容器化部署</h2><h3 id="1-创建namespace"><a href="#1-创建namespace" class="headerlink" title="1. 创建namespace"></a>1. 创建namespace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建namespace</span></span><br><span class="line">$ kubectl create ns cloud --dry-run=client -oyaml &gt; cloud-ns.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: cloud</span><br><span class="line">spec: &#123;&#125;</span><br><span class="line">status: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：创建资源</span></span><br><span class="line">$ kubectl create -f cloud-ns.yaml </span><br><span class="line">namespace/cloud created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看资源</span></span><br><span class="line">$ kubectl  get ns | grep cloud</span><br><span class="line">cloud                  Active        35s</span><br></pre></td></tr></table></figure><h3 id="2-创建存放MySQL密码secret"><a href="#2-创建存放MySQL密码secret" class="headerlink" title="2. 创建存放MySQL密码secret"></a>2. 创建存放MySQL密码secret</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建资源清单。注意修改root的密码和命名空间，我的root密码设置为的是root</span></span><br><span class="line">$ kubectl create secret generic mysql-password --namespace=cloud --from-literal=mysql_root_password=root --dry-run=client -oyaml &gt; mysqlpass-secret.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  mysql_root_password: cm9vdA==</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: mysql-password</span><br><span class="line">  namespace: cloud</span><br><span class="line">  </span><br><span class="line"><span class="comment"># step 2：创建secret资源</span></span><br><span class="line">$ kubectl create -f mysqlpass-secret.yaml </span><br><span class="line">secret/mysql-password created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看secret资源</span></span><br><span class="line">$ kubectl get secret  -n cloud</span><br><span class="line">NAME                  TYPE                                  DATA   AGE</span><br><span class="line">default-token-hb6pl   kubernetes.io/service-account-token   3      4m32s</span><br><span class="line">mysql-password        Opaque                                1      12s</span><br></pre></td></tr></table></figure><h3 id="3-创建MySQL-master节点configmap配置文件"><a href="#3-创建MySQL-master节点configmap配置文件" class="headerlink" title="3. 创建MySQL-master节点configmap配置文件"></a>3. 创建MySQL-master节点configmap配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 4：创建mysql-master配置文件</span></span><br><span class="line">$ vim my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line">datadir          = /var/lib/mysql</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">secure-file-priv = /var/lib/mysql-files</span><br><span class="line">pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">user             = mysql</span><br><span class="line">secure-file-priv = NULL</span><br><span class="line">server-id        = 1</span><br><span class="line"><span class="built_in">log</span>-bin          = master-bin</span><br><span class="line">log_bin_index    = master-bin.index</span><br><span class="line"><span class="comment">#binlog_do_db     = xiaohh_user</span></span><br><span class="line">binlog_ignore_db = information_schema</span><br><span class="line">binlog_ignore_db = mysql</span><br><span class="line">binlog_ignore_db = performance_schema</span><br><span class="line">binlog_ignore_db = sys</span><br><span class="line">binlog-format    = ROW</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：创建mysql-master配置文件configmap</span></span><br><span class="line">$ kubectl create configmap mysql-master-cm -n cloud --from-file=my.cnf --dry-run=client -o yaml &gt; mysqlmaster-confmap.yaml</span><br><span class="line"><span class="comment"># 资源清单如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  my.cnf: |</span><br><span class="line">    [mysqld]</span><br><span class="line">    skip-host-cache</span><br><span class="line">    skip-name-resolve</span><br><span class="line">    datadir          = /var/lib/mysql</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">    secure-file-priv = /var/lib/mysql-files</span><br><span class="line">    pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">    user             = mysql</span><br><span class="line">    secure-file-priv = NULL</span><br><span class="line">    server-id        = 1</span><br><span class="line">    <span class="built_in">log</span>-bin          = master-bin</span><br><span class="line">    log_bin_index    = master-bin.index</span><br><span class="line">    binlog_ignore_db = information_schema</span><br><span class="line">    binlog_ignore_db = mysql</span><br><span class="line">    binlog_ignore_db = performance_schema</span><br><span class="line">    binlog_ignore_db = sys</span><br><span class="line">    binlog-format    = ROW</span><br><span class="line"></span><br><span class="line">    [client]</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">    !includedir /etc/mysql/conf.d/</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: mysql-master-cm</span><br><span class="line">  namespace: cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6：创建资源</span></span><br><span class="line">$ kubectl create -f mysqlmaster-confmap.yaml </span><br><span class="line">configmap/mysql-master-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 7：查看configmap资源</span></span><br><span class="line">$ kubectl get cm -n cloud | grep mysql</span><br><span class="line">mysql-master-cm    1      33s</span><br></pre></td></tr></table></figure><h3 id="4-创建MySQL主节点"><a href="#4-创建MySQL主节点" class="headerlink" title="4. 创建MySQL主节点"></a>4. 创建MySQL主节点</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 8：创建mysql-master节点资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">mysql-master-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-mysql-master-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql-master</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30306</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql-master</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-mysql-master</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql-master</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"deploy-mysql-master-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql-master</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--lower_case_table_names=1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--default-time_zone=+8:00</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="comment"># image: docker.io/library/mysql:8.0.34</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/mysql:8.0.34</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/my.cnf</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">my.cnf</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql_root_password</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql-password</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line"><span class="comment">#      - name: mysql-data</span></span><br><span class="line"><span class="comment">#        persistentVolumeClaim:</span></span><br><span class="line"><span class="comment">#          claimName: deploy-mysql-master-nfs-pvc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql-master-cm</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">my.cnf</span></span><br><span class="line">            <span class="attr">mode:</span> <span class="number">0644</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">my.cnf</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">mysql-data</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">"nfs-client"</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">          </span><br><span class="line"><span class="comment"># step 9：创建MySQL-master pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">mysql-master-sts.yaml</span> </span><br><span class="line"><span class="string">service/deploy-mysql-master-svc</span> <span class="string">created</span></span><br><span class="line"><span class="string">statefulset.apps/deploy-mysql-master</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 10：查看Pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">po</span> <span class="string">-n</span> <span class="string">cloud</span></span><br><span class="line"><span class="string">NAME</span>                    <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">deploy-mysql-master-0</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">56s</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 11：查看pvc，pv</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">pvc,pv</span> <span class="string">-n</span> <span class="string">cloud</span></span><br><span class="line"><span class="string">NAME</span>                                                     <span class="string">STATUS</span>   <span class="string">VOLUME</span>                                     <span class="string">CAPACITY</span>   <span class="string">ACCESS</span> <span class="string">MODES</span>   <span class="string">STORAGECLASS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">persistentvolumeclaim/mysql-data-deploy-mysql-master-0</span>   <span class="string">Bound</span>    <span class="string">pvc-43325493-08a6-4aea-92db-491d7cf578d5</span>   <span class="string">1Gi</span>        <span class="string">RWO</span>            <span class="string">nfs-client</span>     <span class="string">2m</span></span><br><span class="line"></span><br><span class="line"><span class="string">NAME</span>                                                        <span class="string">CAPACITY</span>   <span class="string">ACCESS</span> <span class="string">MODES</span>   <span class="string">RECLAIM</span> <span class="string">POLICY</span>   <span class="string">STATUS</span>   <span class="string">CLAIM</span>                                    <span class="string">STORAGECLASS</span>   <span class="string">REASON</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">persistentvolume/pvc-43325493-08a6-4aea-92db-491d7cf578d5</span>   <span class="string">1Gi</span>        <span class="string">RWO</span>            <span class="string">Delete</span>           <span class="string">Bound</span>    <span class="string">cloud/mysql-data-deploy-mysql-master-0</span>   <span class="string">nfs-client</span>              <span class="string">2m</span></span><br></pre></td></tr></table></figure><h3 id="5-nfs服务器查看挂载目录（nfs-server主机操作）"><a href="#5-nfs服务器查看挂载目录（nfs-server主机操作）" class="headerlink" title="5. nfs服务器查看挂载目录（nfs-server主机操作）"></a>5. nfs服务器查看挂载目录（nfs-server主机操作）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 12：查看挂载目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /data/k8s/cloud-mysql-data-deploy-mysql-master-0-pvc-43325493-08a6-4aea-92db-491d7cf578d5/</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/5.png" alt="image-20240923163203493"></p><h3 id="6-部署第一个mysql-slave节点"><a href="#6-部署第一个mysql-slave节点" class="headerlink" title="6. 部署第一个mysql-slave节点"></a>6. 部署第一个mysql-slave节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 13：创建mysql-slave01相关文件存放目录</span></span><br><span class="line">$ mkdik mysql-slave01</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 14：切换工作目录</span></span><br><span class="line">$ <span class="built_in">cd</span> mysql-slave01</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 15：准备mysql-slave01节点configmap</span></span><br><span class="line">$ vim my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line">datadir          = /var/lib/mysql</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">secure-file-priv = /var/lib/mysql-files</span><br><span class="line">pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">user             = mysql</span><br><span class="line">secure-file-priv = NULL</span><br><span class="line">server-id        = 2</span><br><span class="line"><span class="built_in">log</span>-bin          = slave-bin</span><br><span class="line">relay-log        = slave-relay-bin</span><br><span class="line">relay-log-index  = slave-relay-bin.index</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 16：创建mysql-slave01资源清单</span></span><br><span class="line">$ kubectl create configmap mysql-slave-01-cm -n cloud --from-file=my.cnf --dry-run=client -o yaml &gt; mysql-slave-01-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  my.cnf: |</span><br><span class="line">    [mysqld]</span><br><span class="line">    skip-host-cache</span><br><span class="line">    skip-name-resolve</span><br><span class="line">    datadir          = /var/lib/mysql</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">    secure-file-priv = /var/lib/mysql-files</span><br><span class="line">    pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">    user             = mysql</span><br><span class="line">    secure-file-priv = NULL</span><br><span class="line">    server-id        = 2</span><br><span class="line">    <span class="built_in">log</span>-bin          = slave-bin</span><br><span class="line">    relay-log        = slave-relay-bin</span><br><span class="line">    relay-log-index  = slave-relay-bin.index</span><br><span class="line"></span><br><span class="line">    [client]</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">    !includedir /etc/mysql/conf.d/</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: mysql-slave-01-cm</span><br><span class="line">  namespace: cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 17：创建mysql-slave01配置文件configmap</span></span><br><span class="line">$ kubectl create -f mysql-slave-01-cm.yaml </span><br><span class="line">configmap/mysql-slave-01-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 18：查看configmap资源</span></span><br><span class="line">$ kubectl get cm -n cloud</span><br><span class="line">NAME                DATA   AGE</span><br><span class="line">kube-root-ca.crt    1      33m</span><br><span class="line">mysql-master-cm     1      24m</span><br><span class="line">mysql-slave-01-cm   1      29s</span><br></pre></td></tr></table></figure><h3 id="7-创建mysql-slave01节点"><a href="#7-创建mysql-slave01节点" class="headerlink" title="7. 创建mysql-slave01节点"></a>7. 创建mysql-slave01节点</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 19：配置mysql-slave01资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">mysql-slave01.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-mysql-slave-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql-slave</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30308</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql-slave</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-mysql-slave-01</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql-slave</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"deploy-mysql-slave-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql-slave</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--lower_case_table_names=1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--default-time_zone=+8:00</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/mysql:8.0.34</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-slave01-data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/my.cnf</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">my.cnf</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql_root_password</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql-password</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line"><span class="comment">#      - name: mysql-data</span></span><br><span class="line"><span class="comment">#        persistentVolumeClaim:</span></span><br><span class="line"><span class="comment">#          claimName: deploy-mysql-slave-01-nfs-pvc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql-slave-01-cm</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">my.cnf</span></span><br><span class="line">            <span class="attr">mode:</span> <span class="number">0644</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">my.cnf</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">mysql-slave01-data</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">"nfs-client"</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 20：创建mysql-slave01 pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">-f</span> <span class="string">mysql-slave01.yaml</span> </span><br><span class="line"><span class="string">NAME</span>                             <span class="string">TYPE</span>       <span class="string">CLUSTER-IP</span>      <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>          <span class="string">AGE</span></span><br><span class="line"><span class="string">service/deploy-mysql-slave-svc</span>   <span class="string">NodePort</span>   <span class="number">10.96</span><span class="number">.253</span><span class="number">.198</span>   <span class="string">&lt;none&gt;</span>        <span class="number">3306</span><span class="string">:30308/TCP</span>   <span class="string">3m36s</span></span><br><span class="line"></span><br><span class="line"><span class="string">NAME</span>                                     <span class="string">READY</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">statefulset.apps/deploy-mysql-slave-01</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">3m36s</span></span><br></pre></td></tr></table></figure><h3 id="8-查看nfs挂载目录数据（nfs-server节点查看）"><a href="#8-查看nfs挂载目录数据（nfs-server节点查看）" class="headerlink" title="8. 查看nfs挂载目录数据（nfs-server节点查看）"></a>8. 查看nfs挂载目录数据（nfs-server节点查看）</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/6.png" alt="image-20240923164959890"></p><h3 id="9-部署第二个mysql-slave02节点"><a href="#9-部署第二个mysql-slave02节点" class="headerlink" title="9. 部署第二个mysql-slave02节点"></a>9. 部署第二个mysql-slave02节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 21：创建工作目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/ &amp;&amp; mkdir mysql-slave02 &amp;&amp; <span class="built_in">cd</span> mysql-slave02</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 22：编写mysql-slave02 my.cnf配置文件</span></span><br><span class="line">$ vim my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line">datadir          = /var/lib/mysql</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">secure-file-priv = /var/lib/mysql-files</span><br><span class="line">pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">user             = mysql</span><br><span class="line">secure-file-priv = NULL</span><br><span class="line">server-id        = 3</span><br><span class="line"><span class="built_in">log</span>-bin          = slave-bin</span><br><span class="line">relay-log        = slave-relay-bin</span><br><span class="line">relay-log-index  = slave-relay-bin.index</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 22：创建mysql-slave02 configmap资源清单</span></span><br><span class="line">$ kubectl create configmap mysql-slave-02-cm -n cloud --from-file=my.cnf --dry-run=client -o yaml &gt; mysql-slave02-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  my.cnf: |</span><br><span class="line">    [mysqld]</span><br><span class="line">    skip-host-cache</span><br><span class="line">    skip-name-resolve</span><br><span class="line">    datadir          = /var/lib/mysql</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line">    secure-file-priv = /var/lib/mysql-files</span><br><span class="line">    pid-file         = /var/run/mysqld/mysqld.pid</span><br><span class="line">    user             = mysql</span><br><span class="line">    secure-file-priv = NULL</span><br><span class="line">    server-id        = 3</span><br><span class="line">    <span class="built_in">log</span>-bin          = slave-bin</span><br><span class="line">    relay-log        = slave-relay-bin</span><br><span class="line">    relay-log-index  = slave-relay-bin.index</span><br><span class="line"></span><br><span class="line">    [client]</span><br><span class="line">    socket           = /var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">    !includedir /etc/mysql/conf.d/</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: mysql-slave-02-cm</span><br><span class="line">  namespace: cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 23：创建mysql-slave02 配置文件configmap</span></span><br><span class="line">$ kubectl create -f mysql-slave02-cm.yaml </span><br><span class="line">configmap/mysql-slave-02-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 24：查看资源</span></span><br><span class="line">$ kubectl get cm -n cloud</span><br><span class="line">NAME                DATA   AGE</span><br><span class="line">kube-root-ca.crt    1      57m</span><br><span class="line">mysql-master-cm     1      47m</span><br><span class="line">mysql-slave-01-cm   1      24m</span><br><span class="line">mysql-slave-02-cm   1      36s</span><br></pre></td></tr></table></figure><h3 id="10-创建mysql-slave02节点"><a href="#10-创建mysql-slave02节点" class="headerlink" title="10. 创建mysql-slave02节点"></a>10. 创建mysql-slave02节点</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 25：创建mysql-slave02资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">mysql-slave02-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-mysql-slave-02</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql-slave-02</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"deploy-mysql-slave-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql-slave-02</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--lower_case_table_names=1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--default-time_zone=+8:00</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/mysql:8.0.34</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-slave02-data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/my.cnf</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">my.cnf</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql_root_password</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql-password</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line"><span class="comment">#      - name: mysql-data</span></span><br><span class="line"><span class="comment">#        persistentVolumeClaim:</span></span><br><span class="line"><span class="comment">#          claimName: deploy-mysql-slave-02-nfs-pvc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql-slave-02-cm</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">my.cnf</span></span><br><span class="line">            <span class="attr">mode:</span> <span class="number">0644</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">my.cnf</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">mysql-slave02-data</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">"nfs-client"</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 26：创建Pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">mysql-slave02-sts.yaml</span> </span><br><span class="line"><span class="string">statefulset.apps/deploy-mysql-slave-02</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 27：查看Pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">po</span> <span class="string">-n</span> <span class="string">cloud</span></span><br><span class="line"><span class="string">NAME</span>                      <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">deploy-mysql-master-0</span>     <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">43m</span></span><br><span class="line"><span class="string">deploy-mysql-slave-01-0</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">24m</span></span><br><span class="line"><span class="string">deploy-mysql-slave-02-0</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">94s</span></span><br></pre></td></tr></table></figure><h3 id="11-三台MySQL组成集群"><a href="#11-三台MySQL组成集群" class="headerlink" title="11. 三台MySQL组成集群"></a>11. 三台MySQL组成集群</h3><h4 id="11-1-查看主节点状态信息"><a href="#11-1-查看主节点状态信息" class="headerlink" title="11.1 查看主节点状态信息"></a>11.1 查看主节点状态信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：进入MySQL主节点容器</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it deploy-mysql-master-0 -n cloud  -- bash</span><br><span class="line"><span class="comment"># step 1.1：登录mysql</span></span><br><span class="line">bash-4.4<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 1.2：查看master状态</span></span><br><span class="line">mysql&gt; show master status;</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/7.png" alt="image-20240923194018366"></p><h4 id="11-2-两台mysql-slave节点连接master节点"><a href="#11-2-两台mysql-slave节点连接master节点" class="headerlink" title="11.2 两台mysql-slave节点连接master节点"></a>11.2 两台mysql-slave节点连接master节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=<span class="string">'deploy-mysql-master-0.deploy-mysql-master-svc.cloud.svc.cluster.local'</span>, master_port=3306, master_user=<span class="string">'root'</span>, master_password=<span class="string">'root'</span>, master_log_file=<span class="string">'master-bin.000003'</span>, master_log_pos=157, master_connect_retry=30, get_master_public_key=1;</span><br></pre></td></tr></table></figure><p>命令参数如下：</p><ul><li><strong>master_host</strong>: 这个参数是master的地址，kubernetes提供的解析规则是<code>pod名称.service名称.命名空间.svc.cluster.local</code>。</li><li><strong>master_port</strong>: 主节点的mysql端口，我们没改默认是3306。</li><li><strong>master_user</strong>: 登录到主节点的mysql用户。</li><li><strong>master_password</strong>: 登录到主节点要用到的密码。</li><li><strong>master_log_file</strong>: 我们之前查看mysql主节点状态时候的 File 字段。</li><li><strong>master_log_pos</strong>: 我们之前查看mysql主节点状态时候的 Position 字段。</li><li><strong>master_connect_retry</strong>: 主节点重连时间。</li><li><strong>get_master_public_key</strong>: 连接主mysql的公钥获取方式。</li></ul><h4 id="11-3-mysql-slave01执行命令连接master容器"><a href="#11-3-mysql-slave01执行命令连接master容器" class="headerlink" title="11.3 mysql-slave01执行命令连接master容器"></a>11.3 mysql-slave01执行命令连接master容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 2：进入mysql-slave01容器中</span></span><br><span class="line">$ kubectl get po -n cloud</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-mysql-master-0     1/1     Running   0          55m</span><br><span class="line">deploy-mysql-slave-01-0   1/1     Running   0          37m</span><br><span class="line">deploy-mysql-slave-02-0   1/1     Running   0          14m</span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it deploy-mysql-slave-01-0  -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：连接数据库</span></span><br><span class="line">bash-4.4<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：连接MySQL-master Pod</span></span><br><span class="line">mysql&gt; change master to master_host=<span class="string">'deploy-mysql-master-0.deploy-mysql-master-svc.cloud.svc.cluster.local'</span>, master_port=3306, master_user=<span class="string">'root'</span>, master_password=<span class="string">'root'</span>, master_log_file=<span class="string">'master-bin.000005'</span>, master_log_pos=157, master_connect_retry=30, get_master_public_key=1;</span><br><span class="line">Query OK, 0 rows affected, 11 warnings (0.12 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：启动slave01</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6： 查看主从连接状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: deploy-mysql-master-0.deploy-mysql-master-svc.cloud.svc.cluster.local</span><br><span class="line">                  Master_User: root</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 30</span><br><span class="line">              Master_Log_File: master-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 157</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 327</span><br><span class="line">        Relay_Master_Log_File: master-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 157</span><br><span class="line">              Relay_Log_Space: 537</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: 9f372890-7985-11ef-8931-7a8c0cecaa4a</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Replica has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">       Master_public_key_path: </span><br><span class="line">        Get_master_public_key: 1</span><br><span class="line">            Network_Namespace: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="11-4-mysql-slave02执行命令连接mater容器"><a href="#11-4-mysql-slave02执行命令连接mater容器" class="headerlink" title="11.4 mysql-slave02执行命令连接mater容器"></a>11.4 mysql-slave02执行命令连接mater容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 7：进入mysql-slave02容器</span></span><br><span class="line">$ kubectl  get po -n cloud</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-mysql-master-0     1/1     Running   0          66m</span><br><span class="line">deploy-mysql-slave-01-0   1/1     Running   0          48m</span><br><span class="line">deploy-mysql-slave-02-0   1/1     Running   0          24m</span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it deploy-mysql-slave-02-0 -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 8：连接数据库</span></span><br><span class="line">$ bash-4.4<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 9：连接MySQL-master Pod</span></span><br><span class="line">mysql&gt; change master to master_host=<span class="string">'deploy-mysql-master-0.deploy-mysql-master-svc.cloud.svc.cluster.local'</span>, master_port=3306, master_user=<span class="string">'root'</span>, master_password=<span class="string">'root'</span>, master_log_file=<span class="string">'master-bin.000005'</span>, master_log_pos=157, master_connect_retry=30, get_master_public_key=1;</span><br><span class="line">Query OK, 0 rows affected, 11 warnings (0.12 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 10：启动slave01</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 11： 查看主从连接状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: deploy-mysql-master-0.deploy-mysql-master-svc.cloud.svc.cluster.local</span><br><span class="line">                  Master_User: root</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 30</span><br><span class="line">              Master_Log_File: master-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 157</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 327</span><br><span class="line">        Relay_Master_Log_File: master-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 157</span><br><span class="line">              Relay_Log_Space: 537</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: 9f372890-7985-11ef-8931-7a8c0cecaa4a</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Replica has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">       Master_public_key_path: </span><br><span class="line">        Get_master_public_key: 1</span><br><span class="line">            Network_Namespace: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="12-测试MySQL主从集群"><a href="#12-测试MySQL主从集群" class="headerlink" title="12. 测试MySQL主从集群"></a>12. 测试MySQL主从集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：进入MySQL-master容器</span></span><br><span class="line">$ kubectl get po -n cloud</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-mysql-master-0     1/1     Running   0          69m</span><br><span class="line">deploy-mysql-slave-01-0   1/1     Running   0          51m</span><br><span class="line">deploy-mysql-slave-02-0   1/1     Running   0          28m</span><br><span class="line">$ kubectl  <span class="built_in">exec</span> -it deploy-mysql-master-0 -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：登录数据库</span></span><br><span class="line">bash-4.4<span class="comment"># mysql -uroot -proot </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：创建测试库、测试表</span></span><br><span class="line">mysql&gt; CREATE DATABASE `cloud`;</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| cloud        |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：从库查看数据是否同步，进入mysql-slave</span></span><br><span class="line">$ kubectl get po -n cloud</span><br><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-mysql-master-0     1/1     Running   0          74m</span><br><span class="line">deploy-mysql-slave-01-0   1/1     Running   0          56m</span><br><span class="line">deploy-mysql-slave-02-0   1/1     Running   0          32m</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it deploy-mysql-slave-01-0 -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：进入数据库</span></span><br><span class="line">bash-4.4<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6：查看数据是否同步</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| cloud        |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="三、Redis三主三从cluster集群部署"><a href="#三、Redis三主三从cluster集群部署" class="headerlink" title="三、Redis三主三从cluster集群部署"></a>三、Redis三主三从cluster集群部署</h2><h3 id="1-redis-cluster集群初始化"><a href="#1-redis-cluster集群初始化" class="headerlink" title="1. redis cluster集群初始化"></a>1. redis cluster集群初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：查看当前启动sc</span></span><br><span class="line">$ kubectl  get sc</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/8.png" alt="image-20240923201733806"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 2：编写redis配置文件</span></span><br><span class="line">$ vim redis.conf</span><br><span class="line"><span class="comment"># 关闭保护模式</span></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志级别</span></span><br><span class="line">loglevel warning</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志存放目录</span></span><br><span class="line">logfile <span class="string">"/data/redis.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据文件目录</span></span><br><span class="line">dir /data</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库数量</span></span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据库到数据文件</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群相关配置</span></span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes-6379.conf</span><br><span class="line">cluster-node-timeout 15000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setp 3：创建redis配置文件cofigmap</span></span><br><span class="line">$ kubectl create configmap redis-cluster-config --from-file=redis.conf -n cloud --dry-run=client -o yaml &gt; redis-conf-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  redis.conf: |+</span><br><span class="line">    <span class="comment"># 关闭保护模式</span></span><br><span class="line">    protected-mode no</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志级别</span></span><br><span class="line">    loglevel warning</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志存放目录</span></span><br><span class="line">    logfile <span class="string">"/data/redis.log"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据文件目录</span></span><br><span class="line">    dir /data</span><br><span class="line">    dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据库数量</span></span><br><span class="line">    databases 16</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存数据库到数据文件</span></span><br><span class="line">    save 900 1</span><br><span class="line">    save 300 10</span><br><span class="line">    save 60 10000</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 集群相关配置</span></span><br><span class="line">    cluster-enabled yes</span><br><span class="line">    cluster-config-file nodes-6379.conf</span><br><span class="line">    cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: redis-cluster-config</span><br><span class="line">  namespace: cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：创建confimap</span></span><br><span class="line">$ kubectl create -f redis-conf-cm.yaml </span><br><span class="line">configmap/redis-cluster-config created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：查看资源</span></span><br><span class="line">$ kubectl  get cm -n cloud</span><br><span class="line">NAME                   DATA   AGE</span><br><span class="line">kube-root-ca.crt       1      4h18m</span><br><span class="line">mysql-master-cm        1      4h8m</span><br><span class="line">mysql-slave-01-cm      1      3h44m</span><br><span class="line">mysql-slave-02-cm      1      3h20m</span><br><span class="line">redis-cluster-config   1      42s</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 6：创建redis集群Pod</span></span><br><span class="line">$ vim redis-cluster.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: deploy-redis-svc</span><br><span class="line">  namespace: cloud</span><br><span class="line">  labels:</span><br><span class="line">    app: redis</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 6379</span><br><span class="line">    name: redis</span><br><span class="line">    targetPort: 6379</span><br><span class="line">    nodePort: 30379</span><br><span class="line">  selector:</span><br><span class="line">    app: redis</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  sessionAffinity: ClientIP</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: deploy-redis</span><br><span class="line">  namespace: cloud</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: redis</span><br><span class="line">  <span class="comment"># 引用上面定义的Service</span></span><br><span class="line">  serviceName: <span class="string">"deploy-redis-svc"</span></span><br><span class="line">  <span class="comment"># 注意这里部署六个节点，按照本篇文章的逻辑最好不要修改</span></span><br><span class="line">  replicas: 6</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: redis</span><br><span class="line">    spec:</span><br><span class="line">      terminationGracePeriodSeconds: 10</span><br><span class="line">      containers:</span><br><span class="line">      - <span class="built_in">command</span>:</span><br><span class="line">      <span class="comment"># 这里指定使用那个配置文件启动redis-server</span></span><br><span class="line">        - <span class="string">"redis-server"</span></span><br><span class="line">        - <span class="string">"/usr/local/etc/redis.conf"</span></span><br><span class="line">        name: redis</span><br><span class="line">        <span class="comment"># 因为redis6集群对域名支持不好，并且Kubernetes是需要通过域名连接各个pod的，所以我们采用redis7来完成这次部署</span></span><br><span class="line">        <span class="comment"># 如果你能拉取到DockerHub上的镜像那么你就使用这个</span></span><br><span class="line">        <span class="comment"># image: docker.io/library/redis:7.0.12</span></span><br><span class="line">        <span class="comment"># 如果你拉取不到，那么就使用我拉取并推送到国内阿里云的镜像</span></span><br><span class="line">        image: registry.cn-shenzhen.aliyuncs.com/xiaohh-docker/redis:7.0.12</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 6379</span><br><span class="line">          name: redis</span><br><span class="line">        volumeMounts:</span><br><span class="line">        <span class="comment"># 挂载redis的数据卷，使用的是我在下面声明的存储类模版</span></span><br><span class="line">        - name: redis-data</span><br><span class="line">          mountPath: /data</span><br><span class="line">        <span class="comment"># 挂载redis的配置文件</span></span><br><span class="line">        - name: redis-config</span><br><span class="line">          mountPath: /usr/<span class="built_in">local</span>/etc</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">      volumes:</span><br><span class="line">      <span class="comment"># 读取configmap，获取redis的配置文件，方便上面挂载这个配置文件</span></span><br><span class="line">      - name: redis-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: redis-cluster-config</span><br><span class="line">          items:</span><br><span class="line">          - key: redis.conf</span><br><span class="line">            path: redis.conf</span><br><span class="line">  <span class="comment"># 定义存储类模版</span></span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: redis-data <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    spec:</span><br><span class="line">      accessModes:</span><br><span class="line">      - ReadWriteMany <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 1Gi <span class="comment"># 申请1个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      storageClassName: nfs-client <span class="comment"># 这里填写你存储类的名字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 7：创建资源</span></span><br><span class="line">$ kubectl create -f redis-cluster.yaml </span><br><span class="line">service/deploy-redis-svc created</span><br><span class="line">statefulset.apps/deploy-redis created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 8：查看资源</span></span><br><span class="line">$  kubectl  get po -n cloud  -l app=redis</span><br><span class="line">NAME             READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-redis-0   1/1     Running   0          7m51s</span><br><span class="line">deploy-redis-1   1/1     Running   0          5m50s</span><br><span class="line">deploy-redis-2   1/1     Running   0          2m</span><br><span class="line">deploy-redis-3   1/1     Running   0          96s</span><br><span class="line">deploy-redis-4   1/1     Running   0          91s</span><br><span class="line">deploy-redis-5   1/1     Running   0          68s</span><br></pre></td></tr></table></figure><h3 id="2-redis-cluster集群组建"><a href="#2-redis-cluster集群组建" class="headerlink" title="2. redis cluster集群组建"></a>2. redis cluster集群组建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：进入redis-0 Pod中</span></span><br><span class="line">$ kubectl  <span class="built_in">exec</span> -it deploy-redis-0 -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：redis-0 Pod中执行集群组建</span></span><br><span class="line">root@deploy-redis-0:/data<span class="comment"># redis-cli --cluster create --cluster-replicas 1 \</span></span><br><span class="line">deploy-redis-0.deploy-redis-svc.cloud.svc.cluster.local:6379 \</span><br><span class="line">deploy-redis-1.deploy-redis-svc.cloud.svc.cluster.local:6379 \</span><br><span class="line">deploy-redis-2.deploy-redis-svc.cloud.svc.cluster.local:6379 \</span><br><span class="line">deploy-redis-3.deploy-redis-svc.cloud.svc.cluster.local:6379 \</span><br><span class="line">deploy-redis-4.deploy-redis-svc.cloud.svc.cluster.local:6379 \</span><br><span class="line">deploy-redis-5.deploy-redis-svc.cloud.svc.cluster.local:6379</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/9.png" alt="image-20240923204125203"></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/10.png" alt="image-20240923204210303"></p><h3 id="3-redis-cluster集群测试"><a href="#3-redis-cluster集群测试" class="headerlink" title="3. redis cluster集群测试"></a>3. redis cluster集群测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：redis-0 Pod中验证</span></span><br><span class="line">root@deploy-redis-0:/data<span class="comment"># redis-cli  -c</span></span><br><span class="line">127.0.0.1:6379&gt; cluster nodes</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/11.png" alt="image-20240923204400412"></p><h2 id="四、Nocas集群部署"><a href="#四、Nocas集群部署" class="headerlink" title="四、Nocas集群部署"></a>四、Nocas集群部署</h2><h3 id="1-创建数据库（此数据包含了nacos配置文件表）"><a href="#1-创建数据库（此数据包含了nacos配置文件表）" class="headerlink" title="1. 创建数据库（此数据包含了nacos配置文件表）"></a>1. 创建数据库（此数据包含了nacos配置文件表）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建资源清单</span></span><br><span class="line">$ vim nacos-mysql.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: deploy-mysql-nacos-svc</span><br><span class="line">  namespace: cloud</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql-nacos</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 3306</span><br><span class="line">    name: mysql</span><br><span class="line">    targetPort: 3306</span><br><span class="line">    nodePort: 30310</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql-nacos</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  sessionAffinity: ClientIP</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: deploy-mysql-nacos</span><br><span class="line">  namespace: cloud</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql-nacos</span><br><span class="line">  serviceName: <span class="string">"deploy-mysql-nacos-svc"</span></span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql-nacos</span><br><span class="line">    spec:</span><br><span class="line">      terminationGracePeriodSeconds: 10</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - --character-set-server=utf8mb4</span><br><span class="line">        - --collation-server=utf8mb4_unicode_ci</span><br><span class="line">        - --lower_case_table_names=1</span><br><span class="line">        - --default-time_zone=+8:00</span><br><span class="line">        name: mysql</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nacos-mysql:2.0.4</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 3306</span><br><span class="line">          name: mysql</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: nacos-mysql-data</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line">        env:</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          valueFrom:</span><br><span class="line">            secretKeyRef:</span><br><span class="line">              key: mysql_root_password</span><br><span class="line">              name: mysql-password</span><br><span class="line">  <span class="comment"># 定义存储类模版</span></span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: nacos-mysql-data <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    spec:</span><br><span class="line">      accessModes:</span><br><span class="line">      - ReadWriteMany <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 1Gi <span class="comment"># 申请1个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      storageClassName: nfs-client <span class="comment"># 这里填写你存储类的名字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：创建资源</span></span><br><span class="line">$ kubectl create -f nacos-mysql.yaml </span><br><span class="line">service/deploy-mysql-nacos-svc created</span><br><span class="line">statefulset.apps/deploy-mysql-nacos created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看资源</span></span><br><span class="line">$ kubectl get -f nacos-mysql.yaml </span><br><span class="line">NAME                             TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">service/deploy-mysql-nacos-svc   NodePort   10.96.57.28   &lt;none&gt;        3306:30310/TCP   2m22s</span><br><span class="line"></span><br><span class="line">NAME                                  READY   AGE</span><br><span class="line">statefulset.apps/deploy-mysql-nacos   1/1     2m22s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：查看Pod</span></span><br><span class="line">$ kubectl get po  -l app=mysql-nacos -n cloud</span><br><span class="line">NAME                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">deploy-mysql-nacos-0   1/1     Running   0          3m40s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 5：进入Pod</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it deploy-mysql-nacos-0 -n cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6：在Pod中登录MySQL</span></span><br><span class="line">bash-4.2<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 7：查看数据库</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| nacos_config       |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 8：切换数据库</span></span><br><span class="line">mysql&gt; use nacos_config；</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 9：查看nacos_config数据库所有的表</span></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+------------------------+</span><br><span class="line">| Tables_in_nacos_config |</span><br><span class="line">+------------------------+</span><br><span class="line">| config_info            |</span><br><span class="line">| config_info_aggr       |</span><br><span class="line">| config_info_beta       |</span><br><span class="line">| config_info_tag        |</span><br><span class="line">| config_tags_relation   |</span><br><span class="line">| group_capacity         |</span><br><span class="line">| his_config_info        |</span><br><span class="line">| permissions            |</span><br><span class="line">| roles                  |</span><br><span class="line">| tenant_capacity        |</span><br><span class="line">| tenant_info            |</span><br><span class="line">| users                  |</span><br><span class="line">+------------------------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="2-创建nacos-configmap"><a href="#2-创建nacos-configmap" class="headerlink" title="2. 创建nacos configmap"></a>2. 创建nacos configmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建configmap</span></span><br><span class="line">$ kubectl create configmap nacos-deploy-config -n cloud \</span><br><span class="line">--from-literal=mode=cluster \</span><br><span class="line">--from-literal=nacos-servers=<span class="string">'deploy-nacos-0.deploy-nacos-svc.cloud.svc.cluster.local:8848 deploy-nacos-1.deploy-nacos-svc.cloud.svc.cluster.local:8848 deploy-nacos-2.deploy-nacos-svc.cloud.svc.cluster.local:8848'</span> \</span><br><span class="line">--from-literal=spring-datasource-platform=mysql \</span><br><span class="line">--from-literal=mysql-service-host=<span class="string">'deploy-mysql-nacos-0.deploy-mysql-nacos-svc.cloud.svc.cluster.local'</span> \</span><br><span class="line">--from-literal=mysql-service-port=3306 \</span><br><span class="line">--from-literal=mysql-service-db-name=nacos_config \</span><br><span class="line">--from-literal=mysql-service-user=root \</span><br><span class="line">--from-literal=mysql-database-num=1 \</span><br><span class="line">--from-literal=mysql-service-db-param=<span class="string">'characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false'</span> \</span><br><span class="line">--from-literal=jvm-xms=256m \</span><br><span class="line">--from-literal=jvm-xmx=256m \</span><br><span class="line">--from-literal=jvm-xmn=128m \</span><br><span class="line">--dry-run=client -o yaml &gt; nacos-mysql-file-cm.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：创建资源</span></span><br><span class="line">$ kubectl create -f nacos-mysql-file-cm.yaml </span><br><span class="line">configmap/nacos-deploy-config created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看资源</span></span><br><span class="line">$ kubectl get -f nacos-mysql-file-cm.yaml </span><br><span class="line">NAME                  DATA   AGE</span><br><span class="line">nacos-deploy-config   12     33s</span><br></pre></td></tr></table></figure><h3 id="3-创建nacos-集群Pod"><a href="#3-创建nacos-集群Pod" class="headerlink" title="3. 创建nacos 集群Pod"></a>3. 创建nacos 集群Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">nacos-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-nacos-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"deploy-nacos-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nacos-server:v2.0.4</span></span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">env:</span> <span class="comment"># 引用各类环境变量为nacos做配置，注意大部分引用configmap，只有数据库密码引用的创建mysql时候的secret</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMN</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">jvm-xmn</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMS</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">jvm-xms</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMX</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">jvm-xmx</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MODE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mode</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_DATABASE_NUM</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-database-num</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_NAME</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-service-db-name</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_PARAM</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-service-db-param</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_HOST</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-service-host</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql_root_password</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql-password</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PORT</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-service-port</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_USER</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql-service-user</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVERS</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">nacos-servers</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PLATFORM</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">spring-datasource-platform</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">nacos-deploy-config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：创建资源</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nacos-sts.yaml</span> </span><br><span class="line"><span class="string">service/deploy-nacos-svc</span> <span class="string">created</span></span><br><span class="line"><span class="string">statefulset.apps/deploy-nacos</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看资源</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">po</span>  <span class="string">-n</span> <span class="string">cloud</span> <span class="string">-l</span> <span class="string">app=nacos</span></span><br><span class="line"><span class="string">NAME</span>             <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">deploy-nacos-0</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">6m17s</span></span><br><span class="line"><span class="string">deploy-nacos-1</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">6m14s</span></span><br><span class="line"><span class="string">deploy-nacos-2</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">4m13s</span></span><br><span class="line"></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">svc</span> <span class="string">-n</span> <span class="string">cloud</span> <span class="string">-l</span> <span class="string">app=nacos</span></span><br><span class="line"><span class="string">NAME</span>               <span class="string">TYPE</span>       <span class="string">CLUSTER-IP</span>    <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>          <span class="string">AGE</span></span><br><span class="line"><span class="string">deploy-nacos-svc</span>   <span class="string">NodePort</span>   <span class="number">10.96</span><span class="number">.32</span><span class="number">.82</span>   <span class="string">&lt;none&gt;</span>        <span class="number">8848</span><span class="string">:30848/TCP</span>   <span class="string">6m47s</span></span><br></pre></td></tr></table></figure><h3 id="4-测试nacos集群"><a href="#4-测试nacos集群" class="headerlink" title="4. 测试nacos集群"></a>4. 测试nacos集群</h3><ol><li><strong>登录nacos web界面</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：查看nacos svc</span></span><br><span class="line">$ kubectl  get svc -n cloud -l app=nacos</span><br><span class="line">NAME               TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">deploy-nacos-svc   NodePort   10.96.32.82   &lt;none&gt;        8848:30848/TCP   6m47s</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>浏览器访问：http://集群节点IP+30848/nacos</strong></li></ol><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/12.png" alt="image-20240923213906093"></p><blockquote><p>用户名：nacos        密码：nacos</p></blockquote><ol start="3"><li><strong>查看集群列表</strong></li></ol><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/13.png" alt="image-20240923214027083"></p><ol start="4"><li><strong>插入测试数据</strong></li></ol><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/14.png" alt="image-20240923214223729"></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/15.png" alt="image-20240923214303929"></p><ol start="5"><li><strong>数据库数据查询测试数据</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：进入 nacos 数据库 Pod</span></span><br><span class="line">[root@k8s-master01 nacos]<span class="comment"># kubectl  exec -it deploy-mysql-nacos-0 -n cloud  -- bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：连接数据库</span></span><br><span class="line">bash-4.2<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：查看测试数据</span></span><br><span class="line">mysql&gt; select * from nacos_config.config_info;</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/16.png" alt="image-20240923214726448"></p><ol start="6"><li><strong>删除测试数据</strong></li></ol><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/17.png" alt="image-20240923214809083"></p><h1 id="若依微服务项目容器化部署"><a href="#若依微服务项目容器化部署" class="headerlink" title="若依微服务项目容器化部署"></a>若依微服务项目容器化部署</h1><h2 id="一、创建项目部署命名空间"><a href="#一、创建项目部署命名空间" class="headerlink" title="一、创建项目部署命名空间"></a>一、创建项目部署命名空间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1：创建项目目录</span></span><br><span class="line">$ mkdir ruoyi-cloud &amp;&amp; <span class="built_in">cd</span> ruoyi-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2：准备namespace资源清单</span></span><br><span class="line">$ kubectl create namespace yueyang-cloud --dry-run=client --output=yaml  &gt; 01-yueyang-cloud-ns.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-cloud</span><br><span class="line">spec: &#123;&#125;</span><br><span class="line">status: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3：创建资源</span></span><br><span class="line">$ kubectl create -f 01-yueyang-cloud-ns.yaml </span><br><span class="line">namespace/yueyang-cloud created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4：查看资源</span></span><br><span class="line">$ kubectl get -f 01-yueyang-cloud-ns.yaml </span><br><span class="line">NAME            STATUS   AGE</span><br><span class="line">yueyang-cloud   Active   3s</span><br></pre></td></tr></table></figure><h2 id="二、创建部署环境configmap（代码需指定部署环境）"><a href="#二、创建部署环境configmap（代码需指定部署环境）" class="headerlink" title="二、创建部署环境configmap（代码需指定部署环境）"></a>二、创建部署环境configmap（代码需指定部署环境）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 5：创建资源清单</span></span><br><span class="line">$ kubectl create configmap spring-profile-cm --namespace=yueyang-cloud --from-literal=spring-profiles-active=prod --dry-run=client -oyaml &gt; 02-spring-profiles-active-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  spring-profiles-active: prod</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: spring-profile-cm</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 6：创建confimap</span></span><br><span class="line">$ kubectl create -f 02-spring-profiles-active-cm.yaml </span><br><span class="line">configmap/spring-profile-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 7：查看资源</span></span><br><span class="line">$ kubectl get -f 02-spring-profiles-active-cm.yaml </span><br><span class="line">NAME                DATA   AGE</span><br><span class="line">spring-profile-cm   1      27s</span><br></pre></td></tr></table></figure><h2 id="二、创建MySQL"><a href="#二、创建MySQL" class="headerlink" title="二、创建MySQL"></a>二、创建MySQL</h2><h3 id="1-创建MySQL-密码secret"><a href="#1-创建MySQL-密码secret" class="headerlink" title="1. 创建MySQL 密码secret"></a>1. 创建MySQL 密码secret</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 8：创建资源清单</span></span><br><span class="line">$ kubectl create secret generic yueyang-mysql-password-secret --namespace=yueyang-cloud  --from-literal=mysql-root-password=root --dry-run=client -oyaml &gt; 03-mysql-root-password-secret.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  mysql-root-password: cm9vdA==</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-mysql-password-secret</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 9：创建secret</span></span><br><span class="line">$ kubectl create -f 03-mysql-root-password-secret.yaml </span><br><span class="line">secret/yueyang-mysql-password-secret</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 10：查看资源</span></span><br><span class="line">$ kubectl get -f 03-mysql-root-password-secret.yaml </span><br><span class="line">NAME                             TYPE     DATA   AGE</span><br><span class="line">yueyang-mysql-password-secret   Opaque   1      6s</span><br></pre></td></tr></table></figure><h3 id="2-创建MySQL-配置文件configmap"><a href="#2-创建MySQL-配置文件configmap" class="headerlink" title="2. 创建MySQL 配置文件configmap"></a>2. 创建MySQL 配置文件configmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 11：编写my.cnf配置文件</span></span><br><span class="line">$ vim my.cnf</span><br><span class="line"><span class="comment"># For advice on how to change settings please see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line"><span class="comment"># changes to the binary log between backups.</span></span><br><span class="line"><span class="comment"># log_bin</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M</span></span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/run/mysqld/mysqld.sock</span><br><span class="line">secure-file-priv=/var/lib/mysql-files</span><br><span class="line">user=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#log-error=/var/log/mysqld.log</span></span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line">!includedir /etc/mysql/mysql.conf.d/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 12：准备configmap资源清单</span></span><br><span class="line">$ kubectl create configmap yueyang-mysql-config-cm --namespace=yueyang-cloud --from-file=my.cnf --dry-run=client -oyaml &gt; 04-yueyang-mysql-config-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  my.cnf: |</span><br><span class="line">    <span class="comment"># For advice on how to change settings please see</span></span><br><span class="line">    <span class="comment"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span></span><br><span class="line"></span><br><span class="line">    [mysqld]</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line">    <span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line">    <span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line">    <span class="comment"># changes to the binary log between backups.</span></span><br><span class="line">    <span class="comment"># log_bin</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line">    <span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line">    <span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line">    <span class="comment"># join_buffer_size = 128M</span></span><br><span class="line">    <span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line">    <span class="comment"># read_rnd_buffer_size = 2M</span></span><br><span class="line">    skip-host-cache</span><br><span class="line">    skip-name-resolve</span><br><span class="line">    datadir=/var/lib/mysql</span><br><span class="line">    socket=/var/run/mysqld/mysqld.sock</span><br><span class="line">    secure-file-priv=/var/lib/mysql-files</span><br><span class="line">    user=mysql</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">    symbolic-links=0</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log-error=/var/log/mysqld.log</span></span><br><span class="line">    pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">    [client]</span><br><span class="line">    socket=/var/run/mysqld/mysqld.sock</span><br><span class="line"></span><br><span class="line">    !includedir /etc/mysql/conf.d/</span><br><span class="line">    !includedir /etc/mysql/mysql.conf.d/</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: mysql-config-cm</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line">  </span><br><span class="line"><span class="comment"># step 13：创建资源</span></span><br><span class="line">$ kubectl create -f 04-yueyang-mysql-config-cm.yaml </span><br><span class="line">configmap/mysql-config-cm created</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 14：查看资源</span></span><br><span class="line">$ kubectl get -f 04-yueyang-mysql-config-cm.yaml </span><br><span class="line">NAME                      DATA   AGE</span><br><span class="line">mysql-config-cm   1      26s</span><br></pre></td></tr></table></figure><h3 id="3-部署MySQL-Pod"><a href="#3-部署MySQL-Pod" class="headerlink" title="3. 部署MySQL Pod"></a>3. 部署MySQL Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 15：编写资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">05</span><span class="string">-mysql-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-mysql-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">      <span class="comment"># 如果需要NodePort暴露则将这里打开</span></span><br><span class="line">      <span class="comment"># nodePort: 30306</span></span><br><span class="line">  <span class="comment"># 如果需要NodePort暴露则将这里注释</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-mysql</span></span><br><span class="line">  <span class="comment"># 如果需要NodePort暴露则将这里改为NodePort</span></span><br><span class="line">  <span class="comment"># ClusterIP, NodePort, LoadBalancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="comment"># 如果需要NodePort暴露则将这里改为ClientIP</span></span><br><span class="line">  <span class="comment"># ClientIP, None</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-mysql</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"yueyang-mysql-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="comment"># 一些部署MySQL的参数</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--lower_case_table_names=1</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--default-time_zone=+8:00</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="comment"># 注意修改为你自己的镜像地址</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/mysql:1.0.0</span></span><br><span class="line">          <span class="comment"># 存活探针，用于检查pod是否处于存活状态</span></span><br><span class="line"><span class="comment">#          livenessProbe:</span></span><br><span class="line">                <span class="comment"># 初始化后20秒开始检查</span></span><br><span class="line"><span class="comment">#            initialDelaySeconds: 20</span></span><br><span class="line">            <span class="comment"># 之后每过10秒检查一次</span></span><br><span class="line"><span class="comment">#            periodSeconds: 10</span></span><br><span class="line"><span class="comment">#            # 检查内容为3306端口是否存活</span></span><br><span class="line"> <span class="comment">#           tcpSocket:</span></span><br><span class="line">  <span class="comment">#            port: 3306</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/my.cnf</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">my.cnf</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-root-password</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-mysql-password-secret</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">yueyang-image-account-secret</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line"><span class="comment">#        - name: mysql-data</span></span><br><span class="line"><span class="comment">#          persistentVolumeClaim:</span></span><br><span class="line"><span class="comment">#            claimName: yueyang-mysql-pvc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-conf</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysql-config-cm</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">my.cnf</span></span><br><span class="line">                <span class="attr">mode:</span> <span class="number">0644</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">my.cnf</span></span><br><span class="line">  <span class="comment"># 定义存储类模版</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">mysql-data</span> <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ReadWriteMany</span> <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">2Gi</span> <span class="comment"># 申请2个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs-client</span> <span class="comment"># 这里填写你存储类的名字</span></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"><span class="comment"># step 16：创建资源</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="number">05</span><span class="string">-mysql-sts.yaml</span> </span><br><span class="line"><span class="string">service/yueyang-mysql-svc</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 17：查看Pod</span></span><br><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">po</span> <span class="string">-n</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="string">NAME</span>              <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">yueyang-mysql-0</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">8s</span></span><br></pre></td></tr></table></figure><h3 id="4-MySQL-验证使用"><a href="#4-MySQL-验证使用" class="headerlink" title="4. MySQL 验证使用"></a>4. MySQL 验证使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 18：进入MySQL pod</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it yueyang-mysql-0  -n yueyang-cloud -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 19：连接数据库</span></span><br><span class="line">$ bash-4.2<span class="comment"># mysql -uroot -proot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 20：所有数据库</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| yueyang_config     |</span><br><span class="line">| yueyang_gen        |</span><br><span class="line">| yueyang_job        |</span><br><span class="line">| yueyang_seata      |</span><br><span class="line">| yueyang_system     |</span><br><span class="line">+--------------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="三、部署Nacos"><a href="#三、部署Nacos" class="headerlink" title="三、部署Nacos"></a>三、部署Nacos</h2><p>需要创建的configmap总共有那么几个常量：</p><ul><li><strong>jvm-xmn:</strong>  jvm新生区的内存大小</li><li><strong>jvm-xms:</strong>  jvm永久区的最小大小</li><li><strong>jvm-xmx:</strong>  jvm永久区的最大大小</li><li><strong>mode:</strong>  nacos启动模式，因为是单点启动，所以设置为 standalone</li><li><strong>mysql-database-num:</strong>  nacos连接数据库的数量，设置为1</li><li><strong>mysql-service-db-name:</strong>  mysql当中nacos数据库的名字。上一个步骤当中我们部署了mysql，里面关于nacos数据库的名字为yueyang_config</li><li><strong>mysql-service-db-param:</strong>  nacos连接数据库的参数</li><li><strong>mysql-service-host:</strong>  mysql数据库的地址</li><li>mysql-service-port:  mysql数据库的端口</li><li><strong>mysql-service-user:</strong>  连接mysql的用户名</li><li><strong>spring-datasource-platform:</strong>  nacos连接数据库的平台，只支持mysql</li></ul><h3 id="1-创建configmap"><a href="#1-创建configmap" class="headerlink" title="1. 创建configmap"></a>1. 创建configmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 21：配置资源清单</span></span><br><span class="line">$ kubectl create configmap yueyang-nacos-cm --namespace=yueyang-cloud --dry-run=client --output=yaml \</span><br><span class="line">--from-literal=jvm-xmn=64m \</span><br><span class="line">--from-literal=jvm-xms=128m \</span><br><span class="line">--from-literal=jvm-xmx=128m \</span><br><span class="line">--from-literal=mode=standalone \</span><br><span class="line">--from-literal=mysql-database-num=1 \</span><br><span class="line">--from-literal=mysql-service-db-name=yueyang_config \</span><br><span class="line">--from-literal=mysql-service-db-param=<span class="string">'characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false&amp;serverTimezone=UTC'</span> \</span><br><span class="line">--from-literal=mysql-service-host=<span class="string">'yueyang-mysql-0.yueyang-mysql-svc.yueyang-cloud.svc.cluster.local'</span> \</span><br><span class="line">--from-literal=mysql-service-port=3306 \</span><br><span class="line">--from-literal=mysql-service-user=root \</span><br><span class="line">--from-literal=spring-datasource-platform=mysql  &gt; 06-yueyang-nacos-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单如下：</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  jvm-xmn: 64m</span><br><span class="line">  jvm-xms: 128m</span><br><span class="line">  jvm-xmx: 128m</span><br><span class="line">  mode: standalone</span><br><span class="line">  mysql-database-num: <span class="string">"1"</span></span><br><span class="line">  mysql-service-db-name: yueyang_config</span><br><span class="line">  mysql-service-db-param: characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=<span class="literal">true</span>&amp;useSSL=<span class="literal">false</span>&amp;serverTimezone=UTC</span><br><span class="line">  mysql-service-host: yueyang-mysql-0.yueyang-mysql-svc.yueyang-cloud.svc.cluster.local</span><br><span class="line">  mysql-service-port: <span class="string">"3306"</span></span><br><span class="line">  mysql-service-user: root</span><br><span class="line">  spring-datasource-platform: mysql</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-nacos-cm</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 22：创建资源</span></span><br><span class="line">$ kubectl create -f 06-yueyang-nacos-cm.yaml </span><br><span class="line">configmap/yueyang-nacos-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 23：查看资源</span></span><br><span class="line">$ kubectl get -f 06-yueyang-nacos-cm.yaml </span><br><span class="line">NAME               DATA   AGE</span><br><span class="line">yueyang-nacos-cm   11     66s</span><br></pre></td></tr></table></figure><h3 id="2-部署Nacos-Pod"><a href="#2-部署Nacos-Pod" class="headerlink" title="2. 部署Nacos Pod"></a>2. 部署Nacos Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 24：编写资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">07</span><span class="string">-nacos-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-nacos-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">      <span class="comment"># 如果你需要使用到NodePort或LoadBalancer暴露应用，那么你可以将这里打开</span></span><br><span class="line">      <span class="comment"># nodePort: 30848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">      <span class="comment"># nodePort: 30948</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">      <span class="comment"># nodePort: 30849</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">      <span class="comment"># nodePort: 30748</span></span><br><span class="line">  <span class="comment"># 如果你需要使用到NodePort或LoadBalancer暴露应用，那么你需要注释掉clusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-nacos</span></span><br><span class="line">  <span class="comment"># ClusterIP, NodePort, LoadBalancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="comment"># 如果你需要使用到NodePort或LoadBalancer暴露应用，那么你需要将这里改为ClientIP</span></span><br><span class="line">  <span class="comment"># ClientIP, None</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-nacos</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"yueyang-nacos-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">                <span class="comment"># 这里一个是官方镜像，一个是我拉取的官方镜像然后推送到国内阿里云的镜像</span></span><br><span class="line">          <span class="comment"># image: docker.io/nacos/nacos-server:v2.0.4</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nacos-server:v2.0.4</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line"><span class="comment">#          livenessProbe:</span></span><br><span class="line">                <span class="comment"># 通过发送http的get请求确认nacos是否存活</span></span><br><span class="line"><span class="comment">#            httpGet:</span></span><br><span class="line">                <span class="comment"># 请求8848端口的/nacos/actuator/health路径，如果返回为200则证明存活</span></span><br><span class="line"><span class="comment">#              path: /nacos/actuator/health</span></span><br><span class="line"><span class="comment">#              port: 8848</span></span><br><span class="line"><span class="comment">#              scheme: HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完成后多久开始进行存活探针的检查，这里设置为30秒</span></span><br><span class="line"><span class="comment">#            initialDelaySeconds: 30</span></span><br><span class="line">            <span class="comment"># 之后每十秒检查一次是否存活</span></span><br><span class="line"><span class="comment">#            periodSeconds: 10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9849</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">7848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">                <span class="comment"># 挂载数据目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/data</span></span><br><span class="line">                <span class="comment"># 挂载日志目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos-logs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/logs</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">                <span class="comment"># 引用ConfigMap里面的各个属性</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMN</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">jvm-xmn</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMS</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">jvm-xms</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JVM_XMX</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">jvm-xmx</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MODE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mode</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_DATABASE_NUM</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-database-num</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-service-db-name</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_PARAM</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-service-db-param</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_HOST</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-service-host</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="comment"># 数据库的密码引用之前为MySQL创建的Secret</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-root-password</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-mysql-password-secret</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PORT</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-service-port</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_USER</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql-service-user</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PLATFORM</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-datasource-platform</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">yueyang-nacos-cm</span></span><br><span class="line">  <span class="comment"># 定义存储类模版</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nacos-data</span> <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ReadWriteMany</span> <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">2Gi</span> <span class="comment"># 申请2个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs-client</span> <span class="comment"># 这里填写你存储类的名字</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nacos-logs</span> <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ReadWriteMany</span> <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">2Gi</span> <span class="comment"># 申请2个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs-client</span> <span class="comment"># 这里填写你存储类的名字</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 25：创建资源</span></span><br><span class="line">$ kubectl create -f 07-nacos-sts.yaml </span><br><span class="line">service/yueyang-nacos-svc created</span><br><span class="line">statefulset.apps/yueyang-nacos created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 26：查看资源</span></span><br><span class="line">$ kubectl  get po,svc -n yueyang-cloud</span><br><span class="line">NAME                  READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/yueyang-mysql-0   1/1     Running   0          18m</span><br><span class="line">pod/yueyang-nacos-0   1/1     Running   0          71s</span><br><span class="line"></span><br><span class="line">NAME                        TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                               AGE</span><br><span class="line">service/yueyang-mysql-svc   ClusterIP   None         &lt;none&gt;        3306/TCP                              18m</span><br><span class="line">service/yueyang-nacos-svc   ClusterIP   None         &lt;none&gt;        8848/TCP,9848/TCP,9849/TCP,7848/TCP   71s</span><br></pre></td></tr></table></figure><h3 id="3-创建nacos-ingress"><a href="#3-创建nacos-ingress" class="headerlink" title="3. 创建nacos ingress"></a>3. 创建nacos ingress</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 27：创建ingress 资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">08</span><span class="string">-nacos-ingress.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-nacos-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">nacos.tanke.love</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">yueyang-nacos-svc</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">8848</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 28：创建ingress资源</span></span><br><span class="line">$ kubectl  create -f 08-nacos-ingress.yaml </span><br><span class="line">ingress.networking.k8s.io/yueyang-nacos-ingress created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 29：查看ingress资源</span></span><br><span class="line">$ kubectl get -f 08-nacos-ingress.yaml </span><br><span class="line">NAME                    CLASS   HOSTS              ADDRESS   PORTS   AGE</span><br><span class="line">yueyang-nacos-ingress   nginx   nacos.tanke.love             80      46s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 30：查看ingress控制svc</span></span><br><span class="line">$ kubectl get  svc -n ingress-nginx</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409242356072.png" alt="image-20240924235646026"></p><p>浏览器访问<a href="http://nacos.tanke.love:30242/nacos" target="_blank" rel="noopener">http://nacos.tanke.love:30242/nacos</a></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/18.png" alt="image-20240925002025990"></p><h2 id="四、部署redis"><a href="#四、部署redis" class="headerlink" title="四、部署redis"></a>四、部署redis</h2><h3 id="1-配置redis-配置文件configmap"><a href="#1-配置redis-配置文件configmap" class="headerlink" title="1. 配置redis 配置文件configmap"></a>1. 配置redis 配置文件configmap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 31：编写redis配置文件</span></span><br><span class="line">$ vim redis.conf</span><br><span class="line"><span class="comment"># 关闭保护模式</span></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># redis链接密码，如果需要密码，那么请取消注释</span></span><br><span class="line"><span class="comment"># requirepass redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志级别</span></span><br><span class="line">loglevel warning</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志存放目录</span></span><br><span class="line">logfile <span class="string">"/data/redis.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据文件目录</span></span><br><span class="line">dir /data</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库数量</span></span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据库到数据文件</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 32：配置redis配置文件configmap</span></span><br><span class="line">$ kubectl create configmap yueyang-redis-config-cm --namespace=yueyang-cloud --from-file=redis.conf --dry-run=client --output=yaml &gt; 09-redis-file-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  redis.conf: |</span><br><span class="line">    <span class="comment"># 关闭保护模式</span></span><br><span class="line">    protected-mode no</span><br><span class="line"></span><br><span class="line">    <span class="comment"># redis链接密码，如果需要密码，那么请取消注释</span></span><br><span class="line">    <span class="comment"># requirepass redis</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志级别</span></span><br><span class="line">    loglevel warning</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志存放目录</span></span><br><span class="line">    logfile <span class="string">"/data/redis.log"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据文件目录</span></span><br><span class="line">    dir /data</span><br><span class="line">    dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据库数量</span></span><br><span class="line">    databases 16</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存数据库到数据文件</span></span><br><span class="line">    save 900 1</span><br><span class="line">    save 300 10</span><br><span class="line">    save 60 10000</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-redis-config-cm</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 33：创建资源</span></span><br><span class="line">$ kubectl create -f 09-redis-file-cm.yaml </span><br><span class="line">configmap/yueyang-redis-config-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 34：查看资源</span></span><br><span class="line">$ kubectl get -f 09-redis-file-cm.yaml </span><br><span class="line">NAME                      DATA   AGE</span><br><span class="line">yueyang-redis-config-cm   1      17s</span><br></pre></td></tr></table></figure><h3 id="2-部署redis-Pod"><a href="#2-部署redis-Pod" class="headerlink" title="2. 部署redis Pod"></a>2. 部署redis Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 35：编写资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">10</span><span class="string">-redis-sts.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-redis-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">6379</span></span><br><span class="line">      <span class="comment"># 如果需要NodePort暴露则将这里打开</span></span><br><span class="line">      <span class="comment"># nodePort: 30379</span></span><br><span class="line">   <span class="comment"># 如果需要NodePort暴露则将这里注释</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-redis</span></span><br><span class="line">  <span class="comment"># 如果需要NodePort暴露则将这里改为NodePort</span></span><br><span class="line">  <span class="comment"># ClusterIP, NodePort, LoadBalancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="comment"># 如果需要NodePort暴露则将这里改为ClientIP</span></span><br><span class="line">  <span class="comment"># ClientIP, None</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-redis</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-redis</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"yueyang-redis-svc"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-redis</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="comment"># 启动命令，使用指定配置文件启动</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"redis-server"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"/usr/local/etc/redis.conf"</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">                <span class="comment"># 这里一个是官方镜像，一个是我拉取的官方镜像然后推送到国内阿里云的镜像</span></span><br><span class="line">          <span class="comment"># image: docker.io/library/redis:5.0.14</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-shenzhen.aliyuncs.com/xiaohh-docker/redis:5.0.14</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">                <span class="comment"># pod初始化完成后20秒开始检测</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每隔10秒检查一次</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="comment"># 检查的流程是用tcp协议去查看6379端口是否存活</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">                <span class="comment"># 挂载数据目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">            <span class="comment"># 挂载配置文件</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis-config</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/usr/local/etc</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis-config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">yueyang-redis-config-cm</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">redis.conf</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">redis.conf</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">redis-data</span> <span class="comment"># 这个名字要与上面的对应</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ReadWriteMany</span> <span class="comment"># 设置多节点读写模式</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">2Gi</span> <span class="comment"># 申请2个g的存储空间，可根据自己的服务器空间修改</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">nfs-client</span> <span class="comment"># 这里填写你存储类的名字</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 36：创建资源</span></span><br><span class="line">$ kubectl create -f 10-redis-sts.yaml </span><br><span class="line">service/yueyang-redis-svc created</span><br><span class="line">statefulset.apps/yueyang-redis created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 37：查看资源</span></span><br><span class="line">$ kubectl get -f 10-redis-sts.yaml </span><br><span class="line">NAME                        TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">service/yueyang-redis-svc   ClusterIP   None         &lt;none&gt;        6379/TCP   7s</span><br><span class="line"></span><br><span class="line">NAME                             READY   AGE</span><br><span class="line">statefulset.apps/yueyang-redis   0/1     7s</span><br></pre></td></tr></table></figure><h3 id="3-测试redis可用性"><a href="#3-测试redis可用性" class="headerlink" title="3. 测试redis可用性"></a>3. 测试redis可用性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 38：查看Pod</span></span><br><span class="line">$ kubectl get po -n yueyang-cloud</span><br><span class="line">NAME              READY   STATUS    RESTARTS   AGE</span><br><span class="line">yueyang-mysql-0   1/1     Running   0          58m</span><br><span class="line">yueyang-nacos-0   1/1     Running   0          11m</span><br><span class="line">yueyang-redis-0   1/1     Running   0          109s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 39：进入redis pod</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it yueyang-redis-0  -n yueyang-cloud  -- bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 40：连接redis数据库       </span></span><br><span class="line">root@yueyang-redis-0:/data<span class="comment"># redis-cli </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 41：测试</span></span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><h2 id="五、部署sentinel"><a href="#五、部署sentinel" class="headerlink" title="五、部署sentinel"></a>五、部署sentinel</h2><p>​    ruoyi-cloud需要使用到sentinel进行熔断限流</p><h3 id="1-创建Sentinel的ConfigMap"><a href="#1-创建Sentinel的ConfigMap" class="headerlink" title="1. 创建Sentinel的ConfigMap"></a>1. 创建Sentinel的ConfigMap</h3><p>​        镜像当中有一些环境变量，我们定义一个ConfigMap来存储它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 42：配置资源清单</span></span><br><span class="line">$ kubectl create configmap yueyang-sentinel-cm --namespace=yueyang-cloud --dry-run=client --output=yaml --from-literal=api-port=8719 --from-literal=java-option=<span class="string">'-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC'</span> --from-literal=server-port=8718 --from-literal=xmn=64m --from-literal=xms=128m --from-literal=xmx=128m &gt; 11-sentinel-cm.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下：</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  api-port: <span class="string">"8719"</span></span><br><span class="line">  java-option: -Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/<span class="built_in">log</span>/devops-example.gc.log</span><br><span class="line">    -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC</span><br><span class="line">  server-port: <span class="string">"8718"</span></span><br><span class="line">  xmn: 64m</span><br><span class="line">  xms: 128m</span><br><span class="line">  xmx: 128m</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-sentinel-cm</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 43：创建资源</span></span><br><span class="line">$ kubectl  create -f 11-sentinel-cm.yaml </span><br><span class="line">configmap/yueyang-sentinel-cm created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 44：查看资源</span></span><br><span class="line">$ kubectl get -f 11-sentinel-cm.yaml </span><br><span class="line">NAME                  DATA   AGE</span><br><span class="line">yueyang-sentinel-cm   6      18s</span><br></pre></td></tr></table></figure><h3 id="2-创建sentinel-密码secret"><a href="#2-创建sentinel-密码secret" class="headerlink" title="2. 创建sentinel 密码secret"></a>2. 创建sentinel 密码secret</h3><p>​        用secret来存储sentinel的用户名和密码。⚠️生产环境注意修改sentinel的用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 45：配置资源清单</span></span><br><span class="line">$ kubectl create secret generic yueyang-sentinel-password-secret --namespace=yueyang-cloud --dry-run=client --output=yaml --from-literal=sentinel-password=sentinel --from-literal=sentinel-username=sentinel &gt; 12-sentinel-pass.yaml</span><br><span class="line"><span class="comment"># 资源清单内容如下</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  sentinel-password: c2VudGluZWw=</span><br><span class="line">  sentinel-username: c2VudGluZWw=</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-sentinel-password-secret</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 46：创建资源</span></span><br><span class="line">$ kubectl  create -f  12-sentinel-pass.yaml </span><br><span class="line">secret/yueyang-sentinel-password-secret created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 47：查看资源</span></span><br><span class="line">$ kubectl get -f 12-sentinel-pass.yaml </span><br><span class="line">NAME                               TYPE     DATA   AGE</span><br><span class="line">yueyang-sentinel-password-secret   Opaque   2      27s</span><br></pre></td></tr></table></figure><h3 id="3-创建sentinel-Pod"><a href="#3-创建sentinel-Pod" class="headerlink" title="3. 创建sentinel Pod"></a>3. 创建sentinel Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 48：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">13</span><span class="string">-sentinel-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/sentinel:1.8.6</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">sentinel</span></span><br><span class="line">        <span class="comment"># 存活探针</span></span><br><span class="line"><span class="comment">#        livenessProbe:</span></span><br><span class="line">        <span class="comment"># 使用http的get请求判断pod是否存活，请求8719端口的/clusterNode判断pod是否存活</span></span><br><span class="line"><span class="comment">#          httpGet:</span></span><br><span class="line"><span class="comment">#            path: /clusterNode</span></span><br><span class="line"><span class="comment">#            port: 8719</span></span><br><span class="line"><span class="comment">#            scheme: HTTP</span></span><br><span class="line">          <span class="comment"># 在pod初始化完毕20秒后再开始进行存活探针</span></span><br><span class="line"><span class="comment">#          initialDelaySeconds: 20</span></span><br><span class="line">          <span class="comment"># 之后每隔10秒检查一下应用是否存活</span></span><br><span class="line"><span class="comment">#          periodSeconds: 10</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8718</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">dashboard</span></span><br><span class="line">            <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8719</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">            <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 引用configmap当中各类配置</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">xmx</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">xms</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">xmn</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">API_PORT</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">api-port</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SERVER_PORT</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">server-port</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">configMapKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">java-option</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-cm</span></span><br><span class="line">          <span class="comment"># 引用secret里面的用户名和密码</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SENTINEL_USERNAME</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">secretKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">sentinel-username</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-password-secret</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SENTINEL_PASSWORD</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">secretKeyRef:</span></span><br><span class="line">                <span class="attr">key:</span> <span class="string">sentinel-password</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">yueyang-sentinel-password-secret</span></span><br><span class="line">        <span class="attr">resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-sentinel-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dashboard</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8718</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8718</span></span><br><span class="line">      <span class="comment"># nodePort: 30718</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8719</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8719</span></span><br><span class="line">      <span class="comment"># nodePort: 30719</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-sentinel-deploy</span></span><br><span class="line">  <span class="comment"># ClusterIP, NodePort, LoadBalancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 49：创建资源</span></span><br><span class="line">$ kubectl create -f 13-sentinel-deploy.yaml </span><br><span class="line">deployment.apps/yueyang-sentinel-deploy created</span><br><span class="line">service/yueyang-sentinel-svc created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 50：查看资源</span></span><br><span class="line">$ kubectl get -f 13-sentinel-deploy.yaml </span><br><span class="line">NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-sentinel-deploy   1/1     1            1           44s</span><br><span class="line"></span><br><span class="line">NAME                           TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line">service/yueyang-sentinel-svc   ClusterIP   10.96.53.233   &lt;none&gt;        8718/TCP,8719/TCP   44s</span><br></pre></td></tr></table></figure><h3 id="4-使用ingress-暴露sentinel"><a href="#4-使用ingress-暴露sentinel" class="headerlink" title="4. 使用ingress 暴露sentinel"></a>4. 使用ingress 暴露sentinel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 51：配置资源清单</span></span><br><span class="line">$ vim 14-sentinel-ingress.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: yueyang-sentinel-ingress</span><br><span class="line">  namespace: yueyang-cloud</span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  rules:</span><br><span class="line">  - host: sentinel.tanke.love</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          service:</span><br><span class="line">            name: yueyang-sentinel-svc</span><br><span class="line">            port:</span><br><span class="line">              number: 8718</span><br><span class="line">        path: /</span><br><span class="line">        pathType: Prefix</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 52：创建资源</span></span><br><span class="line">$ kubectl create -f 14-sentinel-ingress.yaml </span><br><span class="line">ingress.networking.k8s.io/yueyang-sentinel-ingress created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 53：查看资源</span></span><br><span class="line">$ kubectl get -f 14-sentinel-ingress.yaml </span><br><span class="line">NAME                       CLASS   HOSTS                 ADDRESS        PORTS   AGE</span><br><span class="line">yueyang-sentinel-ingress   nginx   sentinel.tanke.love   10.96.28.207   80      30s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 54：查看ingress 控制器svc</span></span><br><span class="line">$ kubectl  get svc -n ingress-nginx</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409250049649.png" alt="image-20240925004910592"></p><p>浏览器访问：<a href="http://http://sentinel.tanke.love:30242/" target="_blank" rel="noopener">http://http://sentinel.tanke.love:30242/</a></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/19.png" alt="image-20240925004923912"></p><blockquote><p>账号密码均为：<strong>sentinel</strong></p></blockquote><h2 id="六、部署file模块"><a href="#六、部署file模块" class="headerlink" title="六、部署file模块"></a>六、部署file模块</h2><h3 id="1-部署file-Pod"><a href="#1-部署file-Pod" class="headerlink" title="1. 部署file Pod"></a>1. 部署file Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 55：配置file 服务资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">15</span><span class="string">-file-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-file-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="comment"># 存储类类型，我们使用nfs</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">"nfs-client"</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">        <span class="comment"># 申请的容量，生产环境注意修改</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-file-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-file-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-file-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-file-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">             <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"64m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/file:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">file</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到10020端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10020</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10020</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">          <span class="comment"># 挂载上传文件的目录</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data/file</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">file-data</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="comment"># 定义file-data，使用上一步创建的file模块的pvc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">file-data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">yueyang-file-pvc</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 56：创建资源</span></span><br><span class="line">$ kubectl create -f 15-file-deploy.yaml </span><br><span class="line">persistentvolumeclaim/yueyang-file-pvc created</span><br><span class="line">deployment.apps/yueyang-file-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 57：查看资源</span></span><br><span class="line">$ kubectl get  -f 15-file-deploy.yaml </span><br><span class="line">NAME                                     STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">persistentvolumeclaim/yueyang-file-pvc   Bound    pvc-233963b3-180c-4c7c-807d-78408f34e472   1Gi        RWX            nfs-client     78s</span><br><span class="line"></span><br><span class="line">NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-file-deployment   1/1     1            1           78s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证file模块是否注册"><a href="#2-nacos-验证file模块是否注册" class="headerlink" title="2. nacos 验证file模块是否注册"></a>2. nacos 验证file模块是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/20.png" alt="image-20240925010107104"></p><h2 id="七、gateway网关服务部署"><a href="#七、gateway网关服务部署" class="headerlink" title="七、gateway网关服务部署"></a>七、gateway网关服务部署</h2><h3 id="1-部署-gateway-Pod"><a href="#1-部署-gateway-Pod" class="headerlink" title="1. 部署 gateway Pod"></a>1. 部署 gateway Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 58：创建资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">16</span><span class="string">-gateway-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-gateway-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-gateway-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">           <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"64m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/gateway:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到8080端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 59：创建资源</span></span><br><span class="line">$ kubectl replace -f 16-gateway-deploy.yaml </span><br><span class="line">service/yueyang-gateway-svc replaced</span><br><span class="line">deployment.apps/yueyang-gateway-deployment replaced</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 60：查看资源</span></span><br><span class="line">$ kubectl get -f 16-gateway-deploy.yaml </span><br><span class="line">NAME                          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">service/yueyang-gateway-svc   ClusterIP   10.96.230.51   &lt;none&gt;        8080/TCP   3s</span><br><span class="line"></span><br><span class="line">NAME                                         READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-gateway-deployment   1/1     1            1           3m44s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证gateway是否注册"><a href="#2-nacos-验证gateway是否注册" class="headerlink" title="2. nacos 验证gateway是否注册"></a>2. nacos 验证gateway是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/21.png" alt="image-20240925010718408"></p><h2 id="八、部署system模块"><a href="#八、部署system模块" class="headerlink" title="八、部署system模块"></a>八、部署system模块</h2><h3 id="1-部署system-Pod"><a href="#1-部署system-Pod" class="headerlink" title="1. 部署system Pod"></a>1. 部署system Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 61：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">17</span><span class="string">-system-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-system-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">10050</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10050</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-system-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">                        <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"64m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/system:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">system</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到10050端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10050</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10050</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 62：创建资源</span></span><br><span class="line">$ kubectl create -f 17-system-deploy.yaml </span><br><span class="line">service/yueyang-system-svc created</span><br><span class="line">deployment.apps/yueyang-system-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 63：查看资源</span></span><br><span class="line">$ kubectl get -f 17-system-deploy.yaml </span><br><span class="line">NAME                         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">service/yueyang-system-svc   ClusterIP   10.96.208.84   &lt;none&gt;        10050/TCP   2m33s</span><br><span class="line"></span><br><span class="line">NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-system-deployment   1/1     1            1           2m34s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证system-是否注册"><a href="#2-nacos-验证system-是否注册" class="headerlink" title="2. nacos 验证system 是否注册"></a>2. nacos 验证system 是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/22.png" alt="image-20240925011717635"></p><h2 id="九、部署auth-模块"><a href="#九、部署auth-模块" class="headerlink" title="九、部署auth 模块"></a>九、部署auth 模块</h2><h3 id="1-部署auth-Pod"><a href="#1-部署auth-Pod" class="headerlink" title="1. 部署auth Pod"></a>1. 部署auth Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 64：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">18</span><span class="string">-auth-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-auth-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">10050</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10050</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-auth-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">        <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"128m"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"64m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/auth:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">auth</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到10010端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10010</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10010</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 65：创建资源</span></span><br><span class="line">$ kubectl create -f 18-auth-deploy.yaml </span><br><span class="line">service/yueyang-auth-svc created</span><br><span class="line">deployment.apps/yueyang-auth-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 66：查看资源</span></span><br><span class="line">$ kubectl get -f 18-auth-deploy.yaml </span><br><span class="line">NAME                       TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">service/yueyang-auth-svc   ClusterIP   10.96.254.105   &lt;none&gt;        10050/TCP   35s</span><br><span class="line"></span><br><span class="line">NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-auth-deployment   1/1     1            1           35s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证auth是否注册"><a href="#2-nacos-验证auth是否注册" class="headerlink" title="2. nacos 验证auth是否注册"></a>2. nacos 验证auth是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/23.png" alt="image-20240925012246632"></p><h2 id="十、部署前端应用"><a href="#十、部署前端应用" class="headerlink" title="十、部署前端应用"></a>十、部署前端应用</h2><h3 id="1-部署前端Pod"><a href="#1-部署前端Pod" class="headerlink" title="1. 部署前端Pod"></a>1. 部署前端Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 67：创建资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">19</span><span class="string">-nginx-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-ui-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-ui-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/ui:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">ui</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="comment"># 使用http get请求80的根目录，查看是否存活</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒后再进行存活检查</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">            <span class="comment"># 之后每隔10秒检查一次</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 68：创建资源</span></span><br><span class="line">$ kubectl create -f 19-nginx-deploy.yaml </span><br><span class="line">service/yueyang-ui-svc created</span><br><span class="line">deployment.apps/yueyang-ui-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 69：查看资源</span></span><br><span class="line">$ kubectl get -f 19-nginx-deploy.yaml </span><br><span class="line">NAME                     TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">service/yueyang-ui-svc   ClusterIP   10.96.45.221   &lt;none&gt;        80/TCP    24s</span><br><span class="line"></span><br><span class="line">NAME                                    READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-ui-deployment   1/1     1            1           24s</span><br></pre></td></tr></table></figure><h3 id="2-使用ingress-暴露前端服务（无法正常使用，需要修改前端svc的类型为NodePort）"><a href="#2-使用ingress-暴露前端服务（无法正常使用，需要修改前端svc的类型为NodePort）" class="headerlink" title="2. 使用ingress 暴露前端服务（无法正常使用，需要修改前端svc的类型为NodePort）"></a>2. 使用ingress 暴露前端服务（无法正常使用，需要修改前端svc的类型为NodePort）</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 70：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">20</span><span class="string">-nginx-ingress.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-ui-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">rouyi.tanke.love</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">yueyang-ui-svc</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 71：创建资源</span></span><br><span class="line">$ kubectl  create -f 20-nginx-ingress.yaml </span><br><span class="line">ingress.networking.k8s.io/yueyang-ui-ingress created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 72：查看资源</span></span><br><span class="line">$ kubectl get -f 20-nginx-ingress.yaml </span><br><span class="line">NAME                 CLASS   HOSTS              ADDRESS        PORTS   AGE</span><br><span class="line">yueyang-ui-ingress   nginx   rouyi.tanke.love   10.96.28.207   80      61s</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 73：查看ui svc</span></span><br><span class="line">$ kubectl get svc -n yueyang-cloud</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/24.png" alt="image-20240925014138882"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 74：修改svc 类型为NodePort</span></span><br><span class="line">$ kubectl edit svc yueyang-ui-svc  -n yueyang-cloud</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/25.png" alt="image-20240925014238526"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 75：查看svc NodePort端口</span></span><br><span class="line">$ kubectl get svc -n yueyang-cloud</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/26.png" alt="image-20240925014339109"></p><p><strong>浏览器访问http://宿主机IP+30228</strong></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/27.png" alt="image-20240925014436646"></p><h2 id="十一、部署Job-模块"><a href="#十一、部署Job-模块" class="headerlink" title="十一、部署Job 模块"></a>十一、部署Job 模块</h2><h3 id="1-部署job模块-Pod"><a href="#1-部署job模块-Pod" class="headerlink" title="1. 部署job模块 Pod"></a>1. 部署job模块 Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 76：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">21</span><span class="string">-job-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-job-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-job-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">    <span class="comment"># 拉取镜像的secret</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">        <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"512m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/job:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">job</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line"><span class="comment">#          livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到10040端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line"><span class="comment">#            httpGet:</span></span><br><span class="line"><span class="comment">#              path: /actuator/health</span></span><br><span class="line"><span class="comment">#              port: 10040</span></span><br><span class="line"><span class="comment">#              scheme: HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line"><span class="comment">#            initialDelaySeconds: 20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line"><span class="comment">#            periodSeconds: 10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10040</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 77：创建资源</span></span><br><span class="line">$ kubectl create -f 21-job-deploy.yaml </span><br><span class="line">service/yueyang-job-svc created</span><br><span class="line">deployment.apps/yueyang-job-deployment created</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 78：查看资源</span></span><br><span class="line">$ kubectl get -f 21-job-deploy.yaml </span><br><span class="line">NAME                      TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">service/yueyang-job-svc   ClusterIP   10.96.37.44   &lt;none&gt;        80/TCP    39s</span><br><span class="line"></span><br><span class="line">NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-job-deployment   1/1     1            1           39s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证job模块是否注册成功"><a href="#2-nacos-验证job模块是否注册成功" class="headerlink" title="2. nacos 验证job模块是否注册成功"></a>2. nacos 验证job模块是否注册成功</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/28.png" alt="image-20240925015037157"></p><h3 id="3-若依前端界面查看定时任务模块是否加载成功"><a href="#3-若依前端界面查看定时任务模块是否加载成功" class="headerlink" title="3. 若依前端界面查看定时任务模块是否加载成功"></a>3. 若依前端界面查看定时任务模块是否加载成功</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/29.png" alt="image-20240925015243793"></p><h2 id="十二、部署gen-模块"><a href="#十二、部署gen-模块" class="headerlink" title="十二、部署gen 模块"></a>十二、部署gen 模块</h2><h3 id="1-部署gen-Pod"><a href="#1-部署gen-Pod" class="headerlink" title="1. 部署gen Pod"></a>1. 部署gen Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 79：配置资源清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">22</span><span class="string">-gen-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-gen-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-gen-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">    <span class="comment"># 拉取镜像的secret</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">yueyang-image-account-secret</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">        <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"512m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/gen:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">gen</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line"><span class="comment">#          livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到10030端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line"><span class="comment">#           httpGet:</span></span><br><span class="line"><span class="comment">#              path: /actuator/health</span></span><br><span class="line"><span class="comment">#              port: 10030</span></span><br><span class="line"><span class="comment">#              scheme: HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line"><span class="comment">#            initialDelaySeconds: 20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line"><span class="comment">#            periodSeconds: 10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10030</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 80：部署资源</span></span><br><span class="line">$ kubectl create -f 22-gen-deploy.yaml </span><br><span class="line">service/yueyang-gen-svc created</span><br><span class="line">deployment.apps/yueyang-gen-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 81：查看资源</span></span><br><span class="line">$ kubectl get -f 22-gen-deploy.yaml </span><br><span class="line">NAME                      TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">service/yueyang-gen-svc   ClusterIP   10.96.21.87   &lt;none&gt;        80/TCP    39s</span><br><span class="line"></span><br><span class="line">NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-gen-deployment   1/1     1            1           39s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证gen模块是否注册"><a href="#2-nacos-验证gen模块是否注册" class="headerlink" title="2. nacos 验证gen模块是否注册"></a>2. nacos 验证gen模块是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/30.png" alt="image-20240925020010054"></p><h3 id="3-若依前端验证代码生成模块是否可用"><a href="#3-若依前端验证代码生成模块是否可用" class="headerlink" title="3. 若依前端验证代码生成模块是否可用"></a>3. 若依前端验证代码生成模块是否可用</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/31.png" alt="image-20240925020210036"></p><h2 id="十三、部署monitor模块"><a href="#十三、部署monitor模块" class="headerlink" title="十三、部署monitor模块"></a>十三、部署monitor模块</h2><h3 id="1-部署monitor-Pod"><a href="#1-部署monitor-Pod" class="headerlink" title="1. 部署monitor Pod"></a>1. 部署monitor Pod</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 82：配置资源呢清单</span></span><br><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="number">23</span><span class="string">-monitor-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-monitor-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8088</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">yueyang-cloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">yueyang-monitor-deployment</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">        <span class="comment"># 运行时环境，引用一开始创建的configmap，值为prod</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">spring-profile-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">spring-profiles-active</span></span><br><span class="line">            <span class="comment"># 设置一些jvm调优参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"-Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:+PrintGCDetails -Xloggc:/var/log/devops-example.gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMX</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"1g"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XMN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"512m"</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming-01/monitor:1.0.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">monitor</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line"><span class="comment">#          livenessProbe:</span></span><br><span class="line">            <span class="comment"># 发送http get请求到8088端口的/actuator/health路径检查pod是否健康</span></span><br><span class="line"><span class="comment">#            httpGet:</span></span><br><span class="line"><span class="comment">#              path: /actuator/health</span></span><br><span class="line"><span class="comment">#              port: 8088</span></span><br><span class="line"><span class="comment">#              scheme: HTTP</span></span><br><span class="line">            <span class="comment"># pod初始化完毕20秒之后再开始</span></span><br><span class="line"><span class="comment">#            initialDelaySeconds: 20</span></span><br><span class="line">            <span class="comment"># 之后每10秒进行一次健康检查</span></span><br><span class="line"><span class="comment">#            periodSeconds: 10</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8088</span></span><br><span class="line">          <span class="attr">resources:</span> <span class="string">&#123;</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 83：创建资源</span></span><br><span class="line">$ kubectl create -f 23-monitor-deploy.yaml </span><br><span class="line">service/yueyang-monitor-svc created</span><br><span class="line">deployment.apps/yueyang-monitor-deployment created</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 84：查看资源</span></span><br><span class="line">$ kubectl get -f 23-monitor-deploy.yaml </span><br><span class="line">NAME                          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">service/yueyang-monitor-svc   ClusterIP   10.96.120.182   &lt;none&gt;        8088/TCP   47s</span><br><span class="line"></span><br><span class="line">NAME                                         READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/yueyang-monitor-deployment   1/1     1            1           47s</span><br></pre></td></tr></table></figure><h3 id="2-nacos-验证monitor-是否注册"><a href="#2-nacos-验证monitor-是否注册" class="headerlink" title="2. nacos 验证monitor 是否注册"></a>2. nacos 验证monitor 是否注册</h3><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/32.png" alt="image-20240925020731221"></p><h3 id="3-设置svc-NodePort类型-暴露monitor服务"><a href="#3-设置svc-NodePort类型-暴露monitor服务" class="headerlink" title="3. 设置svc NodePort类型 暴露monitor服务"></a>3. 设置svc NodePort类型 暴露monitor服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 85：修改svc 类型</span></span><br><span class="line">$ kubectl edit svc  yueyang-monitor-svc -n yueyang-cloud</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/33.png" alt="image-20240925021851440"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 86：查看svc</span></span><br><span class="line">$ kubectl get svc -n yueyang-cloud</span><br></pre></td></tr></table></figure><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/34.png" alt="image-20240925021952232"></p><p>浏览器访问：<a href="http://192.168.174.30:32200" target="_blank" rel="noopener">http://192.168.174.30:32200</a></p><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/35.png" alt="image-20240925022032439"></p><blockquote><p>用户名：xiaohh         密码：123456</p></blockquote><p><img src="/2024/09/23/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/spring%20cloud%20k8s%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D/36.png" alt="image-20240925022124720"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes持久化文件存储</title>
    <link href="https://l66stbz.github.io/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    <id>https://l66stbz.github.io/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/</id>
    <published>2024-09-20T13:50:00.000Z</published>
    <updated>2024-09-26T13:07:40.713Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><p>官网：</p><p>​       <a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volumes/" target="_blank" rel="noopener">https://kubernetes.io/zh-cn/docs/concepts/storage/volumes/</a></p><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>​        <strong>容器内部存储的生命周期是短暂的，会随着容器环境的销毁而销毁，具有不稳定性</strong>。如果多个容器希望共享同一份存储，则仅仅依赖容器本身是很难实现的。在Kubernetes系统中，将对容器应用所需的存储资源抽象为存储卷（Volume）概念来解决这些问题。 Volume是与Pod绑定的（独立于容器）与Pod具有相同生命周期的资源对象。我们可以将Volume的内容理解为目录或文件，容器如需使用某个Volume，则仅需设置volumeMounts将一个或多个Volume挂载为容器中的目录或文件，即可访问Volume中的数据。Volume具体是什么类型，以及由哪个系统提供，对容器应用来说是透明的。</p><h3 id="1、emptyDir"><a href="#1、emptyDir" class="headerlink" title="1、emptyDir"></a>1、emptyDir</h3><p>​    简介：</p><p>​            这种类型的Volume将在Pod被调度到Node时进行创建，在初始状态下目录中是空的，所以命名为“空目录”（Empty Directory），它与Pod具有相同的生命周期，当Pod被销毁时，Node上相应的目录也会被删除。 同一个Pod中的多个容器都可以挂载这种Volume。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">labels:</span></span><br><span class="line">   <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">     <span class="attr">labels:</span></span><br><span class="line">       <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/tomcat:9.0.89-jdk8</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">        <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">       <span class="comment"># medium: Memory</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create  -f nginx-deploy.yaml </span></span><br><span class="line">deployment.apps/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po  -w</span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-66744bbb6b-8mg2r   2/2     Running   0          5s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 进入其中一个容器中</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  exec -it nginx-66744bbb6b-8mg2r  -c nginx -- bash</span></span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/<span class="comment"># df -Th</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/2.png" alt="image-20240628224527461"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 容器挂载目录创建测试文件</span></span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/<span class="comment"># echo "hello world" &gt; /tmp/test.txt  </span></span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/<span class="comment"># ls /tmp/test.txt </span></span><br><span class="line">/tmp/test.txt</span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 进入Pod中另外一个容器中，查看挂载目录内容</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  exec -it nginx-66744bbb6b-8mg2r  -c tomcat  -- bash</span></span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/usr/<span class="built_in">local</span>/tomcat<span class="comment"># ls /tmp/</span></span><br><span class="line">hsperfdata_root  test.txt</span><br><span class="line">root@nginx-66744bbb6b-8mg2r:/usr/<span class="built_in">local</span>/tomcat<span class="comment"># cat /tmp/test.txt </span></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/3.png" alt="image-20240922220047550"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">volume-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/tomcat:9.0.89-jdk8</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app-logs</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/usr/local/tomcat/logs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/busybox:1.36.1</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">["sh",</span> <span class="string">"-c"</span><span class="string">,</span> <span class="string">"tail -f /logs/catalina*.log"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app-logs</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/logs</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app-logs</span></span><br><span class="line">    <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2、hostPath（了解）"><a href="#2、hostPath（了解）" class="headerlink" title="2、hostPath（了解）"></a>2、hostPath（了解）</h3><p>​          介绍：HostPath类型的存储卷用于将Node文件系统的目录或文件挂载到容器内部使用。对于大多数容器应用来说，都不需要使用宿主机的文件系统。适合使用HostPath存储卷的一些应用场景如下： </p><ul><li>容器应用的关键数据需要被持久化到宿主机上。 </li></ul><p><strong>使用hostPath卷的示例</strong></p><p>​    示例： 修改容器时区。默认容器时间为UTC时间。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">labels:</span></span><br><span class="line">   <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">     <span class="attr">labels:</span></span><br><span class="line">       <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/timezone</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">timezone</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">date</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">timezone</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/etc/timezone</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">File</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">date</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">File</span></span><br></pre></td></tr></table></figure><p><code>hostPath</code>工作类型：</p><ul><li><p>type 为空字符串：默认选项，意味着挂载 hostPath卷之前不会执行任何检查。</p></li><li><p>DirectoryOrCreate：如果给定的path不存在任何东西，那么将根据需要创建一个权限为0755 的空目录，和 Kubelet 具有相同的组和权限。</p></li><li><p>Directory：目录必须存在于给定的路径下。</p></li><li><p>FileOrCreate：如果给定的路径不存储任何内容，则会根据需要创建一个空文件，权限设置为 0644，和 Kubelet 具有相同的组和所有权。</p></li><li><p><strong><code>File</code></strong>：文件，必须存在于给定路径中。</p></li><li><p>Socket：UNIX 套接字，必须存在于给定路径中。</p></li><li><p>CharDevice：字符设备，必须存在于给定路径中。</p></li><li><p>BlockDevice：块设备，必须存在于给定路径中</p></li></ul><h3 id="3、NFS"><a href="#3、NFS" class="headerlink" title="3、NFS"></a>3、NFS</h3><p>​        简介：<code>nfs</code> 卷能将 NFS (网络文件系统) 挂载到你的 Pod 中。 不像 <code>emptyDir</code> 那样会在删除 Pod 的同时也会被删除，<code>nfs</code> 卷的内容在删除 Pod 时会被保存，卷只是被卸载。 这意味着 <code>nfs</code> 卷可以被预先填充数据，并且这些数据可以在 Pod 之间共享。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 所有安装nfs服务</span></span><br><span class="line">$  yum -y install nfs-utils rpcbind</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; master01作为服务端</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># mkdir -p /data/nfs</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># chmod 666 /data/nfs</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data/nfs  192.168.174.0/24(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># exportfs -r</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># systemctl enable --now rpcbind nfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 客户端测试</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># showmount  -e 192.168.174.30</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 编写挂载测试资源清单</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cat nginx-deploy.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line"> labels:</span><br><span class="line">   app: nginx</span><br><span class="line"> name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">     labels:</span><br><span class="line">       app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: nginx</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /etc/timezone</span><br><span class="line">          name: timezone</span><br><span class="line">        - mountPath: /etc/localtime</span><br><span class="line">          name: date</span><br><span class="line">        - mountPath: /tmp</span><br><span class="line">          name: nfs-volume</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      volumes:</span><br><span class="line">      - name: timezone</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /etc/timezone</span><br><span class="line">          <span class="built_in">type</span>: File</span><br><span class="line">      - name: date</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /etc/localtime</span><br><span class="line">          <span class="built_in">type</span>: File</span><br><span class="line">      - name: nfs-volume</span><br><span class="line">        nfs:</span><br><span class="line">          server: 192.168.174.30</span><br><span class="line">          path: /data/nfs/<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl apply -f nginx-deploy.yaml </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec  nginx-54879c9c9c-zp4zl  -- touch  /tmp/222</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看服务端挂载路径</span></span><br><span class="line">[root@k8s-master01 <span class="built_in">test</span>]<span class="comment"># ll /data/nfs/test/</span></span><br><span class="line">-rw-r--r-- 1 root root 0 6月  29 22:00 222</span><br></pre></td></tr></table></figure><h3 id="4、持久卷"><a href="#4、持久卷" class="headerlink" title="4、持久卷"></a>4、持久卷</h3><p>​        Kubernetes对于有状态的容器应用或者对数据需要持久化的应用，不仅需要将容器内的目录挂载到宿主机的目录或者emptyDir临时存储卷，而且需要更加可靠的存储来保存应用产生的重要数据，以便容器应用在重建之后仍然可以使用之前的数据。不过，存储资源和计算资源（CPU/内存）的管理方式完全不同。为了能够屏蔽底层存储实现的细节，让用户方便使用，同时让管理员方便管理，Kubernetes从1.0版本就引入PersistentVolume（PV）和PersistentVolumeClaim（PVC）两个资源对象来实现对存储的管理子系统。<br>​    </p><p>​        <strong>持久卷（PersistentVolume，PV）</strong> 是集群中的一块存储，可以由管理员事先制备， 或者使用<a href="https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/" target="_blank" rel="noopener">存储类（Storage Class）</a>来动态制备。 持久卷是集群资源，就像节点也是集群资源一样。PV 持久卷和普通的Volume一样， 也是使用卷插件来实现的，只是它们拥有独立于任何使用 PV 的 Pod 的生命周期。 此 API 对象中记述了存储的实现细节，无论其背后是NFS还是特定于云平台的存储系统。<br>​        <strong>持久卷申领（PersistentVolumeClaim，PVC）</strong> 表达的是用户对存储的请求。概念上与 Pod 类似。Pod 会耗用节点资源，而 PVC 申领会耗用 PV 资源。Pod 可以请求特定数量的资源（CPU 和内存）。同样 PVC 申领也可以请求特定的大小和访问模式 （例如，可以挂载为 ReadWriteOnce、ReadOnlyMany、ReadWriteMany 或 ReadWriteOncePod， 请参阅<a href="https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/#access-modes" target="_blank" rel="noopener">访问模式</a>）。</p><p>尽管 PersistentVolumeClaim 允许用户消耗抽象的存储资源， 常见的情况是针对不同的问题用户需要的是具有不同属性（如，性能）的 PersistentVolume 卷。 集群管理员需要能够提供不同性质的PersistentVolume， 并且这些 PV 卷之间的差别不仅限于卷大小和访问模式，同时又不能将卷是如何实现的这些细节暴露给用户。 为了满足这类需求，就有了<strong>存储类（StorageClass）</strong> 资源。</p><h4 id="4-1-PersistentVolume"><a href="#4-1-PersistentVolume" class="headerlink" title="4.1 PersistentVolume"></a>4.1 PersistentVolume</h4><p>​    简介：简称PV，是由Kubernetes管理员设置的存储，可以配置Ceph、NFS、GlusterFS等常用存储配置，相对于Volume配置，提供了更多的功能，比如生命周期的管理、大小的限制。PV分为静态和动态。PV可以被理解成Kubernetes集群中的某个网络存储对应的一块存储，PV作为存储资源，主要包括存储能力、访问模式、存储类型、回收策略、后端存储类型等关键信息的设置。</p><p><strong>PV的关键配置参数</strong></p><p><strong>存储能力（Capacity）：</strong></p><p>​        描述存储设备具备的能力，目前仅支持对存储空间的设置。目前，存储大小是可以设置和请求的唯一资源。 </p><p><strong>存储卷模式（Volume Mode）：</strong></p><p>​        针对 PV 持久卷，Kubernetes 支持两种卷模式（<code>volumeModes</code>）：<code>Filesystem（文件系统）</code> 和 <code>Block（块）</code>。 <code>volumeMode</code> 是一个可选的 API 参数。 如果该参数被省略，默认的卷模式是 <code>Filesystem</code>。<code>volumeMode</code> 属性设置为 <code>Filesystem</code> 的卷会被 Pod <strong>挂载（Mount）</strong> 到某个目录。 如果卷的存储来自某块设备而该设备目前为空，Kuberneretes 会在第一次挂载卷之前在设备上创建文件系统。你可以将 <code>volumeMode</code> 设置为 <code>Block</code>，以便将卷作为原始块设备来使用。 这类卷以块设备的方式交给 Pod 使用，其上没有任何文件系统。 这种模式对于为 Pod 提供一种使用最快可能方式来访问卷而言很有帮助， Pod 和卷之间不存在文件系统层。另外，Pod中运行的应用必须知道如何处理原始块设备。 关于如何在 Pod 中使用 <code>volumeMode: Block</code> 的卷， 可参阅<a href="https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/#raw-block-volume-support" target="_blank" rel="noopener">原始块卷支持</a>。</p><p><strong>PV回收策略（Reclaim Policy）</strong>：</p><ul><li><code>Retain</code>：保留，该策略允许手动回收资源，当删除PVC时，PV仍然存在，PV被视为已释放，管理员可以手动回收卷。</li><li><code>Recycle</code>：回收，如果Volume插件支持，Recycle策略会对卷执行 ==rm -rf==清理该PV，并使其可用于下一个新的PVC，但是本策略将来会被弃用，目前只有NFS和HostPath支持该策略。</li><li><code>Delete</code>：删除，如果Volume插件支持，删除PVC时会同时删除PV，动态卷默认为Delete，目前支持Delete的存储后端包括AWS EBS, GCE PD, Azure Disk, or OpenStack Cinder等。</li></ul><p><strong>PV访问策略（Access Modes）</strong>：</p><ul><li><code>ReadWriteOnce</code>：可以被单节点以读写模式挂载，命令行中可以被缩写为RWO。（块存储）</li><li><code>ReadOnlyMany</code>：可以被多个节点以只读模式挂载，命令行中可以被缩写为ROX。</li><li><code>ReadWriteMany</code>：可以被多个节点以读写模式挂载，命令行中可以被缩写为RWX。（文件共享存储）</li><li><code>ReadWriteOncePod</code>：可以被单个 Pod 以读写方式挂载。 如果你想确保整个集群中只有一个 Pod 可以读取或写入该 PVC， 请使用 ReadWriteOnce访问模式。这只支持 CSI 卷以及需要 Kubernetes 1.22 以上版本。命令行中可以缩写为RWOP。</li></ul><p><strong>PV周期的各个阶段：</strong></p><ul><li><strong>Available：</strong>可用，没有被PVC绑定的空闲资源。</li><li><strong>Bound：</strong>已绑定，已经被PVC绑定。</li><li><strong>Released：</strong>已释放，PVC被删除，但是资源还未被重新使用。</li><li><strong>Failed：</strong>失败，自动回收失败</li></ul><p>🚒：PV和PVC成功创建并不代表挂载成功，需要Pod成功启动过后才可以发现挂载是否成功。</p><p><strong>存储分类</strong></p><ul><li><strong>文件存储：</strong>一些数据可能需要被多个节点使用，比如用户的头像、用户上传的文件等，实现方式：NFS、NAS、FTP、CephFS等。</li><li><strong>块存储：</strong>一些数据只能被一个节点使用，或者是需要将一块裸盘整个挂载使用，比如数据库、Redis等，实现方式：Ceph、GlusterFS、公有云。</li><li><strong>对象存储：</strong>由程序代码直接实现的一种存储方式，云原生应用无状态化常用的实现方式，实现方式：一般是符合S3协议的云存储，比如AWS的S3存储、Minio、七牛云等</li></ul><h5 id="4-1-1-PV创建"><a href="#4-1-1-PV创建" class="headerlink" title="4.1.1 PV创建"></a>4.1.1 PV创建</h5><p>​        <strong>注意：PV没有命名空间隔离性</strong></p><ol><li><strong>NFS配置</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 服务端安装NFS</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># yum install nfs-utils rpcbind -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 服务端创建共享目录</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># mkdir -p /data/k8s</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># vim /etc/exports </span></span><br><span class="line">/data/ 192.168.174.0/24(rw,sync,no_subtree_check,no_root_squash)</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># exportfs -r</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 服务端启动NFS</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># systemctl restart nfs rpcbind</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有客户端安装nfs-utils</span></span><br><span class="line">$ yum install -y nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 挂载测试</span></span><br><span class="line">$ mount -t nfs 192.168.174.30:/data/ /mnt/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 取消挂载</span></span><br><span class="line">$ umount /mnt/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源清单</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># vim nfs-pv.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv-nfs  <span class="comment"># PV名称</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi  <span class="comment"># 容量配置，nfs不支持，配置时需要后端存储设备支持</span></span><br><span class="line">  volumeMode: Filesystem <span class="comment"># 卷的模式，目前支持Filesystem（文件系统）和Block（块），其中Block类型需要后端存储支持，默认为文件系统</span></span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce     <span class="comment"># PV的访问模式</span></span><br><span class="line">  persistentVolumeReclaimPolicy: Delete   <span class="comment"># PV的回收策略</span></span><br><span class="line">  storageClassName: nfs-slow   <span class="comment"># PV的类，一个特定类型的PV只能绑定到特定类别的PVC；</span></span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/k8s    <span class="comment"># NFS上的共享目录</span></span><br><span class="line">    server: 192.168.174.30   <span class="comment"># NFS的IP地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建PV</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f nfs-pv.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看PV</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get pv</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/4.png" alt="image-20240630002010458"></p><p><strong>hostPath配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim hostPath-pv.yaml</span></span><br><span class="line">---</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: task-pv-volume</span><br><span class="line">  labels:</span><br><span class="line">    <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  storageClassName: hostpath</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 1Gi</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  hostPath:  <span class="comment"># hostPath服务配置</span></span><br><span class="line">    path: <span class="string">"/mnt/data"</span>  <span class="comment"># 宿主机路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建PV</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f hostPath-pv.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看PV</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get -f hostPath-pv.yaml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/5.png" alt="image-20240630002447200"></p><h4 id="4-2-PersistentVolumeClaim"><a href="#4-2-PersistentVolumeClaim" class="headerlink" title="4.2 PersistentVolumeClaim"></a>4.2 PersistentVolumeClaim</h4><p>​    简称PVC，是对存储PV的请求，表示需要什么类型的PV，需要存储的技术人员只需要配置PVC即可使用存储，或者Volume配置PVC的名称即可。PVC作为用户对存储资源的需求申请，主要包括存储空间请求、访问模式、PV选择条件和存储类别等信息的设置。</p><h5 id="4-2-1-PVC的关键配置参数"><a href="#4-2-1-PVC的关键配置参数" class="headerlink" title="4.2.1 PVC的关键配置参数"></a>4.2.1 PVC的关键配置参数</h5><p><strong>资源请求（Resources）：</strong></p><p>​        描述对存储资源的请求。申请的资源只能小于或等于pv的容量。但如果申请的容量小于PV的实际容量，那么剩余未申请容量会浪费</p><p><strong>访问模式（Access Modes）：</strong></p><p>​        PVC也可以设置访问模式，用于描述用户应用对存储资源的访问权限。访问模式的设置与PV的设置相同。</p><p><strong>存储卷模式（Volume Modes）：</strong></p><p>​        PVC也可以设置存储卷模式，用于描述希望使用的PV存储卷模式，包括文件系统和块设备。</p><p><strong>PVC创建(PVC受命名空间隔离性)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim pvc-nfs.yaml</span></span><br><span class="line">---</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: task-pvc-claim   <span class="comment"># pvc的名称</span></span><br><span class="line">spec:</span><br><span class="line">  storageClassName: nfs-slow     <span class="comment"># pv SC名称</span></span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce         <span class="comment"># 和PV的访问策略一致</span></span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 3Gi      <span class="comment"># 只能小于等于PV的容量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建PVC</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f pvc-nfs.yaml </span></span><br><span class="line">persistentvolumeclaim/task-pvc-claim created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看PVC </span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get -f pvc-nfs.yaml</span></span><br><span class="line">NAME             STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">task-pvc-claim   Bound    pv-nfs   5Gi        RWO            nfs-slow       17s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看绑定的PV</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get -f  nfs-pv.yaml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/6.png" alt="image-20240630002901244"></p><blockquote><p>结果显示pv的状态变为Bound，已被挂载。</p></blockquote><p><strong>创建deploy实例，测试挂载PVC</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim nfs-pvc-deploy.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">    labels:</span><br><span class="line">      app: nginx</span><br><span class="line">    name: nginx</span><br><span class="line">    namespace: default</span><br><span class="line">spec:</span><br><span class="line">    replicas: 1</span><br><span class="line">    selector:</span><br><span class="line">      matchLabels:</span><br><span class="line">        app: nginx</span><br><span class="line">    template:</span><br><span class="line">      metadata:</span><br><span class="line">        labels:</span><br><span class="line">          app: nginx</span><br><span class="line">      spec:</span><br><span class="line">        containers:</span><br><span class="line">        - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">          name: nginx</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: <span class="string">"/usr/share/nginx/html"</span>  <span class="comment"># 挂载路径</span></span><br><span class="line">            name: task-pv-storage</span><br><span class="line">        restartPolicy: Always</span><br><span class="line">        volumes:</span><br><span class="line">        - name: task-pv-storage     <span class="comment"># volume名称</span></span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: task-pvc-claim     <span class="comment"># pvc名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f nfs-pvc-deploy.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po </span></span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-8d486646b-tcrp4   1/1     Running   0          5s</span><br><span class="line">nginx-8d486646b-v46hc   1/1     Running   0          5s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec  nginx-8d486646b-tcrp4  -- df -Th</span></span><br></pre></td></tr></table></figure><h4 id="4-3-PV和PVC的生命周期"><a href="#4-3-PV和PVC的生命周期" class="headerlink" title="4.3 PV和PVC的生命周期"></a>4.3 PV和PVC的生命周期</h4><p>​        可以将PV看作可用的存储资源，PVC则是对存储资源的需求，PV和PVC的相互关系遵循如图8.1所示的生命周期。<img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/7.png" alt="image-20230403162950501"></p><p><strong>资源供应</strong></p><p>​    Kubernetes支持两种资源的供应模式：静态模式（Static）和动态模式（Dynamic）。 资源供应的结果就是创建好的PV。</p><ul><li><p><strong>静态模式：</strong></p><ul><li>集群管理员手工创建许多PV，在定义PV时需要将后端存储的特性进行设置。</li></ul></li><li><p><strong>动态模式：</strong></p><ul><li>集群管理员无须手工创建PV，而是通过StorageClass的设置对后端存储进行描述，标记为某种类型。此时要求PVC对存储的类型进行声明，系统将自动完成PV的创建及与PVC的绑定。PVC可以声明Class为””，说明该PVC禁止使用动态模式。</li></ul></li></ul><p><strong>资源绑定</strong></p><p>​        在用户定义好PVC之后，系统将根据PVC对存储资源的请求（存储空间和访问模式）在已存在的PV中选择一个满足PVC要求的PV，一旦找到，就将该PV与用户定义的PVC进行绑定， 用户的应用就可以使用这个PVC了。如果在系统中没有满足PVC要求的PV，PVC则会无限期处于Pending状态，直到等到系统管理员创建了一个符合其要求的PV。PV一旦绑定到某个PVC上，就会被这个PVC独占，不能再与其他PVC进行绑定了。在这种情况下，当PVC申请的存储空间比PV的少时，整个PV的空间就都能够为PVC所用，可能会造成资源的浪费。如果资源供应使用的是动态模式，则系统在为PVC找到合适的StorageClass后，将自动创建一个PV并完成与PVC的绑定。</p><p><strong>资源使用</strong></p><p>​        Pod使用Volume的定义，将PVC挂载到容器内的某个路径进行使用。Volume的类型为persistentVolumeClaim，在容器应用挂载了一个PVC后， 就能被持续独占使用。不过，多个Pod可以挂载同一个PVC，应用程序需要考虑多个实例共同访问一块存储空间的问题。</p><p><strong>资源释放</strong></p><p>​         当用户对存储资源使用完毕后，用户可以删除PVC，与该PVC绑定的PV将会被标记为 “已释放”，但还不能立刻与其他PVC进行绑定。通过之前PVC写入的数据可能还被留在存储设备上，只有在清除之后该PV才能再次使用</p><p><strong>资源回收</strong></p><p>​            对于PV，管理员可以设定回收策略，用于设置与之绑定的PVC释放资源之后如何处理 遗留数据的问题。只有PV的存储空间完成回收，才能供新的PVC绑定和使用。</p><p><strong>图8.2描述了在静态资源供应模式下，通过PV和PVC完成绑定，并供Pod使用的存储管理机制。</strong><img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/8.png" alt="image-20230403163719564"></p><p><strong>图8.3描述了在动态资源供应模式下，通过StorageClass和PVC完成资源动态绑定（系 统自动生成PV），并供Pod使用的存储管理机制</strong>。<img src="/2024/09/20/Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/08-Kubernetes%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/9.png" alt="image-20230403163826839"></p><h4 id="4-4-PVC创建和挂载失败的原因"><a href="#4-4-PVC创建和挂载失败的原因" class="headerlink" title="4.4 PVC创建和挂载失败的原因"></a>4.4 PVC创建和挂载失败的原因</h4><ul><li><p><strong>PVC一直Pending的原因</strong>：</p><ul><li><p>PVC的空间申请大小大于PV的大小；</p></li><li><p>PVC的StorageClassName没有和PV的一致；</p></li><li><p>PVC的accessModes和PV的不一致。</p></li></ul></li></ul><ul><li><p><strong>挂载PVC的Pod一直处于Pending</strong>：</p><ul><li><p>PVC没有创建成功/PVC不存在；</p></li><li><p>PVC和Pod不在同一个Namespace</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes RBAC细粒度权限划分</title>
    <link href="https://l66stbz.github.io/2024/09/19/Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/07-Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/"/>
    <id>https://l66stbz.github.io/2024/09/19/Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/07-Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/</id>
    <published>2024-09-19T13:50:00.000Z</published>
    <updated>2024-09-26T13:06:55.646Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>​    <strong>安全始终是Kubernetes发展过程中的一个关键领域。</strong> </p><p>​    Kubernetes可被看作一个<strong>多用户共享资源的资源管理系统</strong>，这里的资源主要是各种Kubernetes里的各类资源对象，比如 Pod、Service、Deployment等。只有通过认证的用户才能通过Kubernetes的API Server查询、创建及维护相应的资源对象，理解这一点很关键。 </p><p>​    Kubernetes里的用户有两类：我们开发的运行在Pod里的应用：普通用户，如典型的kubectl命令行工具，基本上由指定的运维人员（集群管理员）使用。在更多的情况下，我们开发的Pod应用需要通过API Server查询、创建及管理其他相关资源对象，所以这类用户才是Kubernetes的关键用户。为此，Kubernetes设计了Service Account这个特殊的资源对象，代表Pod应用的账号，为Pod提供必要的身份认证。在此基础上， Kubernetes进一步实现和完善了基于角色的访问控制权限系统—— RBAC（Role-Based Access Control）。</p><p>​    在默认情况下，Kubernetes在每个命名空间中都会创建一个默认的名称为default的Service Account，因此Service Account是不能全局使用的，只能被它所在命名空间中的Pod使用。通过以下命令可以查看集群中的所有Service Account：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get sa -A</span></span><br><span class="line">NAMESPACE              NAME                                 SECRETS   AGE</span><br><span class="line">default                default                              1         11d</span><br><span class="line">kube-node-lease        default                              1         11d</span><br><span class="line">kube-public            default                              1         11d </span><br><span class="line">kubernetes-dashboard   default                              1         11d</span><br></pre></td></tr></table></figure><p><img src="/2024/09/19/Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/07-Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/2.png" alt="K8S RBAC详解_K8S RBAC"></p><p><img src="/2024/09/19/Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/07-Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/3.png" alt="image-20240630212922625"></p><h2 id="二、Service-Account"><a href="#二、Service-Account" class="headerlink" title="二、Service Account"></a>二、Service Account</h2><p>​    简介：Service Account是<strong><code>通过Secret来保存对应的用户（应用）身份凭证的</code></strong>，这些凭证信息有<code>CA根证书数据（ca.crt）和签名后的Token信息（Token</code>）。在Token信息中就包括了对应的Service Account的名称，因此API Server通过接收到的Token信息就能确定Service Account的身份。 在默认情况下，用户创建一个Pod时，Pod会绑定对应命名空间中的 default这个Service Account作为其“公民身份证”。当Pod里的容器被创建时，Kubernetes会把对应的Secret对象中的身份信息（ca.crt、Token等） 持久化保存到容器里固定位置的本地文件中，因此当容器里的用户进程通过Kubernetes提供的客户端API去访问API Server时，这些API会自动读取这些身份信息文件，并将其附加到HTTPS请求中传递给API Server 以完成身份认证逻辑。在身份认证通过以后，就涉及“访问授权”的问题，这就是RBAC要解决的问题了。</p><h2 id="三、-API对象"><a href="#三、-API对象" class="headerlink" title="三、 API对象"></a>三、 API对象</h2><p>​    <strong>简介</strong>：基于角色（Role）的访问控制（RBAC）是一种基于组织中用户的角色来调节控制对计算机或网络资源的访问的方法。RBAC 鉴权机制使用 <code>rbac.authorization.k8s.io</code> <a href="https://kubernetes.io/zh-cn/docs/concepts/overview/kubernetes-api/#api-groups-and-versioning" target="_blank" rel="noopener">API 组</a>来驱动鉴权决定， 允许你通过 Kubernetes API 动态配置策略。==默认启动，无需修改apiserver的配置文件参数。==<br>​    <strong>官方</strong>：<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/" target="_blank" rel="noopener">https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/</a></p><p>​    RBAC API 声明了四种 Kubernetes 对象：==<strong>Role</strong>、<strong>ClusterRole</strong>、<strong>RoleBinding</strong> 和 <strong>ClusterRoleBinding</strong>==。你可以像使用其他 Kubernetes 对象一样，通过类似 <code>kubectl</code> 这类工具<a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/kubernetes-objects/#understanding-kubernetes-objects" target="_blank" rel="noopener">描述对象</a>, 或修补对象。</p><h3 id="3-1-Role和ClusterRole"><a href="#3-1-Role和ClusterRole" class="headerlink" title="3.1 Role和ClusterRole"></a>3.1 Role和ClusterRole</h3><p>​        简介：RBAC 的 <strong>Role</strong> 或 <strong>ClusterRole</strong> 中包含一组代表相关权限的控制。可以对集群或者某个命名空间下进行相关kubectl等操作； 这些权限是纯粹累加的（不存在拒绝某操作的规则）。这两种资源的名字不同（Role 和 ClusterRole） 是因为 Kubernetes 对象要么是名字空间作用域的，要么是集群作用域的，不可两者兼具。</p><ul><li><strong>Role</strong>：总是用来在某个<a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/namespaces/" target="_blank" rel="noopener">namespace</a>内设置访问权限； 在你创建 Role 时，你必须指定该 Role 所属的命名空间。</li><li><strong>ClusterRole</strong>： 则是一个集群作用域的资源。</li></ul><p><strong>角色（Role）示例</strong></p><p>​    下面是一个Role定义示例，该角色具有在命名空间default中读取 （get、watch、list）Pod资源对象信息的权限：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span> <span class="comment"># API组，可以为空，例如deploy为apps</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods"，"deployments"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><p>Role资源对象的主要配置参数都在rules字段中进行设置： </p><ul><li><strong>resources：</strong>需要操作的资源对象类型列表，例如”pods”、”deployments”、”jobs”等。 </li><li><strong>apiGroups：</strong>资源对象API组列表，例如””（Core）、”extensions”、”apps”、”batch”等。 </li><li><strong>verbs：</strong>设置允许对资源对象操作的方法列表，例如”get”、”watch”、”list”、”delete”、”replace”、”patch”等。</li></ul><p><strong>集群角色（ClusterRole）示例</strong></p><p>​    集群角色除了具有和角色一致的命名空间内资源的管理能力，因其集群级别的范围，还可以用于以下授权应用场景中。</p><ul><li>对集群范围内资源的授权，例如Node。 </li><li>对非资源型的授权，例如/healthz。 </li><li>对包含全部namespace资源的授权，例如pods（用于kubectl get pods–all-namespaces这样的操作授权）。 </li><li>对某个命名空间中多种权限的一次性授权。 </li></ul><p>下面是一个ClusterRole定义示例，该集群角色有权访问一个或所有 namespace的secrets（根据其被RoleBinding还是ClusterRoleBinding绑定而定）的权限：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["secrets"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><h3 id="3-2-RoleBinding和ClusterRoleBinding"><a href="#3-2-RoleBinding和ClusterRoleBinding" class="headerlink" title="3.2 RoleBinding和ClusterRoleBinding "></a>3.2 RoleBinding和ClusterRoleBinding<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding" target="_blank" rel="noopener"> </a></h3><p>​    简介：角色绑定或集群角色绑定用来把一个角色绑定到一个目标主体上， 绑定目标可以是User（用户）、Group（组）或者<code>Service Account</code>。 RoleBinding用于某个命名空间中的授权，ClusterRoleBinding用于集群范围内的授权。</p><p><strong>角色绑定（RoleBinding）示例</strong></p><p>​    RoleBinding可以与属于相同命名空间的Role或者某个集群级别的ClusterRole绑定，完成对某个主体的授权。 </p><p>​    下面是与相同命名空间中的Role进行绑定的示例，通过这个绑定操作，就完成了以下授权规则：<strong>允许用户jane读取命名空间default的Pod资源对象信息</strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jane</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br></pre></td></tr></table></figure><p>​    RoleBinding也可以引用ClusterRole，对目标主体在其所在命名空间授予在ClusterRole中定义的权限。一种常见的用法是集群管理员预先定义好一组ClusterRole（权限设置），然后在多个命名空间中重复使用这些ClusterRole。 </p><p>​    例如，在下面的例子中为用户“dave”授权一个ClusterRole“secret-reader”，虽然secret-reader是一个集群角色，但因为RoleBinding的作用范围为命名空间development，所以用户dave只能读取命名空间development中的secret资源对象，而不能读取其他命名空间中的secret资源对象：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">development</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dave</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br></pre></td></tr></table></figure><img src="/2024/09/19/Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/07-Kubernetes%20RBAC%E7%BB%86%E7%B2%92%E5%BA%A6%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/4.png" alt="image-20240630123856113" style="zoom:67%;"><p><strong>集群角色绑定（ClusterRoleBinding）示例</strong></p><p>​    ClusterRoleBinding用于进行集群级别或者对所有命名空间都生效的授权。下面的例子允许manager组的用户读取任意命名空间中的secret资源对象：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets-global</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">manager</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><blockquote><p>注意，在集群角色绑定（ClusterRoleBinding）中引用的角色只能是集群级别的角色（ClusterRole），而不能是命名空间级别的Role。</p></blockquote><h2 id="四、Role-和-ClusterRole使用相关示例"><a href="#四、Role-和-ClusterRole使用相关示例" class="headerlink" title="四、Role 和 ClusterRole使用相关示例"></a>四、Role 和 ClusterRole使用相关示例</h2><p><strong>查看集群的role（具有命名空间隔离性）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl  get role -A</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl  get role kube-proxy -n kube-system -oyaml</span></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2023-03-29T02:05:50Z"</span></span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  resourceVersion: <span class="string">"297"</span></span><br><span class="line">  uid: da39328b-40cb-4985-bfe3-4bfe7d61dd22</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resourceNames:</span><br><span class="line">  - kube-proxy</span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br></pre></td></tr></table></figure><h3 id="4-1-role示例"><a href="#4-1-role示例" class="headerlink" title="4.1 role示例"></a>4.1 role示例</h3><p>下面是一个位于 “default” 名字空间的 Role 的示例，可用来授予对 <a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/" target="_blank" rel="noopener">Pod</a> 的读访问权限：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span>  <span class="comment"># api版本号</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span> <span class="comment"># kind名称</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span> <span class="comment"># 哪个命名空间进行限制</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span> <span class="comment"># role名称</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span>  <span class="comment"># "" 标明 core API 组，资源属于哪个组，可以为空</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods"]</span>  <span class="comment"># 对这个组中的哪个资源进行授权</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span>  <span class="comment"># 可以对这个资源进行什么样的操作</span></span><br></pre></td></tr></table></figure><h3 id="4-2-ClusterRole-示例"><a href="#4-2-ClusterRole-示例" class="headerlink" title="4.2 ClusterRole 示例 "></a>4.2 ClusterRole 示例<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/#clusterrole-example" target="_blank" rel="noopener"> </a></h3><p>​        ClusterRole 同样可以用于授予 Role 能够授予的权限。 因为 ClusterRole 属于集群范围，所以它也可以为以下资源授予访问权限：</p><ul><li>集群范围资源（比如<a href="https://kubernetes.io/zh-cn/docs/concepts/architecture/nodes/" target="_blank" rel="noopener">节点（Node）</a>）</li><li>非资源端点（比如 <code>/healthz</code>）</li><li>跨名字空间访问的名字空间作用域的资源（如 Pod）比如，你可以使用 ClusterRole 来允许某特定用户执行 <code>kubectl get pods --all-namespaces</code></li></ul><p>下面是一个 ClusterRole 的示例，可用来为任一特定名字空间中的 <a href="https://kubernetes.io/zh-cn/docs/concepts/configuration/secret/" target="_blank" rel="noopener">Secret</a> 授予读访问权限， 或者跨名字空间的访问权限（取决于该角色是如何<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding" target="_blank" rel="noopener">绑定</a>的）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="comment"># "namespace" 被忽略，因为 ClusterRoles 不受名字空间限制</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="comment"># 在 HTTP 层面，用来访问 Secret 资源的名称为 "secrets"</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["secrets"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><h3 id="4-3-对资源的引用（对某个资源进行细粒度的权限管理）"><a href="#4-3-对资源的引用（对某个资源进行细粒度的权限管理）" class="headerlink" title="4.3 对资源的引用（对某个资源进行细粒度的权限管理）"></a>4.3 对资源的引用（对某个资源进行细粒度的权限管理）</h3><p>​        在 Kubernetes API 中，大多数资源都是使用对象名称的字符串表示来呈现与访问的。 例如，对于 Pod 应使用 “pods”。 RBAC 使用对应 API 端点的 URL 中呈现的名字来引用资源。 有一些 Kubernetes API 涉及 <strong>子资源（subresource）</strong>，例如 Pod 的日志。 对 Pod 日志的请求看起来像这样：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /api/v1/namespaces/&#123;namespace&#125;/pods/&#123;name&#125;/<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>​        在这里，<code>pods</code> 对应名字空间作用域的 Pod 资源，而 <code>log</code> 是 <code>pods</code> 的子资源。 在 RBAC 角色表达子资源时，使用斜线（<code>/</code>）来分隔资源和子资源。 要允许某主体读取 <code>pods</code> 同时访问这些 Pod 的 <code>log</code> 子资源，你可以这样写：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对容器进行细粒度权限划分，pods/log:只能对容器的日志对哪些相关的操作</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-and-pod-logs-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods",</span> <span class="string">"pods/log"</span><span class="string">]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><p>​        对于某些请求，也可以通过 <code>resourceNames</code> 列表按名称引用资源。 在指定时，可以将请求限定为资源的单个实例。 下面的例子中限制可以 <code>get</code> 和 <code>update</code> 一个名为 <code>my-configmap</code> 的 <a href="https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-pod-configmap/" target="_blank" rel="noopener">ConfigMap</a>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对default命名空间下的名为my-configmap的configmap进行相关操作</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-updater</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="comment"># 在 HTTP 层面，用来访问 ConfigMap 资源的名称为 "configmaps"</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line">  <span class="attr">resourceNames:</span> <span class="string">["my-configmap"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["update",</span> <span class="string">"get"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><hr><h2 id="五、-RoleBinding-和-ClusterRoleBinding"><a href="#五、-RoleBinding-和-ClusterRoleBinding" class="headerlink" title="五、 RoleBinding 和 ClusterRoleBinding"></a>五、 RoleBinding 和 ClusterRoleBinding</h2><h3 id="5-1-RoleBinding"><a href="#5-1-RoleBinding" class="headerlink" title="5.1 RoleBinding"></a>5.1 RoleBinding</h3><p>​    简介：角色绑定（Role Binding）是将角色中定义的权限赋予一个或者一组用户。 它包含若干<strong>主体（Subject）</strong>（用户、组或服务账户）的列表和对这些主体所获得的角色的引用。 RoleBinding 在指定的命名空间中执行授权，而 ClusterRoleBinding 在集群范围执行授权。</p><p>一个 RoleBinding 可以引用同一的名字空间中的任何 Role。 或者，一个 RoleBinding 可以引用某 ClusterRole 并将该 ClusterRole 绑定到 RoleBinding 所在的名字空间。 如果你希望将某 ClusterRole 绑定到集群中所有名字空间，你要使用 ClusterRoleBinding。</p><p><strong>RoleBinding 示例</strong></p><p>​        下面的例子中的 RoleBinding 将 “pod-reader” Role 授予在 “default” 名字空间中的用户 “jane”。 这样，用户 “jane” 就具有了读取 “default” 名字空间中所有 Pod 的权限。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="comment"># 此角色绑定允许 "jane" 读取 "default" 名字空间中的 Pod</span></span><br><span class="line"><span class="comment"># 你需要在该命名空间中有一个名为 “pod-reader” 的 Role</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="comment"># 你可以指定不止一个“subject（主体）”</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jane</span> <span class="comment"># "name" 是区分大小写的</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="comment"># "roleRef" 指定与某 Role 或 ClusterRole 的绑定关系</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span>        <span class="comment"># 此字段必须是 Role 或 ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span>  <span class="comment"># 此字段必须与你要绑定的 Role 或 ClusterRole 的名称匹配</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>==RoleBinding 也可以引用 ClusterRole，以将对应 ClusterRole 中定义的访问权限授予 RoleBinding 所在名字空间的资源。这种引用使得你可以跨整个集群定义一组通用的角色， 之后在多个名字空间中复用==</strong></p></blockquote><p>​        例如，尽管下面的 RoleBinding 引用的是一个 ClusterRole，”dave”（这里的主体， 区分大小写）只能访问 “development” 名字空间中的 Secrets 对象，因为 RoleBinding 所在的名字空间（由其 metadata 决定）是 “development”:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="comment"># 此角色绑定使得用户 "dave" 能够读取 "development" 名字空间中的 Secrets</span></span><br><span class="line"><span class="comment"># 你需要一个名为 "secret-reader" 的 ClusterRole</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets</span></span><br><span class="line">  <span class="comment"># RoleBinding 的名字空间决定了访问权限的授予范围。</span></span><br><span class="line">  <span class="comment"># 这里隐含授权仅在 "development" 名字空间内的访问权限。</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">development</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dave</span> <span class="comment"># 'name' 是区分大小写的</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>==创建了绑定之后，你不能再修改绑定对象所引用的 Role 或 ClusterRole。 试图改变绑定对象的 <code>roleRef</code> 将导致合法性检查错误。 如果你想要改变现有绑定对象中 <code>roleRef</code> 字段的内容，必须删除重新创建绑定对象。==</strong></p></blockquote><h3 id="5-2-ClusterRoleBinding"><a href="#5-2-ClusterRoleBinding" class="headerlink" title="5.2 ClusterRoleBinding"></a>5.2 ClusterRoleBinding</h3><p>​    要跨整个集群完成访问权限的授予，你可以使用一个 ClusterRoleBinding。 下面的 ClusterRoleBinding 允许 “manager” 组内的所有用户访问任何名字空间中的 Secret。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"><span class="comment"># 此集群角色绑定允许 “manager” 组中的任何人访问任何名字空间中的 Secret 资源</span></span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="built_in">read</span>-secrets-global</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: manager      <span class="comment"># 'name' 是区分大小写的</span></span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: secret-reader</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure><h3 id="5-3-注意事项"><a href="#5-3-注意事项" class="headerlink" title="5.3 注意事项"></a>5.3 注意事项</h3><p>​    创建了绑定之后，你不能再修改绑定对象所引用的 Role 或 ClusterRole。 试图改变绑定对象的 <code>roleRef</code> 将导致合法性检查错误。 如果你想要改变现有绑定对象中 <code>roleRef</code> 字段的内容，必须删除重新创建绑定对象。</p><p>这种限制有两个主要原因：</p><ol><li><p>将 <code>roleRef</code> 设置为不可以改变，这使得可以为用户授予对现有绑定对象的 <code>update</code> 权限， 这样可以让他们管理主体列表，同时不能更改被授予这些主体的角色。</p></li><li><p>针对不同角色的绑定是完全不一样的绑定。要求通过删除/重建绑定来更改 <code>roleRef</code>， 这样可以确保要赋予绑定的所有主体会被授予新的角色（而不是在允许或者不小心修改了 <code>roleRef</code> 的情况下导致所有现有主体未经验证即被授予新角色对应的权限）。</p></li></ol><h2 id="六、聚合ClusterRole"><a href="#六、聚合ClusterRole" class="headerlink" title="六、聚合ClusterRole"></a>六、聚合ClusterRole</h2><p>​        简介：你可以将若干 ClusterRole <strong>聚合（Aggregate）</strong> 起来，形成一个复合的 ClusterRole。 作为集群控制面的一部分，控制器会监视带有 <code>aggregationRule</code> 的 ClusterRole 对象集合。<code>aggregationRule</code> 为控制器定义一个标签<a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/" target="_blank" rel="noopener">选择算符</a>供后者匹配应该组合到当前 ClusterRole 的 <code>roles</code> 字段中的 ClusterRole 对象，==类似于给多个clusterrole打上相同的标签，后通过标签选择器进行权限聚合，形成一个完整的clsterrole供用户使用。==</p><p>下面是一个聚合 ClusterRole 的示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-clousterrole</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-secrets-global</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-clousterrole</span>      <span class="comment"># 'name' 是区分大小写的</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="attr">aggregationRule:</span></span><br><span class="line">  <span class="attr">clusterRoleSelectors:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">rbac.example.com/aggregate-to-monitoring:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">rules:</span> <span class="string">[]</span> <span class="comment"># 控制面自动填充这里的规则</span></span><br></pre></td></tr></table></figure><p>​        如果你创建一个与某个已存在的聚合 ClusterRole 的标签选择算符匹配的 ClusterRole， 这一变化会触发新的规则被添加到聚合 ClusterRole 的操作。 下面的例子中，通过创建一个标签同样为 <code>rbac.example.com/aggregate-to-monitoring: true</code> 的 ClusterRole，新的规则可被添加到 “monitoring” ClusterRole 中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">monitoring-endpoints</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">rbac.example.com/aggregate-to-monitoring:</span> <span class="string">"true"</span></span><br><span class="line"><span class="comment"># 当你创建 "monitoring-endpoints" ClusterRole 时，</span></span><br><span class="line"><span class="comment"># 下面的规则会被添加到 "monitoring" ClusterRole 中</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["services",</span> <span class="string">"endpointslices"</span><span class="string">,</span> <span class="string">"pods"</span><span class="string">]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br></pre></td></tr></table></figure><p>使用案例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service-account</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span>  <span class="comment"># 在哪个命名空间创建</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="comment">#  namespace: default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="comment"># - apiGroups: ["","events.k8s.io"]  # "" 表示核心 API 组</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["","events.k8s.io"]</span>  <span class="comment"># "" 表示核心 API 组</span></span><br><span class="line"><span class="comment">#  resources: ["pods","events","namespaces"]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods","namespaces"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line"><span class="comment">#  namespace: default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service-account</span>  <span class="comment"># 绑定的 Service Account</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes配置管理</title>
    <link href="https://l66stbz.github.io/2024/09/18/Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/06-Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
    <id>https://l66stbz.github.io/2024/09/18/Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/06-Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</id>
    <published>2024-09-18T13:50:00.000Z</published>
    <updated>2024-09-26T13:06:18.543Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h1 id="Kubernetes配置管理ConfigMap"><a href="#Kubernetes配置管理ConfigMap" class="headerlink" title="Kubernetes配置管理ConfigMap"></a>Kubernetes配置管理ConfigMap</h1><h3 id="一、前言："><a href="#一、前言：" class="headerlink" title="一、前言："></a>一、前言：</h3><p>​    应用部署的一个最佳实践是将应用所需的配置信息与程序分离，这样可以使应用程序被更好地复用，通过不同的配置也能实现更灵活的功能。将应用打包为容器镜像后，可以通过环境变量或者外挂文件的方式在创建容器时进行配置注入，但在大规模容器集群的环境中，对多个容器进行不同的配置将变得非常复杂。</p><h3 id="二、configMap简介（缩写-cm）"><a href="#二、configMap简介（缩写-cm）" class="headerlink" title="二、configMap简介（缩写:cm）"></a><strong>二、configMap简介（缩写:cm）</strong></h3><p>​      官网：<a href="https://kubernetes.io/zh-cn/docs/concepts/configuration/configmap/" target="_blank" rel="noopener">https://kubernetes.io/zh-cn/docs/concepts/configuration/configmap/</a></p><h4 id="1-2-ConfigMap概述"><a href="#1-2-ConfigMap概述" class="headerlink" title="1.2 ConfigMap概述"></a>1.2 ConfigMap概述</h4><p>​       <code>ConfigMap</code> 是一种 API 对象，<strong>用来将非机密性的数据保存到键值对中</strong>。使用时， <a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/" target="_blank" rel="noopener">Pods</a> 可以将其用作环境变量、命令行参数或者存储卷中的配置文件。ConfigMap将你的环境配置信息和 <a href="https://kubernetes.io/zh-cn/docs/reference/glossary/?all=true#term-image" target="_blank" rel="noopener">容器镜像</a> 解耦，便于应用配置的修改。</p><p>​        应用部署的一个最佳实践是将应用所需的<strong><code>配置信息</code></strong>与<strong><code>程序进行分离</code></strong>，这样可以使应用程序被更好地复用，通过不同的配置也能实现更灵活的功能。将应用打包为容器镜像后， 可以通过环境变量或者外挂文件的方式在创建容器时进行配置注入，但在大规模容器集群的环境中，对多个容器进行不同的配置将变得非常复杂。从<strong><code>Kubernetes 1.2</code></strong>开始提供了一种统一的应用配置管理方案—<code>ConfigMap</code>。 <strong><code>ConfigMap具有命名空间隔离性！</code></strong></p><h4 id="1-3-ConfigMap用法"><a href="#1-3-ConfigMap用法" class="headerlink" title="1.3 ConfigMap用法"></a>1.3 ConfigMap用法</h4><ul><li>生成容器内的<strong>环境变量</strong>。</li><li>以Volume的形式挂载为容器内部的文件或目录。</li><li><strong>ConfigMap</strong>以一个或多个key:value的形式保存在Kubernetes系统中供应用使用，既可以用于表示一个变量的值（例如name=maoxiansheng）， 也可以用于表示一个完整配置文件的内容（例如server.xml=&lt;？ xml…&gt;…）。</li></ul><p><img src="/2024/09/18/Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/06-Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/2.png" alt="image-20240623220912637"></p><h4 id="1-4-configMap创建方式"><a href="#1-4-configMap创建方式" class="headerlink" title="1.4 configMap创建方式"></a><strong>1.4 configMap创建方式</strong></h4><p><strong>语法格式实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; ConfigMap文件示例</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: game-demo</span><br><span class="line">data:</span><br><span class="line">  <span class="comment"># property-like keys; each key maps to a simple value</span></span><br><span class="line">  player_initial_lives: <span class="string">"3"</span></span><br><span class="line">  ui_properties_file_name: <span class="string">"user-interface.properties"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># file-like keys</span></span><br><span class="line">  game.properties: |</span><br><span class="line">    enemy.types=aliens,monsters</span><br><span class="line">    player.maximum-lives=5    </span><br><span class="line">  user-interface.properties: |</span><br><span class="line">    color.good=purple</span><br><span class="line">    color.bad=yellow</span><br><span class="line">    allow.textmode=<span class="literal">true</span> </span><br><span class="line">========================================================================================================</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Pod引用ConfigMap示例</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: configmap-demo-pod</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">    - name: demo</span><br><span class="line">      image: alpine</span><br><span class="line">      <span class="built_in">command</span>: [<span class="string">"sleep"</span>, <span class="string">"3600"</span>]</span><br><span class="line">      env:</span><br><span class="line">        - name: PLAYER_INITIAL_LIVES                               </span><br><span class="line">          valueFrom:</span><br><span class="line">            configMapKeyRef:</span><br><span class="line">              name: game-demo</span><br><span class="line">              key: player_initial_lives</span><br><span class="line">        - name: UI_PROPERTIES_FILE_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            configMapKeyRef:</span><br><span class="line">              name: game-demo</span><br><span class="line">              key: ui_properties_file_name</span><br><span class="line">      volumeMounts:</span><br><span class="line">      - name: config</span><br><span class="line">        mountPath: <span class="string">"/config"</span></span><br><span class="line">        readOnly: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: config</span><br><span class="line">    configMap:</span><br><span class="line">      name: game-demo</span><br><span class="line">      items:</span><br><span class="line">      - key: <span class="string">"game.properties"</span></span><br><span class="line">        path: <span class="string">"game.properties"</span></span><br><span class="line">      - key: <span class="string">"user-interface.properties"</span></span><br><span class="line">        path: <span class="string">"user-interface.properties"</span></span><br></pre></td></tr></table></figure><h5 id="1-4-1-通过目录的形式创建"><a href="#1-4-1-通过目录的形式创建" class="headerlink" title="1.4.1 通过目录的形式创建"></a>1.4.1 通过目录的形式创建</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建测试目录</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cd /opt/ &amp;&amp; mkdir configmap &amp;&amp; cd configmap/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 准备测试文件</span></span><br><span class="line">[root@k8s-master01 configmap]<span class="comment"># cat &gt;&gt; test.conf &lt;&lt;-EOF</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen   80;</span><br><span class="line">   server_name test.tanke.love;</span><br><span class="line">   location / &#123;</span><br><span class="line">     root /data/<span class="built_in">test</span>;</span><br><span class="line">     index  index.html  index.htm;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 configmap]<span class="comment"># cat &gt;&gt; study.conf &lt;&lt;-EOF</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen   80;</span><br><span class="line">   server_name study.tanke.love;</span><br><span class="line">   location / &#123;</span><br><span class="line">     root /data/study;</span><br><span class="line">     index  index.html  index.htm;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 基于目录的形式创建ConfigMap</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm filedir --from-file=configmap/</span></span><br><span class="line">configmap/filedir created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ConfigMap资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm filedir</span></span><br><span class="line">NAME      DATA   AGE</span><br><span class="line">filedir   4      47s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建ConfigMap资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm filedir -oyaml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/18/Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/06-Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/3.png" alt="image-20240623223742420"></p><h5 id="1-4-2-通过文件的形式创建"><a href="#1-4-2-通过文件的形式创建" class="headerlink" title="1.4.2 通过文件的形式创建"></a>1.4.2 通过文件的形式创建</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 通过文件形式创建（使用场景最多，声明变量多使用，少则使用命令行形式创建）</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># cat &gt;&gt; env.conf &lt;&lt;-EOF</span></span><br><span class="line">name=zhangsan</span><br><span class="line">age=18</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm env --from-file=env.conf （如果需要还可以继续添加--from-file=***）</span></span><br><span class="line">configmap/test01 created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建的ConfigMap资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm env -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  env.conf: |</span><br><span class="line">    `name=zhangsan`</span><br><span class="line">    `age=18`</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2024-06-23T14:40:53Z"</span></span><br><span class="line">  name: env</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"413336"</span></span><br><span class="line">  uid: 188258a8-e59d-43ae-9133-3a8fc95c92a7</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ConfigMap时修改配置文件的名称</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm env02  --from-file=env02.conf=env.conf</span></span><br><span class="line">configmap/env02 created</span><br></pre></td></tr></table></figure><blockquote><p><code>--from-file=env02.conf=env.conf</code>解析：–from-file=&lt;新文件名称&gt;=&lt;源文件名称&gt;</p></blockquote><h5 id="1-4-3-通过环境变量的形式创建资源"><a href="#1-4-3-通过环境变量的形式创建资源" class="headerlink" title="1.4.3 通过环境变量的形式创建资源"></a>1.4.3 通过环境变量的形式创建资源</h5><p>​    <strong>语法格式</strong>：<code>kubectl create cm &lt;configMap名称&gt;  --from-env-file=&lt;文件名称&gt;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建环境变量形式的ConfigMap</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># cat &gt;&gt;env02.conf&lt;&lt;-EOF</span></span><br><span class="line">name=mingge</span><br><span class="line">age=16</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ConfigMap资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm studyenv  --from-env-file=env02.conf </span></span><br><span class="line">configmap/studyenv created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ConfigMap的资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm studyenv -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  `age: <span class="string">"16"</span>`</span><br><span class="line">  `name: mingge`</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2024-06-26T13:40:15Z"</span></span><br><span class="line">  name: studyenv</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"548674"</span></span><br><span class="line">  uid: eacfb106-70bf-4ca9-bd27-21d11ec958d0</span><br></pre></td></tr></table></figure><h5 id="1-4-4-通过命令行的形式创建资源（了解）"><a href="#1-4-4-通过命令行的形式创建资源（了解）" class="headerlink" title="1.4.4 通过命令行的形式创建资源（了解）"></a>1.4.4 通过命令行的形式创建资源（了解）</h5><p>​    <strong>语法格式</strong>：<code>kubectl create cm &lt;configmap名称&gt; --from-literal=&lt;key&gt;=&lt;value&gt;  --from-literal=&lt;key&gt;=&lt;value&gt;</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行操作</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm testenv --from-literal=NAME=wangwu  --from-literal=AGE=88</span></span><br><span class="line">configmap/testenv created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ConfigMap资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm testenv -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  `age: <span class="string">"88"</span>``</span><br><span class="line">  `name: wangwu`</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2024-06-26T13:47:01Z"</span></span><br><span class="line">  name: testenv</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"549644"</span></span><br><span class="line">  uid: 64fd2dce-6310-440d-bdbf-7c50366e7eed</span><br></pre></td></tr></table></figure><h3 id="三、ConfigMap的配置使用"><a href="#三、ConfigMap的配置使用" class="headerlink" title="三、ConfigMap的配置使用"></a>三、ConfigMap的配置使用</h3><h4 id="1-1-ConfigMap少数变量配置"><a href="#1-1-ConfigMap少数变量配置" class="headerlink" title="1.1  ConfigMap少数变量配置"></a>1.1  ConfigMap少数变量配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 准备测试文件</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">cat</span> <span class="string">&gt;&gt;</span> <span class="string">test01.conf&lt;&lt;-EOF</span></span><br><span class="line"><span class="string">user=mingge</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ConfigMap资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">cm</span> <span class="string">test-env</span>  <span class="string">--from-env-file=test01.conf</span> </span><br><span class="line"><span class="string">configmap/test-env</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">cm</span> <span class="string">test-env</span> <span class="string">-oyaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">mingge</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="string">"2024-06-26T13:57:27Z"</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-env</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">resourceVersion:</span> <span class="string">"551140"</span></span><br><span class="line">  <span class="attr">uid:</span> <span class="string">425cc711-6a5b-4306-8063-3a84e6985060</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">vim</span> <span class="string">nginx-deploy-cm-env.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PASSWORD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">redis123</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TEST</span> <span class="comment"># 注入容器中变量的名称</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">test-env</span>        <span class="comment"># ConfigMap名称</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">user</span>      <span class="comment"># ConfigMap文件中key名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">nginx-deploy-cm-env.yaml</span></span><br><span class="line"><span class="string">deployment.apps/nginx</span> <span class="string">configured</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod环境变量</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">opt]#</span> <span class="string">kubectl</span> <span class="string">exec</span>  <span class="string">nginx-756f4447f4-gmx7q</span> <span class="string">--</span> <span class="string">env</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/18/Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/06-Kubernetes%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/4.png" alt="image-20240626220702647"></p><h4 id="1-2-ConfigMag多环境变量配置"><a href="#1-2-ConfigMag多环境变量配置" class="headerlink" title="1.2 ConfigMag多环境变量配置"></a>1.2 ConfigMag多环境变量配置</h4><p>​     🚑 <strong>场景：多个环境变量需要注入，直接性ConfigMag文件全部注入，使用较多…</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建测试文件</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># cat &gt;&gt; test02.conf &lt;&lt;-EOF</span></span><br><span class="line">A=b</span><br><span class="line">B=c</span><br><span class="line">C=d</span><br><span class="line">D=e</span><br><span class="line">E=f</span><br><span class="line">F=g</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ConfigMap资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm test-env02  --from-env-file=test02.conf </span></span><br><span class="line">configmap/<span class="built_in">test</span>-env02 created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl  get cm test-env02 -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  `A: b`</span><br><span class="line">  `B: c`</span><br><span class="line">  `C: d`</span><br><span class="line">  `D: e`</span><br><span class="line">  `E: f`</span><br><span class="line">  `F: g`</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2024-06-26T14:13:13Z"</span></span><br><span class="line">  name: <span class="built_in">test</span>-env02</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"553418"</span></span><br><span class="line">  uid: 9f4043da-cf8d-40d2-b553-f3d85c03988d</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># vim nginx-deploy-env02.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">        name: nginx</span><br><span class="line">        envFrom: <span class="comment"># 固定语法格式</span></span><br><span class="line">        - configMapRef:    <span class="comment"># 固定语法格式</span></span><br><span class="line">            name: <span class="built_in">test</span>-env02  <span class="comment"># configMap名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl apply -f nginx-deploy-env02.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get po </span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-7656879676-mmntx   1/1     Running   0          4s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看变量是否注入Pod中</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl exec  nginx-7656879676-mmntx   -- env</span></span><br><span class="line">D=e</span><br><span class="line">E=f</span><br><span class="line">F=g</span><br><span class="line">A=b</span><br><span class="line">B=c</span><br><span class="line">C=d</span><br></pre></td></tr></table></figure><h5 id="1-2-1-Prefix参数使用（了解）"><a href="#1-2-1-Prefix参数使用（了解）" class="headerlink" title="1.2.1 Prefix参数使用（了解）"></a>1.2.1 Prefix参数使用（了解）</h5><p>为方便区分环境变量是否是以ConfigMap形式注入Pod中，在yaml文件中添加<code>prefix</code>(场景较少)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加内容如下：</span></span><br><span class="line">        envFrom:        </span><br><span class="line">        - configMapRef:   </span><br><span class="line">            name: <span class="built_in">test</span>-env02</span><br><span class="line">          prefix: From_   <span class="comment"># 名称自己拟定，相当于给变量名加一个前缀</span></span><br></pre></td></tr></table></figure><h4 id="1-3-以文件的形式挂载configMap"><a href="#1-3-以文件的形式挂载configMap" class="headerlink" title="1.3 以文件的形式挂载configMap"></a>1.3 以文件的形式挂载configMap</h4><p>​     场景：以配置文件形式挂在容器中，一个容器可以挂载多个configMap。但是挂载路径不能重复，有可能会被覆盖掉，容器启动时就会加载配置文件。</p><p><strong>创建测试文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 准备测试文件</span></span><br><span class="line">[root@k8s-master opt]<span class="comment">#  cat &gt;&gt; default.conf &lt;&lt;-EOF</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    location /status &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">     &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ConfigMap资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create cm nginx --from-file=default.conf </span></span><br><span class="line">configmap/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建完成的configMap</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm nginx</span></span><br><span class="line">NAME    DATA   AGE</span><br><span class="line">nginx   1      48s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ConfigMap资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get cm nginx -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  default.conf: |</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        location /status &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">         &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2024-06-26T14:52:35Z"</span></span><br><span class="line">  name: nginx</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"558822"</span></span><br><span class="line">  uid: 4a83e5f4-8b93-4ac0-ab27-c0926d746eb4</span><br></pre></td></tr></table></figure><p> <strong>挂载测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建一个deployment容器，并把cm挂载容器中</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># vim nginx-deploy.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">        name: nginx</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: nginxconf</span><br><span class="line">          mountPath: /etc/nginx/conf.d           <span class="comment">#挂载路径</span></span><br><span class="line">      volumes:</span><br><span class="line">        - name: nginxconf</span><br><span class="line">          configMap:</span><br><span class="line">            name: nginx        <span class="comment">#configMap名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源</span></span><br><span class="line">[root@k8s-master <span class="built_in">test</span>]<span class="comment"># kubectl apply -f nginx-deploy.yaml </span></span><br><span class="line">deployment.apps/nginx configured</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看PodIP</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get po -owide</span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP               NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-64d76c6968-9xnt5   1/1     Running   0          54s   172.16.122.175   k8s-master02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># curl 172.16.122.175/status</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 1 1 1 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><p>​      <strong>🚒注意事项：当ConfigMap配置文件出现变动时，如果程序可以实现热加载功能，会定时自动加载挂载的ConfigMap；如果程序不实现热加载，配置文件变动则挂载的ConfigMap不会变动。</strong> </p><h4 id="1-4-ConfigMap的限制条件"><a href="#1-4-ConfigMap的限制条件" class="headerlink" title="1.4 ConfigMap的限制条件"></a><strong>1.4 ConfigMap的限制条件</strong></h4><ul><li>ConfigMap必须在Pod之前创建，Pod才能引用它。</li><li>如果Pod使用envFrom基于ConfigMap定义环境变量，则无效的环境变量名称（例如名称以数字开头）将被忽略。</li><li>ConfigMap受命名空间限制，只有处于相同命名空间中的Pod才可以引用它。</li></ul><h1 id="Kubernetes配置管理secret"><a href="#Kubernetes配置管理secret" class="headerlink" title="Kubernetes配置管理secret"></a>Kubernetes配置管理secret</h1><h3 id="一、Secret简介"><a href="#一、Secret简介" class="headerlink" title="一、Secret简介"></a>一、Secret简介</h3><p>​            secret 是一种包含少量敏感信息例如密码、令牌或密钥的对象。 这样的信息可能会被放在规约中或者镜像中。 使用 Secret 意味着你不需要在应用程序代码中包含机密数据。由于创建 Secret 可以独立于使用它们的 Pod， 因此在创建、查看和编辑 Pod 的工作流程中暴露 Secret（及其数据）的风险较小。 Kubernetes 和在集群中运行的应用程序也可以对 Secret 采取额外的预防措施， 例如避免将机密数据写入非易失性存储。Secret 类似于但专门用于保存机密数据。</p><h3 id="二、Secret类型"><a href="#二、Secret类型" class="headerlink" title="二、Secret类型"></a>二、Secret类型</h3><p>​     <strong>官网： <a href="https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret" target="_blank" rel="noopener">https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret</a></strong></p><ul><li><strong>Opaque：通用型Secret，默认类型；</strong></li><li><strong>kubernetes.io/service-account-token：作用于ServiceAccount，包含一个令牌，用于标识API服务账户；</strong></li><li><strong>kubernetes.io/dockerconfigjson：下载私有仓库镜像使用的Secret，和宿主机的/root/.docker/config.json一致，宿主机登录后即可产生该文件；</strong></li><li><strong>kubernetes.io/tls：用于存储HTTPS域名证书文件的Secret，可以被Ingress使用；</strong></li></ul><h3 id="三、Opaque类型创建"><a href="#三、Opaque类型创建" class="headerlink" title="三、Opaque类型创建"></a>三、Opaque类型创建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建临时文件 </span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># echo -n 'admin' &gt; ./username.txt</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># echo -n 'S!B\*d$zDsb=' &gt; ./password.txt</span></span><br><span class="line">🚑注意： `-n` 标志用来确保生成文件的文末没有多余的换行符。这很重要，因为当 `kubectl`读取文件并将内容编码为 base64 字符串时，额外的换行符也会被编码。 你不需要对文件中包含的字符串中的特殊字符进行转义。</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行创建Opaque类型的secret</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create secret generic db-user-pass \</span></span><br><span class="line">    --from-file=./username.txt \</span><br><span class="line">    --from-file=./password.txt</span><br><span class="line">secret/db-user-pass created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看secret的资源清单</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl  get secret db-user-pass -oyaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  password.txt: UyFCXCpkJHpEc2I9   </span><br><span class="line">  username.txt: YWRtaW4=</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">"2023-01-30T12:36:01Z"</span></span><br><span class="line">  name: db-user-pass</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"622285"</span></span><br><span class="line">  uid: e5dc5a30-6631-48a2-b7cc-7d7e89b722c5</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># echo "YWRtaW4="  | base64 -d</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># echo "UyFCXCpkJHpEc2I9"  | base64 -d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建时修改变量名称</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create secret generic db-user-pass \</span></span><br><span class="line">    --from-file=username=./username.txt \</span><br><span class="line">    --from-file=password=./password.txt</span><br><span class="line"> </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 以yaml文件形式创建并且以明文形式书写内容，创建成功后，自动加密</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># vim secret-stringData.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: mysecret</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">stringData:</span><br><span class="line">  username: root</span><br><span class="line">  password: root123</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建secret资源</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl create -f secret-stringData.yaml</span></span><br><span class="line">secret/mysecret created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建的secret</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl get secret</span></span><br><span class="line">执行结果：</span><br><span class="line">NAME                  TYPE                                  DATA   AGE</span><br><span class="line">db-user-pass          Opaque                                2      18m</span><br><span class="line">default-token-cmjfb   kubernetes.io/service-account-token   3      56d</span><br><span class="line">mysecret              Opaque                                2      12s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建的secret内容</span></span><br><span class="line">[root@k8s-master01 opt]<span class="comment"># kubectl describe secret mysecret</span></span><br><span class="line">Name:         mysecret</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Type:  Opaque</span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">password:  7 bytes</span><br><span class="line">username:  4 bytes</span><br></pre></td></tr></table></figure><h3 id="四、使用Secret拉取私有仓库镜像"><a href="#四、使用Secret拉取私有仓库镜像" class="headerlink" title="四、使用Secret拉取私有仓库镜像"></a>四、使用Secret拉取私有仓库镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create secret docker-registry myregistrykey \</span><br><span class="line">--docker-server=DOCKER_REGISTRY_SERVER \</span><br><span class="line">--docker-username=DOCKER_USER \</span><br><span class="line">--docker-password=DOCKER_PASSWORD \</span><br><span class="line">--docker-email=DOCKER_EMAIL</span><br><span class="line"><span class="comment"># docker-registry：指定Secret的类型</span></span><br><span class="line"><span class="comment"># myregistrykey： Secret名称</span></span><br><span class="line"><span class="comment"># DOCKER_REGISTRY_SERVER：镜像仓库地址</span></span><br><span class="line"><span class="comment"># DOCKER_USER：镜像仓库用户名，需要有拉取镜像的权限</span></span><br><span class="line"><span class="comment"># DOCKER_PASSWORD：镜像仓库密码</span></span><br><span class="line"><span class="comment"># DOCKER_EMAIL：邮箱信息，可以为空</span></span><br></pre></td></tr></table></figure><h2 id="configMap和secret挂载文件覆盖的解决"><a href="#configMap和secret挂载文件覆盖的解决" class="headerlink" title="configMap和secret挂载文件覆盖的解决"></a>configMap和secret挂载文件覆盖的解决</h2><p>​       <strong>🚑注意事项：当挂载文件到容器路径时，该容器挂载路径有其他文件会被全部覆盖掉只留下需要挂载的文件。subPath就会只覆盖这一个文件，而mountPath不在指定路径，需要指定文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 文件内容</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: registry.cn-beijing.aliyuncs.com/dotbalo/nginx:1.15.12-alpine</span><br><span class="line">        name: nginx</span><br><span class="line">        volumeMounts: </span><br><span class="line">        - name: nginxconf </span><br><span class="line">          mountPath: /etc/nginx/nginx.conf     <span class="comment">#挂载路径</span></span><br><span class="line">          subPath: nginx.conf <span class="comment">#挂载文件名称    </span></span><br><span class="line">      volumes:</span><br><span class="line">        - name: nginxconf</span><br><span class="line">          configMap:</span><br><span class="line">            name: <span class="built_in">test</span>-env</span><br><span class="line">            items:                   <span class="comment"># 修改挂载容器中文件的名称</span></span><br><span class="line">            - key: redis.conf        <span class="comment">#原cm配置文件的名称</span></span><br><span class="line">              path: nginx.conf       <span class="comment">#挂载容器后的名称</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes HPA自动扩缩</title>
    <link href="https://l66stbz.github.io/2024/09/17/kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/05-kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/"/>
    <id>https://l66stbz.github.io/2024/09/17/kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/05-kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/</id>
    <published>2024-09-17T13:50:00.000Z</published>
    <updated>2024-09-26T13:04:48.917Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Kubernetes 中，自动扩缩容是一种动态调整集群资源，以灵活应对应用程序资源需求变化的机制。自动扩缩容可以分为两个层面：</p><ul><li>Node 层面：根据业务规模，实现集群节点的自动扩缩容；</li><li>Pod 层面：根据业务规模，实现 Pod 副本的自动扩缩容。</li></ul><p>自动扩缩容提供了以下好处：</p><ul><li>提高资源利用率：根据实际需求动态调整资源，避免资源浪费；</li><li>提高应用稳定性和可用性：自动应对流量高峰，减少服务中断的风险；</li><li>简化运维：减少手动干预，自动化资源管理，简化运维工作；</li><li>成本效益：通过合理的资源分配，降低运营成本。</li></ul><ul><li><strong>VPA(Vertical Pod Autoscaler)</strong>：垂直扩展（Vertical Scaling），根据负载调整单个 Pod 的资源请求和限制，如 CPU 和内存。</li><li><strong>HPA (Horizontal Pod Autoscaler)</strong>：水平扩展（Horizontal Scaling），根据负载增加或减少 Pod 的副本数量。</li></ul><h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>​    Horizontal Pod Autoscaler (HPA) 是 Kubernetes 中的一项功能，它能够根据 CPU 使用率或其他应用程序指标自动扩展或缩减应用程序的副本数量。HPA 有助于确保应用程序在负载增加时能够自动扩展以处理更多请求，在负载减少时则自动缩减以节省资源。</p><p>​    HPA的工作原理如下：</p><ul><li>度量指标：HPA 可以根据 CPU 利用率、内存利用率或其他自定义度量指标来触发扩缩容</li><li>目标利用率：设置目标利用率，例如 CPU 的 10%，HPA 会尝试维持这个利用率水平</li><li>限制 Pod 数量：可以设置最小和最大 Pod 数量的限制，防止在极端情况下资源的过度使用或不足</li><li>缩放策略：HPA 支持不同的缩放策略，如快速缩放、慢速缩放和标准缩放，以适应不同的业务场景</li></ul><h3 id="2、工作原理"><a href="#2、工作原理" class="headerlink" title="2、工作原理"></a>2、工作原理</h3><ol><li><p>Kubernetes中的某个<strong>Metrics Server</strong>持续采集所有Pod副本的指标数据。</p></li><li><p>HPA控制器通过Metrics Server的API获取这些数据，基于用户定义的扩缩容规则进行计算，得到目标Pod的副本数量。</p></li><li><p>当目标Pod副本数量与当前副本数量不同时，HPA控制器就向Pod的副本控制器 （Deployment、RC或ReplicaSet）发起scale操作，调整Pod的副本数量， 完成扩缩容操作。</p></li></ol><p><img src="/2024/09/17/kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/05-kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/2.png" alt="image-20240622204540931"></p><h3 id="3、HPA版本变革"><a href="#3、HPA版本变革" class="headerlink" title="3、HPA版本变革"></a>3、HPA版本变革</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get apiservices | grep -i auto</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/05-kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/3.png" alt="image-20240622210337234"></p><ul><li><strong>autoscaling/v1版本</strong>：仅支持基于CPU使用率指标的自动扩缩容。</li><li><strong>autoscaling/v2版本</strong>：支持基于内存使用率指标、自定义指标及外部指标的自动扩缩容，并且进一步扩展以支持多指标缩放能力，当定义了多个指标时，HPA会跟据每个指标进行计算，其中缩放幅度最大的指标会被采纳。</li></ul><h3 id="4、监控指标类型"><a href="#4、监控指标类型" class="headerlink" title="4、监控指标类型"></a>4、监控指标类型</h3><p>​    kube-Master节点的<code>kube-controller-manager</code>服务持续监测目标Pod的某种性能指标，以计算是否需要调整副本数量。目前Kubernetes支持的指标类型如下：</p><ul><li>Pod资源使用率：Pod级别的性能指标，通常是一个比率值，例如CPU使用率。</li><li>Pod自定义指标：Pod级别的性能指标，通常是一个数值，例如接收的请求数量。</li><li>Object自定义指标或外部自定义指标：通常是一个数值，需要容器应用以某种方式提供，例如通过HTTP URL“/metrics”提供，或者使用外部服务提供的指标采集URL。</li></ul><h3 id="4、HPA配置资源清单"><a href="#4、HPA配置资源清单" class="headerlink" title="4、HPA配置资源清单"></a>4、HPA配置资源清单</h3><h4 id="4-1-基于CPU负载实现自动扩缩容"><a href="#4-1-基于CPU负载实现自动扩缩容" class="headerlink" title="4.1 基于CPU负载实现自动扩缩容"></a>4.1 基于CPU负载实现自动扩缩容</h4><p><strong>deploy资源清单准备</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-deploy.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">resources:</span>  <span class="comment"># 资源请求配置</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">10m</span> <span class="comment"># cpu资源请求，1颗cpu=1000m</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-deploy.yaml</span> </span><br><span class="line"><span class="string">deployment.apps/nginx</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">po</span> <span class="string">-owide</span></span><br><span class="line"><span class="string">NAME</span>                     <span class="string">READY</span>   <span class="string">STATUS</span>    <span class="string">RESTARTS</span>   <span class="string">AGE</span>   <span class="string">IP</span>              <span class="string">NODE</span>           <span class="string">NOMINATED</span> <span class="string">NODE</span>   <span class="string">READINESS</span> <span class="string">GATES</span></span><br><span class="line"><span class="string">nginx-6dc8dbb669-nf5lm</span>   <span class="number">1</span><span class="string">/1</span>     <span class="string">Running</span>   <span class="number">0</span>          <span class="string">54s</span>   <span class="number">172.16</span><span class="number">.195</span><span class="number">.23</span>   <span class="string">k8s-master03</span>   <span class="string">&lt;none&gt;</span>           <span class="string">&lt;none&gt;</span></span><br></pre></td></tr></table></figure><p><strong>service资源清单编写</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行创建资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">expose</span> <span class="string">deploy</span>  <span class="string">nginx</span>  <span class="string">--port=80</span>   <span class="string">--dry-run=client</span>  <span class="string">-oyaml</span>  <span class="string">&gt;</span> <span class="string">nginx-service.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看生成的资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-service.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建serice资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-service.yaml</span> </span><br><span class="line"><span class="string">service/nginx</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">svc</span> <span class="string">-owide</span></span><br><span class="line"><span class="string">NAME</span>         <span class="string">TYPE</span>        <span class="string">CLUSTER-IP</span>    <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>   <span class="string">AGE</span>     <span class="string">SELECTOR</span></span><br><span class="line"><span class="string">kubernetes</span>   <span class="string">ClusterIP</span>   <span class="number">10.96</span><span class="number">.0</span><span class="number">.1</span>     <span class="string">&lt;none&gt;</span>        <span class="number">443</span><span class="string">/TCP</span>   <span class="string">4d10h</span>   <span class="string">&lt;none&gt;</span></span><br><span class="line"><span class="string">nginx</span>        <span class="string">ClusterIP</span>   <span class="number">10.96</span><span class="number">.11</span><span class="number">.64</span>   <span class="string">&lt;none&gt;</span>        <span class="number">80</span><span class="string">/TCP</span>    <span class="string">23s</span>     <span class="string">app=nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试连通性</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">curl</span> <span class="number">10.96</span><span class="number">.11</span><span class="number">.64</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE</span> <span class="string">html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;Welcome</span> <span class="string">to</span> <span class="string">nginx!&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">html</span> <span class="string">&#123;</span> <span class="attr">color-scheme:</span> <span class="string">light</span> <span class="string">dark;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="string">body</span> <span class="string">&#123;</span> <span class="attr">width:</span> <span class="string">35em;</span> <span class="attr">margin:</span> <span class="number">0</span> <span class="string">auto;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Tahoma,</span> <span class="string">Verdana,</span> <span class="string">Arial,</span> <span class="string">sans-serif;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;Welcome</span> <span class="string">to</span> <span class="string">nginx!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;If</span> <span class="string">you</span> <span class="string">see</span> <span class="string">this</span> <span class="string">page,</span> <span class="string">the</span> <span class="string">nginx</span> <span class="string">web</span> <span class="string">server</span> <span class="string">is</span> <span class="string">successfully</span> <span class="string">installed</span> <span class="string">and</span></span><br><span class="line"><span class="string">working.</span> <span class="string">Further</span> <span class="string">configuration</span> <span class="string">is</span> <span class="string">required.&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;p&gt;For</span> <span class="string">online</span> <span class="string">documentation</span> <span class="string">and</span> <span class="string">support</span> <span class="string">please</span> <span class="string">refer</span> <span class="string">to</span></span><br><span class="line"><span class="string">&lt;a</span> <span class="string">href="http://nginx.org/"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span><br><span class="line"><span class="string">Commercial</span> <span class="string">support</span> <span class="string">is</span> <span class="string">available</span> <span class="string">at</span></span><br><span class="line"><span class="string">&lt;a</span> <span class="string">href="http://nginx.com/"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;p&gt;&lt;em&gt;Thank</span> <span class="string">you</span> <span class="string">for</span> <span class="string">using</span> <span class="string">nginx.&lt;/em&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod的指标</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">top</span> <span class="string">po</span> </span><br><span class="line"><span class="string">NAME</span>                     <span class="string">CPU(cores)</span>   <span class="string">MEMORY(bytes)</span>   </span><br><span class="line"><span class="string">nginx-6dc8dbb669-nf5lm</span>   <span class="string">0m</span>           <span class="string">5Mi</span></span><br></pre></td></tr></table></figure><p><strong>HPA资源清单编写</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行生成资源清单</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl autoscale deploy nginx --cpu-percent=10 --min=1 --max=10  --dry-run=client -oyaml &gt; nginx-hpa.yaml</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: autoscaling/v1   <span class="comment">#API版本</span></span><br><span class="line">kind: HorizontalPodAutoscaler  <span class="comment"># 对象的类型</span></span><br><span class="line">metadata:  <span class="comment"># 元数据</span></span><br><span class="line">  name: nginx  <span class="comment"># HPA对象的名称</span></span><br><span class="line">spec:  <span class="comment"># 定义了HPA的规格</span></span><br><span class="line">  maxReplicas: 10  <span class="comment"># 定义了Pod副本数量的最大值，即在负载增加时，最多可以扩展到10 个Pod。</span></span><br><span class="line">  minReplicas: 1  <span class="comment"># 定义了Pod副本数量的最小值，即在负载减少时，最少保留1个Pod。</span></span><br><span class="line">  scaleTargetRef:  <span class="comment"># 指定HPA作用的目标对象。</span></span><br><span class="line">    apiVersion: apps/v1  <span class="comment"># 目标对象的API版本。</span></span><br><span class="line">    kind: Deployment  <span class="comment"># 目标对象的类型</span></span><br><span class="line">    name: nginx  <span class="comment"># 目标Deployment的名称</span></span><br><span class="line">  targetCPUUtilizationPercentage: 10  <span class="comment"># 目标CPU使用率，当CPU使用率超过10% 时，HPA会增加Pod副本数量；当CPU使用率低于10%时，HPA会减少Pod副本数量。</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f nginx-hpa.yaml </span></span><br><span class="line">horizontalpodautoscaler.autoscaling/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get hpa</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/05-kubernetes%20HPA%E8%87%AA%E5%8A%A8%E6%89%A9%E7%BC%A9/4.png" alt="image-20240622213350318"></p><blockquote><p>字段解释：</p><p><code>NAME</code>：这是 HPA 对象的名称</p><p><code>REFERENCE</code>：HPA 监控和自动扩展的目标对象。</p><p><code>TARGETS</code>：当前和目标的资源使用情况</p><p><code>MINPODS</code>：HPA 配置的最小 Pod 副本数量。</p><p><code>MAXPODS</code>：HPA 配置的最大 Pod 副本数量</p><p><code>REPLICAS</code>：当前运行的 Pod 副本数量。</p><p><code>AGE</code>：HPA 对象的年龄 </p></blockquote><p><strong>测试压测</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># while true; do curl http://10.96.39.85 &gt; /dev/null; done</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get hpa</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl top po </span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：<br>    使用HPA CPU自动扩充时，尽量用于前端应用，后端再扩容时，尽量使用自定义指标。后端应用会有多方面原因引起负载过高。例如服务器过载过高，也会引起后端应用本身负载过高。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes服务发布</title>
    <link href="https://l66stbz.github.io/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/"/>
    <id>https://l66stbz.github.io/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/</id>
    <published>2024-09-17T13:50:00.000Z</published>
    <updated>2024-09-26T13:02:57.042Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="kubernetes服务发布"><a href="#kubernetes服务发布" class="headerlink" title="kubernetes服务发布"></a>kubernetes服务发布</h1><p>[TOC]</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​        <strong>每个Pod都会获取到它自己的IP地址，但是这些IP地址不总是稳定和可依赖的</strong>，这样就会导致一个问题：在Kubernetes集群中,如果一组Pod(比如后端的Pod）为其他Pod(比如前端的Pod提供服务，那么如果它们之间使用Pod的IP地址进行通信，在Pod重建后，将无法再进行连接。</p><p>​    于是Kubernetes引用了Service这样一种抽象概念：逻辑上的一组Pod，即一种可以访问Pod的策略。这一组Pod能够被Service通过<strong>标签选择器</strong>访问到，之后就可以使用Service进行通信，集群内部服务之间的访问通Service的名称来进行通信的，因为service的名称是亘古不变的。Kubernetes的Service定义了一个服务的访问入口地址，前端的应用（Pod）通过这个入口地址访问其背后的一组由Pod副本组成的集群实例，Service 与其后端Pod副本集群之间则是通过Label Selector来实现无缝对接的。</p><p>​    既然每个Pod都会被分配一个单独的IP地址，而且每个Pod都提供了一个独立的Endpoint（PodIP+ContainerPort）以被客户端访问，现在多个Pod副本组成了一个集群来提供服务。</p><p>​    那么客户端如何来访问它们呢？一般的做法是部署一个负载均衡器（软件或硬件）， 为这组Pod开启一个对外的服务端口，如80端口，并且将这些Pod的Endpoint列表加入80端口的转发列表，客户端就可以通过负载均衡器的对外IP地址+服务端口来访问此服务。 客户端的请求最后会被转发到哪个Pod，由负载均衡器的算法所决定。</p><p>​    Kubernetes也遵循上述常规做法，运行在每个Node上的kube-proxy进程其实就是一个智能的软件负载均衡器，负责把对Service的请求转发到后端的某个Pod实例上，并在内部实现服务的负载均衡与会话保持机制。但Kubernetes发明了一种很巧妙又影响深远的设计： Service没有共用一个负载均衡器的IP地址，每个Service都被分配了一个全局唯一的虚拟IP地址，这个虚拟IP被称为Cluster IP。这样一来，每个服务就变成了具备唯一IP地址的通信节点，服务调用就变成了最基础的TCP网络通信问题。</p><p>​    Pod的Endpoint地址会随着Pod的销毁和重新创建而发生改变，因为新Pod的IP地址与之前旧Pod的不同。而Service一旦被创建，Kubernetes就会自动为它分配一个可用的Cluster IP，而且在Service的整个生命周期内，它的Cluster IP一般不会发生改变。 于是，服务发现这个棘手的问题在Kubernetes的架构里也得以轻松解决：只要用Service的Name与Service的Cluster IP地址做一个DNS域名映射即可完美解决问题。</p><h3 id="1、Service-集群内部通讯流量成为东西流量-svc有ns隔离性"><a href="#1、Service-集群内部通讯流量成为东西流量-svc有ns隔离性" class="headerlink" title="1、Service:集群内部通讯流量成为东西流量(svc有ns隔离性)"></a><strong>1、Service:集群内部通讯流量成为东西流量(svc有ns隔离性)</strong></h3><h4 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h4><p>​    Service是Kubernetes实现微服务架构的核心概念，通过创建Service，可以为一组具有相同功能的容器应用提供一个统一的入口地址，并且将请求负载分发到后端的各个容器应用上。</p><p>​    Service用于为一组提供服务的Pod抽象一个稳定的网络访问地址，通过Service的定义设置的访问地址是DNS域名格式的服务名称，对于客户端应用来说，网络访问方式并没有改变（DNS域名的作用等价于主机名、互联网域名或IP地址）。 Service还提供了负载均衡器功能，将客户端请求负载分发到后端提供具体服务的各个Pod上。</p><h4 id="1-2-Kubernetes的服务发现机制"><a href="#1-2-Kubernetes的服务发现机制" class="headerlink" title="1.2 Kubernetes的服务发现机制"></a>1.2 Kubernetes的服务发现机制</h4><p>​    服务发现机制指客户端应用在一个Kubernetes集群中如何获知后端服务的访问地址。Kubernetes提供了两种机制供客户端应用以固定的方式获取后端服务的访问地址：环境变量方式和DNS方式</p><h5 id="1-2-1-环境变量方式"><a href="#1-2-1-环境变量方式" class="headerlink" title="1.2.1 环境变量方式"></a>1.2.1 环境变量方式</h5><p>​            在一个Pod运行起来的时候，系统会自动为其容器运行环境注入所有集群中有效Service的信息。Service的相关信息包括服务IP、服务端口号、各端口号相关的协议等，通过<strong><code>{SVCNAME}_SERVICE_HOST和 {SVCNAME}_SERVICE_PORT</code></strong>格式进行设置。其中，SVCNAME的命名规则为：将Service的name字符串转换为全大写字母，将中横线“-”替 换为下画线“_”。</p><p>假设已经创建一个SVC，进去SVC后端的任意一个Pod中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it nginx-6dc8dbb669-nf5lm -- sh</span></span><br><span class="line">/ <span class="comment"># env</span></span><br><span class="line"></span><br><span class="line">NGINX_PORT_80_TCP=tcp://10.96.11.64:80</span><br><span class="line">NGINX_SERVICE_HOST=10.96.11.64 <span class="comment"># service的IP地址</span></span><br><span class="line">NGINX_SERVICE_PORT=80<span class="comment"># service的端口</span></span><br><span class="line">NGINX_PORT=tcp://10.96.11.64:80</span><br><span class="line">NGINX_PORT_80_TCP_ADDR=10.96.11.64</span><br><span class="line">NGINX_PORT_80_TCP_PORT=80</span><br><span class="line">NGINX_PORT_80_TCP_PROTO=tcp</span><br><span class="line"></span><br><span class="line">/ <span class="comment"># curl $NGINX_SERVICE_HOST:$NGINX_SERVICE_PORT</span></span><br></pre></td></tr></table></figure><h5 id="1-2-2-DNS方式"><a href="#1-2-2-DNS方式" class="headerlink" title="1.2.2 DNS方式"></a>1.2.2 DNS方式</h5><p>​            DNS方式Service在Kubernetes系统中遵循DNS命名规范，Service的DNS域名表示方法为<code>&lt;servicename&gt;.&lt;namespace&gt;.svc.&lt;clusterdomain&gt;</code>，其中servicename为服务的名称，namespace为其所在namespace的名称， clusterdomain为Kubernetes集群设置的域名后缀（例如cluster.local），服务名称的命名规则遵循gRFC 1123规范的要求。</p><p>​            对于客户端应用来说，DNS域名格式的Service名称提供的是稳定、 不变的访问地址，可以大大简化客户端应用的配置，是Kubernetes集群中推荐的使用方式。 当Service以DNS域名形式进行访问时，就需要在Kubernetes集群中存在一个DNS服务器来完成域名到ClusterIP地址的解析工作了，目前由CoreDNS作为Kubernetes集群的默认DNS服务器提供域名解析服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it nginx-6dc8dbb669-nf5lm -- sh</span></span><br><span class="line"><span class="comment"># 跨命名空间访问</span></span><br><span class="line">/ <span class="comment"># nslookup  metrics-server.kube-system.svc.cluster.local</span></span><br><span class="line">Server:10.96.0.10</span><br><span class="line">Address:10.96.0.10:53</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name:metrics-server.kube-system.svc.cluster.local</span><br><span class="line">Address: 10.96.135.159</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前命名空间访问</span></span><br><span class="line">/ <span class="comment"># nslookup  kubernetes.default.svc.cluster.local</span></span><br><span class="line">Server:10.96.0.10</span><br><span class="line">Address:10.96.0.10:53</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name:kubernetes.default.svc.cluster.local</span><br><span class="line">Address: 10.96.0.1</span><br></pre></td></tr></table></figure><h4 id="1-3-Label和Selector"><a href="#1-3-Label和Selector" class="headerlink" title="1.3 Label和Selector"></a>1.3 Label和Selector</h4><h5 id="1-3-1-简介"><a href="#1-3-1-简介" class="headerlink" title="1.3.1 简介"></a>1.3.1 简介</h5><h6 id="1-Label简介"><a href="#1-Label简介" class="headerlink" title="1. Label简介"></a>1. Label简介</h6><p>​    Label（标签）是Kubernetes系统中的另一个核心概念，相当于我们熟悉的“标签”。一个Label是一个<code>key=value键值对</code>，其中的key与value由用户自己指定。Label可以被附加到各种资源对象上，例如Node、 Pod、Service、Deployment等，一个资源对象可以定义任意数量的 Label，同一个Label也可以被添加到任意数量的资源对象上。Label通常在资源对象定义时确定，也可以在对象创建后动态添加或者删除。我们可以通过给指定的资源对象捆绑一个或多个不同的Label来实现多维度的资源分组管理功能，以便灵活、方便地进行资源分配、调度、配置、 部署等管理工作。</p><h6 id="2-Selector简介"><a href="#2-Selector简介" class="headerlink" title="2. Selector简介"></a>2. Selector简介</h6><p>​    Label Selector（标签选择器）查询和筛选拥有某些Label的资源对象，Kubernetes通过这种方式实现了类似SQL的简单又通用的对象查询机制。Label Selector可以被类比为SQL语句中的where查询条件，例 如，“name=redis-slave”这个Label  Selector作用于Pod时，可以被类比 为<code>select * from pod where name=&#39;redis-slave&#39;</code>这样的语句。当前有两种Label Selector表达式：基于等式的（Equality-based）Selector表达式和基于集合的（Set-based）Selector表达式。</p><p><strong>基于等式的Selector表达式采用等式类表达式匹配标签：</strong></p><ul><li><p><code>name=redis-slave</code>：匹配所有具有name=redis-slave标签的资源对象。</p></li><li><p><code>env ！= production</code>：匹配所有不具有env=production标签的资源对象，比如“env=test”就是满足此条件的标签之一。 </p></li></ul><p><strong>基于集合的Selector表达式则使用集合操作类表达式匹配标签：</strong></p><ul><li><code>name  in (redis-master,redis-slave)</code>：匹配所有具有 name=redis-master标签或者name=redis-slave标签的资源对象。 </li><li><code>name not in (php-frontend)</code>：匹配所有不具有name=php-frontend标签的资源对象。</li></ul><h6 id="3-示例"><a href="#3-示例" class="headerlink" title="3. 示例"></a>3. 示例</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看节点标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get nodes --show-labels</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/2.png" alt="image-20240623121700265"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看符合标签的Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -l app=nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/3.png" alt="image-20240623121754690"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 给固定节点打上标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  label  node k8s-node01  k8s-node02 role=node node=work</span></span><br><span class="line">node/k8s-node01 labeled</span><br><span class="line">node/k8s-node02 labeled</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  label  node k8s-master01   role=master</span></span><br><span class="line">node/k8s-master01 labeled</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 过滤节点标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get node --show-labels | grep -i node=work</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 集合查看</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get nodes -l 'role in (master,node)'</span></span><br><span class="line">NAME           STATUS   ROLES    AGE    VERSION</span><br><span class="line">k8s-master01   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node01     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node02     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 取反</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get node -l 'role!=master'</span></span><br><span class="line">NAME           STATUS   ROLES    AGE    VERSION</span><br><span class="line">k8s-master02   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-master03   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node01     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node02     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get node -l 'node!=work,role=master'</span></span><br><span class="line">NAME           STATUS   ROLES    AGE    VERSION</span><br><span class="line">k8s-master01   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get node -l 'node!=work,role in (master)'</span></span><br><span class="line">NAME           STATUS   ROLES    AGE    VERSION</span><br><span class="line">k8s-master01   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get nodes -l role</span></span><br><span class="line">NAME           STATUS   ROLES    AGE    VERSION</span><br><span class="line">k8s-master01   Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node01     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br><span class="line">k8s-node02     Ready    &lt;none&gt;   5d1h   v1.23.16</span><br></pre></td></tr></table></figure><p><strong>修改标签</strong></p><p>​    未修改之前标签</p><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/4.png" alt="image-20240623123217515"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改指定标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl label node k8s-node01 k8s-node02 node=ssd --overwrite </span></span><br><span class="line">node/k8s-node01 unlabeled</span><br><span class="line">node/k8s-node02 unlabeled</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl label node -l node node=arm --overwrite</span></span><br><span class="line">node/k8s-node01 labeled</span><br><span class="line">node/k8s-node02 labeled</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看新标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get node --show-labels  | grep -i -w node=ssd</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/5.png" alt="image-20240623123405535"></p><p><strong>删除标签</strong></p><p>​    未删除之前截图</p><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/6.png" alt="image-20240623123405535"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 删除标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl label node k8s-node01 k8s-node02 node-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看节点标签</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get node --show-labels</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/7.png" alt="image-20240623123838478"></p><h4 id="1-4-Service资源创建"><a href="#1-4-Service资源创建" class="headerlink" title="1.4 Service资源创建"></a>1.4 Service资源创建</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源清单</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">cat</span> <span class="string">&gt;&gt;</span> <span class="string">nginx-svc.yaml</span> <span class="string">&lt;&lt;-EOF</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">webapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span>       <span class="comment"># pod标签</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span>  <span class="comment"># 协议 </span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span>       <span class="comment"># service的端口</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span>  <span class="comment"># 容器端口号（代理的后端服务对外暴露的端口号）</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span>     <span class="comment"># deploy的标签</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">5</span>      <span class="comment"># 副本数</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span>   <span class="comment"># pod的标签</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span>  <span class="comment"># pod的标签</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Service</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">nginx-svc.yaml</span> </span><br><span class="line"><span class="string">service/webapp</span> <span class="string">created</span></span><br><span class="line"><span class="string">deployment.apps/nginx</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">-f</span> <span class="string">nginx-svc.yaml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/8.png" alt="image-20240623002412004"></p><p>​      <strong>该示例为<code>webapp:80</code>即可访问到具有<code>app=nginx</code>标签的pod的80端口上</strong></p><p>​        需要注意的是，Service能够将一个接收端口映射到任意的targetPort，如果targetPort为空，targetPort将被设置为与Port字段相同的值。targetPort可以设置为一个字符串，引用backendPod的一个端口的名称，这样的话即使更改了Pod的端口，也不会对service的访问造成影响。</p><p>​        <strong>Kubernetes Service 能够支持TCP,UDP,SCTP等协议，默认TCP协议</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看携带相同标签的Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -l app=nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/9.png" alt="image-20240623002713313"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 访问Service</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># curl 10.96.151.135</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/10.png" alt="image-20240623002843495"></p><p>​    <strong>在提供服务的Pod副本集运行过程中，如果Pod列表发生了变化，则Kubernetes的Service控制器会持续监控后端Pod列表的变化，实时更新Service对应的后端Pod列表。一个Service对应的<code>后端</code>由<code>Pod的IP和容器端口号</code>组成，即一个完整的<code>PodIP:ConrainerPort</code>访问地址，这在Kubernetes系统中叫作Endpoint。通过查看Service的详细信息，可以看到其后端Endpoint列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master <span class="built_in">test</span>]<span class="comment"># kubectl  describe svc webapp</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/11.png" alt="image-20240623003053059"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看当前命名空间下的endpoints</span></span><br><span class="line">[root@k8s-master <span class="built_in">test</span>]<span class="comment"># kubectl get endpoints</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/12.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看其他命名空间下的svc</span></span><br><span class="line">$ kubectl get svc -n kube-system</span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/13.png" alt="image-20240623003524545"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 访问其他命令空间下的svc（进入一个其他命名空间下的容器中访问）</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it nginx-6784b87845-7wbwx -- sh</span></span><br><span class="line">/ <span class="comment"># nslookup metrics-server.kube-system.svc.cluster.local</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/14.png" alt="image-20240623003639887"></p><h3 id="2、Service的负载均衡机制"><a href="#2、Service的负载均衡机制" class="headerlink" title="2、Service的负载均衡机制"></a><strong>2、Service的负载均衡机制</strong></h3><p>​        简介：当一个Service对象在Kubernetes集群中被定义出来时，集群内的客户端应用就可以通过服务IP访问到具体的Pod容器提供的服务了。从服务IP到后端Pod的负载均衡机制，则是由每个Node上的kube-proxy负责实现的。对kube-proxy的代理模式、会话保持机制和基于拓扑感知的服务路由机制（EndpointSlices）。</p><h4 id="2-1-kube-proxy的代理模式"><a href="#2-1-kube-proxy的代理模式" class="headerlink" title="2.1 kube-proxy的代理模式"></a><strong>2.1 kube-proxy的代理模式</strong></h4><p>​        目前kube-proxy提供了以下代理模式（通过启动参数–proxy-mode设置）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 二进制安装方式查看proxy-mode设置</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># vim /etc/kubernetes/kube-proxy.yaml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/15.png" alt="image-20240623004009244"></p><ul><li><strong>iptables模式</strong>：kube-proxy通过设置Linux Kernel的iptables规则， 实现从Service到后端Endpoint列表的负载分发规则，效率很高。但是， 如果某个后端Endpoint在转发时不可用，此次客户端请求就会得到失败的响应，此时应该通过为Pod设置 readinessprobe（服务可用性健康检查）来保证只有达到ready状态的Endpoint才会被设置为Service的后端Endpoint。</li><li><strong>ipvs模式</strong>：在Kubernetes 1.11版本中达到Stable阶段，kube-proxy通过设置Linux Kernel的netlink接口设置IPVS规则，转发效率和支持的吞吐率都是最高的。ipvs模式要求Linux Kernel启用IPVS模块，如果操作系统未启用IPVS内核模块，kube-proxy则会自动切换至iptables模式。同时，ipvs模式支持更多的负载均衡策略：<ul><li><strong>rr</strong>：round-robin，轮询。</li><li><strong>lc</strong>：least connection，最小连接数。</li><li><strong>dh</strong>：destination hashing，目的地址哈希。 </li><li><strong>sh</strong>：source hashing，源地址哈希。 </li><li><strong>sed</strong>：shortest expected delay，最短期望延时。</li><li><strong>nq</strong>：never queue，永不排队。</li></ul></li></ul><h3 id="3、-Service发布类型"><a href="#3、-Service发布类型" class="headerlink" title="3、 Service发布类型"></a>3、 Service发布类型</h3><ul><li><p><code>ClusterIP</code>：Kubernetes默认会自动设置Service的虚拟IP地址,仅可被集群内部的客户端应用访问。</p></li><li><p><code>NodePort</code>：在所有安装了Kube-Proxy的节点上打开一个端口，此端口可以代理至后端Pod，可以通过NodePort从集群外部访问集群内的服务。</p></li><li><p><code>LoadBalancer</code>：将Service映射到一个已存在的负载均衡器的IP地址上，通常在公有云环境中使用。</p></li><li><p><code>ExternalName</code>:将Service映射为一个外部域名地址，通过 externalName字段进行设置。</p></li></ul><p><strong>Service对集群之外暴露服务的主要方式有两种：<code>NodePort</code>和<code>LoadBalancer</code></strong></p><ul><li><code>NodePort</code>方式的缺点是会占用很多集群机器的端口，那么当集群服务变多的时候，这个缺点就愈发明显</li><li>LB方式的缺点是每个service需要一个LB，浪费、麻烦，并且需要kubernetes之外设备的支持</li></ul><h4 id="3-1-NodePort类型使用"><a href="#3-1-NodePort类型使用" class="headerlink" title="3.1 NodePort类型使用"></a><strong>3.1 NodePort类型使用</strong></h4><p>​    如果将Service的 type字段设置为NodePort，则Kubernetes将从<code>--service-node-port-range</code>参数指定的范围(默认为30000-32767)中自动分配端口，也可以手动指定NodePort，创建该Service后，集群每个节点都将暴露一个端口，通过某个宿主机的IP+端口即可访问到后端的应用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 二进制安装查看service的NodePort网段地址</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># grep "service-node-port-range" /usr/lib/systemd/system/kube-apiserver.service</span></span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 更改Service类型</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># vim nginx-svc.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: webapp</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx       <span class="comment"># pod的标签</span></span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP  <span class="comment"># 协议</span></span><br><span class="line">      port: 80       <span class="comment"># service的端口</span></span><br><span class="line">      targetPort: 80  <span class="comment"># pod的端口号（代理的后端服务对外暴露的端口号）</span></span><br><span class="line">      name: nginx</span><br><span class="line">  <span class="built_in">type</span>: NodePort <span class="comment"># svc发布类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更新svc</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl replace -f nginx-svc.yaml </span></span><br><span class="line">service/webapp replaced</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看svc资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get svc</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/16.png" alt="image-20240623133925243"></p><h4 id="3-2-ExternalName-Service"><a href="#3-2-ExternalName-Service" class="headerlink" title="3.2 ExternalName Service"></a>3.2 ExternalName Service</h4><p>​        ExternalName Service是Service的特例,它没有Selector，也没有定义任何端口和Endpoint,它通过返回该外部服务的别名来提供服务。比如可以定义一个Service，后端设置为一个外部域名，这样通过Service的名称即可访问到该域名。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">external-service.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">external-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ExternalName</span></span><br><span class="line">  <span class="attr">externalName:</span> <span class="string">www.baidu.com</span>  <span class="comment"># 外部服务的地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建service资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">external-service.yaml</span> </span><br><span class="line"><span class="string">service/external-service</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看service资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">svc</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/17.png" alt="image-20240623142413602"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 访问service (进入Pod中访问svc)</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it nginx-6784b87845-7wbwx   -- sh</span></span><br><span class="line">/ <span class="comment"># wget http://external-service</span></span><br><span class="line">Connecting to external-service (110.242.68.3:80)</span><br><span class="line">wget: server returned error: HTTP/1.1 403 Forbidden</span><br></pre></td></tr></table></figure><h4 id="3-3-Service代理Kubernetes集群之外的服务（重点）"><a href="#3-3-Service代理Kubernetes集群之外的服务（重点）" class="headerlink" title="3.3 Service代理Kubernetes集群之外的服务（重点）"></a>3.3 Service代理Kubernetes集群之外的服务（重点）</h4><p>​        普通的Service通过Label Selector对后端Endpoint列表进行了一次抽象，如果后端的Endpoint不是由Pod副本集提供的，则Service还可以抽象定义任意其他服务，<code>将一个Kubernetes集群外部的已知服务定义为Kubernetes内的一个Service</code>，供集群内的其他应用访问，常见的应用场景包括：</p><ul><li>希望在生产环境中使用外部的数据库集群，但测试环境使用自己的数据库。</li><li>已部署的一个集群外服务，例如数据库服务、缓存服务等。</li><li>你正在将工作负载迁移到 Kubernetes。在评估该方法时，你仅在 Kubernetes 中运行一部分后端。</li><li>迁移过程中对某个服务进行Kubernetes内的服务名访问机制的验证。</li></ul><p><strong>对于这种应用场景，用户在创建Service资源对象时不设置Label Selector（后端Pod也不存在），同时再定义一个与Service关联的Endpoint资源对象，在Endpoint中设置外部服务的IP地址和端口号</strong></p><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/18.png" alt="image-20240623140121396"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-svc-external.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-svc-external</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc-external</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span> <span class="comment"># Service端口名称</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span> <span class="comment"># Service端口</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span>  <span class="comment"># 代理后端应用的端口</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-svc-external</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-svc-external</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">addresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.174</span><span class="number">.30</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.174</span><span class="number">.31</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f nginx-svc-external.yaml</span></span><br><span class="line">service/nginx-svc-external created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看service</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  get svc</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/19.png" alt="image-20240623141046804"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看service详细信息</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl describe svc nginx-svc-external</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/20.png" alt="image-20240623141148220"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看endpoints详细信息</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl describe ep nginx-svc-external</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/21.png" alt="image-20240623141310073"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 测试访问svc</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># curl 10.96.151.135</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 进入同ns下任意一个Pod测试</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it nginx-6784b87845-7wbwx   -- sh </span></span><br><span class="line">/ <span class="comment"># curl 10.96.119.119</span></span><br></pre></td></tr></table></figure><h4 id="3-4-多端口Service"><a href="#3-4-多端口Service" class="headerlink" title="3.4 多端口Service"></a><strong>3.4 多端口Service</strong></h4><p>​            使用场景：某些服务对外暴露的端口不只有一个，所以此时需要用到多端口Service(rabbitmq,zookeeper)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 同一个端口号使用的协议不同，如TCP和UDP，也需要设置为多个端口号来提供不同的服务</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">kubernetes.io/name:</span> <span class="string">CoreDNS</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-dns</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dns</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">53</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">53</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dns-tcp</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">53</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">53</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metrics</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9153</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9153</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure><blockquote><p>如果使用相同的协议，名称不能一样</p></blockquote><h4 id="3-5-LoadBalancer类型（公有云使用）"><a href="#3-5-LoadBalancer类型（公有云使用）" class="headerlink" title="3.5 LoadBalancer类型（公有云使用）"></a>3.5 LoadBalancer类型（公有云使用）</h4><p>​                简介：通常在公有云环境中设置Service的类型为“LoadBalancer”，可以将 Service映射到公有云提供的某个负载均衡器的IP地址上，客户端通过负载均衡器的IP和Service的端口号就可以访问到具体的服务，无须再通过kube-proxy提供的负载均衡机制进行流量转发。公有云提供的LoadBalancer可以直接将流量转发到后端Pod上，而负载分发机制依赖于公有云服务商的具体实现。</p><h4 id="3-6-Service支持的网络协议"><a href="#3-6-Service支持的网络协议" class="headerlink" title="3.6 Service支持的网络协议"></a><strong>3.6 Service支持的网络协议</strong></h4><ul><li><strong>TCP</strong>：Service的默认网络协议，可用于所有类型的Service。</li><li><strong>UDP</strong>：可用于大多数类型的Service，LoadBalancer类型取决于云服务商对UDP的支持。</li><li><strong>HTTP</strong>：取决于云服务商是否支持HTTP和实现机制。</li><li><strong>PROXY</strong>：取决于云服务商是否支持HTTP和实现机制。</li><li><strong>SCTP</strong>：从Kubernetes 1.12版本引入，到1.19版本时达到Beta阶段，默认启用。</li></ul><h3 id="4、Headless-Service的概念和应用"><a href="#4、Headless-Service的概念和应用" class="headerlink" title="4、Headless Service的概念和应用"></a>4、Headless Service的概念和应用</h3><p>​        简介：在某些应用场景中，客户端应用不需要通过Kubernetes内置Service实现的负载均衡功能，或者需要自行完成对服务后端各实例的服务发现机制，或者需要自行实现负载均衡功能，此时可以通过创建一种特殊的名为“Headless”的服务来实现。<br>​        Headless Service的概念是这种服务没有入口访问地址（无ClusterIP 地址），kube-proxy不会为其创建负载转发规则，而服务名（DNS域名）的解析机制取决于该Headless Service是否设置了Label Selector。</p><h4 id="4-1-Headless-Service设置了Label-Selector"><a href="#4-1-Headless-Service设置了Label-Selector" class="headerlink" title="4.1 Headless Service设置了Label Selector"></a>4.1 Headless Service设置了Label Selector</h4><p>​            如果Headless Service设置了Label Selector，Kubernetes则将根据 Label Selector查询后端Pod列表，自动创建Endpoint列表，将服务名（DNS域名）的解析机制设置为：<code>当客户端访问该服务名时，得到的是全部Endpoint列表</code>（而不是一个确定的IP地址）。</p><p>​            以下面的Headless Service为例，其设置了Label Selector：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-headless.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">10m</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Headless Service</span></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">test]#</span> <span class="string">kubectl</span>  <span class="string">apply</span> <span class="string">-f</span> <span class="string">nginx-headless.yaml</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看svc</span></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">test]#</span> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">svc</span></span><br><span class="line"><span class="string">NAME</span>         <span class="string">TYPE</span>        <span class="string">CLUSTER-IP</span>       <span class="string">EXTERNAL-IP</span>   <span class="string">PORT(S)</span>   <span class="string">AGE</span></span><br><span class="line"><span class="string">kubernetes</span>   <span class="string">ClusterIP</span>   <span class="number">10.96</span><span class="number">.0</span><span class="number">.1</span>        <span class="string">&lt;none&gt;</span>        <span class="number">443</span><span class="string">/TCP</span>   <span class="string">9d</span></span><br><span class="line"><span class="string">nginx</span>        <span class="string">ClusterIP</span>   <span class="string">None</span>             <span class="string">&lt;none&gt;</span>        <span class="number">80</span><span class="string">/TCP</span>    <span class="string">85s</span></span><br><span class="line"><span class="string">webapp</span>       <span class="string">ClusterIP</span>   <span class="number">10.106</span><span class="number">.192</span><span class="number">.111</span>   <span class="string">&lt;none&gt;</span>        <span class="number">80</span><span class="string">/TCP</span>    <span class="string">4h36m</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看endpoints</span></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">test]#</span> <span class="string">kubectl</span>  <span class="string">get</span> <span class="string">endpoints</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/22.png" alt="image-20240626110138161"></p><p>==注意：在解析service的时候，应在容器中解析，因为宿主机的DNS和集群内部属于隔离的，在宿主机的命令行中无法解析成功==</p><h3 id="5、Ingress：-ingress控制器没有ns隔离性，Ingress有ns隔离性"><a href="#5、Ingress：-ingress控制器没有ns隔离性，Ingress有ns隔离性" class="headerlink" title="5、Ingress：(ingress控制器没有ns隔离性，Ingress有ns隔离性)"></a><strong>5、Ingress：(ingress控制器没有ns隔离性，Ingress有ns隔离性)</strong></h3><h4 id="5-1-前言"><a href="#5-1-前言" class="headerlink" title="5.1 前言"></a>5.1 前言</h4><p>​    根据前面对Service概念的说明，我们知道Service的表现形式为IP地址和端口号（ClusterIP:Port），即工作在TCP/IP层。而对于基于HTTP 的服务来说，不同的URL地址经常对应到不同的后端服务或者虚拟服务器（Virtual Host），这些应用层的转发机制仅通过Kubernetes的Service机制是无法实现的。</p><p>​    Kubernetes从1.1版本开始引入Ingress资源对象，用于将Kubernetes集群外的客户端请求路由到集群内部的服务上，同时提供7层（HTTP和HTTPS）路由功能。Ingress在Kubernetes 1.19版本时达到v1稳定版本。 Kubernetes使用了一个Ingress策略定义和一个具体提供转发服务的Ingress Controller，两者结合，实现了基于灵活Ingress策略定义的服务路由功能。如果是对Kubernetes集群外部的客户端提供服务，那么Ingress Controller实现的是类似于边缘路由器的功能。需要注意的是，Ingress只能以HTTP和HTTPS提供服务，对于使用其他网络协议的服务，可以通过设置Service的类型（type）为NodePort或LoadBalancer 对集群外部的客户端提供服务。 <code>使用Ingress进行服务路由时，Ingress Controller基于Ingress规则将客户端请求直接转发到Service对应的后端Endpoint（Pod）上，这样会跳过kube-proxy设置的路由转发规则，以提高网络转发效率。</code><br>​    Ingress为Kubernetes集群中的服务提供了入口，可以提供负载均衡、SSL终止和基于名称的虚拟主机，应用的灰度发布等功能；在生产环境中常用的Ingress有Nginx、HAProxy、Istio等。<a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#ingress-v1beta1-networking-k8s-io" target="_blank" rel="noopener">Ingress</a> 公开从集群外部到集群内<a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/" target="_blank" rel="noopener">服务</a>的 HTTP 和 HTTPS 路由。 流量路由由 Ingress 资源上定义的规则控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">upstream api &#123;</span><br><span class="line">server 192.168.1.1;</span><br><span class="line">server 192.168.1.2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen  80;</span><br><span class="line">  server_name www.kengni.com;</span><br><span class="line">  location /api &#123;</span><br><span class="line">  proxy_pass http://api;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/23.png" alt="image-20240623144722857"></p><ul><li>对<a href="http://mywebsite.com/api的访问将被路由到后端名为api的Service上；" target="_blank" rel="noopener">http://mywebsite.com/api的访问将被路由到后端名为api的Service上；</a></li><li>对<a href="http://mywebsite.com/web的访问将被路由到后端名为web的Service上；" target="_blank" rel="noopener">http://mywebsite.com/web的访问将被路由到后端名为web的Service上；</a></li><li>对<a href="http://mywebsite.com/docs的访问将被路由到后端名为doc的Service上。" target="_blank" rel="noopener">http://mywebsite.com/docs的访问将被路由到后端名为doc的Service上。</a></li></ul><h4 id="5-2-创建Ingress-Controller"><a href="#5-2-创建Ingress-Controller" class="headerlink" title="5.2 创建Ingress Controller"></a>5.2 创建Ingress Controller</h4><p>​    官网链接：<a href="https://kubernetes.github.io/ingress-nginx/deploy/" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/deploy/</a></p><p>​    简介：Ingress Controller需要<strong>实现基于不同HTTP URL向后转发的负载分发规则，并可以灵活设置7层负载分发策略</strong>。目前Ingress Controller已经有许多实现方案，包括Nginx、HAProxy、Kong、Traefik、Istio 等开源软件的实现，以及公有云GCE、Azure、AWS等提供的Ingress应用网关，在Kubernetes中，Ingress Controller会持续监控API Server的/ingress 接口（即用户定义的到后端服务的转发规则）的变化。当/ingress接口后端的服务信息发生变化时，Ingress Controller会自动更新其转发规则。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># cat nginx-ingress.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">automountServiceAccountToken: <span class="literal">true</span></span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - namespaces</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  - pods</span><br><span class="line">  - secrets</span><br><span class="line">  - endpoints</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - services</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses/status</span><br><span class="line">  verbs:</span><br><span class="line">  - update</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingressclasses</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - coordination.k8s.io</span><br><span class="line">  resourceNames:</span><br><span class="line">  - ingress-nginx-leader</span><br><span class="line">  resources:</span><br><span class="line">  - leases</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - update</span><br><span class="line">- apiGroups:</span><br><span class="line">  - coordination.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - leases</span><br><span class="line">  verbs:</span><br><span class="line">  - create</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - events</span><br><span class="line">  verbs:</span><br><span class="line">  - create</span><br><span class="line">  - patch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - discovery.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - endpointslices</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">  - get</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - secrets</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - create</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  - endpoints</span><br><span class="line">  - nodes</span><br><span class="line">  - pods</span><br><span class="line">  - secrets</span><br><span class="line">  - namespaces</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - coordination.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - leases</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - services</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - events</span><br><span class="line">  verbs:</span><br><span class="line">  - create</span><br><span class="line">  - patch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses/status</span><br><span class="line">  verbs:</span><br><span class="line">  - update</span><br><span class="line">- apiGroups:</span><br><span class="line">  - networking.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - ingressclasses</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - discovery.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - endpointslices</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">  - get</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - admissionregistration.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - validatingwebhookconfigurations</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - update</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: ingress-nginx</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  allow-snippet-annotations: <span class="string">"true"</span></span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-controller</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-controller</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment"># externalTrafficPolicy: Local</span></span><br><span class="line">  ipFamilies:</span><br><span class="line">  - IPv4</span><br><span class="line">  ipFamilyPolicy: SingleStack</span><br><span class="line">  ports:</span><br><span class="line">  - appProtocol: http</span><br><span class="line">    name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: http</span><br><span class="line">  - appProtocol: https</span><br><span class="line">    name: https</span><br><span class="line">    port: 443</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: https</span><br><span class="line">  selector:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-controller-admission</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - appProtocol: https</span><br><span class="line">    name: https-webhook</span><br><span class="line">    port: 443</span><br><span class="line">    targetPort: webhook</span><br><span class="line">  selector:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-controller</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">spec:</span><br><span class="line">  minReadySeconds: 0</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app.kubernetes.io/component: controller</span><br><span class="line">      app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">      app.kubernetes.io/name: ingress-nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app.kubernetes.io/component: controller</span><br><span class="line">        app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">        app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - /nginx-ingress-controller</span><br><span class="line">        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller</span><br><span class="line">        - --election-id=ingress-nginx-leader</span><br><span class="line">        - --controller-class=k8s.io/ingress-nginx</span><br><span class="line">        - --ingress-class=nginx</span><br><span class="line">        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span><br><span class="line">        - --validating-webhook=:8443</span><br><span class="line">        - --validating-webhook-certificate=/usr/<span class="built_in">local</span>/certificates/cert</span><br><span class="line">        - --validating-webhook-key=/usr/<span class="built_in">local</span>/certificates/key</span><br><span class="line">        env:</span><br><span class="line">        - name: POD_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.name</span><br><span class="line">        - name: POD_NAMESPACE</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.namespace</span><br><span class="line">        - name: LD_PRELOAD</span><br><span class="line">          value: /usr/<span class="built_in">local</span>/lib/libmimalloc.so</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx-ingress-controller:v1.6.4</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        lifecycle:</span><br><span class="line">          preStop:</span><br><span class="line">            <span class="built_in">exec</span>:</span><br><span class="line">              <span class="built_in">command</span>:</span><br><span class="line">              - /<span class="built_in">wait</span>-shutdown</span><br><span class="line">        livenessProbe:</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /healthz</span><br><span class="line">            port: 10254</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          timeoutSeconds: 1</span><br><span class="line">        name: controller</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          name: http</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 443</span><br><span class="line">          name: https</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 8443</span><br><span class="line">          name: webhook</span><br><span class="line">          protocol: TCP</span><br><span class="line">        readinessProbe:</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /healthz</span><br><span class="line">            port: 10254</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          timeoutSeconds: 1</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 90Mi</span><br><span class="line">        securityContext:</span><br><span class="line">          allowPrivilegeEscalation: <span class="literal">true</span></span><br><span class="line">          capabilities:</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">          runAsUser: 101</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /usr/<span class="built_in">local</span>/certificates/</span><br><span class="line">          name: webhook-cert</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">      dnsPolicy: ClusterFirst</span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/os: linux</span><br><span class="line">      serviceAccountName: ingress-nginx</span><br><span class="line">      terminationGracePeriodSeconds: 300</span><br><span class="line">      volumes:</span><br><span class="line">      - name: webhook-cert</span><br><span class="line">        secret:</span><br><span class="line">          secretName: ingress-nginx-admission</span><br><span class="line">---</span><br><span class="line">apiVersion: batch/v1</span><br><span class="line">kind: Job</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission-create</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app.kubernetes.io/component: admission-webhook</span><br><span class="line">        app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">        app.kubernetes.io/name: ingress-nginx</span><br><span class="line">        app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">        app.kubernetes.io/version: 1.6.4</span><br><span class="line">      name: ingress-nginx-admission-create</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - create</span><br><span class="line">        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc</span><br><span class="line">        - --namespace=$(POD_NAMESPACE)</span><br><span class="line">        - --secret-name=ingress-nginx-admission</span><br><span class="line">        env:</span><br><span class="line">        - name: POD_NAMESPACE</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.namespace</span><br><span class="line">        image: registry.cn-beijing.aliyuncs.com/dotbalo/kube-webhook-certgen:v20220916-gd32f8c343</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: create</span><br><span class="line">        securityContext:</span><br><span class="line">          allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/os: linux</span><br><span class="line">      restartPolicy: OnFailure</span><br><span class="line">      securityContext:</span><br><span class="line">        fsGroup: 2000</span><br><span class="line">        runAsNonRoot: <span class="literal">true</span></span><br><span class="line">        runAsUser: 2000</span><br><span class="line">      serviceAccountName: ingress-nginx-admission</span><br><span class="line">---</span><br><span class="line">apiVersion: batch/v1</span><br><span class="line">kind: Job</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission-patch</span><br><span class="line">  namespace: ingress-nginx</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app.kubernetes.io/component: admission-webhook</span><br><span class="line">        app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">        app.kubernetes.io/name: ingress-nginx</span><br><span class="line">        app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">        app.kubernetes.io/version: 1.6.4</span><br><span class="line">      name: ingress-nginx-admission-patch</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - patch</span><br><span class="line">        - --webhook-name=ingress-nginx-admission</span><br><span class="line">        - --namespace=$(POD_NAMESPACE)</span><br><span class="line">        - --patch-mutating=<span class="literal">false</span></span><br><span class="line">        - --secret-name=ingress-nginx-admission</span><br><span class="line">        - --patch-failure-policy=Fail</span><br><span class="line">        env:</span><br><span class="line">        - name: POD_NAMESPACE</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.namespace</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/hujiaming/kube-webhook-certgen:v20220916-gd32f8c343</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: patch</span><br><span class="line">        securityContext:</span><br><span class="line">          allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/os: linux</span><br><span class="line">      restartPolicy: OnFailure</span><br><span class="line">      securityContext:</span><br><span class="line">        fsGroup: 2000</span><br><span class="line">        runAsNonRoot: <span class="literal">true</span></span><br><span class="line">        runAsUser: 2000</span><br><span class="line">      serviceAccountName: ingress-nginx-admission</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: IngressClass</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: controller</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  controller: k8s.io/ingress-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: admissionregistration.k8s.io/v1</span><br><span class="line">kind: ValidatingWebhookConfiguration</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io/component: admission-webhook</span><br><span class="line">    app.kubernetes.io/instance: ingress-nginx</span><br><span class="line">    app.kubernetes.io/name: ingress-nginx</span><br><span class="line">    app.kubernetes.io/part-of: ingress-nginx</span><br><span class="line">    app.kubernetes.io/version: 1.6.4</span><br><span class="line">  name: ingress-nginx-admission</span><br><span class="line">webhooks:</span><br><span class="line">- admissionReviewVersions:</span><br><span class="line">  - v1</span><br><span class="line">  clientConfig:</span><br><span class="line">    service:</span><br><span class="line">      name: ingress-nginx-controller-admission</span><br><span class="line">      namespace: ingress-nginx</span><br><span class="line">      path: /networking/v1/ingresses</span><br><span class="line">  failurePolicy: Fail</span><br><span class="line">  matchPolicy: Equivalent</span><br><span class="line">  name: validate.nginx.ingress.kubernetes.io</span><br><span class="line">  rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">    - networking.k8s.io</span><br><span class="line">    apiVersions:</span><br><span class="line">    - v1</span><br><span class="line">    operations:</span><br><span class="line">    - CREATE</span><br><span class="line">    - UPDATE</span><br><span class="line">    resources:</span><br><span class="line">    - ingresses</span><br><span class="line">  sideEffects: None</span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f nginx-ingress.yaml </span></span><br><span class="line">namespace/ingress-nginx created</span><br><span class="line">serviceaccount/ingress-nginx created</span><br><span class="line">serviceaccount/ingress-nginx-admission created</span><br><span class="line">role.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">role.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">configmap/ingress-nginx-controller created</span><br><span class="line">service/ingress-nginx-controller created</span><br><span class="line">service/ingress-nginx-controller-admission created</span><br><span class="line">deployment.apps/ingress-nginx-controller created</span><br><span class="line">job.batch/ingress-nginx-admission-create created</span><br><span class="line">job.batch/ingress-nginx-admission-patch created</span><br><span class="line">ingressclass.networking.k8s.io/nginx created</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Ingress-container的Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -n ingress-nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/24.png" alt="image-20240623212749607"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ingress-nginx-controller的svc</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get svc -n ingress-nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/25.png" alt="image-20240623212637439"></p><p><strong>测试访问ingress-nginx的svc</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># curl 10.96.158.32</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="5-3-域名发布服务"><a href="#5-3-域名发布服务" class="headerlink" title="5.3 域名发布服务"></a>5.3 域名发布服务</h4><h5 id="5-3-1-创建web服务"><a href="#5-3-1-创建web服务" class="headerlink" title="5.3.1 创建web服务"></a>5.3.1 创建web服务</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-deploy.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span>  </span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">webapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span>       <span class="comment"># pod的标签</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span>  <span class="comment"># 协议</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span>       <span class="comment"># service的端口</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span>  <span class="comment"># pod的端口号（代理的后端服务对外暴露的端口号）</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span>     <span class="comment"># deploy的标签</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">5</span>      <span class="comment"># 副本数</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span>   <span class="comment"># pod的标签</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span>  <span class="comment"># pod的标签</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-deploy.yaml</span> </span><br><span class="line"><span class="string">deployment.apps/nginx</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看svc</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">svc</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/26.png" alt="image-20240623191535233"></p><h5 id="5-3-2-创建Ingress"><a href="#5-3-2-创建Ingress" class="headerlink" title="5.3.2 创建Ingress"></a>5.3.2 创建Ingress</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">vim</span> <span class="string">nginx-ingress-file.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span>  <span class="comment"># Ingress资源的API版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span> </span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress</span>  <span class="comment"># Ingress 名称</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span>   <span class="comment"># 指定IngressController的类型（haproxy等）</span></span><br><span class="line">  <span class="attr">rules:</span>    <span class="comment">#  路由转发规则，可以写多个</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">ingress.tanke.love</span>  <span class="comment"># Ingress 规则应用的域名</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">webapp</span>   <span class="comment"># service名称</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span> <span class="comment">#路由的匹配方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建资源</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-ingress-file.yaml</span></span><br><span class="line"><span class="string">ingress.networking.k8s.io/nginx-ingress</span> <span class="string">created</span></span><br></pre></td></tr></table></figure><h5 id="5-3-3-路由的匹配方式"><a href="#5-3-3-路由的匹配方式" class="headerlink" title="5.3.3 路由的匹配方式"></a>5.3.3 路由的匹配方式</h5><p>​    Ingress中的每个路径都需要有对应的路径类型（Path Type）。未明确设置 <code>pathType</code> 的路径无法通过合法性检查。当前支持的路径类型有三种：</p><ul><li><p><strong><code>ImplementationSpecific</code></strong>：该类型行为取决于所使用的Ingress Controller。大多数情况下，它等同于前缀匹配。</p><ul><li><pre><code class="bash">apiVersion: networking.k8s.io/v1kind: Ingressmetadata:  name: implementation-specific-ingressspec:  rules:  - host: <span class="string">"example.com"</span>    http:      paths:      - path: /foo/[a-z]+        pathType: ImplementationSpecific        backend:          service:            name: foo-service            port:              number: 80<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    &gt; 在这个例子中，假设所用的Ingress Controller支持正则表达式匹配，那么路径如&#96;&#x2F;foo&#x2F;bar&#96;（但不是&#96;&#x2F;foo&#x2F;123&#96;）会被路由到&#96;foo-service&#96;服务。</span><br><span class="line"></span><br><span class="line">- **&#96;Exact&#96;**：精确匹配要求请求路径与指定的路径完全相同。</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;bash</span><br><span class="line">    apiVersion: networking.k8s.io&#x2F;v1</span><br><span class="line">    kind: Ingress</span><br><span class="line">    metadata:</span><br><span class="line">      name: exact-ingress</span><br><span class="line">    spec:</span><br><span class="line">      rules:</span><br><span class="line">      - host: &quot;example.com&quot;</span><br><span class="line">        http:</span><br><span class="line">          paths:</span><br><span class="line">          - path: &#x2F;foo</span><br><span class="line">            pathType: Exact</span><br><span class="line">            backend:</span><br><span class="line">              service:</span><br><span class="line">                name: foo-service</span><br><span class="line">                port:</span><br><span class="line">                  number: 80</span><br></pre></td></tr></table></figure></code></pre></li></ul><blockquote><p>在这个例子中，只有路径严格等于<code>/foo</code>的请求会被路由到<code>foo-service</code>服务，路径如<code>/foo/bar</code>不会匹配。</p></blockquote></li></ul><ul><li><p><strong><code>Prefix</code></strong>：前缀匹配是最常见的路径匹配方式，前缀匹配表示请求路径以指定的前缀开始。</p><ul><li><pre><code class="bash">apiVersion: networking.k8s.io/v1kind: Ingressmetadata:  name: prefix-ingressspec:  rules:  - host: <span class="string">"example.com"</span>    http:      paths:      - path: /foo/fsfgas        pathType: Prefix        backend:          service:            name: foo-service            port:              number: 80<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">  &gt; 在这个例子中，所有以&#96;&#x2F;foo&#96;开头的请求（如&#96;&#x2F;foo&#96;、&#96;&#x2F;foo&#x2F;bar&#96;、&#96;&#x2F;foo&#x2F;bar&#x2F;baz&#96;）都会被路由到&#96;foo-service&#96;服务。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line">#&gt;&gt;&gt; 查看Ingress</span><br><span class="line">[root@k8s-master01 ~]# kubectl get ingress</span><br><span class="line">NAME            CLASS   HOSTS                ADDRESS         PORTS   AGE</span><br><span class="line">nginx-ingress   nginx   ingress.tanke.love   10.96.110.188   80      55s</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 查看Ingressclass</span><br><span class="line">[root@k8s-master01 ~]# kubectl get ingressclass</span><br><span class="line">NAME    CONTROLLER             PARAMETERS   AGE</span><br><span class="line">nginx   k8s.io&#x2F;ingress-nginx   &lt;none&gt;       39m</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 查看nginx-ingress svc</span><br><span class="line">[root@k8s-master01 ~]# kubectl get svc -n ingress-nginx</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/27.png" alt="image-20240623212637439"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># curl ingress.tanke.love:30999</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Tue, 20 Dec 2022 08:13:34 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Last-Modified: Sat, 11 May 2019 00:35:53 GMT</span><br><span class="line">ETag: <span class="string">"5cd618e9-264"</span></span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure><p>​    <strong>一旦Ingress资源成功创建，Ingress Controller就会监控到其配置的路由策略，并更新到Nginx的配置文件中生效。以本例中的Nginx Controller为例，它将更新其配置文件的内容为在Ingress中设定的路由策略。登录一个nginx-ingress-controller Pod，在/etc/nginx/nginx.conf可以看到对<code>ingress.tanke.love</code>的转发规则的正确配置</strong>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 进入ingress容器中</span></span><br><span class="line">[root@k8s-master ingress]<span class="comment"># kubectl  get po -n ingress-nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/28.png" alt="image-20240623213742460"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl exec -it ingress-nginx-controller-8556b74844-s9fwk -n ingress-nginx  -- bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看nginx-ingress-controller配置文件</span></span><br><span class="line">ingress-nginx-controller-8556b74844-s9fwk:/etc/nginx$ grep -A 20 <span class="string">"ingress.tanke.love"</span> nginx.conf</span><br></pre></td></tr></table></figure><p><img src="/2024/09/17/kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/04-kubernetes%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B8%83/29.png" alt="image-20240623213943935"></p><h5 id="5-3-4-不配置域名发布服务-了解"><a href="#5-3-4-不配置域名发布服务-了解" class="headerlink" title="5.3.4  不配置域名发布服务(了解)"></a>5.3.4  不配置域名发布服务(了解)</h5><p>​    在Kubernetes Ingress中，通常需要配置域名（Host）来指定外部请求的路由目标，但在某些情况下，您可能不想或不需要配置域名。您可以通过配置一个没有域名的Ingress资源来发布服务，这样所有请求都会匹配该Ingress规则，不论其Host头部是什么。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim no-host.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: no-host-ingress  <span class="comment">#Ingress名称</span></span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  rules:</span><br><span class="line">  - http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          service:</span><br><span class="line">            name: webapp</span><br><span class="line">            port:</span><br><span class="line">              number: 80</span><br><span class="line">        path: /no-host</span><br><span class="line">        pathType: prefix</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建ingress资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl create -f no-host.yaml</span></span><br><span class="line">ingress.networking.k8s.io/no-host created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ingress资源</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get ingress</span></span><br><span class="line">执行结果：</span><br><span class="line">NAME            CLASS   HOSTS            ADDRESS        PORTS   AGE</span><br><span class="line">    nginx-ingress   nginx   nginx.test.com   10.96.121.23   80      109m</span><br><span class="line">    no-host         nginx   *                10.96.121.23   80      115s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ingress container Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -n ingress-nginx</span></span><br><span class="line">执行结果：</span><br><span class="line">NAME                                        READY   STATUS      RESTARTS   AGE</span><br><span class="line">ingress-nginx-admission-create-dl2rg        0/1     Completed   0          51m</span><br><span class="line">ingress-nginx-admission-patch-svpd4         0/1     Completed   1          51m</span><br><span class="line">ingress-nginx-controller-84c544699d-bb9xm   1/1     Running     0          51m</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试访问</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># curl -I 172.16.32.180/no-host</span></span><br><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">Date: Tue, 20 Dec 2022 08:59:16 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 154</span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes基础资源调度</title>
    <link href="https://l66stbz.github.io/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/"/>
    <id>https://l66stbz.github.io/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/</id>
    <published>2024-09-16T13:50:00.000Z</published>
    <updated>2024-09-26T13:00:26.067Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1、无状态应用（文件共享存储）"><a href="#1、无状态应用（文件共享存储）" class="headerlink" title="1、无状态应用（文件共享存储）"></a>1、无状态应用（文件共享存储）</h3><p>​    无状态应用指的是那些<strong>不需要持久存储</strong>数据、请求之间<strong>没有上下文关联</strong>的应用。每个请求都是独立的，应用的所有实例都可以处理任意请求，无需依赖其他实例或持久化存储的数据。</p><ul><li><strong>无需持久化存储</strong>：应用运行时不依赖磁盘上的数据存储，即使应用实例重启或迁移到另一个节点，也不会影响其正常运行。</li><li><strong>实例间无依赖</strong>：应用的不同实例之间没有状态依赖，它们是完全独立的，任何实例可以处理用户的请求。</li><li><strong>水平扩展简单</strong>：无状态应用非常适合水平扩展，多个实例可以随时被创建、销毁，Kubernetes 可以轻松进行自动扩缩容。</li></ul><h3 id="2、有状态服务（块存储）"><a href="#2、有状态服务（块存储）" class="headerlink" title="2、有状态服务（块存储）"></a>2、有状态服务（块存储）</h3><p>​    状态应用是那些<strong>需要持久化存储</strong>数据并且实例之间存在<strong>状态依赖</strong>的应用。它们的请求与先前的请求有关联，应用实例通常需要记住某些数据，即使在实例重启、重新调度或迁移时，数据仍需保持不变。</p><ul><li><strong>需要持久化存储</strong>：有状态应用需要某种形式的持久化存储，比如数据库，确保实例重启时数据不丢失。</li><li><strong>实例间存在状态依赖</strong>：有些有状态应用的实例不能随意替换，因为每个实例可能存储了特定的数据，或依赖某些特定的存储卷。</li><li><strong>有序部署和终止</strong>：有状态应用通常要求实例的创建、删除是有顺序的，因为实例的状态需要依赖之前的状态。Kubernetes 需要保证这些应用实例按照顺序进行部署或关闭。</li></ul><h3 id="3、ReplicaSet（简称RS）"><a href="#3、ReplicaSet（简称RS）" class="headerlink" title="3、ReplicaSet（简称RS）"></a>3、ReplicaSet（简称RS）</h3><p>​    <strong>用来确保指定数量的Pod副本始终在集群中运行的资源对象。</strong>ReplicaSet是Kubernetes中一个较低层次的控制器，是Deployment等更高层次控制器的基础。<strong>ReplicaSet的主要作用是确保在任何时间点，始终有指定数量的Pod副本在集群中运行。ReplicaSet会自动创建和删除Pod，以达到和维持所需的Pod副本数量。</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">rs-nginx.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-replicaset</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span>  <span class="comment"># 定义3个副本</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span>  <span class="comment"># 选择器匹配标签</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span>  <span class="comment"># Pod 模板的标签</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span>  <span class="comment"># 使用 Nginx 镜像</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 创建资源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl  apply -f rs-nginx.yaml </span></span><br><span class="line">replicaset.apps/nginx-replicaset created</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看RS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get rs</span></span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-replicaset   3         3         0       6s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看指定标签的Pod</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get po  -l app=nginx</span></span><br><span class="line">NAME                     READY   STATUS        RESTARTS   AGE</span><br><span class="line">nginx-replicaset-6m2cq   1/1     Running       0          25s</span><br><span class="line">nginx-replicaset-pg9jf   1/1     Running       0          25s</span><br><span class="line">nginx-replicaset-rvw6b   1/1     Running       0          25s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 扩充RS副本数</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl scale rs nginx-replicaset  --replicas=5</span></span><br><span class="line">replicaset.apps/nginx-replicaset scaled</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看RS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get rs</span></span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-replicaset   5         5         5       4m2s</span><br></pre></td></tr></table></figure><h2 id="1、Deployment：无状态资源管理"><a href="#1、Deployment：无状态资源管理" class="headerlink" title="1、Deployment：无状态资源管理"></a>1、Deployment：无状态资源管理</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/2.png" alt="image-20240916152152851"></p><p>​    <strong>Deployment</strong> 是一种用于管理和部署容器化应用程序的资源。它提供了一种声明式的方法来管理应用程序的副本，支持<strong>滚动更新</strong>、<strong>回滚</strong>、<strong>扩展</strong>和<strong>自动修复</strong>等功能。</p><p>​    一般用于部署公司的<strong>无状态服务</strong>，也是最常用的控制器，企业内部现在以微服务为主，而<strong>微服务实现无状态化也是最佳实践</strong>，可以利用<strong>Deployment</strong>的高级功能做到无缝迁移、自动扩容缩容、自动灾难恢复、一键回滚等功能。通过定义<strong>Deployment</strong>，你可以描述应用的期望状态，Kubernetes会负责将实际状态调整为期望状态。</p><h3 id="1-2-Deployment部署方式"><a href="#1-2-Deployment部署方式" class="headerlink" title="1.2 Deployment部署方式:"></a>1.2 Deployment部署方式:</h3><p>​      首先在控制端定义了一个3副本的kind为<strong>Deployment</strong>的yaml文件时，在执行kubectl create 是会提交给apiserver；然后持久化实例到etcd，在yaml中指定的命名空间下，可以看到有个nginx Deployment资源，然后会先创建一个名为nginx-xxx（随机字符串）的RS复制集，然后由复制集会选出最优节点部署Pod（有可能一台节点，有可能多台节点；没有固定的节点）。</p><ol><li><p>kubectl向apiserver发送创建请求；</p></li><li><p>apiserver将 Deployment 持久化到etcd，etcd与apiserver进行一次http通信。</p></li><li><p>controller manager通过watch api监听 apiserver ，deployment controller看到了一个新创建的deplayment对象更后，将其从队列中拉出，根据deployment的描述创建一个ReplicaSet并将 ReplicaSet 对象返回apiserver并持久化回etcd。以此类推，当replicaset控制器看到新创建的replicaset对象，将其从队列中拉出，根据描述创建pod对象。</p></li><li><p>接着scheduler调度器看到未调度的pod对象，根据调度规则选择一个可调度的节点，加载到pod描述中nodeName字段，并将pod对象返回apiserver并写入etcd。kubelet在看到有pod对象中nodeName字段属于本节点，将其从队列中拉出，通过控制容器运行时创建pod中描述的容器。</p></li></ol><p><strong>创建一个Deployment的yaml文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create \</span><br><span class="line">    deploy nginx \</span><br><span class="line">    --image=registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine \</span><br><span class="line">    --replicas=3 \</span><br><span class="line">    -oyaml \</span><br><span class="line">    --dry-run=client &gt; nginx-deploy.yaml</span><br></pre></td></tr></table></figure><blockquote><p>参数解释：<br>        <code>--replicas=3</code>   Pod的副本数为3。<br>        <code>--dry-run=client</code>    输出给apiserver但不创建Pod。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">$ vim nginx-deploy.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1   <span class="comment"># 资源的 API 版本</span></span><br><span class="line">kind: Deployment      <span class="comment"># 资源的类型</span></span><br><span class="line">metadata:    <span class="comment"># 资源的元数据信息</span></span><br><span class="line">  name: nginx-deployment  <span class="comment"># 资源的名称</span></span><br><span class="line">  labels:    <span class="comment"># 资源的标签，为这个Deployment资源打上标签，以便将来选择和过滤。</span></span><br><span class="line">    app: nginx</span><br><span class="line">spec:  <span class="comment"># 定义Deployment的详细规格</span></span><br><span class="line">  replicas: 3  <span class="comment"># 定义Pod的副本</span></span><br><span class="line">  selector:   <span class="comment"># 标签选择器，</span></span><br><span class="line">    matchLabels:  <span class="comment"># 只有带有指定标签的Pod才会被这个Deployment管理。</span></span><br><span class="line">      app: nginx  <span class="comment"># 指定需要管理的Pod的标签</span></span><br><span class="line">  template:    <span class="comment"># 定义 Pod 模板，用于创建 Pod。</span></span><br><span class="line">    metadata:  <span class="comment"># Pod元数据</span></span><br><span class="line">      labels:  <span class="comment"># 定义Pod的标签，以供deploy的selector选择，输入该deploy管理</span></span><br><span class="line">        app: nginx  <span class="comment"># Pod的标签</span></span><br><span class="line">    spec:  <span class="comment"># 定义Pod规格，包括容器配置。</span></span><br><span class="line">      containers:  <span class="comment"># 定义容器列表</span></span><br><span class="line">      - name: nginx  <span class="comment"># Pod名称</span></span><br><span class="line">        image: registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine  <span class="comment"># 容器镜像</span></span><br><span class="line">        ports:  <span class="comment"># 指定容器端口</span></span><br><span class="line">        - containerPort: 80 <span class="comment"># 容器的端口</span></span><br><span class="line">--------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建deploy资源</span></span><br><span class="line">$ kubectl create -f nginx-deploy.yaml</span><br><span class="line">deployment.apps/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ReplicaSet资源</span></span><br><span class="line">$ kubectl get rs</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/3.png" alt="image-20240619224610590"></p><blockquote><p>提示：<br>        <code>NAME</code> ：RS名称<br>        <code>DESIRED</code>：期望的 Pod 副本数。<br>        <code>CURRENT</code>：当前实际的 Pod 副本数<br>        <code>READY</code>：就绪的 Pod 副本数。<br>        <code>AGE</code>：存在时长</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建deploy的pod</span></span><br><span class="line">$ kubectl  get po -owide</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/4.png" alt="image-20240619224858434"></p><blockquote><p>提示：<br>        <strong>可以看到pod的前缀和RS的前缀一致。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看deploy资源</span></span><br><span class="line">$ kubectl get deploy -owide</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/5.png" alt="image-20240619225325942"></p><blockquote><p><code>NAME</code>： Deployment名称<br><code>READY</code>：Pod的状态，已经Ready的个数<br><code>UP-TO-DAT</code>E：已经达到期望状态的被更新的副本数<br><code>AVAILABLE</code>：已经可以用的副本数<br><code>AGE</code>：显示应用程序运行的时间<br><code>CONTAINERS</code>：容器名称<br><code>IMAGES</code>：容器的镜像<br><code>SELECTOR</code>：管理的Pod的标签</p></blockquote><p><strong>测试删除某个Pod</strong></p><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/6.png" alt="image-20240619231712261"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 删除某个Pod</span></span><br><span class="line">$ kubectl delete po nginx-deployment-7bcc989f8f-97gsf  </span><br><span class="line">pod <span class="string">"nginx-deployment-7bcc989f8f-97gsf"</span> deleted</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 再次查看Pod</span></span><br><span class="line">$ kubectl get po</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/7.png" alt="image-20240619231915103"></p><blockquote><p>解释：<br>    <strong>自愈机制。期望状态 vs 当前状态</strong>：</p><p>Deployment 会创建一个 ReplicaSet 来管理 Pod 副本。ReplicaSet 持续监控当前实际的 Pod 副本数量与期望数量之间的差异。</p><p><strong>监控与调谐</strong>：当一个 Pod 被删除时（无论是手动删除还是因故障被删除），当前实际的 Pod 数量会减少。ReplicaSet Controller 会立即检测到这种变化，因为它不断地与 API Server 进行通信。<br><strong>创建新 Pod</strong>：当检测到当前 Pod 数量少于期望数量时，ReplicaSet Controller 会自动创建新的 Pod 来补足。这些新的 Pod 会根据 Pod 模板（在 Deployment 的 <code>spec.template</code> 中定义）创建，确保新 Pod 的配置与原始 Pod 一致。</p></blockquote><h3 id="1-3-Deployment资源更新"><a href="#1-3-Deployment资源更新" class="headerlink" title="1.3 Deployment资源更新"></a>1.3 Deployment资源更新</h3><h4 id="1-3-1-使用场景"><a href="#1-3-1-使用场景" class="headerlink" title="1.3.1 使用场景"></a>1.3.1 使用场景</h4><p>​    程序升级，变革更新</p><h4 id="1-3-2-更新配置"><a href="#1-3-2-更新配置" class="headerlink" title="1.3.2 更新配置"></a>1.3.2 更新配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 通过kubectl命令更新deploy的image</span></span><br><span class="line">$ kubectl <span class="built_in">set</span> image deploy nginx-deployment nginx=registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0  --record</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看更新过程</span></span><br><span class="line">$ kubectl rollout status deploy nginx-deployment</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 通过yaml文件更新Deploy,首先查看deploy的名称</span></span><br><span class="line">kubectl replace -f </span><br><span class="line">$ kubectl get deploy nginx-deployment</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更新</span></span><br><span class="line">$ kubectl edit deploy nginx-deployment</span><br><span class="line">    找到images修改镜像Tag</span><br><span class="line">    </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Deployment详细的更新过程</span></span><br><span class="line">$ kubectl describe deploy nginx-deployment</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/8.png" alt="image-20240620125712778"></p><blockquote><p>解释：<br>   <strong>在describe中可以看出，第一次创建时，它创建了一个名为nginx-deployment-786479c6df的ReplicaSet，并直接将其扩展为3个副本。更新部署时，它创建了一个新的ReplicaSet，命名为nginx-deployment-c5dcb4544，并将其副本数扩展为1，然后将旧的ReplicaSet缩小为2，这样至少可以有2个Pod可用，最多创建了4个Pod。以此类推，使用相同的滚动更新策略向上和向下扩展新旧ReplicaSet，最终新的ReplicaSet可以拥有3个副本，并将旧的ReplicaSet缩小为0。</strong></p></blockquote><h4 id="1-3-3-deployment更新过程"><a href="#1-3-3-deployment更新过程" class="headerlink" title="1.3.3 deployment更新过程"></a>1.3.3 deployment更新过程</h4><ol><li><strong>创建新的 ReplicaSet</strong>：当 Deployment 检测到 Pod 模板发生变化（例如镜像版本更新）时，会创建一个新的 ReplicaSet 来管理新的 Pod。</li><li><strong>生成新 ReplicaSet</strong>：新 ReplicaSet 的名称类似 <code>nginx-deployment-xxxxxx</code>，包含新的镜像版本信息。</li><li><strong>逐步更新</strong>：Deployment Controller 会逐步替换旧的 Pod，而不是一次性删除所有旧 Pod 并创建新 Pod。</li><li><strong>更新策略</strong>：默认情况下，Kubernetes 使用滚动更新策略，即每次终止一部分旧的 Pod 并创建一部分新的 Pod。</li><li><strong>新旧 Pod 共存</strong>：在更新过程中，新旧版本的 Pod 会共存一段时间，确保在任何时间点都有足够的 Pod 提供服务。</li><li><strong>健康检查</strong>：新的 Pod 在替换旧的 Pod 之前，必须通过健康检查，确保其能够正常运行。</li><li><strong>终止旧 Pod</strong>：当新的 Pod 通过健康检查后，Deployment Controller 会逐步终止旧的 Pod。</li><li><strong>创建新 Pod</strong>：与此同时，创建新的 Pod，直到新的 ReplicaSet 中的 Pod 数量达到期望值。</li><li><strong>更新完成</strong>：当所有新的 Pod 都被创建并通过健康检查，且旧的 Pod 被终止后，滚动更新过程完成。</li></ol><h3 id="1-4-Deployment回滚（生产环境用的较多）"><a href="#1-4-Deployment回滚（生产环境用的较多）" class="headerlink" title="1.4 Deployment回滚（生产环境用的较多）"></a>1.4 Deployment回滚（生产环境用的较多）</h3><p>​       <strong>使用场景：当新发的版本出现BUG或者因为某些原因无法正常使用时，就需要进行版本回退。一般情况都是回滚到上一个版本（deploy回滚不推荐使用修改yaml的方式，有可能历代版本有其他修改的参数）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看历史更新记录</span></span><br><span class="line">$ kubectl rollout <span class="built_in">history</span> deploy  nginx-deployment</span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/9.png" alt="image-20240620130319537"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看更新历史的第2个版本的详细信息</span></span><br><span class="line">$ kubectl rollout <span class="built_in">history</span> deploy nginx-deployment --revision=2</span><br><span class="line">  <span class="comment"># --revision=2 查看第二个版本</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/16/Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/03-Kubernetes%E5%9F%BA%E7%A1%80%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/10.png" alt="image-20240621002324924"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行回滚到上一个版本（生产使用最多，不推荐使用edit）</span></span><br><span class="line">$ kubectl rollout undo deploy nginx-deployment</span><br><span class="line">deployment.apps/nginx-deployment rolled back</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl 命令行回滚到第二个版本</span></span><br><span class="line">$ kubectl rollout undo deploy nginx-deployment --to-revision=2</span><br><span class="line">deployment.apps/nginx-deployment rolled back</span><br></pre></td></tr></table></figure><h3 id="1-5-Deployment扩容和缩容"><a href="#1-5-Deployment扩容和缩容" class="headerlink" title="1.5 Deployment扩容和缩容"></a>1.5 Deployment扩容和缩容</h3><p>​       <strong>使用场景：当公司业务增大，Deploy的个数不足以支撑业务的正常运行，所以增加Pod的个数。或者公司推出某些活动需要临时增加Pod的个数。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kubectl命令行扩容</span></span><br><span class="line">$ kubectl scale deploy nginx-deployment --replicas=5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看deploy的Pod</span></span><br><span class="line">$ kubectl get po </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改yaml文件的方式进行扩缩容(不推荐，容易导致资源清单和启动的Pod配置不一致)</span></span><br><span class="line">$ kubectl edit deploy nginx-deployment</span><br><span class="line">  找到容器数量修改参数</span><br></pre></td></tr></table></figure><h3 id="1-6-Deployment更新策略"><a href="#1-6-Deployment更新策略" class="headerlink" title="1.6 Deployment更新策略"></a>1.6 Deployment更新策略</h3><p><strong>==滚动更新（RollingUpdate）==</strong>：默认的更新策略，确保应用程序在更新过程中不会中断运行。滚动更新会逐渐用新的 Pod 替换旧的 Pod，在替换的过程中，集群始终保持可用状态。</p><ul><li><strong><code>maxUnavailable</code></strong>：在更新过程中，最多允许多少个 Pod 不可用。默认值是 25%。</li><li><strong><code>maxSurge</code></strong>：更新时可以超过期望副本数的最多的 Pod 数量。默认值是 25%。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">3</span>        <span class="comment"># 更新时最多允许增加 3个 Pod</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span>  <span class="comment"># 更新过程中最多允许 1 个 Pod不可用</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><p><strong>==重建（Recreate）==</strong>：<code>Recreate</code> 策略下，Kubernetes 会先<strong>删除所有现有的 Pod</strong>，然后再启动新的 Pod。在更新过程中，应用程序会有一段时间不可用。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span>  <span class="comment"># 更新时，先删除旧版本所有的Pod，再启动新的Pod。</span></span><br><span class="line"><span class="comment">#    rollingUpdate:</span></span><br><span class="line"><span class="comment">#      maxSurge: 3</span></span><br><span class="line"><span class="comment">#      maxUnavailable: 1</span></span><br><span class="line"><span class="comment">#    type: RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h2 id="2、StatefulSet-有状态资源调度"><a href="#2、StatefulSet-有状态资源调度" class="headerlink" title="2、StatefulSet 有状态资源调度"></a>2、StatefulSet 有状态资源调度</h2><p>​    StatefulSet（有状态集，缩写sts)常用于部署有状态的且需要有序启动的应用程序。</p><h3 id="2-1-前言"><a href="#2-1-前言" class="headerlink" title="2.1 前言"></a>2.1 前言</h3><p>​    在IT世界里，有状态的应用被类比为宠物，无状态的应用则被类比为牛羊，每个宠物在主人那里都是“唯一的存在”，宠物生病了，我们是要花很多钱去治疗的，需要我们用心照料，而无差别的牛羊则没有这个待遇。</p><h3 id="2-2-简介"><a href="#2-2-简介" class="headerlink" title="2.2 简介"></a>2.2 简介</h3><ul><li>每个节点都有<strong>固定的身份ID</strong>，通过这个ID，集群中的成员可以 相互发现并通信。</li><li>集群的规模是比较固定的，集群规模不能随意变动。</li><li>集群中的每个节点都是有状态的，通常会持久化数据到永久存储中，每个节点在重启后都需要使用原有的持久化数据。</li><li>集群中成员节点的启动顺序（以及关闭顺序）通常也是确定的。</li><li>如果磁盘损坏，则集群里的某个节点无法正常运行，集群功能受损。</li></ul><h3 id="2-3-StatefulSet特性"><a href="#2-3-StatefulSet特性" class="headerlink" title="2.3 StatefulSet特性"></a>2.3 StatefulSet特性</h3><ul><li><p><strong>需要稳定的独一无二的网络标识符</strong></p><ul><li>StatefulSet里的每个Pod都有稳定、唯一的网络标识，可以用来发现集群内的其他成员。每个 Pod 都会被赋予一个唯一且稳定的 DNS 名称。例如，第一个 Pod 的名称可能是 myapp-0，第二个是 myapp-1，依此类推，即使 Pod 被删除或重新创建，它们的名称依然保持不变。</li></ul></li><li><p><strong>需要有序的、优雅的部署和扩展</strong></p><ul><li>StatefulSet控制的Pod副本的启停顺序是受控的，启动第n个Pod 时，前n-1个Pod已经是运行且准备好的状态。</li><li>如 MySQL集群,要先启动主节点, 若从节点没有要求,则可一起启动,若从节点有启动顺序要求，可先启动第一个从节点，接着第二从节点；这个过程就是有顺序，平滑安全的启动。</li></ul></li><li><p><strong>需要持久化数据;</strong></p><ul><li>需要持久存储，新增或减少pod，存储不会随之发生变化。</li></ul></li><li><p><strong>需要有序的自动滚动更新</strong></p><ul><li>MySQL在更新时，应该先更新从节点，全部的从节点都更新完了，最后在更新主节点，因为新版本一般可兼容老版本，但是一定要注意，若新版本不兼容老版本就很麻烦。</li></ul></li></ul><p>​    </p><h3 id="2-4-Headless-Service-无头服务"><a href="#2-4-Headless-Service-无头服务" class="headerlink" title="2.4 Headless Service 无头服务"></a>2.4 Headless Service 无头服务</h3><h4 id="2-4-1-前言"><a href="#2-4-1-前言" class="headerlink" title="2.4.1 前言"></a>2.4.1 前言</h4><p>​    Headless Service的概念是这种服务没有入口访问地址（无ClusterIP 地址），kube-proxy不会为其创建负载转发规则，而服务名（DNS域名）的解析机制取决于该Headless Service是否设置了Label Selector。无头服务为每个匹配的 Pod 生成独立的 DNS A 记录，而不是单一的服务 IP。客户端可以通过这些 DNS 记录直接与某个特定的 Pod 通信。</p><h4 id="2-5-2-介绍"><a href="#2-5-2-介绍" class="headerlink" title="2.5.2 介绍"></a>2.5.2 介绍</h4><p>​    和Deployment类似，一个StatefulSet也同样管理着基于相同容器规范的Pod。不同的是，StatefulSet为每个Pod维护了一个<code>粘性标识</code>。而StatefulSet创建的Pod一般使用<code>Headless Service(无头服务）</code>进行Pod之前的通信，和普通的Service的区别在于Headless Service没有ClusterlP，它使用的是Endpoint进行互相通信，Headless一般的格式为:</p><p><strong><code>statefulSetName-{0..N-1}.serviceName.namespace.svc.cluster.local</code></strong></p><ul><li>serviceName为Headless Service的名字，创建StatefulSet时必须指定Headless Service名称;</li><li>0..N-1为Pod所在的序号，从0开始到N-1;</li><li>statefulSetName为StatefulSet的名字;</li><li>namespace服务所在的命名空间;</li><li>svc.cluster.local为Cluster Domain（集群域）。</li></ul><h3 id="2-5-StatefulSet的yaml创建"><a href="#2-5-StatefulSet的yaml创建" class="headerlink" title="2.5 StatefulSet的yaml创建"></a>2.5 StatefulSet的yaml创建</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">nginx-sts.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">"nginx"</span>  <span class="comment"># servive名称</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br></pre></td></tr></table></figure><p>​        </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建sts</span></span><br><span class="line">$ kubectl create -f nginx-sts.yaml</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看pod</span></span><br><span class="line">$ kubectl get po </span><br><span class="line">执行结果：</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line"> web-0   1/1     Running   0          4m7s</span><br><span class="line"> web-1   1/1     Running   0          4m6s</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看sts</span></span><br><span class="line">$ kubectl get sts</span><br><span class="line">执行结果：</span><br><span class="line">NAME   READY   AGE</span><br><span class="line">web    2/2     5m12s</span><br></pre></td></tr></table></figure><h3 id="2-6-StatefulSet创建和删除"><a href="#2-6-StatefulSet创建和删除" class="headerlink" title="2.6 StatefulSet创建和删除"></a>2.6 StatefulSet创建和删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看多副本创建过程</span></span><br><span class="line">$ kubectl get po -w</span><br><span class="line"></span><br><span class="line">NAME    READY   STATUS              RESTARTS   AGE</span><br><span class="line">web-0   1/1     Running             0          11m</span><br><span class="line">web-1   1/1     Running             0          11m</span><br><span class="line">web-2   1/1     Running             0          103s</span><br><span class="line">web-3   1/1     Running             0          101s</span><br><span class="line">web-4   1/1     Running             0          100s</span><br><span class="line">web-5   1/1     Running             0          1s</span><br><span class="line">web-6   0/1     ContainerCreating   0          0s</span><br><span class="line">web-6   0/1     ContainerCreating   0          1s</span><br><span class="line">web-6   1/1     Running             0          2s</span><br><span class="line">web-7   0/1     Pending             0          0s</span><br><span class="line">web-7   0/1     Pending             0          0s</span><br><span class="line">web-7   0/1     ContainerCreating   0          0s</span><br><span class="line">web-7   0/1     ContainerCreating   0          1s</span><br><span class="line">web-7   1/1     Running             0          2s</span><br><span class="line">web-8   0/1     Pending             0          0s</span><br><span class="line">web-8   0/1     Pending             0          0s</span><br><span class="line">web-8   0/1     ContainerCreating   0          0s</span><br><span class="line">web-8   0/1     ContainerCreating   0          1s</span><br><span class="line">web-8   1/1     Running             0          1s</span><br><span class="line"><span class="comment"># 结果发现是其次创建，且前一个pod完全启动且可以使用才会在再次创建</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看删除过程</span></span><br><span class="line">$ kubectl get po -w</span><br><span class="line">执行结果：</span><br><span class="line">NAME    READY   STATUS        RESTARTS   AGE</span><br><span class="line">web-0   1/1     Running       0          16m</span><br><span class="line">web-1   1/1     Running       0          16m</span><br><span class="line">web-2   1/1     Running       0          6m16s</span><br><span class="line">web-3   1/1     Running       0          6m14s</span><br><span class="line">web-4   1/1     Running       0          6m13s</span><br><span class="line">web-5   1/1     Running       0          4m34s</span><br><span class="line">web-6   1/1     Running       0          4m33s</span><br><span class="line">web-7   1/1     Terminating   0          4m31s</span><br><span class="line">web-7   0/1     Terminating   0          4m32s</span><br><span class="line">web-7   0/1     Terminating   0          4m32s</span><br><span class="line">web-7   0/1     Terminating   0          4m32s</span><br><span class="line">web-6   1/1     Terminating   0          4m34s</span><br><span class="line">web-6   1/1     Terminating   0          4m34s</span><br><span class="line">web-6   0/1     Terminating   0          4m35s</span><br><span class="line">web-6   0/1     Terminating   0          4m35s</span><br><span class="line">web-6   0/1     Terminating   0          4m35s</span><br><span class="line">web-5   1/1     Terminating   0          4m36s</span><br><span class="line">web-5   1/1     Terminating   0          4m36s</span><br><span class="line">web-5   0/1     Terminating   0          4m37s</span><br><span class="line">web-5   0/1     Terminating   0          4m37s</span><br><span class="line">web-5   0/1     Terminating   0          4m37s</span><br><span class="line">web-4   1/1     Terminating   0          6m16s</span><br><span class="line">web-4   1/1     Terminating   0          6m16s</span><br><span class="line">web-4   0/1     Terminating   0          6m17s</span><br><span class="line">web-4   0/1     Terminating   0          6m17s</span><br><span class="line">web-4   0/1     Terminating   0          6m17s</span><br><span class="line">web-3   1/1     Terminating   0          6m18s</span><br><span class="line">web-3   1/1     Terminating   0          6m18s</span><br><span class="line">web-3   0/1     Terminating   0          6m19s</span><br><span class="line">web-3   0/1     Terminating   0          6m19s</span><br><span class="line">web-3   0/1     Terminating   0          6m19s</span><br><span class="line">web-2   1/1     Terminating   0          6m21s</span><br><span class="line">web-2   1/1     Terminating   0          6m21s</span><br><span class="line">web-2   0/1     Terminating   0          6m22s</span><br><span class="line">web-2   0/1     Terminating   0          6m22s</span><br><span class="line">web-2   0/1     Terminating   0          6m22s</span><br><span class="line">web-1   1/1     Terminating   0          16m</span><br><span class="line">web-1   1/1     Terminating   0          16m</span><br><span class="line">web-1   0/1     Terminating   0          16m</span><br><span class="line">web-1   0/1     Terminating   0          16m</span><br><span class="line">web-1   0/1     Terminating   0          16m</span><br><span class="line"><span class="comment"># 结果发现是倒序依次删除，且前一个pod完全删除后才会在从新删除</span></span><br></pre></td></tr></table></figure><h2 id="3、DaemonSet-守护进程集"><a href="#3、DaemonSet-守护进程集" class="headerlink" title="3、DaemonSet 守护进程集"></a>3、DaemonSet 守护进程集</h2><p>​    简介：DaemonSet（守护进程集，缩写为ds）和守护进程类似，它在符合匹配条件的节点上均部署一个Pod。当有新节点加入集群时，也会为它们新增一个Pod，当节点从集群中移除时，这些Pod也会被回收，删除DaemonSet将会删除它创建的所有Pod。</p><ul><li>运行集群存储daemon(守护进程)，例如在每个节点上运行Glusterd、Ceph等;</li><li>在每个节点运行日志收集daemon，例如Fluentd、 Logstash;</li><li>在每个节点运行监控daemon，比如Prometheus Node Exporter、Collectd、Datadog代理、New Relic代理或Ganglia gmond。</li></ul><h3 id="3-1-DaemonSet守护进程集yaml文件编写"><a href="#3-1-DaemonSet守护进程集yaml文件编写" class="headerlink" title="3.1 DaemonSet守护进程集yaml文件编写"></a>3.1 DaemonSet守护进程集yaml文件编写</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">nginx-ds.yaml</span></span><br><span class="line">    <span class="string">---</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">selector:</span></span><br><span class="line">        <span class="attr">matchLabels:</span></span><br><span class="line">          <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">metadata:</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">            <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">containers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建DaemonSet </span></span><br><span class="line">$ kubectl apply -f nginx-ds.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ds的pod</span></span><br><span class="line">$ kubectl get po -owide</span><br><span class="line">执行结果：（发现每个节点都部署了一个Pod）</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE     IP               NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-65zqs   1/1     Running   0          2m32s   172.25.244.226   k8s-master01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-ds77x   1/1     Running   0          2m32s   172.25.92.92     k8s-master02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-v4hxt   1/1     Running   0          2m32s   172.18.195.29    k8s-master03   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-xbwl8   1/1     Running   0          2m32s   172.27.14.228    k8s-node02     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-zzwrt   1/1     Running   0          2m33s   172.17.125.29    k8s-node01     &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看ds的实例</span></span><br><span class="line">$ kubectl get ds</span><br><span class="line">执行结果：</span><br><span class="line">NAME    DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE</span><br><span class="line">nginx   5         5         5       5            5           &lt;none&gt;          3m32s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看其他命名空间下的ds</span></span><br><span class="line">$ kubectl  get ds -n kube-system</span><br><span class="line">执行结果：</span><br><span class="line">NAME          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE</span><br><span class="line">calico-node   5         5         5       5            5           kubernetes.io/os=linux   10d</span><br></pre></td></tr></table></figure><h3 id="3-3-DaemonSet指定节点部署Pod（只部署在ssd硬盘标签的节点上）"><a href="#3-3-DaemonSet指定节点部署Pod（只部署在ssd硬盘标签的节点上）" class="headerlink" title="3.3 DaemonSet指定节点部署Pod（只部署在ssd硬盘标签的节点上）"></a>3.3 DaemonSet指定节点部署Pod（只部署在ssd硬盘标签的节点上）</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">vim</span> <span class="string">nginx-ds.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span>    <span class="comment"># 标签选择器</span></span><br><span class="line">        <span class="attr">cloud:</span> <span class="string">study</span>  <span class="comment"># 标签类型，指定节点标签 </span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-zhangjiakou.aliyuncs.com/taosweet/nginx:1.24.0-alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有节点状态</span></span><br><span class="line">$ kubectl get nodes</span><br><span class="line">执行结果：</span><br><span class="line">      k8s-master01   Ready    &lt;none&gt;   11d   v1.23.14</span><br><span class="line">      k8s-master02   Ready    &lt;none&gt;   11d   v1.23.14</span><br><span class="line">      k8s-master03   Ready    &lt;none&gt;   11d   v1.23.14</span><br><span class="line">  k8s-node01     Ready    &lt;none&gt;   11d   v1.23.14</span><br><span class="line">      k8s-node02     Ready    &lt;none&gt;   11d   v1.23.14</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将node节点打上标签(打上ssd硬盘标签)</span></span><br><span class="line">$ kubectl label nodes k8s-node01 k8s-node02 disktype=ssd</span><br><span class="line">执行结果：</span><br><span class="line">node/k8s-node01 labeled</span><br><span class="line">    node/k8s-node02 labeled</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更新DaemonSet</span></span><br><span class="line">$ kubectl  replace -f nginx-ds.yaml</span><br><span class="line">执行结果：</span><br><span class="line">daemonset.apps/nginx replaced</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">$ kubectl get po</span><br><span class="line">执行结果：（结果显示只在打了ssd标签的node节点上部署了Pod）</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE    IP              NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-fd767   1/1     Running   0          2m5s   172.17.125.30   k8s-node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-lgtvz   1/1     Running   0          2m7s   172.27.14.229   k8s-node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看集群默认的标签</span></span><br><span class="line">$ kubectl get node --show-labels</span><br><span class="line">执行结果：</span><br><span class="line">NAME           STATUS   ROLES    AGE   VERSION    LABELS</span><br><span class="line">k8s-master01   Ready    &lt;none&gt;   11d   v1.23.14   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master01,kubernetes.io/os=linux,node.kubernetes.io/node=</span><br><span class="line">k8s-master02   Ready    &lt;none&gt;   11d   v1.23.14   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master02,kubernetes.io/os=linux,node.kubernetes.io/node=</span><br><span class="line">k8s-master03   Ready    &lt;none&gt;   11d   v1.23.14   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master03,kubernetes.io/os=linux,node.kubernetes.io/node=</span><br><span class="line">k8s-node01     Ready    &lt;none&gt;   11d   v1.23.14   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,disktype=ssd,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node01,kubernetes.io/os=linux,node.kubernetes.io/node=</span><br><span class="line">k8s-node02     Ready    &lt;none&gt;   11d   v1.23.14   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,disktype=ssd,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node02,kubernetes.io/os=linux,node.kubernetes.io/node=</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 二进制高可用安装部署（v1.23+）</title>
    <link href="https://l66stbz.github.io/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/"/>
    <id>https://l66stbz.github.io/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/</id>
    <published>2024-09-15T13:50:00.000Z</published>
    <updated>2024-09-26T12:43:00.327Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="kubernetes-二进制高可用安装部署（v1-23-）"><a href="#kubernetes-二进制高可用安装部署（v1-23-）" class="headerlink" title="kubernetes 二进制高可用安装部署（v1.23+）"></a>kubernetes 二进制高可用安装部署（v1.23+）</h1><p>[TOC]</p><h2 id="一丶高可用集群划分"><a href="#一丶高可用集群划分" class="headerlink" title="一丶高可用集群划分"></a><strong>一丶高可用集群划分</strong></h2><h4 id="1-集群规划"><a href="#1-集群规划" class="headerlink" title="1. 集群规划"></a>1. 集群规划</h4><table><thead><tr><th>配置信息</th><th>备注</th></tr></thead><tbody><tr><td>系统版本</td><td>CentOS 7.9</td></tr><tr><td>Docker版本</td><td>20.10.x</td></tr><tr><td>Pod网段</td><td>172.16.0.0/16</td></tr><tr><td>Service网段</td><td>10.96.0.0/16</td></tr></tbody></table><p>⚠️ <strong><em>宿主机网段、K8s Service网段、Pod网段不能重复</em></strong></p><table><thead><tr><th>role</th><th>ipaddress</th><th>configure</th></tr></thead><tbody><tr><td>k8s-master-lb   (VIP )</td><td>192.168.174.66</td><td></td></tr><tr><td>k8s-master-01（etcd haproxy keepalived)</td><td>192.168.174.30</td><td>4 core, 4Gb; 50GBS, CentOS 7.9</td></tr><tr><td>k8s-master-02（etcd haproxy keepalived)</td><td>192.168.174.31</td><td>4 core, 4Gb; 50GBS, CentOS 7.9</td></tr><tr><td>k8s-master-03（etcd haproxy keepalived)</td><td>192.168.174.32</td><td>4 core, 4Gb; 50GBS, CentOS 7.9</td></tr><tr><td>k8s-worker-01</td><td>192.168.174.40</td><td>4 core, 16Gb; 100GBS, CentOS 7.9</td></tr><tr><td>k8s-worker-02</td><td>192.168.174.41</td><td>4 core, 16Gb; 100GBS, CentOS 7.9</td></tr></tbody></table><p><strong>⚠️Master节点的IP地址尽量不要和Node节点一个网段，方便后期因为业务增长Node节点需要扩充（如master节点192.168.100.10段，node节点192.168.100.20段）</strong></p><h4 id="2-配置所有节点的hosts文件（Master-and-Node）"><a href="#2-配置所有节点的hosts文件（Master-and-Node）" class="headerlink" title="2.配置所有节点的hosts文件（Master and Node）"></a>2.配置所有节点的hosts文件（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://gitee.com/BRWYZ/kubernetes_install.git</span><br><span class="line"></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;&gt;/etc/hosts</span><br><span class="line">192.168.174.66     k8s-lb</span><br><span class="line">192.168.174.30     k8s-master01</span><br><span class="line">192.168.174.31     k8s-master02</span><br><span class="line">192.168.174.32     k8s-master03</span><br><span class="line">192.168.174.40     k8s-node01</span><br><span class="line">192.168.174.41     k8s-node02</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="3-安装YUM源（Master-and-Node）"><a href="#3-安装YUM源（Master-and-Node）" class="headerlink" title="3.安装YUM源（Master and Node）"></a>3.安装YUM源（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 下载阿里云的YUM源</span></span><br><span class="line">$ sed -e <span class="string">'s|^mirrorlist=|#mirrorlist=|g'</span> \</span><br><span class="line">    -e <span class="string">'s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.ustc.edu.cn/centos|g'</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装插件</span></span><br><span class="line">$ yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装Docker源并修改安装地址</span></span><br><span class="line">$ yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装epel源</span></span><br><span class="line">$ yum -y install epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装工具</span></span><br><span class="line">$ yum install wget jq psmisc vim net-tools telnet yum-utils device-mapper-persistent-data lvm2 git install ipvsadm ipset sysstat conntrack libseccomp  -y</span><br></pre></td></tr></table></figure><h4 id="4-关闭系统中不需要的服务-（Master-and-Node）"><a href="#4-关闭系统中不需要的服务-（Master-and-Node）" class="headerlink" title="4.关闭系统中不需要的服务 （Master and Node）"></a>4.关闭系统中不需要的服务 （Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭安全策略</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s#SELINUX=enforcing#SELINUX=disabled#g'</span> /etc/sysconfig/selinux</span><br><span class="line">sed -i <span class="string">'s#SELINUX=enforcing#SELINUX=disabled#g'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭dnsmasq（关闭失败报错正常）</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now dnsmasq</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭NetworkManager</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now NetworkManager</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭swap分区</span></span><br><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line">sed -ri <span class="string">'/^[^#]*swap/s@^@#@'</span> /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="5-同步时间区（Master-and-Node）"><a href="#5-同步时间区（Master-and-Node）" class="headerlink" title="5.同步时间区（Master and Node）"></a>5.同步时间区（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 下载同步时间服务,etcd集群同步需要</span></span><br><span class="line">$ yum install -y ntpdate</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 每五分钟执行一次</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"*/5 * * * *        ntpdate -b ntp.aliyun.com"</span> &gt;&gt;/var/spool/cron/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改地区</span></span><br><span class="line">$ ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'Asia/Shanghai'</span> &gt;/etc/timezone</span><br></pre></td></tr></table></figure><h4 id="6-所有节点配置limit（Master-and-Node）"><a href="#6-所有节点配置limit（Master-and-Node）" class="headerlink" title="6.所有节点配置limit（Master and Node）"></a>6.所有节点配置limit（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改limit</span></span><br><span class="line"><span class="built_in">ulimit</span> -SHn 65535</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 加入开机自启</span></span><br><span class="line">cat &lt;&lt;-EOF &gt;&gt;/etc/security/limits.conf</span><br><span class="line">* soft nofile 655360</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 655350</span><br><span class="line">* hard nproc 655350</span><br><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="7-节点之间进行免密（方便后期文件传输）（Master01）"><a href="#7-节点之间进行免密（方便后期文件传输）（Master01）" class="headerlink" title="7.节点之间进行免密（方便后期文件传输）（Master01）"></a>7.节点之间进行免密（方便后期文件传输）（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 生成公钥和私钥</span></span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 传送公钥</span></span><br><span class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> k8s-master02 k8s-master03 k8s-node01 k8s-node02;<span class="keyword">do</span> ssh-copy-id -i .ssh/id_rsa.pub <span class="variable">$i</span>;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="8-下载需要文件（Master01）"><a href="#8-下载需要文件（Master01）" class="headerlink" title="8. 下载需要文件（Master01）"></a>8. 下载需要文件（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /root/</span><br><span class="line">$ git <span class="built_in">clone</span> git@gitee.com:BRWYZ/kubernetes_install.git</span><br><span class="line">$ <span class="built_in">cd</span> kubernetes_install</span><br></pre></td></tr></table></figure><h4 id="9-内核升级（kubernetes官方认证kernel-v4-19）（Master-and-Node）"><a href="#9-内核升级（kubernetes官方认证kernel-v4-19）（Master-and-Node）" class="headerlink" title="9.内核升级（kubernetes官方认证kernel v4.19）（Master and Node）"></a>9.内核升级（kubernetes官方认证kernel v4.19）（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 升级rpm包除内核外</span></span><br><span class="line">$ yum update -y --exclude=kernel*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 传输内核包</span></span><br><span class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> k8s-master02 k8s-master03 k8s-node01 k8s-node02;<span class="keyword">do</span> scp kernel-ml-4.19.12-1.el7.elrepo.x86_64.rpm kernel-ml-devel-4.19.12-1.el7.elrepo.x86_64.rpm <span class="variable">$i</span>:/root/ ; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有节点安装内核包</span></span><br><span class="line">$ yum localinstall -y kernel-ml*</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有节点更改内核启动顺序</span></span><br><span class="line">$ grub2-set-default  0 &amp;&amp; grub2-mkconfig -o /etc/grub2.cfg</span><br><span class="line">$ grubby --args=<span class="string">"user_namespace.enable=1"</span> --update-kernel=<span class="string">"<span class="variable">$(grubby --default-kernel)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看内核版本是否改变</span></span><br><span class="line">$ grubby --default-kernel </span><br><span class="line"> /boot/vmlinuz-4.19.12-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><h4 id="10-节点安装ipvs（Master-and-Node）"><a href="#10-节点安装ipvs（Master-and-Node）" class="headerlink" title="10.节点安装ipvs（Master and Node）"></a>10.节点安装ipvs（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 各个节点配置ipvs模块，内核4.19+版本nf_conntrack_ipv4已经改为nf_conntrack，4.18以下使用nf_conntrack_ipv4。</span></span><br><span class="line">$ modprobe -- ip_vs</span><br><span class="line">  modprobe -- ip_vs_rr</span><br><span class="line">  modprobe -- ip_vs_wrr</span><br><span class="line">  modprobe -- ip_vs_sh</span><br><span class="line">  modprobe -- nf_conntrack</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 添加到开机自启</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;&gt;/etc/modules-load.d/ipvs.conf</span><br><span class="line">ip_vs</span><br><span class="line">ip_vs_lc</span><br><span class="line">ip_vs_wlc</span><br><span class="line">ip_vs_rr</span><br><span class="line">ip_vs_wrr</span><br><span class="line">ip_vs_lblc</span><br><span class="line">ip_vs_lblcr</span><br><span class="line">ip_vs_dh</span><br><span class="line">ip_vs_sh</span><br><span class="line">ip_vs_fo</span><br><span class="line">ip_vs_nq</span><br><span class="line">ip_vs_sed</span><br><span class="line">ip_vs_ftp</span><br><span class="line">ip_vs_sh</span><br><span class="line">nf_conntrack</span><br><span class="line">ip_tables</span><br><span class="line">ip_set</span><br><span class="line">xt_set</span><br><span class="line">ipt_set</span><br><span class="line">ipt_rpfilter</span><br><span class="line">ipt_REJECT</span><br><span class="line">ipip</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动服务(启动报错忽略)</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now systemd-modules-load.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看是否加载</span></span><br><span class="line">$ lsmod | grep -e ip_vs -e nf_conntrack</span><br><span class="line">nf_conntrack_ipv4      16384  23 </span><br><span class="line">nf_defrag_ipv4         16384  1 nf_conntrack_ipv4</span><br><span class="line">nf_conntrack          135168  10 xt_conntrack,nf_conntrack_ipv6,nf_conntrack_ipv4,nf_nat,nf_nat_ipv6,ipt_MASQUERADE,nf_nat_ipv4,xt_nat,nf_conntrack_netlink,ip_vs</span><br></pre></td></tr></table></figure><h4 id="11-配置k8s集群中必须的内核参数-Master-and-Node"><a href="#11-配置k8s集群中必须的内核参数-Master-and-Node" class="headerlink" title="11. 配置k8s集群中必须的内核参数(Master and Node)"></a>11. 配置k8s集群中必须的内核参数(Master and Node)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">net.ipv4.conf.all.route_localnet = 1</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.tcp_keepalive_intvl =15</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_max_orphans = 327680</span><br><span class="line">net.ipv4.tcp_orphan_retries = 3</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.ip_conntrack_max = 65536</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 加载参数</span></span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure><h4 id="12-重启服务器"><a href="#12-重启服务器" class="headerlink" title="12.重启服务器"></a>12.重启服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看内核是否加载</span></span><br><span class="line">$ lsmod | grep --color=auto -e ip_vs -e nf_conntrack</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># lsmod | grep --color=auto -e ip_vs -e nf_conntrack</span></span><br><span class="line">ip_vs_ftp              16384  0 </span><br><span class="line">nf_nat                 32768  1 ip_vs_ftp</span><br><span class="line">ip_vs_sed              16384  0 </span><br><span class="line">ip_vs_nq               16384  0 </span><br><span class="line">ip_vs_fo               16384  0 </span><br><span class="line">ip_vs_sh               16384  0 </span><br><span class="line">ip_vs_dh               16384  0 </span><br><span class="line">ip_vs_lblcr            16384  0 </span><br><span class="line">ip_vs_lblc             16384  0 </span><br><span class="line">ip_vs_wrr              16384  0 </span><br><span class="line">ip_vs_rr               16384  0 </span><br><span class="line">ip_vs_wlc              16384  0 </span><br><span class="line">ip_vs_lc               16384  0 </span><br><span class="line">ip_vs                 151552  24 ip_vs_wlc,ip_vs_rr,ip_vs_dh,ip_vs_lblcr,ip_vs_sh,ip_vs_fo,ip_vs_nq,ip_vs_lblc,ip_vs_wrr,ip_vs_lc,ip_vs_sed,ip_vs_ftp</span><br><span class="line">nf_conntrack          143360  2 nf_nat,ip_vs</span><br><span class="line">nf_defrag_ipv6         20480  1 nf_conntrack</span><br><span class="line">nf_defrag_ipv4         16384  1 nf_conntrack</span><br><span class="line">libcrc32c              16384  4 nf_conntrack,nf_nat,xfs,ip_vs</span><br></pre></td></tr></table></figure><hr><h2 id="二丶基本组件安装"><a href="#二丶基本组件安装" class="headerlink" title="二丶基本组件安装"></a><strong>二丶基本组件安装</strong></h2><h4 id="1-安装Rumtime（Master-and-Node）"><a href="#1-安装Rumtime（Master-and-Node）" class="headerlink" title="1.安装Rumtime（Master and Node）"></a>1.安装Rumtime（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看docker版本</span></span><br><span class="line">$ yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有节点安装docker-ce-20.10</span></span><br><span class="line">$ yum install docker-ce-20.10.* docker-ce-cli-20.10.* containerd.io -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 新版Kubelet建议使用systemd，Docker的CgroupDriver也改成systemd</span></span><br><span class="line">$ mkdir /etc/docker</span><br><span class="line">$ cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重新加载配置文件并启动docker</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now docker</span><br></pre></td></tr></table></figure><h4 id="2-Kubernetes组件及etcd安装-Master01"><a href="#2-Kubernetes组件及etcd安装-Master01" class="headerlink" title="2.Kubernetes组件及etcd安装(Master01)"></a>2.Kubernetes组件及etcd安装(Master01)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 下载kubernetes组件包</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># wget https://dl.k8s.io/v1.23.17/kubernetes-server-linux-amd64.tar.gz</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 下载etcd的安装包</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># wget https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 解压kubernetes安装包并安装文件</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># tar -xf kubernetes-server-linux-amd64.tar.gz  --strip-components=3 -C /usr/local/bin kubernetes/server/bin/kube&#123;let,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125;</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># ls /usr/local/bin/</span></span><br><span class="line">kube-apiserver  kube-controller-manager  kubectl  kubelet  kube-proxy  kube-scheduler</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 解压etcd安装包并安装文件</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># tar -zxvf etcd-v3.5.6-linux-amd64.tar.gz --strip-components=1 -C /usr/local/bin etcd-v3.5.6-linux-amd64/etcd&#123;,ctl&#125;</span></span><br><span class="line">etcd-v3.5.6-linux-amd64/etcdctl</span><br><span class="line">etcd-v3.5.6-linux-amd64/etcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看kubelet和etcd版本信息</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubelet --version</span></span><br><span class="line">Kubernetes v1.23.16</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># etcd --version</span></span><br><span class="line">etcd Version: 3.5.6</span><br><span class="line">Git SHA: cecbe35ce</span><br><span class="line">Go Version: go1.16.15</span><br><span class="line">Go OS/Arch: linux/amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将文件传输给其他节点</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># MasterNodes='k8s-master02 k8s-master03'</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># WorkNodes='k8s-node01 k8s-node02'</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># for NODE in $MasterNodes; do echo $NODE; scp /usr/local/bin/kube&#123;let,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125; $NODE:/usr/local/bin/; scp /usr/local/bin/etcd* $NODE:/usr/local/bin/; done</span></span><br><span class="line">k8s-master02</span><br><span class="line">kubelet                                                              100%  114MB  22.7MB/s   00:05    </span><br><span class="line">kubectl                                                              100%   43MB  30.6MB/s   00:01    </span><br><span class="line">kube-apiserver                                                       100%  120MB  30.0MB/s   00:04    </span><br><span class="line">kube-controller-manager                                              100%  111MB  30.1MB/s   00:03    </span><br><span class="line">kube-scheduler                                                       100%   46MB  21.1MB/s   00:02    </span><br><span class="line">kube-proxy                                                           100%   41MB  25.6MB/s   00:01    </span><br><span class="line">etcd                                                                 100%   23MB  32.0MB/s   00:00    </span><br><span class="line">etcdctl                                                              100%   17MB  32.8MB/s   00:00    </span><br><span class="line">k8s-master03</span><br><span class="line">kubelet                                                              100%  114MB  25.0MB/s   00:04    </span><br><span class="line">kubectl                                                              100%   43MB  24.1MB/s   00:01    </span><br><span class="line">kube-apiserver                                                       100%  120MB  33.6MB/s   00:03    </span><br><span class="line">kube-controller-manager                                              100%  111MB  31.3MB/s   00:03    </span><br><span class="line">kube-scheduler                                                       100%   46MB  22.9MB/s   00:02    </span><br><span class="line">kube-proxy                                                           100%   41MB  24.3MB/s   00:01    </span><br><span class="line">etcd                                                                 100%   23MB  22.6MB/s   00:01    </span><br><span class="line">etcdctl                                                              100%   17MB  26.3MB/s   00:00    </span><br><span class="line"></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># for NODE in $WorkNodes; do  scp /usr/local/bin/kube&#123;let,-proxy&#125; $NODE:/usr/local/bin/; done</span></span><br><span class="line">kubelet                                                              100%  114MB  33.6MB/s   00:03    </span><br><span class="line">kube-proxy                                                           100%   41MB  40.7MB/s   00:01    </span><br><span class="line">kubelet                                                              100%  114MB  29.6MB/s   00:03    </span><br><span class="line">kube-proxy                                                           100%   41MB  37.3MB/s   00:01</span><br></pre></td></tr></table></figure><h4 id="3-创建cni的目录（Master-and-Node）"><a href="#3-创建cni的目录（Master-and-Node）" class="headerlink" title="3.创建cni的目录（Master and Node）"></a>3.创建cni的目录（Master and Node）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建目录(calion需要用到)</span></span><br><span class="line">$ mkdir -p /opt/cni/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Master01切换分支</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install &amp;&amp;  git checkout v1.23+</span><br></pre></td></tr></table></figure><hr><h2 id="三丶生成证书"><a href="#三丶生成证书" class="headerlink" title="三丶生成证书"></a>三丶生成证书</h2><h4 id="1-下载kubernetes证书（Master01）"><a href="#1-下载kubernetes证书（Master01）" class="headerlink" title="1.下载kubernetes证书（Master01）"></a>1.下载kubernetes证书（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 下载证书</span></span><br><span class="line">$ wget <span class="string">"https://pkg.cfssl.org/R1.2/cfssl_linux-amd64"</span> -O /usr/<span class="built_in">local</span>/bin/cfssl</span><br><span class="line"></span><br><span class="line">$ wget <span class="string">"https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64"</span> -O /usr/<span class="built_in">local</span>/bin/cfssljson</span><br><span class="line"></span><br><span class="line">https://github.com/cloudflare/cfssl/releases/download/1.2.0/cfssl_linux-amd64</span><br><span class="line"></span><br><span class="line">https://github.com/cloudflare/cfssl/releases/download/1.2.0/cfssljson_linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 添加执行权限</span></span><br><span class="line">$ chmod +x /usr/<span class="built_in">local</span>/bin/cfssl /usr/<span class="built_in">local</span>/bin/cfssljson</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># mv cfssl_linux-amd64 /usr/local/bin/cfssl</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># mv cfssljson_linux-amd64 /usr/local/bin/cfssljson</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># chmod +x /usr/local/bin/cfssl /usr/local/bin/cfssljson</span></span><br></pre></td></tr></table></figure><h4 id="2-生成etcd的证书"><a href="#2-生成etcd的证书" class="headerlink" title="2.生成etcd的证书"></a>2.生成etcd的证书</h4><p><strong>集群内部的通讯，ipaserver连接etcd的证书，类似于传统的公钥私钥的解密加密</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 所有master节点创建etcd的证书目录</span></span><br><span class="line">$ mkdir /etc/etcd/ssl -p</span><br><span class="line">$ ll /etc/etcd/ssl/</span><br><span class="line">总用量 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建kubernetes放置证书目录，全部节点master节点以及node节点</span></span><br><span class="line">$ mkdir -p /etc/kubernetes/pki</span><br><span class="line">$ ll /etc/kubernetes/pki/</span><br><span class="line">总用量 0</span><br></pre></td></tr></table></figure><h6 id="1-Master01执行"><a href="#1-Master01执行" class="headerlink" title="(1)Master01执行"></a>(1)Master01执行</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换工作目录</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cd /root/kubernetes_install/pki/</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># ls</span></span><br><span class="line">admin-csr.json      ca-csr.json       front-proxy-ca-csr.json      kube-proxy-csr.json</span><br><span class="line">apiserver-csr.json  etcd-ca-csr.json  front-proxy-client-csr.json  manager-csr.json</span><br><span class="line">ca-config.json      etcd-csr.json     kubelet-csr.json             scheduler-csr.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成etcd CA证书和CA证书的key，根证书</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert -initca etcd-ca-csr.json | cfssljson -bare /etc/etcd/ssl/etcd-ca</span></span><br><span class="line">2024/06/16 00:58:35 [INFO] generating a new CA key and certificate from CSR</span><br><span class="line">2024/06/16 00:58:35 [INFO] generate received request</span><br><span class="line">2024/06/16 00:58:35 [INFO] received CSR</span><br><span class="line">2024/06/16 00:58:35 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 00:58:36 [INFO] encoded CSR</span><br><span class="line">2024/06/16 00:58:36 [INFO] signed certificate with serial number 667846601631781419691753527881959005353534436105</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成客户端密钥</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert \</span></span><br><span class="line">    -ca=/etc/etcd/ssl/etcd-ca.pem \</span><br><span class="line">    -ca-key=/etc/etcd/ssl/etcd-ca-key.pem \</span><br><span class="line">    -config=ca-config.json \</span><br><span class="line">    -hostname=127.0.0.1,k8s-master01,k8s-master02,k8s-master03,192.168.174.30,192.168.174.31,192.168.174.32 \</span><br><span class="line">    -profile=kubernetes \</span><br><span class="line">    etcd-csr.json | cfssljson -bare /etc/etcd/ssl/etcd</span><br><span class="line">2024/06/16 01:03:08 [INFO] generate received request</span><br><span class="line">2024/06/16 01:03:08 [INFO] received CSR</span><br><span class="line">2024/06/16 01:03:08 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:03:09 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:03:09 [INFO] signed certificate with serial number 169670736440422945332067825308657235294205909760</span><br><span class="line"></span><br><span class="line">⚠️: 如果etcd没有部署在kubernetes的Master节点上，注意修改主机名和IP地址，如果将来需要增加etcd节点，可以提前滞留几个IP地址，方便后期使用</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看生成的证书</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># ls /etc/etcd/ssl/</span></span><br><span class="line">etcd-ca.csr  etcd-ca-key.pem  etcd-ca.pem  etcd.csr  etcd-key.pem  etcd.pem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将etcd的证书传输给其他Master节点</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># MasterNodes='k8s-master02 k8s-master03'</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># WorkNodes='k8s-node01 k8s-node02'</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># echo $MasterNodes $WorkNodes</span></span><br><span class="line">k8s-master02 k8s-master03 k8s-node01 k8s-node02</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">for</span> NODE <span class="keyword">in</span> <span class="variable">$MasterNodes</span>; <span class="keyword">do</span></span><br><span class="line">     ssh <span class="variable">$NODE</span> <span class="string">"mkdir -p /etc/etcd/ssl"</span></span><br><span class="line">     <span class="keyword">for</span> FILE <span class="keyword">in</span> etcd-ca-key.pem  etcd-ca.pem  etcd-key.pem  etcd.pem; <span class="keyword">do</span></span><br><span class="line">       scp /etc/etcd/ssl/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/etcd/ssl/<span class="variable">$&#123;FILE&#125;</span></span><br><span class="line">     <span class="keyword">done</span></span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line"> </span><br><span class="line">etcd-ca-key.pem                                                      100% 1675   793.9KB/s   00:00    </span><br><span class="line">etcd-ca.pem                                                          100% 1367   889.8KB/s   00:00    </span><br><span class="line">etcd-key.pem                                                         100% 1675   802.4KB/s   00:00    </span><br><span class="line">etcd.pem                                                             100% 1509     1.0MB/s   00:00    </span><br><span class="line">etcd-ca-key.pem                                                      100% 1675   740.1KB/s   00:00    </span><br><span class="line">etcd-ca.pem                                                          100% 1367   878.3KB/s   00:00    </span><br><span class="line">etcd-key.pem                                                         100% 1675   565.2KB/s   00:00    </span><br><span class="line">etcd.pem                                                             100% 1509     1.1MB/s   00:00</span><br></pre></td></tr></table></figure><h4 id="3-生成kubernetes组件证书（Master01）"><a href="#3-生成kubernetes组件证书（Master01）" class="headerlink" title="3.生成kubernetes组件证书（Master01）"></a>3.生成kubernetes组件证书（Master01）</h4><h6 id="1-生成根证书，然后根据根证书生成其他组件证书。"><a href="#1-生成根证书，然后根据根证书生成其他组件证书。" class="headerlink" title="(1)生成根证书，然后根据根证书生成其他组件证书。"></a>(1)生成根证书，然后根据根证书生成其他组件证书。</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cd /root/kubernetes_install/pki</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成根证书（统一证书，其他组件的证书都是围绕这个根证书生成了，方便管理，（ca证书））</span></span><br><span class="line">$ cfssl gencert -initca ca-csr.json | cfssljson -bare /etc/kubernetes/pki/ca</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line"> [root@k8s-master01 pki]<span class="comment"># cfssl gencert -initca ca-csr.json | cfssljson -bare /etc/kubernetes/pki/ca</span></span><br><span class="line">2022/12/05 10:34:00 [INFO] generating a new CA key and certificate from CSR</span><br><span class="line">2022/12/05 10:34:00 [INFO] generate received request</span><br><span class="line">2022/12/05 10:34:00 [INFO] received CSR</span><br><span class="line">2022/12/05 10:34:00 [INFO] generating key: rsa-2048</span><br><span class="line">2022/12/05 10:34:02 [INFO] encoded CSR</span><br><span class="line">2022/12/05 10:34:02 [INFO] signed certificate with serial number 9045593708449349597042729397661311913120732807</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看证书是否生成</span></span><br><span class="line">$ ls /etc/kubernetes/pki/</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">   [root@k8s-master01 pki]<span class="comment"># ls /etc/kubernetes/pki/</span></span><br><span class="line">ca.csr  ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><h6 id="2-生成apiserver证书"><a href="#2-生成apiserver证书" class="headerlink" title="(2)生成apiserver证书"></a>(2)生成apiserver证书</h6><p>​    <strong>⚠️：10.96.0.1 是k8s service的网段的第一个IP地址，如果说需要更改k8s service网段，那就需要更改10.96.0.1，如果不是高可用集群，<code>192.168.174.66</code>为<code>kube-Master01</code>的IP（修改前请注意网段的掩码位，去掩码计算器计算，查找第一个网段ip，<code>192.168.174.30,192.168.174.31,192.168.174.32为master节点IP</code>）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 生成证书</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert -ca=/etc/kubernetes/pki/ca.pem   -ca-key=/etc/kubernetes/pki/ca-key.pem   -config=ca-config.json   -hostname=10.96.0.1,192.168.174.66,127.0.0.1,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster,kubernetes.default.svc.cluster.local,192.168.174.30,192.168.174.31,192.168.174.32  -profile=kubernetes   apiserver-csr.json | cfssljson -bare /etc/kubernetes/pki/apiserver</span></span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">2024/06/16 01:14:35 [INFO] generate received request</span><br><span class="line">2024/06/16 01:14:35 [INFO] received CSR</span><br><span class="line">2024/06/16 01:14:35 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:14:35 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:14:35 [INFO] signed certificate with serial number 664912171212661285532228936561112324599278915308</span><br><span class="line"><span class="comment"># ⚠️：10.96.0.1 service网段第一个IP地址(10.96.0.0/12)</span></span><br><span class="line"><span class="comment"># ⚠️: 192.168.174.66 keepalived的VIP</span></span><br><span class="line"><span class="comment"># ⚠️: 192.168.174.30 Master01的IP</span></span><br><span class="line"><span class="comment"># ⚠️: 192.168.174.31 Master02的IP</span></span><br><span class="line"><span class="comment"># ⚠️: 192.168.174.32 Master03的IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看证书</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># ls /etc/kubernetes/pki/</span></span><br><span class="line">apiserver.csr  apiserver-key.pem  apiserver.pem  ca.csr  ca-key.pem  ca.pem</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成apiserver的聚合证书（权限，让第三方组件和kube-apiserver进行通信拿去数据）</span></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert   -initca front-proxy-ca-csr.json | cfssljson -bare /etc/kubernetes/pki/front-proxy-ca  </span></span><br><span class="line"><span class="comment"># 返回结果：</span></span><br><span class="line">2024/06/16 01:17:04 [INFO] generating a new CA key and certificate from CSR</span><br><span class="line">2024/06/16 01:17:04 [INFO] generate received request</span><br><span class="line">2024/06/16 01:17:04 [INFO] received CSR</span><br><span class="line">2024/06/16 01:17:04 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:17:04 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:17:04 [INFO] signed certificate with serial number 32033324620397301196702805402027812417677313761</span><br><span class="line"></span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert   -ca=/etc/kubernetes/pki/front-proxy-ca.pem   -ca-key=/etc/kubernetes/pki/front-proxy-ca-key.pem   -config=ca-config.json   -profile=kubernetes   front-proxy-client-csr.json | cfssljson -bare /etc/kubernetes/pki/front-proxy-client</span></span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">2024/06/16 01:17:32 [INFO] generate received request</span><br><span class="line">2024/06/16 01:17:32 [INFO] received CSR</span><br><span class="line">2024/06/16 01:17:32 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:17:32 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:17:32 [INFO] signed certificate with serial number 82900029194521146603431036490159053268222994590</span><br><span class="line">2024/06/16 01:17:32 [WARNING] This certificate lacks a <span class="string">"hosts"</span> field. This makes it unsuitable <span class="keyword">for</span></span><br><span class="line">websites. For more information see the Baseline Requirements <span class="keyword">for</span> the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (<span class="string">"Information Requirements"</span>).</span><br><span class="line"><span class="comment"># ⚠️: 日志会有警告，忽略不管</span></span><br></pre></td></tr></table></figure><h4 id="4-生成controller-manage的证书-资源控制器-（Master01）"><a href="#4-生成controller-manage的证书-资源控制器-（Master01）" class="headerlink" title="4.生成controller-manage的证书(资源控制器)（Master01）"></a>4.生成controller-manage的证书(资源控制器)（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 pki]<span class="comment"># cfssl gencert \</span></span><br><span class="line">   -ca=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">   -ca-key=/etc/kubernetes/pki/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   manager-csr.json | cfssljson -bare /etc/kubernetes/pki/controller-manager</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">2024/06/16 01:18:12 [INFO] generate received request</span><br><span class="line">2024/06/16 01:18:12 [INFO] received CSR</span><br><span class="line">2024/06/16 01:18:12 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:18:13 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:18:13 [INFO] signed certificate with serial number 118932812530777434694501978675305584566356613164</span><br><span class="line">2024/06/16 01:18:13 [WARNING] This certificate lacks a <span class="string">"hosts"</span> field. This makes it unsuitable <span class="keyword">for</span></span><br><span class="line">websites. For more information see the Baseline Requirements <span class="keyword">for</span> the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (<span class="string">"Information Requirements"</span>).</span><br><span class="line"></span><br><span class="line"><span class="comment"># ⚠️:注意，如果不是高可用集群，192.168.174.66:8443改为master01的地址，8443改为apiserver的端口，默认是6443</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成kubeconfig文件，用于和kube-apiserver进行通讯，这样controller-manager就会有自己的权限</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">     --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">     --embed-certs=<span class="literal">true</span> \</span><br><span class="line">     --server=https://192.168.174.66:8443 \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Cluster <span class="string">"kubernetes"</span> <span class="built_in">set</span>.</span><br><span class="line">    </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 设置一个环境项，一个上下文</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-context system:kube-controller-manager@kubernetes \</span><br><span class="line">    --cluster=kubernetes \</span><br><span class="line">    --user=system:kube-controller-manager \</span><br><span class="line">    --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">    Context <span class="string">"system:kube-controller-manager@kubernetes"</span> created.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; set-credentials 设置一个用户项</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-credentials system:kube-controller-manager \</span><br><span class="line">     --client-certificate=/etc/kubernetes/pki/controller-manager.pem \</span><br><span class="line">     --client-key=/etc/kubernetes/pki/controller-manager-key.pem \</span><br><span class="line">     --embed-certs=<span class="literal">true</span> \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">User <span class="string">"system:kube-controller-manager"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 使用某个环境当做默认环境</span></span><br><span class="line">$ kubectl config use-context system:kube-controller-manager@kubernetes \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Switched to context <span class="string">"system:kube-controller-manager@kubernetes"</span>.</span><br></pre></td></tr></table></figure><h4 id="5-生成kube-scheduler证书（Master01）"><a href="#5-生成kube-scheduler证书（Master01）" class="headerlink" title="5.生成kube-scheduler证书（Master01）"></a>5.生成kube-scheduler证书（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">$ cfssl gencert \</span><br><span class="line">   -ca=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">   -ca-key=/etc/kubernetes/pki/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   scheduler-csr.json | cfssljson -bare /etc/kubernetes/pki/scheduler</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">2024/06/16 01:27:38 [INFO] generate received request</span><br><span class="line">2024/06/16 01:27:38 [INFO] received CSR</span><br><span class="line">2024/06/16 01:27:38 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:27:39 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:27:39 [INFO] signed certificate with serial number 50664639108365158483981871397139307380658841542</span><br><span class="line">2024/06/16 01:27:39 [WARNING] This certificate lacks a <span class="string">"hosts"</span> field. This makes it unsuitable <span class="keyword">for</span></span><br><span class="line">websites. For more information see the Baseline Requirements <span class="keyword">for</span> the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (<span class="string">"Information Requirements"</span>).</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ⚠️:注意，如果不是高可用集群，192.168.174.66:8443改为master01的地址，8443改为apiserver的端口，默认是6443</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; set-cluster：设置一个集群项</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">     --certificate-authority=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">     --embed-certs=<span class="literal">true</span> \</span><br><span class="line">     --server=https://192.168.174.66:8443 \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">   Cluster <span class="string">"kubernetes"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 设置一个环境项，一个上下文</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-credentials system:kube-scheduler \</span><br><span class="line">     --client-certificate=/etc/kubernetes/pki/scheduler.pem \</span><br><span class="line">     --client-key=/etc/kubernetes/pki/scheduler-key.pem \</span><br><span class="line">     --embed-certs=<span class="literal">true</span> \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">User <span class="string">"system:kube-scheduler"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; set-credentials 设置一个用户项</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-context system:kube-scheduler@kubernetes \</span><br><span class="line">     --cluster=kubernetes \</span><br><span class="line">     --user=system:kube-scheduler \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Context <span class="string">"system:kube-scheduler@kubernetes"</span> created.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 使用某个环境当做默认环境</span></span><br><span class="line">$ kubectl config use-context system:kube-scheduler@kubernetes \</span><br><span class="line">     --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Switched to context <span class="string">"system:kube-scheduler@kubernetes"</span>.</span><br></pre></td></tr></table></figure><h4 id="6-生成管理员证书，生成管理员权限（Master01）"><a href="#6-生成管理员证书，生成管理员权限（Master01）" class="headerlink" title="6. 生成管理员证书，生成管理员权限（Master01）"></a>6. 生成管理员证书，生成管理员权限（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 生成管理员证书</span></span><br><span class="line">$ cfssl gencert \</span><br><span class="line">   -ca=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">   -ca-key=/etc/kubernetes/pki/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   admin-csr.json | cfssljson -bare /etc/kubernetes/pki/admin</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">2024/06/16 01:29:55 [INFO] generate received request</span><br><span class="line">2024/06/16 01:29:55 [INFO] received CSR</span><br><span class="line">2024/06/16 01:29:55 [INFO] generating key: rsa-2048</span><br><span class="line">2024/06/16 01:29:56 [INFO] encoded CSR</span><br><span class="line">2024/06/16 01:29:56 [INFO] signed certificate with serial number 440866322981709851504705917810067389855632400057</span><br><span class="line">2024/06/16 01:29:56 [WARNING] This certificate lacks a <span class="string">"hosts"</span> field. This makes it unsuitable <span class="keyword">for</span></span><br><span class="line">websites. For more information see the Baseline Requirements <span class="keyword">for</span> the Issuance and Management</span><br><span class="line">of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);</span><br><span class="line">specifically, section 10.2.3 (<span class="string">"Information Requirements"</span>).</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"><span class="comment"># ⚠️:注意，如果不是高可用集群，192.168.174.66:8443改为master01的地址，8443改为apiserver的端口，默认是6443</span></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-cluster kubernetes     --certificate-authority=/etc/kubernetes/pki/ca.pem     --embed-certs=<span class="literal">true</span>     --server=https://192.168.174.66:8443     --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">Cluster <span class="string">"kubernetes"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-credentials kubernetes-admin     --client-certificate=/etc/kubernetes/pki/admin.pem     --client-key=/etc/kubernetes/pki/admin-key.pem     --embed-certs=<span class="literal">true</span>     --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">User <span class="string">"kubernetes-admin"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-context kubernetes-admin@kubernetes     --cluster=kubernetes     --user=kubernetes-admin     --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Context <span class="string">"kubernetes-admin@kubernetes"</span> created.</span><br><span class="line"></span><br><span class="line">$ kubectl config use-context kubernetes-admin@kubernetes     --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Switched to context <span class="string">"kubernetes-admin@kubernetes"</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看管理员证书</span></span><br><span class="line">$ ls /etc/kubernetes/</span><br><span class="line">执行结果：</span><br><span class="line">[root@k8s-master01 pki]<span class="comment"># ls /etc/kubernetes/</span></span><br><span class="line">admin.kubeconfig  controller-manager.kubeconfig  pki  scheduler.kubeconfig</span><br></pre></td></tr></table></figure><h4 id="7-生成密钥对（Master01）"><a href="#7-生成密钥对（Master01）" class="headerlink" title="7.生成密钥对（Master01）"></a>7.生成密钥对（Master01）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 生成私钥</span></span><br><span class="line">$ openssl genrsa -out /etc/kubernetes/pki/sa.key 2048</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">...+++</span><br><span class="line">....................................................................+++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line"><span class="comment"># 这个密钥通常用于 Kubernetes 集群中的服务帐户（Service Account）签名，确保服务帐户令牌的安全性。</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成公钥</span></span><br><span class="line">$ openssl rsa -<span class="keyword">in</span> /etc/kubernetes/pki/sa.key -pubout -out /etc/kubernetes/pki/sa.pub</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">writing RSA key</span><br><span class="line"><span class="comment"># 在 Kubernetes 中，公钥用于验证服务帐户令牌的签名，确保令牌的真实性和完整性。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 把证书传输到其他master节点</span></span><br><span class="line">$ <span class="keyword">for</span> NODE <span class="keyword">in</span> k8s-master02 k8s-master03; <span class="keyword">do</span> </span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> $(ls /etc/kubernetes/pki | grep -v etcd); <span class="keyword">do</span> </span><br><span class="line">scp /etc/kubernetes/pki/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/kubernetes/pki/<span class="variable">$&#123;FILE&#125;</span>;</span><br><span class="line"><span class="keyword">done</span>; </span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> admin.kubeconfig controller-manager.kubeconfig scheduler.kubeconfig; <span class="keyword">do</span> </span><br><span class="line">scp /etc/kubernetes/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/kubernetes/<span class="variable">$&#123;FILE&#125;</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">admin.csr                                  100% 1025     1.1MB/s   00:00    </span><br><span class="line">admin-key.pem                              100% 1675   819.8KB/s   00:00    </span><br><span class="line">admin.pem                                  100% 1444   672.3KB/s   00:00    </span><br><span class="line">apiserver.csr                              100% 1029   697.6KB/s   00:00    </span><br><span class="line">apiserver-key.pem                          100% 1679     1.9MB/s   00:00    </span><br><span class="line">apiserver.pem                              100% 1692   875.7KB/s   00:00    </span><br><span class="line">ca.csr                                     100% 1025   211.1KB/s   00:00    </span><br><span class="line">ca-key.pem                                 100% 1675   526.1KB/s   00:00    </span><br><span class="line">ca.pem                                     100% 1411     1.3MB/s   00:00    </span><br><span class="line">controller-manager.csr                     100% 1082     1.5MB/s   00:00    </span><br><span class="line">controller-manager-key.pem                 100% 1679   594.2KB/s   00:00    </span><br><span class="line">controller-manager.pem                     100% 1501   767.7KB/s   00:00    </span><br><span class="line">front-proxy-ca.csr                         100%  891   255.3KB/s   00:00    </span><br><span class="line">front-proxy-ca-key.pem                     100% 1679   626.4KB/s   00:00    </span><br><span class="line">front-proxy-ca.pem                         100% 1143   898.6KB/s   00:00    </span><br><span class="line">front-proxy-client.csr                     100%  903   363.8KB/s   00:00    </span><br><span class="line">front-proxy-client-key.pem                 100% 1675     1.2MB/s   00:00    </span><br><span class="line">front-proxy-client.pem                     100% 1188   692.6KB/s   00:00    </span><br><span class="line">sa.key                                     100% 1675     1.8MB/s   00:00    </span><br><span class="line">sa.pub                                     100%  451   313.4KB/s   00:00    </span><br><span class="line">scheduler.csr                              100% 1058     1.3MB/s   00:00    </span><br><span class="line">scheduler-key.pem                          100% 1679   640.1KB/s   00:00    </span><br><span class="line">scheduler.pem                              100% 1476     1.4MB/s   00:00    </span><br><span class="line">admin.kubeconfig                           100% 6451     2.5MB/s   00:00    </span><br><span class="line">controller-manager.kubeconfig              100% 6587     7.2MB/s   00:00    </span><br><span class="line">scheduler.kubeconfig                       100% 6515     3.3MB/s   00:00    </span><br><span class="line">          </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看证书</span></span><br><span class="line">$ ls /etc/kubernetes/pki/</span><br><span class="line">admin.csr      apiserver.csr      ca.csr      controller-manager.csr      front-proxy-ca.csr      front-proxy-client.csr      sa.key         scheduler-key.pem</span><br><span class="line">admin-key.pem  apiserver-key.pem  ca-key.pem  controller-manager-key.pem  front-proxy-ca-key.pem  front-proxy-client-key.pem  sa.pub         scheduler.pem</span><br><span class="line">admin.pem      apiserver.pem      ca.pem      controller-manager.pem      front-proxy-ca.pem      front-proxy-client.pem      scheduler.csr</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有节点证书数量</span></span><br><span class="line">$ ls /etc/kubernetes/pki/ |wc -l</span><br><span class="line"> 23</span><br></pre></td></tr></table></figure><hr><h2 id="四丶etcd组件配置"><a href="#四丶etcd组件配置" class="headerlink" title="四丶etcd组件配置"></a>四丶etcd组件配置</h2><p><strong>由于二进制部署kubernetes集群是以Linux中<code>守护进程</code>的方式启动，需要配置service文件；etcd配置大致相同，注意修改每个Master节点的etcd配置的主机名和IP地址</strong></p><h4 id="1-Master01配置"><a href="#1-Master01配置" class="headerlink" title="(1)Master01配置"></a>(1)Master01配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/etcd/etcd.config.yml</span><br><span class="line"></span><br><span class="line">name: <span class="string">'k8s-master01'</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">'https://192.168.174.30:2380'</span></span><br><span class="line">listen-client-urls: <span class="string">'https://192.168.174.30:2379,http://127.0.0.1:2379'</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">'https://192.168.174.30:2380'</span><span class="comment">#集群通讯</span></span><br><span class="line">advertise-client-urls: <span class="string">'https://192.168.174.30:2379'</span><span class="comment">#客户端连接</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">'proxy'</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">'k8s-master01=https://192.168.174.30:2380,k8s-master02=https://192.168.174.31:2380,k8s-master03=https://192.168.174.32:2380'</span></span><br><span class="line">initial-cluster-token: <span class="string">'etcd-k8s-cluster'</span></span><br><span class="line">initial-cluster-state: <span class="string">'new'</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line"><span class="built_in">enable</span>-v2: <span class="literal">true</span></span><br><span class="line"><span class="built_in">enable</span>-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">'off'</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line"><span class="built_in">log</span>-package-levels:</span><br><span class="line"><span class="built_in">log</span>-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="2-Master02配置"><a href="#2-Master02配置" class="headerlink" title="(2)Master02配置"></a>(2)Master02配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/etcd/etcd.config.yml</span><br><span class="line"></span><br><span class="line">name: <span class="string">'k8s-master02'</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">'https://192.168.174.31:2380'</span></span><br><span class="line">listen-client-urls: <span class="string">'https://192.168.174.31:2379,http://127.0.0.1:2379'</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">'https://192.168.174.31:2380'</span></span><br><span class="line">advertise-client-urls: <span class="string">'https://192.168.174.31:2379'</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">'proxy'</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">'k8s-master01=https://192.168.174.30:2380,k8s-master02=https://192.168.174.31:2380,k8s-master03=https://192.168.174.32:2380'</span></span><br><span class="line">initial-cluster-token: <span class="string">'etcd-k8s-cluster'</span></span><br><span class="line">initial-cluster-state: <span class="string">'new'</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line"><span class="built_in">enable</span>-v2: <span class="literal">true</span></span><br><span class="line"><span class="built_in">enable</span>-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">'off'</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line"><span class="built_in">log</span>-package-levels:</span><br><span class="line"><span class="built_in">log</span>-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="3-Master03配置"><a href="#3-Master03配置" class="headerlink" title="(3)Master03配置"></a>(3)Master03配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/etcd/etcd.config.yml</span><br><span class="line"></span><br><span class="line">name: <span class="string">'k8s-master03'</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">'https://192.168.174.32:2380'</span></span><br><span class="line">listen-client-urls: <span class="string">'https://192.168.174.32:2379,http://127.0.0.1:2379'</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">'https://192.168.174.32:2380'</span></span><br><span class="line">advertise-client-urls: <span class="string">'https://192.168.174.32:2379'</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">'proxy'</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">'k8s-master01=https://192.168.174.30:2380,k8s-master02=https://192.168.174.31:2380,k8s-master03=https://192.168.174.32:2380'</span></span><br><span class="line">initial-cluster-token: <span class="string">'etcd-k8s-cluster'</span></span><br><span class="line">initial-cluster-state: <span class="string">'new'</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line"><span class="built_in">enable</span>-v2: <span class="literal">true</span></span><br><span class="line"><span class="built_in">enable</span>-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">'off'</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd.pem'</span></span><br><span class="line">  key-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-key.pem'</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">'/etc/kubernetes/pki/etcd/etcd-ca.pem'</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line"><span class="built_in">log</span>-package-levels:</span><br><span class="line"><span class="built_in">log</span>-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="4-三台master创建service文件"><a href="#4-三台master创建service文件" class="headerlink" title="(4)三台master创建service文件"></a>(4)三台master创建service文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Service</span><br><span class="line">Documentation=https://coreos.com/etcd/docs/latest/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/etcd --config-file=/etc/etcd/etcd.config.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=etcd3.service</span><br></pre></td></tr></table></figure><h4 id="5-三台Master节点创建etcd的证书目录"><a href="#5-三台Master节点创建etcd的证书目录" class="headerlink" title="(5)三台Master节点创建etcd的证书目录"></a>(5)三台Master节点创建etcd的证书目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /etc/kubernetes/pki/etcd</span><br><span class="line">$ ln -s /etc/etcd/ssl/* /etc/kubernetes/pki/etcd/</span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now etcd</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Created symlink from /etc/systemd/system/etcd3.service to /usr/lib/systemd/system/etcd.service.</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/etcd.service to /usr/lib/systemd/system/etcd.service.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看日志，查看节点是否有报错</span></span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages</span><br><span class="line">执行结果：<span class="comment"># 全部是info，则为正常</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/2.png" alt="image-20240618104757337"></p><h4 id="6-三台Master节点查看etcd状态"><a href="#6-三台Master节点查看etcd状态" class="headerlink" title="(6)三台Master节点查看etcd状态"></a>(6)三台Master节点查看etcd状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line"></span><br><span class="line">$ etcdctl --endpoints=<span class="string">"192.168.174.30:2379,192.168.174.31:2379,192.168.174.32:2379"</span> --cacert=/etc/kubernetes/pki/etcd/etcd-ca.pem --cert=/etc/kubernetes/pki/etcd/etcd.pem --key=/etc/kubernetes/pki/etcd/etcd-key.pem  endpoint status --write-out=table</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/3.png" alt="image-20240618104927074"></p><blockquote><p>看到IS LEADER出现两个false一个true，只有一个主节点，两个从节点，主节点负责写，从节点负责读；当主节点宕机，会选取其他从节点作为主节点。<strong>三节点的etcd集群只能宕机一个</strong></p></blockquote><h2 id="五丶二进制集群高可用配置（三台Master节点；haproxy和keepalived）"><a href="#五丶二进制集群高可用配置（三台Master节点；haproxy和keepalived）" class="headerlink" title="五丶二进制集群高可用配置（三台Master节点；haproxy和keepalived）"></a>五丶二进制集群高可用配置（三台Master节点；haproxy和keepalived）</h2><p>⚠️: haproxy配置文件中端口需和签发证书时候的端口号一致（此处是8443）</p><h4 id="1-三台Master节点安装haproxy和keepalived"><a href="#1-三台Master节点安装haproxy和keepalived" class="headerlink" title="1.三台Master节点安装haproxy和keepalived"></a>1.三台Master节点安装haproxy和keepalived</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y haproxy keepalived</span><br></pre></td></tr></table></figure><h4 id="2-三台Master节点配置haproxy"><a href="#2-三台Master节点配置haproxy" class="headerlink" title="2.三台Master节点配置haproxy"></a>2.三台Master节点配置haproxy</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/haproxy/haproxy.cfg </span><br><span class="line"></span><br><span class="line">global</span><br><span class="line">  maxconn  2000</span><br><span class="line">  <span class="built_in">ulimit</span>-n  16384</span><br><span class="line">  <span class="built_in">log</span>  127.0.0.1 local0 err</span><br><span class="line">  stats timeout 30s</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  <span class="built_in">log</span> global</span><br><span class="line">  mode  http</span><br><span class="line">  option  httplog</span><br><span class="line">  timeout connect 5000</span><br><span class="line">  timeout client  50000</span><br><span class="line">  timeout server  50000</span><br><span class="line">  timeout http-request 15s</span><br><span class="line">  timeout http-keep-alive 15s</span><br><span class="line"></span><br><span class="line">frontend k8s-master</span><br><span class="line">  <span class="built_in">bind</span> 0.0.0.0:8443</span><br><span class="line">  <span class="built_in">bind</span> 127.0.0.1:8443</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  tcp-request inspect-delay 5s</span><br><span class="line">  default_backend k8s-master</span><br><span class="line"></span><br><span class="line">backend k8s-master</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  option tcp-check</span><br><span class="line">  balance roundrobin</span><br><span class="line">  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100</span><br><span class="line">  server k8s-master01    192.168.174.30:6443  check</span><br><span class="line">  server k8s-master02    192.168.174.31:6443  check</span><br><span class="line">  server k8s-master03    192.168.174.32:6443  check</span><br></pre></td></tr></table></figure><h4 id="3-三台Master配置keepalived"><a href="#3-三台Master配置keepalived" class="headerlink" title="3. 三台Master配置keepalived"></a>3. 三台Master配置keepalived</h4><p><strong>配置keepalived是注意网卡名称，IP地址，VIP</strong></p><h6 id="（1）Master01"><a href="#（1）Master01" class="headerlink" title="（1）Master01"></a>（1）Master01</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">"/etc/keepalived/check_apiserver.sh"</span></span><br><span class="line">    interval 5 </span><br><span class="line">    weight -5</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.174.30</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 101</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.174.66</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">      chk_apiserver </span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h6 id="（2）Master02"><a href="#（2）Master02" class="headerlink" title="（2）Master02"></a>（2）Master02</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">"/etc/keepalived/check_apiserver.sh"</span></span><br><span class="line">    interval 5 </span><br><span class="line">    weight -5</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.174.31</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.174.66</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">      chk_apiserver </span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h6 id="（3）Master03"><a href="#（3）Master03" class="headerlink" title="（3）Master03"></a>（3）Master03</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">"/etc/keepalived/check_apiserver.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.174.32</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.174.66</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">      chk_apiserver </span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h4 id="4-健康检查配置脚本（三台Master节点）"><a href="#4-健康检查配置脚本（三台Master节点）" class="headerlink" title="4.健康检查配置脚本（三台Master节点）"></a>4.健康检查配置脚本（三台Master节点）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/keepalived/check_apiserver.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">err=0</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> $(seq 1 3)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    check_code=$(pgrep haproxy)</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$check_code</span> == <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">        err=$(expr <span class="variable">$err</span> + 1)</span><br><span class="line">        sleep 1</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        err=0</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$err</span> != <span class="string">"0"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"systemctl stop keepalived"</span></span><br><span class="line">    /usr/bin/systemctl stop keepalived</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="5-启动haproxy和keepalived，并检查VIP-三台Master"><a href="#5-启动haproxy和keepalived，并检查VIP-三台Master" class="headerlink" title="5.启动haproxy和keepalived，并检查VIP(三台Master)"></a>5.启动haproxy和keepalived，并检查VIP(三台Master)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x /etc/keepalived/check_apiserver.sh</span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now haproxy keepalived</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有测试VIP</span></span><br><span class="line">$ ping 192.168.174.66</span><br><span class="line">PING 192.168.174.66 (192.168.174.66) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.174.66: icmp_seq=1 ttl=64 time=1.39 ms</span><br><span class="line">64 bytes from 192.168.174.66: icmp_seq=2 ttl=64 time=2.46 ms</span><br><span class="line">64 bytes from 192.168.174.66: icmp_seq=3 ttl=64 time=1.68 ms</span><br><span class="line">64 bytes from 192.168.174.66: icmp_seq=4 ttl=64 time=1.08 ms</span><br><span class="line"></span><br><span class="line">$ telnet 192.168.174.66 8443</span><br><span class="line">执行结果：（^成功）</span><br><span class="line">Trying 192.168.174.66...</span><br><span class="line">Connected to 192.168.174.66.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">Connection closed by foreign host.</span><br><span class="line"><span class="comment">#⚠️: 如果ping不通且telnet没有出现 ^]，则认为VIP不可以，不可在继续往下执行，需要排查keepalived的问题，比如防火墙和selinux，haproxy和keepalived的状态，监听端口等</span></span><br><span class="line">所有节点查看防火墙状态必须为<span class="built_in">disable</span>和inactive：systemctl status firewalld</span><br><span class="line">所有节点查看selinux状态，必须为<span class="built_in">disable</span>：getenforce</span><br><span class="line">master节点查看haproxy和keepalived状态：systemctl status keepalived haproxy</span><br><span class="line">master节点查看监听端口：netstat -lntp</span><br></pre></td></tr></table></figure><h2 id="六丶Kubernetes-Master节点组件安装"><a href="#六丶Kubernetes-Master节点组件安装" class="headerlink" title="六丶Kubernetes Master节点组件安装"></a>六丶Kubernetes Master节点组件安装</h2><h4 id="1-所有节点创建配置文件目录（Master-and-Node）-service文件目录，kebernetes配置文件所在目录"><a href="#1-所有节点创建配置文件目录（Master-and-Node）-service文件目录，kebernetes配置文件所在目录" class="headerlink" title="1. 所有节点创建配置文件目录（Master and Node）(service文件目录，kebernetes配置文件所在目录)"></a>1. 所有节点创建配置文件目录（Master and Node）(service文件目录，kebernetes配置文件所在目录)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /etc/kubernetes/manifests/ /etc/systemd/system/kubelet.service.d /var/lib/kubelet /var/<span class="built_in">log</span>/kubernetes</span><br></pre></td></tr></table></figure><h4 id="2-apiserver配置"><a href="#2-apiserver配置" class="headerlink" title="2.apiserver配置"></a>2.apiserver配置</h4><p><strong><code>注意配置文件中service的网段（--service-cluster-ip-range=10.96.0.0/16）注意本文档使用的k8s service网段为10.96.0.0/16，该网段不能和宿主机的网段、Pod网段的重复</code></strong></p><h6 id="1-Master01"><a href="#1-Master01" class="headerlink" title="(1)Master01"></a>(1)Master01</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/kube-apiserver.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --logtostderr=<span class="literal">true</span>  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --<span class="built_in">bind</span>-address=0.0.0.0  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --insecure-port=0  \</span><br><span class="line">      --advertise-address=192.168.174.30 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/16  \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://192.168.174.30:2379,https://192.168.174.31:2379,https://192.168.174.32:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --<span class="built_in">enable</span>-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --<span class="built_in">enable</span>-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User</span><br><span class="line">      <span class="comment"># --token-auth-file=/etc/kubernetes/token.csv</span></span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h6 id="2-Master02"><a href="#2-Master02" class="headerlink" title="(2)Master02"></a>(2)Master02</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ vim  /usr/lib/systemd/system/kube-apiserver.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --logtostderr=<span class="literal">true</span>  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --<span class="built_in">bind</span>-address=0.0.0.0  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --insecure-port=0  \</span><br><span class="line">      --advertise-address=192.168.174.31 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/16  \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://192.168.174.30:2379,https://192.168.174.31:2379,https://192.168.174.32:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --<span class="built_in">enable</span>-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --<span class="built_in">enable</span>-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User</span><br><span class="line">      <span class="comment"># --token-auth-file=/etc/kubernetes/token.csv</span></span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h6 id="3-Master03"><a href="#3-Master03" class="headerlink" title="(3)Master03"></a>(3)Master03</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ vim  /usr/lib/systemd/system/kube-apiserver.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --logtostderr=<span class="literal">true</span>  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --<span class="built_in">bind</span>-address=0.0.0.0  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --insecure-port=0  \</span><br><span class="line">      --advertise-address=192.168.174.32 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/16  \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://192.168.174.30:2379,https://192.168.174.31:2379,https://192.168.174.32:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --<span class="built_in">enable</span>-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --<span class="built_in">enable</span>-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User</span><br><span class="line">      <span class="comment"># --token-auth-file=/etc/kubernetes/token.csv</span></span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h6 id="4-所有Master节点启动apiserver"><a href="#4-所有Master节点启动apiserver" class="headerlink" title="(4)所有Master节点启动apiserver"></a>(4)所有Master节点启动apiserver</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 启动服务</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now kube-apiserver</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看服务的状态</span></span><br><span class="line">$ systemctl status kube-apiserver</span><br><span class="line">● kube-apiserver.service - Kubernetes API Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/kube-apiserver.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sat 2020-08-22 21:26:49 CST; 26s ago </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看日志</span></span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages (出现以下日志信息忽略)</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/4.png" alt="image-20240616020025439"></p><h4 id="3-kube-controller-manager配置（三台Master）"><a href="#3-kube-controller-manager配置（三台Master）" class="headerlink" title="3. kube-controller-manager配置（三台Master）"></a>3. kube-controller-manager配置（三台Master）</h4><p>​    <strong>注意使用的k8s Pod网段为172.16.0.0/16，该网段不能和宿主机的网段、k8s Service网段的重复，请按需修改</strong></p><h6 id="1-三台Master配置（同时执行，配置相同）"><a href="#1-三台Master配置（同时执行，配置相同）" class="headerlink" title="(1)三台Master配置（同时执行，配置相同）"></a>(1)三台Master配置（同时执行，配置相同）</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/kube-controller-manager.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-controller-manager \</span><br><span class="line">      --v=2 \</span><br><span class="line">      --logtostderr=<span class="literal">true</span> \</span><br><span class="line">      --address=127.0.0.1 \</span><br><span class="line">      --root-ca-file=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">      --cluster-signing-cert-file=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">      --cluster-signing-key-file=/etc/kubernetes/pki/ca-key.pem \</span><br><span class="line">      --service-account-private-key-file=/etc/kubernetes/pki/sa.key \</span><br><span class="line">      --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">      --leader-elect=<span class="literal">true</span> \</span><br><span class="line">      --use-service-account-credentials=<span class="literal">true</span> \</span><br><span class="line">      --node-monitor-grace-period=40s \</span><br><span class="line">      --node-monitor-period=5s \</span><br><span class="line">      --pod-eviction-timeout=2m0s \</span><br><span class="line">      --controllers=*,bootstrapsigner,tokencleaner \</span><br><span class="line">      --allocate-node-cidrs=<span class="literal">true</span> \</span><br><span class="line">      --cluster-cidr=172.16.0.0/16 \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem \</span><br><span class="line">      --node-cidr-mask-size=24</span><br><span class="line">      </span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h6 id="2-三台Master节点启动kube-controller-manager"><a href="#2-三台Master节点启动kube-controller-manager" class="headerlink" title="(2)三台Master节点启动kube-controller-manager"></a>(2)三台Master节点启动kube-controller-manager</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload  &amp;&amp; systemctl <span class="built_in">enable</span> --now kube-controller-manager</span><br><span class="line"></span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/5.png" alt="image-20240616020438903"></p><h4 id="4-Master节点配置-kube-scheduler（三台Master节点）"><a href="#4-Master节点配置-kube-scheduler（三台Master节点）" class="headerlink" title="4. Master节点配置 kube-scheduler（三台Master节点）"></a>4. Master节点配置 kube-scheduler（三台Master节点）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/kube-scheduler.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-scheduler \</span><br><span class="line">      --v=2 \</span><br><span class="line">      --logtostderr=<span class="literal">true</span> \</span><br><span class="line">      --address=127.0.0.1 \</span><br><span class="line">      --leader-elect=<span class="literal">true</span> \</span><br><span class="line">      --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动服务</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now kube-scheduler</span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/6.png" alt="image-20240616020628347"></p><h2 id="七丶TLS-Bootstrapping配置（Master01）"><a href="#七丶TLS-Bootstrapping配置（Master01）" class="headerlink" title="七丶TLS Bootstrapping配置（Master01）"></a>七丶TLS Bootstrapping配置（Master01）</h2><p><strong>⚠️:由于工作节点较多，且每个节点的kubelet证书不一致，且kubelet和主机的主机名IP地址存在关系，不能统一的去生成，所以 Bootstrap会自动的为工作节点颁发kubelet证书。</strong></p><p><code>其中如下配置按需更改192.168.174.66:8443为VIP地址及端口号</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 配置Bootstrap的文件</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install/bootstrap</span><br><span class="line">$ kubectl config <span class="built_in">set</span>-cluster kubernetes     --certificate-authority=/etc/kubernetes/pki/ca.pem     --embed-certs=<span class="literal">true</span>     --server=https://192.168.174.66:8443     --kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Cluster <span class="string">"kubernetes"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-credentials tls-bootstrap-token-user     --token=c8ad9c.2e4d610cf3e7426e --kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">User <span class="string">"tls-bootstrap-token-user"</span> <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line">$ kubectl config <span class="built_in">set</span>-context tls-bootstrap-token-user@kubernetes     --cluster=kubernetes     --user=tls-bootstrap-token-user     --kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Context <span class="string">"tls-bootstrap-token-user@kubernetes"</span> created.</span><br><span class="line"></span><br><span class="line">$ kubectl config use-context tls-bootstrap-token-user@kubernetes     --kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Switched to context <span class="string">"tls-bootstrap-token-user@kubernetes"</span>.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建kubectl需要的执行配置文件（不创建；kubectl无法执行，其他master节点操作一致）</span></span><br><span class="line">$ mkdir -p /root/.kube; cp /etc/kubernetes/admin.kubeconfig /root/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看集群状态，否则无法继续执行</span></span><br><span class="line">$ kubectl get cs</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">   Warning: v1 ComponentStatus is deprecated <span class="keyword">in</span> v1.19+</span><br><span class="line">NAME                 STATUS    MESSAGE                         ERROR</span><br><span class="line">scheduler            Healthy   ok                              </span><br><span class="line">controller-manager   Healthy   ok                              </span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>,<span class="string">"reason"</span>:<span class="string">""</span>&#125;   </span><br><span class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>,<span class="string">"reason"</span>:<span class="string">""</span>&#125;   </span><br><span class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>,<span class="string">"reason"</span>:<span class="string">""</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看集群状态</span></span><br><span class="line">$ kubectl cluster-info</span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">Kubernetes control plane is running at https://192.168.174.66:8443</span><br><span class="line"></span><br><span class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建bootstrap的token值</span></span><br><span class="line">$ kubectl create -f bootstrap.secret.yaml</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/7.png" alt="image-20240616021441067"></p><h2 id="1-Node节点配置"><a href="#1-Node节点配置" class="headerlink" title="1.Node节点配置"></a>1.Node节点配置</h2><h3 id="1-传输其他节点所需要的证书（聚合证书，根证书，bootstrap证书）"><a href="#1-传输其他节点所需要的证书（聚合证书，根证书，bootstrap证书）" class="headerlink" title="(1)传输其他节点所需要的证书（聚合证书，根证书，bootstrap证书）"></a>(1)传输其他节点所需要的证书（聚合证书，根证书，bootstrap证书）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; Master01</span></span><br><span class="line">$ vim scp.sh</span><br><span class="line">NODE=<span class="string">'k8s-master02 k8s-master03 k8s-node01 k8s-node02'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$NODE</span>;<span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$i</span> mkdir -p /etc/kubernetes/pki</span><br><span class="line">   <span class="keyword">for</span> FILE <span class="keyword">in</span> pki/ca.pem pki/ca-key.pem pki/front-proxy-ca.pem bootstrap-kubelet.kubeconfig;<span class="keyword">do</span></span><br><span class="line">      scp /etc/kubernetes/<span class="variable">$FILE</span> <span class="variable">$i</span>:/etc/kubernetes/<span class="variable">$&#123;FILE&#125;</span></span><br><span class="line">      <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">$ bash scp.sh</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/8.png" alt="image-20240618110930009"></p><h3 id="2-kubelet配置-Master-and-Node"><a href="#2-kubelet配置-Master-and-Node" class="headerlink" title="(2)kubelet配置(Master and Node)"></a>(2)kubelet配置(Master and Node)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建需要的文件目录</span></span><br><span class="line">$ mkdir -p /var/lib/kubelet /var/<span class="built_in">log</span>/kubernetes /etc/systemd/system/kubelet.service.d /etc/kubernetes/manifests/</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有节点配置kubelet service</span></span><br><span class="line">$ vim  /usr/lib/systemd/system/kubelet.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kubelet</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">RestartSec=10</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 如果Runtime为Docker，请使用如下Kubelet的配置：</span></span><br><span class="line">$ vim /etc/systemd/system/kubelet.service.d/10-kubelet.conf</span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig --kubeconfig=/etc/kubernetes/kubelet.kubeconfig"</span></span><br><span class="line">Environment=<span class="string">"KUBELET_SYSTEM_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin"</span></span><br><span class="line">Environment=<span class="string">"KUBELET_CONFIG_ARGS=--config=/etc/kubernetes/kubelet-conf.yml --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.5"</span></span><br><span class="line">Environment=<span class="string">"KUBELET_EXTRA_ARGS=--node-labels=node.kubernetes.io/node='' "</span></span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kubelet <span class="variable">$KUBELET_KUBECONFIG_ARGS</span> <span class="variable">$KUBELET_CONFIG_ARGS</span> <span class="variable">$KUBELET_SYSTEM_ARGS</span> <span class="variable">$KUBELET_EXTRA_ARGS</span></span><br></pre></td></tr></table></figure><h3 id="3-kubelet配置文件编写-master-and-node"><a href="#3-kubelet配置文件编写-master-and-node" class="headerlink" title="(3)kubelet配置文件编写(master and node)"></a>(3)kubelet配置文件编写(master and node)</h3><p><strong>如果更改了k8s的service网段，需要更改kubelet-conf.yml 的clusterDNS:配置，改成k8s Service网段的第十个地址，比如10.96.0.10/16</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/kubernetes/kubelet-conf.yml</span><br><span class="line"></span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">address: 0.0.0.0</span><br><span class="line">port: 10250</span><br><span class="line">readOnlyPort: 10255</span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line">  webhook:</span><br><span class="line">    cacheTTL: 2m0s</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">  x509:</span><br><span class="line">    clientCAFile: /etc/kubernetes/pki/ca.pem</span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook:</span><br><span class="line">    cacheAuthorizedTTL: 5m0s</span><br><span class="line">    cacheUnauthorizedTTL: 30s</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">cgroupsPerQOS: <span class="literal">true</span></span><br><span class="line">clusterDNS:</span><br><span class="line">- 10.96.0.10   <span class="comment">#coredns地址</span></span><br><span class="line">clusterDomain: cluster.local</span><br><span class="line">containerLogMaxFiles: 5</span><br><span class="line">containerLogMaxSize: 10Mi</span><br><span class="line">contentType: application/vnd.kubernetes.protobuf</span><br><span class="line">cpuCFSQuota: <span class="literal">true</span></span><br><span class="line">cpuManagerPolicy: none</span><br><span class="line">cpuManagerReconcilePeriod: 10s</span><br><span class="line">enableControllerAttachDetach: <span class="literal">true</span></span><br><span class="line">enableDebuggingHandlers: <span class="literal">true</span></span><br><span class="line">enforceNodeAllocatable:</span><br><span class="line">- pods</span><br><span class="line">eventBurst: 10</span><br><span class="line">eventRecordQPS: 5</span><br><span class="line">evictionHard:</span><br><span class="line">  imagefs.available: 15%</span><br><span class="line">  memory.available: 100Mi</span><br><span class="line">  nodefs.available: 10%</span><br><span class="line">  nodefs.inodesFree: 5%</span><br><span class="line">evictionPressureTransitionPeriod: 5m0s</span><br><span class="line">failSwapOn: <span class="literal">true</span></span><br><span class="line">fileCheckFrequency: 20s</span><br><span class="line">hairpinMode: promiscuous-bridge</span><br><span class="line">healthzBindAddress: 127.0.0.1</span><br><span class="line">healthzPort: 10248</span><br><span class="line">httpCheckFrequency: 20s</span><br><span class="line">imageGCHighThresholdPercent: 85</span><br><span class="line">imageGCLowThresholdPercent: 80</span><br><span class="line">imageMinimumGCAge: 2m0s</span><br><span class="line">iptablesDropBit: 15</span><br><span class="line">iptablesMasqueradeBit: 14</span><br><span class="line">kubeAPIBurst: 10</span><br><span class="line">kubeAPIQPS: 5</span><br><span class="line">makeIPTablesUtilChains: <span class="literal">true</span></span><br><span class="line">maxOpenFiles: 1000000</span><br><span class="line">maxPods: 110</span><br><span class="line">nodeStatusUpdateFrequency: 10s</span><br><span class="line">oomScoreAdj: -999</span><br><span class="line">podPidsLimit: -1</span><br><span class="line">registryBurst: 10</span><br><span class="line">registryPullQPS: 5</span><br><span class="line">resolvConf: /etc/resolv.conf</span><br><span class="line">rotateCertificates: <span class="literal">true</span></span><br><span class="line">runtimeRequestTimeout: 2m0s</span><br><span class="line">serializeImagePulls: <span class="literal">true</span></span><br><span class="line">staticPodPath: /etc/kubernetes/manifests</span><br><span class="line">streamingConnectionIdleTimeout: 4h0m0s</span><br><span class="line">syncFrequency: 1m0s</span><br><span class="line">volumeStatsAggPeriod: 1m0s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动服务</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Dec  5 18:04:04 k8s-master01 kubelet: I1205 18:04:04.737643    6050 cni.go:240] <span class="string">"Unable to update cni config"</span> err=<span class="string">"no networks found in /etc/cni/net.d"</span></span><br><span class="line">Dec  5 18:04:05 k8s-master01 kubelet: E1205 18:04:05.374596    6050 kubelet.go:2391] <span class="string">"Container runtime network not ready"</span> networkReady=<span class="string">"NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized"</span></span><br><span class="line">Dec  5 18:04:09 k8s-master01 kubelet: I1205 18:04:09.738224    6050 cni.go:240] <span class="string">"Unable to update cni config"</span> err=<span class="string">"no networks found in /etc/cni/net.d"</span></span><br><span class="line">Dec  5 18:04:10 k8s-master01 kubelet: E1205 18:04:10.379233    6050 kubelet.go:2391] <span class="string">"Container runtime network not ready"</span> networkReady=<span class="string">"NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized"</span></span><br><span class="line">Dec  5 18:04:14 k8s-master01 kubelet: I1205 18:04:14.738919    6050 cni.go:240] <span class="string">"Unable to update cni config"</span> err=<span class="string">"no networks found in /etc/cni/net.d"</span></span><br><span class="line">Dec  5 18:04:15 k8s-master01 kubelet: E1205 18:04:15.386167    6050 kubelet.go:2391] <span class="string">"Container runtime network not ready"</span> networkReady=<span class="string">"NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized"</span></span><br><span class="line"><span class="comment">#由于没有安装CNI查看导致的。等后续安装calico后恢复正常</span></span><br></pre></td></tr></table></figure><h2 id="2-kube-proxy配置（Master01）"><a href="#2-kube-proxy配置（Master01）" class="headerlink" title="2.kube-proxy配置（Master01）"></a>2.kube-proxy配置（Master01）</h2><p>​    <strong>如果不是高可用集群，192.168.174.66:8443改为master01的地址，8443改为apiserver的端口，默认是6443</strong></p><h6 id="1-kube-proxy配置创建"><a href="#1-kube-proxy配置创建" class="headerlink" title="(1)kube-proxy配置创建"></a>(1)kube-proxy配置创建</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install</span><br><span class="line">$ kubectl -n kube-system create serviceaccount kube-proxy</span><br><span class="line"></span><br><span class="line">kubectl create clusterrolebinding system:kube-proxy         --clusterrole system:node-proxier         --serviceaccount kube-system:kube-proxy</span><br><span class="line"></span><br><span class="line">SECRET=$(kubectl -n kube-system get sa/kube-proxy \</span><br><span class="line">    --output=jsonpath=<span class="string">'&#123;.secrets[0].name&#125;'</span>)</span><br><span class="line"></span><br><span class="line">JWT_TOKEN=$(kubectl -n kube-system get secret/<span class="variable">$SECRET</span> \</span><br><span class="line">--output=jsonpath=<span class="string">'&#123;.data.token&#125;'</span> | base64 -d)</span><br><span class="line"></span><br><span class="line">PKI_DIR=/etc/kubernetes/pki</span><br><span class="line">K8S_DIR=/etc/kubernetes</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes     --certificate-authority=/etc/kubernetes/pki/ca.pem     --embed-certs=<span class="literal">true</span>     --server=https://192.168.174.66:8443     --kubeconfig=<span class="variable">$&#123;K8S_DIR&#125;</span>/kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubernetes     --token=<span class="variable">$&#123;JWT_TOKEN&#125;</span>     --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-context kubernetes     --cluster=kubernetes     --user=kubernetes     --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context kubernetes     --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将kube-proxy配置文件传输给其他集群</span></span><br><span class="line">$ <span class="keyword">for</span> NODE <span class="keyword">in</span> k8s-master02 k8s-master03; <span class="keyword">do</span></span><br><span class="line">     scp /etc/kubernetes/kube-proxy.kubeconfig  <span class="variable">$NODE</span>:/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> k8s-node01 k8s-node02; <span class="keyword">do</span></span><br><span class="line">     scp /etc/kubernetes/kube-proxy.kubeconfig <span class="variable">$NODE</span>:/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"> <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h6 id="2-所有节点添加kube-proxy的配置和service文件（Master-and-Node）"><a href="#2-所有节点添加kube-proxy的配置和service文件（Master-and-Node）" class="headerlink" title="(2)所有节点添加kube-proxy的配置和service文件（Master and Node）"></a>(2)所有节点添加kube-proxy的配置和service文件（Master and Node）</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; kube-proxy service文件</span></span><br><span class="line">$ vim /usr/lib/systemd/system/kube-proxy.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube Proxy</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-proxy \</span><br><span class="line">  --config=/etc/kubernetes/kube-proxy.yaml \</span><br><span class="line">  --v=2</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; kube-proxy配置文件</span></span><br><span class="line">⚠️: 如果更改了集群Pod的网段，需要更改kube-proxy.yaml的clusterCIDR为自己的Pod网段</span><br><span class="line">$ vim /etc/kubernetes/kube-proxy.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">bindAddress: 0.0.0.0</span><br><span class="line">clientConnection:</span><br><span class="line">  acceptContentTypes: <span class="string">""</span></span><br><span class="line">  burst: 10</span><br><span class="line">  contentType: application/vnd.kubernetes.protobuf</span><br><span class="line">  kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line">  qps: 5</span><br><span class="line">clusterCIDR: 172.16.0.0/16 </span><br><span class="line">configSyncPeriod: 15m0s</span><br><span class="line">conntrack:</span><br><span class="line">  max: null</span><br><span class="line">  maxPerCore: 32768</span><br><span class="line">  min: 131072</span><br><span class="line">  tcpCloseWaitTimeout: 1h0m0s</span><br><span class="line">  tcpEstablishedTimeout: 24h0m0s</span><br><span class="line">enableProfiling: <span class="literal">false</span></span><br><span class="line">healthzBindAddress: 0.0.0.0:10256</span><br><span class="line">hostnameOverride: <span class="string">""</span></span><br><span class="line">iptables:</span><br><span class="line">  masqueradeAll: <span class="literal">false</span></span><br><span class="line">  masqueradeBit: 14</span><br><span class="line">  minSyncPeriod: 0s</span><br><span class="line">  syncPeriod: 30s</span><br><span class="line">ipvs:</span><br><span class="line">  masqueradeAll: <span class="literal">true</span></span><br><span class="line">  minSyncPeriod: 5s</span><br><span class="line">  scheduler: <span class="string">"rr"</span></span><br><span class="line">  syncPeriod: 30s</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">metricsBindAddress: 127.0.0.1:10249</span><br><span class="line">mode: <span class="string">"ipvs"</span></span><br><span class="line">nodePortAddresses: null</span><br><span class="line">oomScoreAdj: -999</span><br><span class="line">portRange: <span class="string">""</span></span><br><span class="line">udpIdleTimeout: 250ms</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动服务</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> --now kube-proxy</span><br><span class="line">执行结果：</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/kube-proxy.service → /usr/lib/systemd/system/kube-proxy.service</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看日志是否报错</span></span><br><span class="line">$ tail -f /var/<span class="built_in">log</span>/messages</span><br><span class="line">执行结果：</span><br><span class="line">   Dec  5 18:21:54 k8s-master01 kube-proxy: I1205 18:21:54.989375    9811 shared_informer.go:247] Caches are synced <span class="keyword">for</span> service config</span><br><span class="line">Dec  5 18:21:54 k8s-master01 kube-proxy: I1205 18:21:54.989564    9811 service.go:419] <span class="string">"Adding new service port"</span> portName=<span class="string">"default/kubernetes:https"</span> servicePort=<span class="string">"10.96.0.1:443/TCP"</span></span><br><span class="line">Dec  5 18:21:54 k8s-master01 kube-proxy: I1205 18:21:54.993513    9811 shared_informer.go:247] Caches are synced <span class="keyword">for</span> node config</span><br></pre></td></tr></table></figure><h2 id="八丶安装Calico（Master01）"><a href="#八丶安装Calico（Master01）" class="headerlink" title="八丶安装Calico（Master01）"></a>八丶安装Calico（Master01）</h2><p>​        ⚠️: 安装官方推荐版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install/calico</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更改calico的网段，改为自己的Pod网段</span></span><br><span class="line">$ sed -i <span class="string">"s#POD_CIDR#172.16.0.0/16#g"</span> calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 检查网段是自己的Pod网段</span></span><br><span class="line">$ grep <span class="string">"IPV4POOL_CIDR"</span> calico.yaml  -A 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建calico</span></span><br><span class="line">$ kubectl apply -f calico.yaml</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">service/calico-typha created</span><br><span class="line">deployment.apps/calico-typha created</span><br><span class="line">Warning: policy/v1beta1 PodDisruptionBudget is deprecated <span class="keyword">in</span> v1.21+, unavailable <span class="keyword">in</span> v1.25+; use policy/v1 PodDisruptionBudget</span><br><span class="line">poddisruptionbudget.policy/calico-typha created</span><br><span class="line">daemonset.apps/calico-node created</span><br><span class="line">serviceaccount/calico-node created</span><br><span class="line">deployment.apps/calico-kube-controllers created</span><br><span class="line">serviceaccount/calico-kube-controllers created</span><br><span class="line">poddisruptionbudget.policy/calico-kube-controllers created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看容器状态</span></span><br><span class="line">$ kubectl get po -n kube-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS      AGE</span><br><span class="line">calico-kube-controllers-66686fdb54-mk2g6   1/1     Running   1 (20s ago)   85s</span><br><span class="line">calico-node-8fxqp                          1/1     Running   0             85s</span><br><span class="line">calico-node-8nkfl                          1/1     Running   0             86s</span><br><span class="line">calico-node-pmpf4                          1/1     Running   0             86s</span><br><span class="line">calico-node-vnlk7                          1/1     Running   0             86s</span><br><span class="line">calico-node-xpchb                          1/1     Running   0             85s</span><br><span class="line">calico-typha-67c6dc57d6-259t8              1/1     Running   0             86s</span><br><span class="line">calico-typha-67c6dc57d6-49h5d              1/1     Running   0             86s</span><br><span class="line">calico-typha-67c6dc57d6-rsc7n              1/1     Running   0             86s</span><br><span class="line">⚠️: 如果容器状态异常可以使用kubectl describe 或者kubectl logs查看容器的日志</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/9.png" alt="image-20240618193903565"></p><h2 id="九丶安装CoreDNS"><a href="#九丶安装CoreDNS" class="headerlink" title="九丶安装CoreDNS"></a>九丶安装CoreDNS</h2><h6 id="1-安装官方推荐版本"><a href="#1-安装官方推荐版本" class="headerlink" title="(1)安装官方推荐版本"></a>(1)安装官方推荐版本</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更改了k8s service的网段需要将coredns的serviceIP改成k8s service网段的第十个IP</span></span><br><span class="line">$ COREDNS_SERVICE_IP=`kubectl get svc | grep kubernetes | awk <span class="string">'&#123;print $3&#125;'</span>`0</span><br><span class="line">$ sed -i <span class="string">"s#KUBEDNS_SERVICE_IP#<span class="variable">$&#123;COREDNS_SERVICE_IP&#125;</span>#g"</span> CoreDNS/coredns.yaml</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装CoreDNS</span></span><br><span class="line">$ kubectl  create -f CoreDNS/coredns.yaml</span><br><span class="line">serviceaccount/coredns created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">configmap/coredns created</span><br><span class="line">deployment.apps/coredns created</span><br><span class="line">service/kube-dns created</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/10.png" alt="image-20240618193828829"></p><h6 id="2-或者安装最新版"><a href="#2-或者安装最新版" class="headerlink" title="(2)或者安装最新版"></a>(2)或者安装最新版</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 更改了k8s service的网段需要将coredns的serviceIP改成k8s service网段的第十个IP</span></span><br><span class="line">$ COREDNS_SERVICE_IP=`kubectl get svc | grep kubernetes | awk <span class="string">'&#123;print $3&#125;'</span>`0</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/coredns/deployment.git</span><br><span class="line">$ <span class="built_in">cd</span> deployment/kubernetes</span><br><span class="line">$ ./deploy.sh -s -i <span class="variable">$&#123;COREDNS_SERVICE_IP&#125;</span> | kubectl apply -f -</span><br><span class="line">serviceaccount/coredns created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">configmap/coredns created</span><br><span class="line">deployment.apps/coredns created</span><br><span class="line">service/kube-dns created</span><br><span class="line">查看状态</span><br><span class="line">$ kubectl get po -n kube-system -l k8s-app=kube-dns</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-85b4878f78-h29kh   1/1     Running   0          8h</span><br></pre></td></tr></table></figure><h2 id="十丶安装Metrics-Server"><a href="#十丶安装Metrics-Server" class="headerlink" title="十丶安装Metrics Server"></a>十丶安装Metrics Server</h2><p>​      在新版的Kubernetes中系统资源的采集均使用Metrics-server，可以通过Metrics采集节点和Pod的内存、磁盘、CPU和网络的使用率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install/metrics-server</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建服务</span></span><br><span class="line">$ kubectl  create -f .</span><br><span class="line">serviceaccount/metrics-server created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:metrics-server created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created</span><br><span class="line">service/metrics-server created</span><br><span class="line">deployment.apps/metrics-server created</span><br><span class="line">apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 等待metrics server启动然后查看状态</span></span><br><span class="line">$ kubectl  top node</span><br><span class="line">NAME           CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">k8s-master01   231m         5%     1620Mi          42%       </span><br><span class="line">k8s-master02   274m         6%     1203Mi          31%       </span><br><span class="line">k8s-master03   202m         5%     1251Mi          32%       </span><br><span class="line">k8s-node01     69m          1%     667Mi           17%       </span><br><span class="line">k8s-node02     73m          1%     650Mi           16%</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/11.png" alt="image-20240618193945746"></p><h2 id="十一丶Dashboard"><a href="#十一丶Dashboard" class="headerlink" title="十一丶Dashboard"></a>十一丶Dashboard</h2><p>官方GitHub地址：<a href="https://github.com/kubernetes/dashboard" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /root/kubernetes_install/dashboard</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Dashboard</span></span><br><span class="line">$ kubectl  create -f . </span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">serviceaccount/admin-user created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/admin-user created</span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Dashborad</span></span><br><span class="line">$ kubectl get po -n kubernetes-dashboard</span><br><span class="line"><span class="comment">#执行结果：</span></span><br><span class="line">kubernetes-dashboard-85f59f8ff7-lrj4n        1/1     Running   0          2m15s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Dashdoard暴露的端口号</span></span><br><span class="line">$ kubectl get svc -n kubernetes-dashboard</span><br><span class="line">执行结果：</span><br><span class="line">NAME                        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.96.29.130   &lt;none&gt;        8000/TCP        24m</span><br><span class="line">kubernetes-dashboard        NodePort    10.96.0.121    &lt;none&gt;        443:32117/TCP   24m</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Token值</span></span><br><span class="line">$ kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/12.png" alt="image-20240616031745035"></p><p>  <strong>登录Dashboard</strong></p><p><strong>https://节点IP:32117</strong></p><p>谷歌游览器修改目标</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--test-type --ignore-certificate-errors</span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/13.png" alt="image-20240616031925822"></p><h2 id="十二丶集群验证"><a href="#十二丶集群验证" class="headerlink" title="十二丶集群验证"></a>十二丶集群验证</h2><p><strong>查看kube-apiserver的证书有效时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 pki]<span class="comment"># openssl x509 -enddate -noout -in /etc/kubernetes/pki/apiserver.pem</span></span><br><span class="line">notAfter=May 22 17:10:00 2124 GMT</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 安装pod，测试集群连通性</span></span><br><span class="line">$ cat&lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: busybox</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: busybox</span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/busybox:latest</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - sleep</span><br><span class="line">      - <span class="string">"3600"</span></span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  restartPolicy: Always</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看kubernetes下的service</span></span><br><span class="line">$ kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; busybox解析同namespace下的service</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span>  busybox -n default -- nslookup kubernetes</span><br><span class="line">执行结果：（成功）</span><br><span class="line">Server:    10.96.0.10</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line">     Name:      kubernetes</span><br><span class="line">Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; busybox跨namespace解析kube-system下的namespace</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span>  busybox -n default -- nslookup kube-dns.kube-system.svc.cluster.local</span><br><span class="line">执行结果：</span><br><span class="line">Server:    10.96.0.10</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line">    Name:      kube-dns.kube-system</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 每个节点都必须要访问kubernetes的service:443和kube-dns的service:53</span></span><br><span class="line">$ telnet 10.96.0.1 443   <span class="comment">#kubernetes下的service（kubectl get svc）</span></span><br><span class="line"><span class="comment"># 返回结果：</span></span><br><span class="line">Trying 10.96.0.1...</span><br><span class="line">Connected to 10.96.0.1.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line"></span><br><span class="line">$ telnet 10.96.0.10 53   <span class="comment">#kube-system下的service (kubectl get svc -n kube-system)</span></span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line">Trying 10.96.0.10...</span><br><span class="line">Connected to 10.96.0.10.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">Connection closed by foreign host.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Pod和Pod之间通信测试</span></span><br><span class="line">  <span class="comment">#&gt;&gt;&gt; 进入一个Pod当中</span></span><br><span class="line">  $ kubectl <span class="built_in">exec</span> -it pod名称 -n 命名空间 -- sh/bash</span><br><span class="line">  <span class="comment">#&gt;&gt;&gt; ping其他Pod</span></span><br><span class="line">  / <span class="comment"># ping 172.25.244.193</span></span><br><span class="line">  <span class="comment">#&gt;&gt;&gt; ping宿主机</span></span><br><span class="line">  / <span class="comment"># ping 192.168.174.30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建一个deployment副本</span></span><br><span class="line">$ kubectl create deploy nginx --image=registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:v1.21 --replicas=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看创建的副本</span></span><br><span class="line">$ kubectl get deploy</span><br><span class="line">执行结果：</span><br><span class="line">NAME    READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES        SELECTOR</span><br><span class="line">nginx   0/1     1            0           7m35s   nginx        nginx:v1.21   app=nginx</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除创建的deployment副本</span></span><br><span class="line">$ kubectl delete deploy nginx</span><br></pre></td></tr></table></figure><p><strong>集群验证步骤：</strong></p><ul><li><strong>Pod必须解析service，Pod必须能解析跨namespace的service</strong></li><li><strong>每个节点都必须要访问kubernetes的service:443和kube-dns的service:53</strong></li><li><strong>每个Pod和Pod之间能通信（同namespace能通信，跨namespace能通信，跨主机通信）</strong></li></ul><h2 id="十三、kube-master的组件状态"><a href="#十三、kube-master的组件状态" class="headerlink" title="十三、kube-master的组件状态"></a>十三、kube-master的组件状态</h2><p>​    <strong>在kubernetes集群中master节点有三个控制组件，其中kube-apiserver为无状态服务，而另外两个组件是有状态服务，这两个组件同时只会运行集群中的任意一个。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看kube-controller-manager、kube-scheduler正在运行的节点</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get leases -n kube-system</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/15/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/kubernetes%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%EF%BC%88v1.23+%EF%BC%89/14.png" alt="image-20240617194259305"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes容器编排工具部署（adm）</title>
    <link href="https://l66stbz.github.io/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/"/>
    <id>https://l66stbz.github.io/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/</id>
    <published>2024-09-14T13:50:00.000Z</published>
    <updated>2024-09-26T12:41:30.009Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Kubernetes容器编排adm部署"><a href="#Kubernetes容器编排adm部署" class="headerlink" title="Kubernetes容器编排adm部署"></a>Kubernetes容器编排adm部署</h1><hr><p>[TOC]</p><h1 id="1、kubernetes组件信息"><a href="#1、kubernetes组件信息" class="headerlink" title="1、kubernetes组件信息"></a>1、kubernetes组件信息</h1><h2 id="1-1-Master节点组件"><a href="#1-1-Master节点组件" class="headerlink" title="1.1 Master节点组件"></a>1.1 Master节点组件</h2><ul><li>*<em>APIServer *</em>：是整个集群的控制中枢，提供集群中各个模块之间的数据交换，并将集群状态和信息存储到分布式键-值(key-value)存储系统Etcd集群中。同时它也是集群管理、资源配额、提供完备的集群安全机制的入口，为集群各类资源对象提供增删改查以及watch的REST API接口。</li><li><strong>Scheduler - Scheduler</strong>：是集群Pod的调度中心，主要是通过调度算法将Pod分配到最佳的Node节点，它通过APIServer监听所有Pod的状态，一旦发现新的未被调度到任何Node节点的Pod( PodSpec.NodeName为空），就会根据一系列策略选择最佳节点进行调度。</li><li><strong>Controller Manager</strong> ：是集群状态管理器，以保证Pod或其他资源达到期望值。当集群中某个Pod的副本数或其他资源因故障和错误导致无法正常运行，没有达到设定的值时，Controller Manager会尝试自动修复并使其达到期望状态。</li><li><strong>Etcd -Etcd</strong>：由Coreos开发，用于可靠地存储集群的配置数据，是一种持久性、轻量型、分布式的键-值（key-value）数据存储组件，作为Kubernetes集群的持久化存储系统。</li></ul><h2 id="1-2-Node节点组件"><a href="#1-2-Node节点组件" class="headerlink" title="1.2 Node节点组件"></a>1.2 Node节点组件</h2><ul><li><strong>Kubelet</strong>：负责与Master通信协作，管理该节点上的Pod，对容器进行健康检查及监控，同时负责玊报节点和节点上面Pod的状态。</li><li><strong>Kube-Proxy</strong>：负责各Pod之间的通信和负载均衡，将指定的流量分发到后端正确的机器上。Runtime:负责容器的管理。</li><li><strong>CoreDNS</strong>：用于Kubernetes集群内部Service的解析，可以让Pod把Service名称解析成Service的IP，然后通过service的IP地址进行连接到对应的应用上。</li><li><strong>Calico</strong>：符合CNI标准的一个网络插件，它负责给每个Pod分配一个不会重复的IP，并且把每个节点当做一各“路由器”，这样一个节点的Pod就可以通过IP地址访问到其他节点的Pod。</li></ul><h1 id="2、安装初始化"><a href="#2、安装初始化" class="headerlink" title="2、安装初始化"></a>2、安装初始化</h1><p>⚠️：<strong>生产环境当中一般选择3台master。</strong></p><p>​         <strong>Master节点和Worker节点的IP地址网段区分开；防止后期由于业务增长，节点资源需要扩充，方便运维管理。</strong></p><table><thead><tr><th>role</th><th>ipaddress</th><th>configure</th></tr></thead><tbody><tr><td>k8s-master01（etcd )</td><td>192.168.174.110</td><td>4 core, 4Gb; 50GBS, CentOS 7.9</td></tr><tr><td>k8s-node01</td><td>192.168.174.120</td><td>4 core, 16Gb; 100GBS, CentOS 7.9</td></tr><tr><td>k8s-node02</td><td>192.168.174.121</td><td>4 core, 16Gb; 100GBS, CentOS 7.9</td></tr></tbody></table><h2 id="2-1-所有节点中都需要执行-初始化环境"><a href="#2-1-所有节点中都需要执行-初始化环境" class="headerlink" title="2.1 所有节点中都需要执行(初始化环境)"></a>2.1 所有节点中都需要执行(初始化环境)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭防火墙及安全策略</span></span><br><span class="line">$ systemctl <span class="built_in">disable</span> --now firewalld NetworkManager</span><br><span class="line">$ sed -ri <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/"</span> /etc/selinux/config</span><br><span class="line">$ setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 禁用swap分区</span></span><br><span class="line">$ swapoff -a &amp;&amp; sysctl -w vm.swappiness=0 &amp;&amp; sed -ri <span class="string">'/^[^#]*swap/s@^@#@'</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改本地解析</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;&gt;/etc/hosts</span><br><span class="line">192.168.174.20     k8s-master01</span><br><span class="line">192.168.174.21     k8s-node01</span><br><span class="line">192.168.174.22     k8s-node02</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改YUM源并且安装epel源（中国科技大学或者阿里源）</span></span><br><span class="line">$ curl -o /etc/yum.repos.d/docker-ce.repo https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">$ sed -i <span class="string">'s#download.docker.com#mirrors.ustc.edu.cn/docker-ce#'</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">$ sed -e <span class="string">'s|^mirrorlist=|#mirrorlist=|g'</span> \</span><br><span class="line">    -e <span class="string">'s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.ustc.edu.cn/centos|g'</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line">$ yum clean all &amp;&amp; yum -y install epel-release</span><br><span class="line"></span><br><span class="line">$ sed -e <span class="string">'s|^metalink=|#metalink=|g'</span> \</span><br><span class="line">    -e <span class="string">'s|^#baseurl=https\?://download.fedoraproject.org/pub/epel/|baseurl=https://mirrors.ustc.edu.cn/epel/|g'</span> \</span><br><span class="line">    -e <span class="string">'s|^#baseurl=https\?://download.example/pub/epel/|baseurl=https://mirrors.ustc.edu.cn/epel/|g'</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/epel.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装kubernetes的YUM源（阿里云）(v1.23+)</span></span><br><span class="line">$ cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">$ yum makecache fast</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 或者v1.24以下的需安装一下源</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更新系统内rpm软件包(除内核外)</span></span><br><span class="line">$ yum -y update --exclude=kernel*</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看docker版本</span></span><br><span class="line">$ yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装所需要的服务及依赖(安装Docker是需到github.com/kubernetes中查看当版本适应什么版本的Docker)</span></span><br><span class="line">$ yum -y install wget jq psmisc vim net-tools telnet yum-utils \</span><br><span class="line">               device-mapper-persistent-data lvm2 git ntpdate \</span><br><span class="line">               ipvsadm ipset sysstat conntrack libseccomp \</span><br><span class="line">               docker-ce-20.10.* docker-ce-cli-20.10.* containerd </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 校准时间修改上海时区并且加到开机自启</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"*/5 * * * *        ntpdate -b ntp.aliyun.com"</span> &gt;&gt;/var/spool/cron/root</span><br><span class="line">$ ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'ASia/Shanghai'</span> &gt; /etc/tiomezone</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 服务器之间进行免密验证方便后期进行文件传输,选做</span></span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> k8s-node01 k8s-node02;<span class="keyword">do</span> ssh-copy-id -i .ssh/id_rsa.pub <span class="variable">$i</span>;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 设置最大文件打开数</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;&gt;/etc/security/limits.conf</span><br><span class="line">* soft nofile 655360</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 655350</span><br><span class="line">* hard nproc 655350</span><br><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成ipvs内核配置</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;&gt;/etc/modules-load.d/ipvs.conf</span><br><span class="line">ip_vs</span><br><span class="line">ip_vs_lc</span><br><span class="line">ip_vs_wlc</span><br><span class="line">ip_vs_rr</span><br><span class="line">ip_vs_wrr</span><br><span class="line">ip_vs_lblc</span><br><span class="line">ip_vs_lblcr</span><br><span class="line">ip_vs_dh</span><br><span class="line">ip_vs_sh</span><br><span class="line">ip_vs_fo</span><br><span class="line">ip_vs_nq</span><br><span class="line">ip_vs_sed</span><br><span class="line">ip_vs_ftp</span><br><span class="line">ip_vs_sh</span><br><span class="line">nf_conntrack</span><br><span class="line">ip_tables</span><br><span class="line">ip_set</span><br><span class="line">xt_set</span><br><span class="line">ipt_set</span><br><span class="line">ipt_rpfilter</span><br><span class="line">ipt_REJECT</span><br><span class="line">ipip</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; k8s内核配置项</span></span><br><span class="line">$ cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">net.ipv4.conf.all.route_localnet = 1</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.tcp_keepalive_intvl =15</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_max_orphans = 327680</span><br><span class="line">net.ipv4.tcp_orphan_retries = 3</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.ip_conntrack_max = 65536</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 设置Docker镜像加速器并且修改systemd作为cgroug的驱动</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重新加载Docker的配置文件且重启</span></span><br><span class="line">$ systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 升级所有节点的内核（v4.19+）,Kubernetes官网推荐内核版本</span></span><br><span class="line">$ yum -y localinstall kernel-m*</span><br><span class="line">$ grub2-set-default 0 &amp;&amp; grub2-mkconfig -o /etc/grub2.cfg</span><br><span class="line">$ grubby --args=<span class="string">"user_namespace.enable=1"</span> --update-kernel=<span class="string">"<span class="variable">$(grubby --default-kernel)</span>"</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><h2 id="2-2-安装kubernetes组件（v1-23-Master-and-Node）"><a href="#2-2-安装kubernetes组件（v1-23-Master-and-Node）" class="headerlink" title="2.2 安装kubernetes组件（v1.23 Master and Node）"></a>2.2 安装kubernetes组件（v1.23 Master and Node）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看组件的版本信息</span></span><br><span class="line">$ yum list kubeadm.x86_64 --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Master节点执行</span></span><br><span class="line">$ yum install -y  kubeadm-1.23*  kubelet-1.23* kubectl-1.23*</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Node节点执行</span></span><br><span class="line">$ yum install -y  kubeadm-1.23*  kubelet-1.23*</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看kubeadm版本</span></span><br><span class="line">$ kubeadm version</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将所有kubelet配置成systemd作为cgroug驱动，保持系统稳定。（Docker亦是如此）</span></span><br><span class="line">$ cat &lt;&lt;-EOF &gt;/etc/sysconfig/kubelet</span><br><span class="line">KUBELET_EXTRA_ARGS=<span class="string">"--cgroup-driver=systemd"</span></span><br><span class="line">EOF</span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now kubelet</span><br></pre></td></tr></table></figure><blockquote><p>⚠️#为什么将kubelet配置成systemd作为cgroug驱动？<br>Kubernetes默认设置cgroup驱动（cgroupdriver） 为“systemd”，而Docker服务的cgroup驱动默认值为“cgroupfs”，建议将其修改为“systemd”，与Kubernetes保持一致。</p></blockquote><h2 id="2-3-集群初始化"><a href="#2-3-集群初始化" class="headerlink" title="2.3 集群初始化"></a>2.3 集群初始化</h2><h3 id="2-3-1-初始化yaml文件-Master01"><a href="#2-3-1-初始化yaml文件-Master01" class="headerlink" title="2.3.1 初始化yaml文件(Master01)"></a>2.3.1 初始化yaml文件(Master01)</h3><p>kubeadm的初始化控制平面（init）命令和加入节点（join）命令均可以通过指定的配置文件修改默认参数的值。kubeadm将配置文件以 ConfigMap形式保存到集群中，便于后续的查询和升级工作。</p><p>kubeadm config子命令提供了对这组功能的支持。 </p><ul><li>kubeadm config print init-defaults：输出kubeadm init命令默认参数的内容。 </li><li>kubeadm config print join-defaults：输出kubeadm join命令默认参数的内容。 </li><li>kubeadm config migrate：在新旧版本之间进行配置转换。 </li><li>kubeadm config images list：列出所需的镜像列表。 </li><li>kubeadm config images pull：拉取镜像到本地。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim /root/kubeadm-config.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 192.168.174.110</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: /var/run/dockershim.sock</span><br><span class="line">  name: k8s-master01</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - 192.168.174.110</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controlPlaneEndpoint: 192.168.174.110:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns:</span><br><span class="line">  <span class="built_in">type</span>: CoreDNS</span><br><span class="line">etcd:</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.23.17</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 172.168.0.0/16</span><br><span class="line">  serviceSubnet: 10.96.0.0/16</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line"></span><br><span class="line">⚠️:配置文件参数需要修改，修改前备份，或者直接用命令行直接生成新的配置文件，但是仍需要修改配置文件中的参数</span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubeadm config print init-defaults &gt;/root/kubeadm-config.yaml</span></span><br><span class="line">  ⚠️配置文件需改参数 </span><br><span class="line">      advertiseAddress: 192.168.174.140   <span class="comment"># Master01 的ip地址</span></span><br><span class="line">      name: k8s-master01                <span class="comment"># Master01 的主机名</span></span><br><span class="line">      - 192.168.174.110                   <span class="comment"># master01 ip地址</span></span><br><span class="line">      controlPlaneEndpoint: 192.168.174.110:6443   <span class="comment"># master01 ip地址:端口</span></span><br><span class="line">      imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers <span class="comment">#镜像仓库地址(阿里)</span></span><br><span class="line">      kubernetesVersion: v1.23.17        <span class="comment"># kubernetes的版本号</span></span><br><span class="line">      podSubnet: 172.168.0.0/16           <span class="comment"># Pod 的网段地址</span></span><br><span class="line">      serviceSubnet: 10.96.0.0/12        <span class="comment"># service 的网段地址 </span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成新的初始化文件(可以不生成，区别不大)</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubeadm config migrate --old-config kubeadm-config.yaml --new-config new.yaml</span></span><br></pre></td></tr></table></figure><h2 id="2-4-拉取kubernetes组件镜像"><a href="#2-4-拉取kubernetes组件镜像" class="headerlink" title="2.4 拉取kubernetes组件镜像"></a>2.4 拉取kubernetes组件镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 拉取初始化所需要的镜像文件（根据当前配置文件拉去所需要的配置文件）(Master01)</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubeadm config images pull --config new.yaml</span></span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.23.17</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.23.17</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.23.17</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.23.17</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.6</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.5.6-0</span><br><span class="line">[config/images] Pulled registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:v1.8.6</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 初始化集群（生成安全证书并且生成node节点加入集群中的哈希码）(Master01)</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubeadm init --config new.yaml --upload-certs</span></span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">You can now join any number of the control-plane node running the following <span class="built_in">command</span> on each as root:</span><br><span class="line">  </span><br><span class="line">  kubeadm join 192.168.174.140:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:65e8558fcc0d9964de4ce8de880182df2de6e03d6b3402724e35ab7ff8482033 \</span><br><span class="line">    --control-plane --certificate-key d4be6bdc8043c565516325e270525e24e7ed6ed6c200f836be2bd52f2ad1ab11</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted <span class="keyword">in</span> two hours; If necessary, you can use</span><br><span class="line"><span class="string">"kubeadm init phase upload-certs --upload-certs"</span> to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.174.140:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:65e8558fcc0d9964de4ce8de880182df2de6e03d6b3402724e35ab7ff8482033</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 如果初始化失败，重置后再次初始化，命令如下（没有失败不要执行）</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubeadm reset -f ; ipvsadm --clear  ; rm -rf ~/.kube</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 所有Node节点执行</span></span><br><span class="line">[root@k8s-node01 ~]<span class="comment"># kubeadm join 192.168.174.140:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:65e8558fcc0d9964de4ce8de880182df2de6e03d6b3402724e35ab7ff8482033</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; k8s-master01执行</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># mkdir -p $HOME/.kube</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># sudo chown $(id -u):$(id -g) $HOME/.kube/config</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; Master01执行查看node状态</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get nodes</span></span><br></pre></td></tr></table></figure><blockquote><p>kubeadm init命令在执行具体的安装操作之前，会执行一系列被称 为pre-flight checks的系统预检查，以确保主机环境符合安装要求，如果检查失败就直接终止，不再进行init操作。</p></blockquote><h2 id="2-5-Calico网络插件安装-Master01"><a href="#2-5-Calico网络插件安装-Master01" class="headerlink" title="2.5 Calico网络插件安装(Master01)"></a>2.5 Calico网络插件安装(Master01)</h2><p>​          Calico网站：<a href="https://projectcalico.docs.tigera.io" target="_blank" rel="noopener">https://projectcalico.docs.tigera.io</a></p><p>​              ⚠️ ：注意kubernetes和calico之间的版本关联；详细信息去官网查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># cd /root/ &amp;&amp; git clone  https://gitee.com/BRWYZ/kubernetes_install.git</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cd /root/kubernetes_install &amp;&amp; git checkout v1.23+  &amp;&amp; cd calico/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改calico配置文件中Pod的网段</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># POD_SUBNET=`cat /etc/kubernetes/manifests/kube-controller-manager.yaml | grep cluster-cidr= | awk -F= '&#123;print $NF&#125;'`</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># sed -i "s#POD_CIDR#$&#123;POD_SUBNET&#125;#g" calico.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建calico容器</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl apply -f calico.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod的信息</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -n kube-system</span></span><br><span class="line"> NAME                                       READY   STATUS    RESTARTS        AGE</span><br><span class="line">calico-kube-controllers-6f6595874c-kqvbc   1/1     Running   0               2m15s</span><br><span class="line">calico-node-f2kgm                          1/1     Running   0               2m15s</span><br><span class="line">calico-node-gh9vh                          1/1     Running   0               2m15s</span><br><span class="line">calico-typha-6b6cf8cbdf-g8cl7              1/1     Running   0               2m15s</span><br><span class="line">coredns-65c54cc984-7jp42                   1/1     Running   0               11h</span><br><span class="line">coredns-65c54cc984-cgcbb                   1/1     Running   0               11h</span><br><span class="line">etcd-k8s-master01                          1/1     Running   1 (5m20s ago)   11h</span><br><span class="line">kube-apiserver-k8s-master01                1/1     Running   1 (5m20s ago)   11h</span><br><span class="line">kube-controller-manager-k8s-master01       1/1     Running   1 (5m20s ago)   11h</span><br><span class="line">kube-proxy-rpp8q                           1/1     Running   1 (5m17s ago)   11h</span><br><span class="line">kube-proxy-z5p22                           1/1     Running   1 (5m20s ago)   11h</span><br><span class="line">kube-scheduler-k8s-master01                1/1     Running   1 (5m20s ago)   11h</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt;  官网下载calico的yaml文件</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment">#curl https://docs.projectcalico.org/archive/v3.18/manifests/calico-typha.yaml -o calico.yaml</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># vim /root/calico.yaml</span></span><br><span class="line">  <span class="comment">#修改处</span></span><br><span class="line">    - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">               value: <span class="string">"172.168.0.0/16"</span>  <span class="comment">#Pod的网段</span></span><br><span class="line">             Disable file logging so `kubectl logs` works.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成calico的yaml文件（部署calico网络插件）</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl apply -f calico.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt;  查看是否拉取成功</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -n kube-system</span></span><br></pre></td></tr></table></figure><h2 id="2-6-生成新的token-key值"><a href="#2-6-生成新的token-key值" class="headerlink" title="2.6 生成新的token key值"></a>2.6 生成新的token key值</h2><p>​             ⚠️：由于生成的token值有效期较短，或者有新的master或者node节点需要添加集群当中，所以需要获取新的token值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 生成新的master的token值(一般不需要，三台master足够支撑)</span></span><br><span class="line">$ kubeadm init phase upload-cers --upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 生成新的node的token值</span></span><br><span class="line">$ kubeadm token create --<span class="built_in">print</span>-join-command</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看token值过期时间（在/root/new.yaml文件中token: abcdef.0123456789abcdef对应bootstrap-token-abcdef）</span></span><br><span class="line">$ kubectl get secret -n kube-system</span><br><span class="line"> bootstrap-token-abcdef</span><br><span class="line">$ kubectl get secret bootstrap-token-abcdef -n kube-system -oyaml</span><br><span class="line">  找到 expiration: MjAyMi0xMS0yM1QxNDowNjowOFo=</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"MjAyMi0xMS0yM1QxNDowNjowOFo="</span> | base64 --decode</span><br></pre></td></tr></table></figure><h2 id="2-7-Metrics-server部署-Master01"><a href="#2-7-Metrics-server部署-Master01" class="headerlink" title="2.7 Metrics  server部署(Master01)"></a>2.7 Metrics  server部署(Master01)</h2><p>​            在新版的Kubernetes中系统资源的采集均使用Metrics-server，可以通过Metrics采集节点和Pod的内存、磁盘、CPU和网络的使用率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 将Master01节点的front-proxy-ca.crt复制到所有Node节点</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># scp /etc/kubernetes/pki/front-proxy-ca.crt k8s-node0&#123;1..2&#125;:/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装Metrics server</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># cd kubernetes_install/kubeadm-metrics-server/</span></span><br><span class="line">[root@k8s-master01 kubeadm-metrics-server]<span class="comment"># kubectl  create -f comp.yaml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Metrics server状态</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po -n kube-system -l k8s-app=metrics-server</span></span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">metrics-server-5cf8885b66-8j4nn   1/1     Running   0          46s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看节点状态</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl top node</span></span><br><span class="line">  NAME           CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">k8s-master01   295m         7%     1338Mi          34%       </span><br><span class="line">k8s-node01     140m         3%     782Mi           20%    </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看pod的状态</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl top po -A</span></span><br><span class="line">  NAMESPACE     NAME                                       CPU(cores)   MEMORY(bytes)   </span><br><span class="line">kube-system   calico-kube-controllers-6f6595874c-kqvbc   3m           21Mi            </span><br><span class="line">kube-system   calico-node-f2kgm                          56m          109Mi           </span><br><span class="line">kube-system   calico-node-gh9vh                          64m          145Mi           </span><br><span class="line">kube-system   calico-typha-6b6cf8cbdf-g8cl7              4m           29Mi            </span><br><span class="line">kube-system   coredns-65c54cc984-7jp42                   3m           13Mi            </span><br><span class="line">kube-system   coredns-65c54cc984-cgcbb                   3m           16Mi            </span><br><span class="line">kube-system   etcd-k8s-master01                          24m          58Mi            </span><br><span class="line">kube-system   kube-apiserver-k8s-master01                104m         325Mi           </span><br><span class="line">kube-system   kube-controller-manager-k8s-master01       28m          57Mi            </span><br><span class="line">kube-system   kube-proxy-rpp8q                           1m           18Mi            </span><br><span class="line">kube-system   kube-proxy-z5p22                           1m           15Mi            </span><br><span class="line">kube-system   kube-scheduler-k8s-master01                6m           24Mi            </span><br><span class="line">kube-system   metrics-server-5cf8885b66-8j4nn            5m           19Mi</span><br></pre></td></tr></table></figure><h2 id="2-8-修改Kube-proxy改为ipvs模式-k8s-master01"><a href="#2-8-修改Kube-proxy改为ipvs模式-k8s-master01" class="headerlink" title="2.8 修改Kube-proxy改为ipvs模式(k8s-master01)"></a>2.8 修改Kube-proxy改为ipvs模式(k8s-master01)</h2><p>初始化集群的时注释了ipvs配置（Master01）,将 <code>kube-proxy</code> 模式从 <code>iptables</code> 修改为 <code>ipvs</code> 是为了提升性能和功能。</p><p><strong>详解：</strong></p><ol><li><strong>性能优势</strong>：<code>ipvs</code>可以更有效地处理大量并发连接。这使得它在高流量场景下表现更佳。更好地扩展以处理更多的服务和后端 pod，而 <code>iptables</code> 在规则数量非常多时，性能可能会显著下降。</li><li><strong>低延迟和高吞吐量</strong>：<code>ipvs</code> 通过在内核空间处理数据包，减少了用户空间和内核空间之间的切换，从而提高了数据包处理的效率，带来更低的延迟和更高的吞吐量。</li><li><strong>快速规则应用</strong>：<code>ipvs</code> 在处理和应用网络规则时速度更快，特别是在规则变更频繁的情况下。</li><li><strong>多种调度算法</strong>：<code>ipvs</code> 提供了多种负载均衡算法（如轮询、最小连接、最短延迟等），可以根据具体需求选择最合适的算法，而 <code>iptables</code> 则缺乏这种灵活性。</li><li><strong>稳定性</strong>：<code>ipvs</code> 的实现更加稳定，尤其是在大型集群中，它能更好地应对复杂的网络环境和高负载。</li><li><strong>简化的规则管理</strong>：<code>ipvs</code> 使用专用的内核模块管理规则，相比 <code>iptables</code> 更加简洁和高效。<code>iptables</code> 规则在处理和管理上会更加复杂，特别是当规则数量增多时。</li><li><strong>维护方便</strong>：<code>ipvs</code> 的规则结构更清晰，维护起来更为方便，不像 <code>iptables</code> 那样需要处理大量的规则链和复杂的规则匹配逻辑。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl edit cm kube-proxy -n kube-system</span></span><br><span class="line">  <span class="comment"># 找到mode字段添加ipvs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更新Kube-Proxy的Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl patch daemonset kube-proxy -p "&#123;\"spec\":&#123;\"template\":&#123;\"metadata\":&#123;\"annotations\":&#123;\"date\":\"`date +'%s'`\"&#125;&#125;&#125;&#125;&#125;" -n kube-system</span></span><br><span class="line">  daemonset.apps/kube-proxy patched</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 验证Kube-Proxy模式</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># curl 127.0.0.1:10249/proxyMode</span></span><br><span class="line">ipvs</span><br></pre></td></tr></table></figure><h1 id="3、kubernetes常用命令"><a href="#3、kubernetes常用命令" class="headerlink" title="3、kubernetes常用命令"></a>3、kubernetes常用命令</h1><p>1.kubectl查看组件主从节点信息（apiserver是无状态的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get leases -n kube-system</span><br></pre></td></tr></table></figure><p>2.kubectl创建一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubetctl create -f nginx.yaml</span><br></pre></td></tr></table></figure><p>3.kubectl查看Pod的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get po nginx(Pod名称)</span><br></pre></td></tr></table></figure><p>4.kubectl run 创建一个Pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl run nginx-run --image=nginx:1.21</span><br></pre></td></tr></table></figure><p>5.kubectl 查看Pod的IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get po nginx -owide</span><br></pre></td></tr></table></figure><p>6.kubectl生成一个nginx的yaml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl run nginx --image=nginx:1.21 -oyaml --dry-run &gt; nginx.yaml</span><br></pre></td></tr></table></figure><p>7.kubectl 查看pod的apiversion的版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl api-resources | grep pod</span><br></pre></td></tr></table></figure><p>8.kubectl查看你kubernetes中的pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get po -n kube-system</span><br></pre></td></tr></table></figure><p>9.kubectl查看pod的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe po nginx(Pod名称)</span><br></pre></td></tr></table></figure><p>10.kubectl查看Pod的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl logs -f nginx(Pod名称) -n kube-system(命名空间)</span><br></pre></td></tr></table></figure><p>11.kubectl查看Pod的更新历史</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl rollout <span class="built_in">history</span> deploy(命名空间) nginx（Pod的名称）--revision=3</span><br></pre></td></tr></table></figure><h1 id="3、Kubernetes中Pod概念"><a href="#3、Kubernetes中Pod概念" class="headerlink" title="3、Kubernetes中Pod概念"></a>3、Kubernetes中Pod概念</h1><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/2.png" alt="image-20240614195424071"></p><h3 id="3-1-简介（Pod具有命名空间隔离性）"><a href="#3-1-简介（Pod具有命名空间隔离性）" class="headerlink" title="3.1 简介（Pod具有命名空间隔离性）"></a>3.1 简介（Pod具有命名空间隔离性）</h3><p>​    <strong>Pod是Kubernetes中最重要的基本概念之一；每个Pod都有一个特殊的被称为“根容器”的Pause容器。Pause容器对应的镜像属于Kubernetes平台的一部分，除了Pause容器，<code>每个Pod都还包含一个或多个紧密相关的用户业务容器。</code></strong></p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/3.png" alt="image-20240614193928309" style="zoom:50%;"><p><strong>为什么Kubernetes会设计出一个全新的Pod概念并且Pod有这样特殊的组成结构？</strong></p><ul><li>为多进程之间的协作提供一个抽象模型，使用<strong>Pod作为基本的调度、复制等管理工作的最小单位，让多个应用进程能一起有效地调度和伸缩。</strong></li><li>Pod里的多个业务容器<code>共享Pause容器的IP</code>，<code>共享Pause容器挂接的Volume</code>，这样既简化了密切关联的业务容器之间的通信问题，也很好地解决了它们之间的文件共享问题。</li></ul><p>Kubernetes为每个Pod都<code>分配了唯一的IP地址</code>，称之为Pod IP，一个 Pod里的多个容器共享Pod IP地址。Kubernetes要求底层网络支持集群内任意两个Pod之间的TCP/IP直接通信，因此在 Kubernetes里，一个Pod里的容器与另外主机上的Pod容器能够直接通信。</p><h3 id="3-2-Pod的类型"><a href="#3-2-Pod的类型" class="headerlink" title="3.2 Pod的类型"></a>3.2 Pod的类型</h3><p>Pod其实有两种类型：<code>普通的Pod及静态Pod（Static Pod）</code>。后者比较特殊，它并没<code>被存放在Kubernetes的etcd中</code>，而是被存放在某个具体的Node上的一个具体文件中，并且只能在此Node上启动、运行。而普通的Pod一旦被创建，就会被放入etcd中存储，随后被Kubernetes Master 调度到某个具体的Node上并绑定（Binding），该Pod被对应的Node上的 kubelet进程实例化成一组相关的Docker容器并启动。在默认情况下，当Pod里的某个容器停止时，Kubernetes会自动检测到这个问题并且重新启动这个Pod（重启Pod里的所有容器），<strong>如果Pod所在的Node宕机，就会将这个Node上的所有Pod都重新调度到其他节点上。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ll /etc/kubernetes/manifests/</span><br><span class="line">总用量 16</span><br><span class="line">-rw------- 1 root root 2328 6月  14 15:57 etcd.yaml</span><br><span class="line">-rw------- 1 root root 3395 6月  14 15:57 kube-apiserver.yaml</span><br><span class="line">-rw------- 1 root root 2892 6月  14 15:57 kube-controller-manager.yaml</span><br><span class="line">-rw------- 1 root root 1477 6月  14 15:57 kube-scheduler.yaml</span><br></pre></td></tr></table></figure><h4 id="3-2-1-Pause容器"><a href="#3-2-1-Pause容器" class="headerlink" title="3.2.1 Pause容器"></a>3.2.1 Pause容器</h4><p>​    Pod运行在一个被称为节点 （Node）的环境中，这个节点既可以是物理机，也可以是私有云或者公有云中的一个虚拟机，在一个节点上能够运行多个Pod；其次，<code>在每个Pod中都运行着一个特殊的被称为Pause的容器，其他容器则为业务容器</code>，这些业务容器<code>共享Pause容器的网络栈和Volume挂载卷</code>，因此它们之间的通信和数据交换更为高效，在设计时我们可以充分利用这一特性将一组密切相关的服务进程放入同一个Pod中；<code>但不推荐</code>。用pause镜像为每个Pod都创建一个容器。该<code>Pause容器用于接管Pod中所有其他容器的网络</code>。每创建一个新的Pod，kubelet 都会先创建一个Pause容器，然后创建其他容器。pause镜像大概有200KB，是个非常小的容器镜像。</p><p><strong>举例：</strong></p><p>​    首先，一个Pod内的所有容器都需要共用同一个IP地址，这就意味着一定要使用网络的容器映射模式。然而，为什么不能只启动1个容器，而将第2个容器关联到第1个容器呢？Kubernetes是从两方面来考虑这个问题的：首先，如果在Pod内有多个容器，则可能很难连接这些容器；其次，后面的容器还要依赖第1个被关联的容器，如果第2个容器关联到第1个容器，且第1个容器死掉的话，那么第2个容器也将无法正常提供服务。<code>启动一个基础容器，然后将Pod内的所有容器都连接到它上面会更容易一些。因为我们只需为基础的pause容器执行端口映射规则，这也简化了端口映射的过程。</code></p><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/4.png" alt="image-20240614201248670"></p><p><strong>上图有点儿取巧地显示了是pause容器将端口80的流量转发给了相关容器。而Pause容器只是看起来转发了网络流量，但它并没有真的这么做。实际上，应用容器直接监听了这些端口，和pause容器共享同一个网络堆栈。</strong></p><h4 id="3-2-2-静态Pod"><a href="#3-2-2-静态Pod" class="headerlink" title="3.2.2 静态Pod"></a>3.2.2 静态Pod</h4><p>​    静态Pod是由kubelet进行管理的仅存在于特定Node上的Pod。它们不能通过API Server进行管理，无法与ReplicationController、Deployment 或者DaemonSet进行关联，并且kubelet无法对它们进行健康检查。静态Pod总是由kubelet创建的，并且总在kubelet所在的Node上运行。</p><h3 id="3-3-定义一个Pod"><a href="#3-3-定义一个Pod" class="headerlink" title="3.3 定义一个Pod"></a>3.3 定义一个Pod</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 命令行创建一个Pod</span></span><br><span class="line">$ kubectl run <span class="built_in">test</span> --image=registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">pod/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 命令行编写一个Pod的yaml文件</span></span><br><span class="line">$ kubectl run nginx --image=registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0 -oyaml --dry-run=client &gt; <span class="built_in">test</span>-pod.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看生成的文件</span></span><br><span class="line">$ vim <span class="built_in">test</span>-pod.yaml</span><br><span class="line">---</span><br><span class="line">apiVersion: v1<span class="comment">#  api版本号</span></span><br><span class="line">kind: Pod<span class="comment"># 资源类型 (Deployment|StatefulSet|Service) </span></span><br><span class="line">metadata:<span class="comment"># 元数据信息</span></span><br><span class="line">  labels:<span class="comment"># Pod标签</span></span><br><span class="line">    run: nginx<span class="comment"># 标签形式 key=value</span></span><br><span class="line">  name: nginx<span class="comment"># Pod名称</span></span><br><span class="line">spec:<span class="comment"># 定义Pod声明</span></span><br><span class="line">  containers:<span class="comment"># 配置容器位置（Pod管理容器）</span></span><br><span class="line">  - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0<span class="comment"># 容器镜像版本</span></span><br><span class="line">    name: nginx<span class="comment"># 容器名称</span></span><br><span class="line">  restartPolicy: Always<span class="comment"># 重启策略</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 通过yaml文件创建Pod</span></span><br><span class="line">$ kubectl apply -f <span class="built_in">test</span>-pod.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod的状态</span></span><br><span class="line">$ kubectl describe po nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">$ kubectl get po</span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx   1/1     Running   0          4m10s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除Pod</span></span><br><span class="line">$ kubectl delete po nginx</span><br><span class="line">pod <span class="string">"nginx"</span> deleted</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ kubectl delete -f &lt;Pod资源清单/yaml文件&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看api版本号</span></span><br><span class="line">$ kubectl api-resources</span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/5.png" alt="image-20240618201317406"></p><h3 id="3-4-Kubernetes修改Pod内容器的启动命令"><a href="#3-4-Kubernetes修改Pod内容器的启动命令" class="headerlink" title="3.4 Kubernetes修改Pod内容器的启动命令"></a>3.4 Kubernetes修改Pod内容器的启动命令</h3><p>​    简介：<strong>覆盖容器的默认启动命令。重新定义容器的启动命令或者添加新的参数。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ vim <span class="built_in">test</span>-pod.yaml </span><br><span class="line">---</span><br><span class="line">apiVersion: v1   <span class="comment"># api版本号</span></span><br><span class="line">kind: Pod        <span class="comment"># 资源类型 Deployment/StatefulSet/Service</span></span><br><span class="line">metadata: <span class="comment"># 元数据信息</span></span><br><span class="line">  labels:   <span class="comment"># Pod标签</span></span><br><span class="line">    run: nginx   <span class="comment"># 标签形式 key=value</span></span><br><span class="line">  name: nginx    <span class="comment"># Pod名称</span></span><br><span class="line">spec:            <span class="comment"># 定义Pod声明</span></span><br><span class="line">  containers:    <span class="comment"># 配置容器位置（Pod管理容器）</span></span><br><span class="line">  - image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0  <span class="comment"># 容器镜像版本</span></span><br><span class="line">    name: nginx          <span class="comment"># 容器名称，唯一性不能重复</span></span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">'ls'</span>,<span class="string">'/'</span>] </span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80   <span class="comment"># 容器端口，唯一性不能重复</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line">$ kubectl create -f <span class="built_in">test</span>-pod.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">$ kubectl get po -owide</span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/6.png" alt="image-20240618200945099"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试Pod连通性</span></span><br><span class="line">$ curl 172.16.32.131</span><br><span class="line">curl: (7) Failed connect to 172.16.32.131:80; 拒绝连接</span><br></pre></td></tr></table></figure><blockquote><p>思考题：为什么修改了容器的默认启动命令后，容器无法正常启动，且状态变成了<code>CrashLoopBackOff</code></p></blockquote><h3 id="3-5-Pod的创建过程"><a href="#3-5-Pod的创建过程" class="headerlink" title="3.5  Pod的创建过程"></a>3.5  <code>Pod的创建过程</code></h3><ol><li>用户通过 <strong>kubectl</strong> 命令行工具、Kubernetes API 或其他工具提交 Pod 定义（通常是一个 YAML 文件）给 Kubernetes 集群。</li><li>用户提交的 Pod 定义被发送到 Kubernetes API Server。</li><li>API Server 验证请求并将其存储在 etcd 中。</li><li>Scheduler 监视 etcd 中的新建 Pod 事件，并决定将 Pod 分配到哪个节点上运行。调度器考虑多种因素，包括资源需求、节点容量、节点健康状态、亲和性和反亲和性规则等。</li><li>调度器将调度决定（即 Pod 应该运行在哪个节点上）写回到 API Server，API Server 更新 etcd 中的 Pod 状态，将其绑定到指定节点。</li><li>每个节点上运行的 Kubelet 组件监视 etcd 中分配到该节点的 Pod。Kubelet 检测到新分配的 Pod 后，开始创建和管理 Pod 中的容器。</li><li>Kubelet 使用容器运行时（如 Docker、containerd 等）来拉取指定的镜像，并在节点上启动容器。</li><li>在启动容器时，Kubelet 会配置网络设置（通过 CNI 插件），挂载卷，并根据 Pod 定义的配置（如环境变量、ConfigMap、Secret 等）初始化容器。</li><li>如果 Pod 定义中配置了探针（LivenessProbe、ReadinessProbe），Kubelet 会定期执行这些探针来检测容器的健康状态。</li><li>容器启动并运行后，Kubelet 会持续监视容器的状态，并报告给 API Server。Kubelet 还会处理探针检测结果，根据需要重启容器或将其从服务负载均衡中移除。</li><li>整个过程中，Kubelet 不断地将容器的状态（如运行状态、资源使用情况、探针检测结果等）更新到 API Server，API Server 再将这些状态更新存储到 etcd 中。</li></ol><h3 id="3-6-Pod的删除过程"><a href="#3-6-Pod的删除过程" class="headerlink" title="3.6 Pod的删除过程"></a>3.6 <code>Pod的删除过程</code></h3><ol><li>用户通过 <code>kubectl</code> 命令行工具、Kubernetes API 或其他工具提交删除 Pod 的请求。</li><li>删除请求被发送到 Kubernetes API Server，API Server 验证并处理该请求。</li><li>API Server 将 Pod 的状态更新为 <code>Terminating</code> 并存储到 etcd 中。此时，Pod 仍然存在，但其状态表明正在进行删除操作。</li><li>如果 Pod 配置了 <code>PreStop</code> 钩子，Kubelet 会在终止容器前执行该钩子。<code>PreStop</code> 钩子可以是一个在容器内运行的命令或发送到指定 HTTP 端点的请求。</li><li>如果 Pod 配置了 <code>Readiness</code> 探针，Kubernetes 会将其从服务负载均衡器中移除，确保不再接受新的请求。</li><li>Kubelet 发送信号（如 SIGTERM）给容器，通知其终止进程。Kubelet 等待一段时间（由 <code>terminationGracePeriodSeconds</code> 定义，默认为 30 秒）以允许容器进行清理和优雅关闭。</li><li>如果容器在优雅终止期内未能退出，Kubelet 会发送强制终止信号（如 SIGKILL）来强制终止容器。</li><li>Kubelet 调用容器运行时（如 Docker、containerd 等）删除容器。容器的所有资源（如文件系统、网络等）也会被清理。</li><li>Kubelet 更新 Pod 的状态为已删除，并通知 API Server。API Server 将 Pod 的最终状态存储到 etcd 中。</li><li>API Server 从 etcd 中删除 Pod 的定义和状态信息。此时，Pod 从 Kubernetes 集群中完全消失。</li></ol><h1 id="4、kubernetes中Pod的各种状态"><a href="#4、kubernetes中Pod的各种状态" class="headerlink" title="4、kubernetes中Pod的各种状态"></a>4、kubernetes中Pod的各种状态</h1><ul><li><p><strong>Pending</strong>：Pod 已被 Kubernetes系统接收，但仍有一个或多个容器未被创建，可以通过kubectl describe查看处于Pending状态的原因（有可能请求的资源过大，无法调度；有可能挂载的东西不存在；有可能没有可用的节点；有可能节点异常）</p></li><li><p><strong>Running</strong>：Pod已经被绑定到一个节点上，并且所有的容器都已经被创建，而且至少有一个是运行状态，或者是正在启动或者重启，可以通过kubectl logs查看Pod的日志。</p></li><li><p><strong>Failed</strong>：所有容器都已终止，并且至少有一个容器以失败的方式终止，也就是说这个容器要么以非零状态退出，要么被系统终止，可以通过logs和 describe查看Pod日志和状态</p></li><li><p><strong>Succeeded</strong>：所有容器执行成功并终止，并且不会再次重启，可以通过kubectl logs查看Pod日志</p></li><li><p><strong>Unknown</strong>：通常是由于通信问题造成的无法获得Pod的状态</p></li><li><p><strong>ImagePullBackOff ErrlmagePull：</strong>镜像拉取失败，一般是由于镜像不存在、网络不通或者需要登录认证引起的，可以使用describe命令查看具体原因</p></li><li><p><strong>CrashLoopBackOff</strong>：容器启动失败，可以通过logs命令查看具体原因，一般为启动命令不正确，健康检查不通过等</p></li><li><p><strong>OOMKilled</strong>：容器内存溢出，一般是容器的内存Limit设置的过小,或者程序本身有内存溢出，可以通过logs查看程序启动日志</p></li><li><p><strong>Terminating</strong>：Pod正在被删除，可以通过describe查看状态</p></li><li><p><strong>SysctlForbidden</strong>：Pod自定义了内核配置，但 kubelet 没有添加内核配置或配置的内核参数不支持，可以通过describe查看具体原因</p></li><li><p><strong>Completed</strong>：容器内部主进程退出，一般计划任务执行结束会显示该状态，此时可以通过 logs查看容器日志</p></li><li><p><strong>ContainerCreating</strong>：Pod 正在创建，一般为正在下载镜像，或者有配置不当的地方，可以通过describe查看具体原因。</p></li></ul><h1 id="5、kubernetes中Pod的镜像拉取策略"><a href="#5、kubernetes中Pod的镜像拉取策略" class="headerlink" title="5、kubernetes中Pod的镜像拉取策略"></a>5、kubernetes中Pod的镜像拉取策略</h1><h3 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h3><p>​    在 Kubernetes 中，镜像拉取策略（Image Pull Policy）决定了 Kubernetes 节点如何从镜像仓库中拉取容器镜像策略。</p><p><strong>通过spec.containers[].imagePullPolicy参数可以指定镜像的拉取策略（latest为最新版本镜像）</strong></p><ul><li><strong>Always</strong>：总是拉取，每次创建Pod 时，Kubernetes 都会尝试从镜像仓库中拉取镜像。当镜像 tag为latest时，且imagePullPolicy未配置，默认为Always。适用于开发环境中频繁更新的镜像。</li><li><strong>Never</strong>：不管本地是否存在镜像都不会拉取。必须保证节点上已经存在所需的镜像。否则Pod启动失败。</li><li><strong>IfNotPresent</strong>：指定镜像版本在本地不存在时才去拉取镜像,如果tag为非latest,且 imagePullPolicy未配置,默认为IfNotPresent。</li></ul><h3 id="5-2-更改镜像拉取策略为lfNotPresent"><a href="#5-2-更改镜像拉取策略为lfNotPresent" class="headerlink" title="5.2 更改镜像拉取策略为lfNotPresent"></a><strong>5.2 更改镜像拉取策略为<code>lfNotPresent</code></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># mkdir /root/imagePull  &amp;&amp;  cd /root/imagePull</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># vim nginx-ifnotpresent.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1<span class="comment"># API的版本号</span></span><br><span class="line">kind: Pod<span class="comment"># 类型Pod</span></span><br><span class="line">metadata:<span class="comment"># 元数据</span></span><br><span class="line">  name: nginx-study<span class="comment"># Pod名称</span></span><br><span class="line">spec:<span class="comment"># 定义Pod的详细信息</span></span><br><span class="line">  containers:<span class="comment"># 容器定义</span></span><br><span class="line">  - name: nginx-study<span class="comment"># 容器名称</span></span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0 <span class="comment"># 容器所用的镜像的地址</span></span><br><span class="line">    imagePullPolicy: IfNotPresent <span class="comment"># 镜像拉取策略</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80 <span class="comment"># 容器的端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动容器</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl apply -f nginx-ifnotpresent.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod的详细信息</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl describe po nginx-study</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/7.png" alt="image-20240617204647224"></p><h3 id="5-3-更改镜像拉取策略为Always"><a href="#5-3-更改镜像拉取策略为Always" class="headerlink" title="5.3 更改镜像拉取策略为Always"></a><strong>5.3 更改镜像拉取策略为<code>Always</code></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 删除旧的Pod</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl delete -f nginx-ifnotpresent.yaml </span></span><br><span class="line">pod <span class="string">"nginx-study"</span> deleted</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建新的文件</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># vim nginx-alway.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1  <span class="comment"># API的版本号</span></span><br><span class="line">kind: Pod               <span class="comment"># 类型Pod</span></span><br><span class="line">metadata:               <span class="comment"># 元数据</span></span><br><span class="line">  name: nginx-study           <span class="comment"># Pod名称</span></span><br><span class="line">spec:           <span class="comment"># 定义Pod的详细信息</span></span><br><span class="line">  containers:           <span class="comment"># 容器定义</span></span><br><span class="line">  - name: nginx-study   <span class="comment"># 容器名称</span></span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0      <span class="comment"># 容器所用的镜像的地址 </span></span><br><span class="line">    imagePullPolicy: Always        <span class="comment"># 镜像拉取策略</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80 <span class="comment"># 容器的端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl create -f nginx-alway.yaml </span></span><br><span class="line">pod/nginx-study created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod的详细信息</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl describe po nginx-study</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/8.png" alt="image-20240617205129600"></p><h3 id="5-4-更改镜像拉取策略为Never"><a href="#5-4-更改镜像拉取策略为Never" class="headerlink" title="5.4 更改镜像拉取策略为Never"></a><strong>5.4 更改镜像拉取策略为<code>Never</code></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 删除旧的Pod</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl delete -f nginx-ifnotpresent.yaml </span></span><br><span class="line">pod <span class="string">"nginx-study"</span> deleted</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建新的文件</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># vim nginx-never.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1  <span class="comment"># API的版本号</span></span><br><span class="line">kind: Pod               <span class="comment"># 类型Pod</span></span><br><span class="line">metadata:               <span class="comment"># 元数据</span></span><br><span class="line">  name: nginx-study           <span class="comment"># Pod名称</span></span><br><span class="line">spec:           <span class="comment"># 定义Pod的详细信息</span></span><br><span class="line">  containers:           <span class="comment"># 容器定义</span></span><br><span class="line">  - name: nginx-study   <span class="comment"># 容器名称</span></span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0      <span class="comment"># 容器所用的镜像的地址 </span></span><br><span class="line">    imagePullPolicy: Never        <span class="comment"># 镜像拉取策略</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80 <span class="comment"># 容器的端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl create -f nginx-never.yaml </span></span><br><span class="line">pod/nginx-study created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl get po</span></span><br><span class="line">NAME          READY   STATUS              RESTARTS   AGE</span><br><span class="line">nginx-study   0/1     ErrImageNeverPull   0          4s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod详细信息</span></span><br><span class="line">[root@k8s-master01 imagePull]<span class="comment"># kubectl describe po nginx-study</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/9.png" alt="image-20240617205528785"></p><h1 id="6、kubernetes中Pod的重启策略"><a href="#6、kubernetes中Pod的重启策略" class="headerlink" title="6、kubernetes中Pod的重启策略"></a>6、kubernetes中Pod的重启策略</h1><h3 id="6-1-简介"><a href="#6-1-简介" class="headerlink" title="6.1 简介"></a>6.1 简介</h3><p>​    在 Kubernetes 中，Pod 的重启策略（<code>Restart Policy</code>）定义了 Pod 中的容器在失败或终止后的重启行为。</p><p><strong>可以使用<code>spec.restartPolicy</code>指定容器的重启策略操作方式（Always生产环境居多）</strong></p><ul><li><strong><code>Always</code></strong>：默认策略。无论容器的退出状态如何，Kubernetes 始终会重启容器。</li><li><strong>OnFailure</strong>：当容器以非零退出码（表示失败）终止时，Kubernetes 才会重启容器。</li><li><strong>Never</strong>：容器终止后不会被重启。</li></ul><h3 id="6-2-指定重启策略为Always"><a href="#6-2-指定重启策略为Always" class="headerlink" title="6.2 指定重启策略为Always:"></a><strong>6.2 指定重启策略为<code>Always</code>:</strong></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">mkdir</span> <span class="string">restartPoilcy</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">restartPolicy]#</span> <span class="string">vim</span> <span class="string">nginx-always.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"10"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span> <span class="comment"># Pod的重启策略</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">restartPolicy]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-always.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">restartPolicy]#</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">po</span> </span><br><span class="line"><span class="string">NAME</span>    <span class="string">READY</span>   <span class="string">STATUS</span>             <span class="string">RESTARTS</span>      <span class="string">AGE</span></span><br><span class="line"><span class="string">nginx</span>   <span class="number">0</span><span class="string">/1</span>     <span class="string">CrashLoopBackOff</span>   <span class="number">6</span> <span class="string">(21s</span> <span class="string">ago)</span>   <span class="string">7m33s</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod启动记录</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">restartPolicy]#</span> <span class="string">kubectl</span> <span class="string">describe</span> <span class="string">po</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/10.png" alt="image-20240619100659953"></p><h3 id="6-3-指定重启策略为OnFailure"><a href="#6-3-指定重启策略为OnFailure" class="headerlink" title="6.3 指定重启策略为OnFailure:"></a><strong>6.3 指定重启策略为<code>OnFailure</code>:</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  delete po nginx</span></span><br><span class="line">pod <span class="string">"nginx"</span> deleted</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编写资源清单</span></span><br><span class="line">[root@k8s-master01 restartPolicy]<span class="comment"># vim nginx-OnFailure.yaml </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1 </span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">    - sleep</span><br><span class="line">    - <span class="string">"10"</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">  restartPolicy: OnFailure <span class="comment"># Pod的重启策略</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line">[root@k8s-master01 restartPolicy]<span class="comment"># kubectl create -f  nginx-OnFailure.yaml </span></span><br><span class="line">pod/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod</span></span><br><span class="line">[root@k8s-master01 restartPolicy]<span class="comment"># kubectl get po </span></span><br><span class="line">NAME    READY   STATUS      RESTARTS   AGE</span><br><span class="line">nginx   0/1     Completed   0          14s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod启动记录</span></span><br><span class="line">[root@k8s-master01 restartPolicy]<span class="comment"># kubectl describe po nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/11.png" alt="image-20240619101111320"></p><blockquote><p>思考题：为什么查看Pod的状态的时候是<code>Completed</code>，但是kubernetes却没有重启该Pod呢？</p></blockquote><h3 id="6-4-指定重启策略为Never"><a href="#6-4-指定重启策略为Never" class="headerlink" title="6.4 指定重启策略为Never:"></a><strong>6.4 指定重启策略为<code>Never</code>:</strong></h3><p>略</p><h1 id="7、kubernetes中Pod的健康检查"><a href="#7、kubernetes中Pod的健康检查" class="headerlink" title="7、kubernetes中Pod的健康检查"></a>7、kubernetes中Pod的健康检查</h1><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/12.png" alt="image-20240917231740513"></p><h3 id="7-1-简介"><a href="#7-1-简介" class="headerlink" title="7.1 简介"></a>7.1 简介</h3><p>​    在 Kubernetes 中，探针（Probe）用于<code>检测 Pod 中容器的健康状态和生命周期管理</code>。探针可以帮助 Kubernetes 确保应用程序在运行中的健康状态，并在需要时采取适当的动作（如重启容器、将流量切换到健康的容器等）。Kubernetes对Pod的健康状态可以通过三类探针来检查：<code>LivenessProbe</code>、<code>ReadinessProbe</code>及<code>StartupProbe</code>，其中最主要的探针为 <code>LivenessProbe</code>与<code>ReadinessProbe</code>，kubelet会<code>定期执行</code>这两类探针来诊断容器的健康状况。</p><h3 id="7-2-Pod的探针"><a href="#7-2-Pod的探针" class="headerlink" title="7.2 Pod的探针"></a><strong>7.2 Pod的探针</strong></h3><ul><li><p><strong>StartupProbe</strong>：用于判断容器内应用程序是否已经启动。某些应用会遇到启动比较慢的情况，例如应用程序启动时需要与远程服务器建立网络连接，或者遇到网络访问较慢等情况时，会造成容器启动缓慢， 因为这属于<code>“有且仅有一次”</code>的超长延时，可以通过StartupProbe探针解决该问题。<strong>如果配置了startupProbe，就会先禁止其他的探针，直到它成功为止，成功后将不在进行探测。如果探针失败，kubelet则杀死容器，并且按照预先在<code>资源清单</code>中设定的<code>重启策略</code>重启容器。</strong></p></li><li><p><strong>LivenessProbe</strong>：<code>用于探测容器是否运行</code>，如果探测失败，kubelet会根据配置的重启策略进行相应的处理。若没有配置该探针，默认就是success。（存活探针，探针失败；按照预先在<code>资源清单</code>中设定的<code>重启策略</code>重启容器）</p></li><li><p><strong>ReadinessProbe</strong>：用于判断容器服务是否可用（Ready状态），达到Ready状态的Pod才可以接收请求。并且程序已经是可以接受流量的状态。对于被Service管理的 Pod，Service与Pod Endpoint的关联关系也将基于Pod是否Ready进行设置。如果在运行过程中Ready状态变为False，则系统自动将其从Service 的后端Endpoint列表中隔离出去，后续再把恢复到Ready状态的Pod加回后端Endpoint列表。这样就能保证客户端在访问Service时不会被转发到服务不可用的Pod实例上。需要注意的是，ReadinessProbe也是定期触发执行的，存在于Pod的整个生命周期中。（<strong>就绪探针，探针失败不会重启pod</strong>）</p></li></ul><h4 id="7-2-1-StartupProbe和LivenessProbe的区别"><a href="#7-2-1-StartupProbe和LivenessProbe的区别" class="headerlink" title="7.2.1 StartupProbe和LivenessProbe的区别"></a>7.2.1 StartupProbe和LivenessProbe的区别</h4><p>​    <strong>StartupProbe</strong>用于检测容器的启动是否完成，特别适用于启动时间较长的应用程序。在应用程序启动时间较长，可能超过默认的 <strong>LivenessProbe</strong> 超时时间，以防止应用程序在启动过程中被误判为不健康并被杀死。而<strong>StartupProbe</strong>可以预先设置推迟存活检测时间，如果配置了 <strong>StartupProbe</strong>，在其成功之前，<strong>LivenessProbe</strong> 将被禁用。一旦 <strong>StartupProbe</strong>成功，<strong>LivenessProbe</strong>开始工作。如果 <strong>StartupProbe</strong> 失败，容器将被重启。<code>其中最重要的一个作用StartupProbe在第一次探针完成后后续将不再执行探针，但是LivenessProbe将在容器的整个生命周期循环执行。</code></p><p><strong>StartupProbe</strong>：专注于应用程序启动阶段，防止应用程序启动时间较长时被误判为不健康。</p><p><strong>LivenessProbe</strong>：专注于应用程序的运行阶段，确保应用程序在运行过程中保持健康。</p><h3 id="7-3-Pod的四种探针方式（HTTPGetAction建议生产使用）"><a href="#7-3-Pod的四种探针方式（HTTPGetAction建议生产使用）" class="headerlink" title="7.3 Pod的四种探针方式（HTTPGetAction建议生产使用）"></a><strong>7.3 Pod的四种探针方式（HTTPGetAction建议生产使用）</strong></h3><ul><li><strong><code>ExecAction</code></strong>：在容器内执行一个命令，如果返回值为0，则认为容器健康。</li><li><strong><code>TCPSocketAction</code></strong>：通过TCP连接检查容器内的端口是否是通的，如果是通的就认为容器健康。</li><li><strong><code>HTTPGetAction</code></strong>：通过应用程序暴露的API地址来检查程序是否是正常的，如果状态码为200~400之间，则认为容器健康。</li><li><code>gRPC探针</code>：1.24版本之后开启</li></ul><h4 id="7-3-1-LivenessProbe和ReadinessProbe探针配置"><a href="#7-3-1-LivenessProbe和ReadinessProbe探针配置" class="headerlink" title="7.3.1 LivenessProbe和ReadinessProbe探针配置"></a>7.3.1 <code>LivenessProbe</code>和<code>ReadinessProbe</code>探针配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">~]#</span> <span class="string">mkdir</span> <span class="string">probe</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">probe/</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">containers:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span> </span><br><span class="line">    <span class="attr">readinessProbe:</span> <span class="comment"># 就绪探针,一种探针只能同时使用一种探针方式</span></span><br><span class="line">        <span class="attr">httpGet:</span>          <span class="comment"># URI接口检测方式</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/index.html</span>  <span class="comment"># 检查路径</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">scheme:</span> <span class="string">HTTP</span>   <span class="comment"># HTTP或者HTTPS </span></span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">15</span> <span class="comment"># 初始化时间，健康检查延迟执行时间</span></span><br><span class="line">        <span class="attr">timeoutSeconds:</span> <span class="number">3</span>  <span class="comment"># 超时时间</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">15</span> <span class="comment"># 检测间隔</span></span><br><span class="line">        <span class="attr">successThreshold:</span> <span class="number">1</span>  <span class="comment"># 检查成功为1次表示就绪</span></span><br><span class="line">        <span class="attr">failureThreshold:</span> <span class="number">2</span>  <span class="comment"># 检测失败2次，切断流量，用户请求则不转发到该容器</span></span><br><span class="line">    <span class="attr">livenessProbe:</span> <span class="comment"># 存活探针，一种探针只能同时使用一种探针方式</span></span><br><span class="line">        <span class="attr">tcpSocket:</span>   <span class="comment"># 端口检测方式</span></span><br><span class="line">          <span class="attr">port :</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">15</span> <span class="comment"># 初始化时间</span></span><br><span class="line">        <span class="attr">timeoutSeconds:</span> <span class="number">3</span> <span class="comment"># 超时时间</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">15</span> <span class="comment"># 检测间隔</span></span><br><span class="line">        <span class="attr">successThreshold:</span> <span class="number">1</span> <span class="comment"># 检查成功为1次表示存活</span></span><br><span class="line">        <span class="attr">failureThreshold:</span> <span class="number">2</span> <span class="comment"># 检测失败2次则按照重启策略重启容器</span></span><br><span class="line">    <span class="attr">command:</span> <span class="comment"># 容器启动命令</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">30</span><span class="string">;nginx</span> <span class="string">-g</span> <span class="string">"daemon off;"</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建Pod</span></span><br><span class="line"><span class="string">[root@k8s-master01</span> <span class="string">probe]#</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">nginx-probe.yaml</span></span><br></pre></td></tr></table></figure><h4 id="7-3-2-StartupProbe探针配置"><a href="#7-3-2-StartupProbe探针配置" class="headerlink" title="7.3.2 StartupProbe探针配置"></a><strong>7.3.2 <code>StartupProbe</code>探针配置</strong></h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">startupProbe:</span> <span class="comment"># 存活探针</span></span><br><span class="line">      <span class="attr">tcpSocket:</span>  <span class="comment"># 探针方式</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span>  <span class="comment"># 探针端口</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">10</span> <span class="comment">#初始化时间，健康检查延迟执行时间(随着程序启动的长久来设定)</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">2</span>    <span class="comment"># 超时时间</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">10</span>    <span class="comment"># 检测间隔</span></span><br><span class="line">      <span class="attr">successThreshold:</span> <span class="string">l</span>  <span class="comment"># 检查成功为1次表示存活</span></span><br><span class="line">      <span class="attr">failureThreshold:</span> <span class="number">2</span>  <span class="comment"># 检测失败2次表示未存活</span></span><br><span class="line">    <span class="attr">readinessProbe:</span>       <span class="comment"># 就绪探针，三种检查方式同时只能使用一种。</span></span><br><span class="line">      <span class="attr">httpGet:</span>            <span class="comment"># 接口检测方式</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/index.html</span>    <span class="comment"># 检查路径</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span>          <span class="comment"># 检查端口</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">10</span>  <span class="comment"># 初始化时间，健康检查延迟执行时间</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">2</span>     <span class="comment"># 超时时间</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">10</span>     <span class="comment"># 检测间隔</span></span><br><span class="line">      <span class="attr">successThreshold:</span> <span class="number">1</span>  <span class="comment">#检查成功为1次表示就绪</span></span><br><span class="line">      <span class="attr">failureThreshold:</span> <span class="number">2</span>  <span class="comment">#检测失败2次表示未就绪</span></span><br><span class="line">    <span class="attr">livenessProbe:</span>        <span class="comment"># 存活探针</span></span><br><span class="line">      <span class="attr">tcpSocket:</span>          <span class="comment"># 端口检测方式</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">10</span>    <span class="comment"># 初始化时间</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">2</span>        <span class="comment"># 超时时间</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">10</span>        <span class="comment"># 检测间隔</span></span><br><span class="line">      <span class="attr">successThreshold:</span> <span class="number">1</span>     <span class="comment"># 检查成功为1次表示就绪</span></span><br><span class="line">      <span class="attr">failureThreshold:</span> <span class="number">2</span>      <span class="comment"># 检测失败2次表示未就绪</span></span><br><span class="line">    <span class="attr">command:</span>      <span class="comment"># 容器启动执行的命令</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"10"</span></span><br><span class="line">    <span class="attr">ports:</span>         <span class="comment"># 容器端口</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>     <span class="comment"># 容器端口号</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h1 id="8、Pod平滑退出配置-倒钩"><a href="#8、Pod平滑退出配置-倒钩" class="headerlink" title="8、Pod平滑退出配置 倒钩"></a>8、Pod平滑退出配置 倒钩</h1><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/13.png" alt="image-20240917233535831"></p><p>kubernetes默认设置Pod退出宽限期为30s，但也可以自定义。配置代码处如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">lifecycle:</span></span><br><span class="line">      <span class="attr">postStart:</span></span><br><span class="line">        <span class="attr">exec:</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">sh</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">mkdir</span> <span class="string">/data/</span></span><br><span class="line">      <span class="attr">preStop:</span></span><br><span class="line">        <span class="attr">exec:</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">sh</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br><span class="line">  <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span>   <span class="comment"># Pod平滑退出宽限期，默认30s</span></span><br></pre></td></tr></table></figure><ul><li>当 Kubernetes 终止一个 Pod 时，会触发 <code>PreStop</code> 钩子，同时开始计时宽限期（例如 30 秒）。</li><li>容器会接收到 SIGTERM 信号，进入关闭状态，同时 Kubernetes 等待容器的正常退出。</li><li>如果 Pod 在宽限期内（30 秒）完成了生命周期钩子的执行并干净地关闭了，那么 Pod 将被成功终止。</li><li>如果宽限期到达时，Pod 仍然没有停止，将会再次的得到2s的宽限期。2s后，Kubernetes 将发送 SIGKILL 信号，强制终止 Pod。</li></ul><h3 id="8-1-简介"><a href="#8-1-简介" class="headerlink" title="8.1 简介"></a>8.1 简介</h3><p>​    在 Kubernetes 中，<code>preStop</code> 钩子是 Pod 生命周期管理的一部分。它允许你在容器终止之前运行一个命令或脚本，用于优雅地关闭服务、关闭连接或清理资源。<code>preStop</code> 钩子是在 Pod 中定义的生命周期钩子之一。当容器收到终止信号时，<code>preStop</code> 钩子会在容器实际终止前执行。</p><h3 id="8-2-PreStop钩子配置"><a href="#8-2-PreStop钩子配置" class="headerlink" title="8.2 PreStop钩子配置"></a>8.2 PreStop钩子配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]<span class="comment"># vim pod-prestop.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1 </span><br><span class="line">kind: Pod </span><br><span class="line">metadata: </span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers: </span><br><span class="line">  - name: nginx </span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:1.24.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    lifecycle:</span><br><span class="line">      postStart: <span class="comment"># 容器创建完成后执行的指令, 可以是 exec httpGet TCPSocket</span></span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>:</span><br><span class="line">          - sh</span><br><span class="line">          - -c</span><br><span class="line">          - <span class="string">'mkdir /data/'</span></span><br><span class="line">      preStop:</span><br><span class="line">        <span class="built_in">exec</span>:</span><br><span class="line">          <span class="built_in">command</span>:</span><br><span class="line">          - sh</span><br><span class="line">          - -c</span><br><span class="line">          - psleep 10  </span><br><span class="line">    ports:</span><br><span class="line">      - containerPort: 80</span><br><span class="line">  restartPolicy: Never</span><br><span class="line">  </span><br><span class="line"><span class="comment">#&gt;&gt;&gt;创建Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  create  -f pod-prestop.yaml </span></span><br><span class="line">pod/nginx created</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt;查看Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po </span></span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx   1/1     Running   0          6s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除Pod</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl delete po nginx </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod状态</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl get po </span></span><br><span class="line">NAME    READY   STATUS        RESTARTS   AGE</span><br><span class="line">nginx   1/1     Terminating   0          22s</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看Pod的停止记录</span></span><br><span class="line">[root@k8s-master01 ~]<span class="comment"># kubectl  describe po nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/14/Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/02-Kubernetes%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%EF%BC%88adm%EF%BC%89/14.png" alt="image-20240619200553178"></p><blockquote><p>注意：在容器创建之后，容器的<code>Entrypoint</code>执行之前，这时候Pod已经被调度到某台node上，被某个 kubelet管理了，这时候kubelet会调用postStart操作，该操作跟容器的启动命令是在同步执行的，也就是说在postStart操作执行完成之前，kubelet会锁住容器，不让应用程序的进程启动，只有在 postStart操作完成之后容器的状态才会被设置成为RUNNING。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes基础概念</title>
    <link href="https://l66stbz.github.io/2024/09/13/Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/01-Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>https://l66stbz.github.io/2024/09/13/Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/01-Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2024-09-13T13:50:00.000Z</published>
    <updated>2024-09-26T12:38:15.881Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>简介：<a href="https://kubernetes.p2hp.com/docs/concepts/overview/" target="_blank" rel="noopener">Kubernetes</a> 也称为 K8s，是用于自动部署、扩缩和管理容器化应用程序的开源系统。它将组成应用程序的容器组合成逻辑单元，以便于管理和服务发现。Kubernetes 源自<a href="http://queue.acm.org/detail.cfm?id=2898444" target="_blank" rel="noopener">Google 15 年生产环境的运维经验</a>，同时凝聚了社区的最佳创意和实践。</p><p><code>容器是打包和运行应用程序的好方式</code>。在生产环境中， 你需要管理运行着应用程序的容器，并确保服务不会下线。 例如，如果一个容器发生故障，则你需要启动另一个容器。 如果此行为交由给系统处理，是不是会更容易一些？</p><p>这就是 Kubernetes 要来做的事情！ Kubernetes 为你提供了一个可弹性运行分布式系统的框架。 Kubernetes 会满足你的扩展要求、故障转移你的应用、提供部署模式等。</p><p>Kubernetes 为你提供：</p><ul><li><p><strong>服务发现和负载均衡</strong></p><p>Kubernetes 可以使用 DNS 名称或自己的 IP 地址来曝露容器。 如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p></li><li><p><strong>存储编排</strong></p><p>Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p></li><li><p><strong>自动部署和回滚</strong></p><p>你可以使用 Kubernetes 描述已部署容器的所需状态， 它可以以受控的速率将实际状态更改为期望状态。 例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p></li><li><p><strong>自动完成装箱计算</strong></p><p>你为 Kubernetes 提供许多节点组成的集群，在这个集群上运行容器化的任务。 你告诉 Kubernetes 每个容器需要多少 CPU 和内存 (RAM)。 Kubernetes 可以将这些容器按实际情况调度到你的节点上，以最佳方式利用你的资源。</p></li><li><p><strong>自我修复</strong></p><p>Kubernetes 将重新启动失败的容器、替换容器、杀死不响应用户定义的运行状况检查的容器， 并且在准备好服务之前不将其通告给客户端。</p></li><li><p><strong>密钥与配置管理</strong></p><p>Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥</p><p><strong>Kubernetes 不是什么</strong></p></li><li><p>不限制支持的应用程序类型。 Kubernetes 旨在支持极其多种多样的工作负载，包括无状态、有状态和数据处理工作负载。 如果应用程序可以在容器中运行，那么它应该可以在 Kubernetes 上很好地运行。</p></li><li><p>不部署源代码，也不构建你的应用程序。 持续集成（CI）、交付和部署（CI/CD）工作流取决于组织的文化和偏好以及技术要求。</p></li><li><p>不提供应用程序级别的服务作为内置服务，例如中间件（例如消息中间件）、 数据处理框架（例如 Spark）、数据库（例如 MySQL）、缓存、集群存储系统 （例如 Ceph）。这样的组件可以在 Kubernetes 上运行，并且/或者可以由运行在 Kubernetes 上的应用程序通过可移植机制 （例如<a href="https://openservicebrokerapi.org/" target="_blank" rel="noopener">开放服务代理</a>）来访问。</p></li><li><p>不是日志记录、监视或警报的解决方案。 它集成了一些功能作为概念证明，并提供了收集和导出指标的机制。</p></li><li><p>不提供也不要求配置用的语言、系统，它提供了声明性 API， 该声明性 API 可以由任意形式的声明性规范所构成。</p></li><li><p>不提供也不采用任何全面的机器配置、维护、管理或自我修复系统。</p></li><li><p>此外，Kubernetes 不仅仅是一个编排系统，实际上它消除了编排的需要。 编排的技术定义是执行已定义的工作流程：首先执行 A，然后执行 B，再执行 C。 而 Kubernetes 包含了一组独立可组合的控制过程，可以连续地将当前状态驱动到所提供的预期状态。 你不需要在乎如何从 A 移动到 C，也不需要集中控制，这使得系统更易于使用 且功能更强大、系统更健壮，更为弹性和可扩展。</p></li></ul><p>架构图：</p><p><img src="/2024/09/13/Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/01-Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/2.png" alt="image-20240614190826602"></p><h2 id="2、组件介绍"><a href="#2、组件介绍" class="headerlink" title="2、组件介绍"></a>2、组件介绍</h2><p>当你部署完 Kubernetes，便拥有了一个完整的集群。一组工作机器，称为 <a href="https://kubernetes.p2hp.com/docs/concepts/architecture/nodes/" target="_blank" rel="noopener">节点</a>， 会运行容器化应用程序。每个集群至少有一个工作节点。工作节点会托管 <a href="https://kubernetes.p2hp.com/docs/concepts/workloads/pods.html" target="_blank" rel="noopener">Pod</a> ，而 Pod 就是作为应用负载的组件。 <a href="https://kubernetes.p2hp.com/docs/reference/glossary/index.html%3Fall=true.html#term-control-plane" target="_blank" rel="noopener">控制平面</a>管理集群中的工作节点和 Pod。 在生产环境中，控制平面通常跨多台计算机运行， 一个集群通常运行多个节点，提供容错性和高可用性。</p><h3 id="2-1-kube-apiserver"><a href="#2-1-kube-apiserver" class="headerlink" title="2.1 kube-apiserver "></a>2.1 kube-apiserver<a href="https://kubernetes.p2hp.com/docs/concepts/overview/components/#kube-apiserver" target="_blank" rel="noopener"> </a></h3><p>​    <strong>Kubernetes API Server的核心功能是提供Kubernetes各类资源对象的增、删、改、查及Watch等HTTP REST接口，成为集群内各个功能模块之间数据交互和通信的中心枢纽，是整个系统的数据总线和数据中心。除此之外，它还是集群管理的 API入口，是资源配额控制的入口，提供了完备的集群安全机制。</strong>    </p><p>​    API 服务器是 Kubernetes <a href="https://kubernetes.p2hp.com/docs/reference/glossary/index.html%3Fall=true.html#term-control-plane" target="_blank" rel="noopener">控制平面</a>的组件， 该组件负责公开了 Kubernetes API，负责处理接受请求的工作。 API 服务器是 Kubernetes 控制平面的前端。</p><p>Kubernetes API 服务器的主要实现是 <a href="https://kubernetes.p2hp.com/docs/reference/command-line-tools-reference/kube-apiserver.html" target="_blank" rel="noopener">kube-apiserver</a>。 <code>kube-apiserver</code> 设计上考虑了水平扩缩，也就是说，它可通过部署多个实例来进行扩缩。 你可以运行 <code>kube-apiserver</code> 的多个实例，并在这些实例之间平衡流量。</p><h3 id="2-2-etcd"><a href="#2-2-etcd" class="headerlink" title="2.2 etcd"></a>2.2 etcd</h3><p>​    一致且高度可用的键值存储，用作 Kubernetes 的所有集群数据的后台数据库。如果你的 Kubernetes 集群使用 etcd 作为其后台数据库， 请确保你针对这些数据有一份 <a href="https://kubernetes.p2hp.com/docs/tasks/administer-cluster/configure-upgrade-etcd/index.html#backing-up-an-etcd-cluster" target="_blank" rel="noopener">备份</a>计划。</p><h3 id="2-3-kube-scheduler"><a href="#2-3-kube-scheduler" class="headerlink" title="2.3 kube-scheduler"></a>2.3 kube-scheduler</h3><p>​    <code>kube-scheduler</code> 是<a href="https://kubernetes.p2hp.com/docs/reference/glossary/index.html%3Fall=true.html#term-control-plane" target="_blank" rel="noopener">控制平面</a>的组件， 负责监视新创建的、未指定运行<a href="https://kubernetes.p2hp.com/docs/concepts/architecture/nodes/" target="_blank" rel="noopener">节点（node）</a>的 <a href="https://kubernetes.p2hp.com/docs/concepts/workloads/pods.html" target="_blank" rel="noopener">Pods</a>， 并选择节点来让 Pod 在上面运行。它监听 kube-apiserver，查询还未分配Node的Pod，然后根据调度策略为这些 Pod 分配节点</p><p><img src="/2024/09/13/Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/01-Kubernetes%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/3.png" alt="image-20240912192836645"></p><h3 id="2-4-kube-controller-manager"><a href="#2-4-kube-controller-manager" class="headerlink" title="2.4 kube-controller-manager "></a>2.4 kube-controller-manager<a href="https://kubernetes.p2hp.com/docs/concepts/overview/components/#kube-controller-manager" target="_blank" rel="noopener"> </a></h3><p>​    在Kubernetes集群中，每个Controller都是这样的一 个“操作系统”，它们通过API Server提供的（List-Watch）接口实时监控集群中特定资源的状态变化，它通过 apiserver 监控整个集群的状态，并确保集群处于预期的工作状态。<code>当发生各种故障导致某资源对象的状态变化时，Controller会尝试将其状态调整为期望的状态。</code>比如当某个Node 意外宕机时，Node Controller会及时发现此故障并执行自动化修复流程，确保集群始终处于预期的工作状态下。Controller Manager是 Kubernetes中各种操作系统的管理者，是集群内部的管理控制中心，也是Kubernetes自动化功能的核心。</p><p>​    Controller Manager内部包含Replication Controller、 Node Controller、ResourceQuota Controller、Namespace Controller、 ServiceAccount Controller、Token Controller、Service Controller、 Endpoint Controller、Deployment Controller、Router Controller、Volume Controller等各种资源对象的控制器，每种Controller都负责一种特定资源的控制流程，而Controller Manager正是这些Controller的核心管理者。</p><p>​    <a href="https://kubernetes.p2hp.com/docs/reference/command-line-tools-reference/kube-controller-manager/" target="_blank" rel="noopener">kube-controller-manager</a> 是<a href="https://kubernetes.p2hp.com/docs/reference/glossary/index.html%3Fall=true.html#term-control-plane" target="_blank" rel="noopener">控制平面</a>的组件， 负责运行<a href="https://kubernetes.p2hp.com/docs/concepts/architecture/controller.html" target="_blank" rel="noopener">控制器</a>进程。</p><p>从逻辑上讲， 每个<a href="https://kubernetes.p2hp.com/docs/concepts/architecture/controller.html" target="_blank" rel="noopener">控制器</a>都是一个单独的进程， 但是为了降低复杂性，它们都被编译到同一个可执行文件，并在同一个进程中运行。</p><p>这些控制器包括：</p><ul><li>节点控制器（Node Controller）：负责在节点出现故障时进行通知和响应</li><li>任务控制器（Job Controller）：监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成</li><li>端点分片控制器（EndpointSlice controller）：填充端点分片（EndpointSlice）对象（以提供 Service 和 Pod 之间的链接）。</li><li>服务账号控制器（ServiceAccount controller）：为新的命名空间创建默认的服务账号（ServiceAccount）。</li></ul><h3 id="2-5-kubelet"><a href="#2-5-kubelet" class="headerlink" title="2.5 kubelet"></a>2.5 kubelet</h3><p>​    <code>kubelet</code> 会在集群中每个<a href="https://kubernetes.p2hp.com/docs/concepts/architecture/nodes/" target="_blank" rel="noopener">节点（node）</a>上运行。 它保证<a href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/#why-containers" target="_blank" rel="noopener">容器（containers）</a>都运行在 <a href="https://kubernetes.p2hp.com/docs/concepts/workloads/pods.html" target="_blank" rel="noopener">Pod</a> 中。kubelet 接收一组通过各类机制提供给它的 PodSpecs， 确保这些 PodSpecs 中描述的容器处于运行状态且健康。 kubelet 不会管理不是由 Kubernetes 创建的容器。</p><p>​    在Kubernetes集群中，在每个Node上都会启动一个 kubelet服务进程。该进程用于处理Master下发到本节点的任务，管理 Pod及Pod中的容器。<strong>每个kubelet进程都会在API Server上注册节点自身的信息，定期向Master汇报节点资源的使用情况</strong>，并通过cAdvisor监控容器和节点资源。</p><h3 id="2-6-kube-proxy"><a href="#2-6-kube-proxy" class="headerlink" title="2.6 kube-proxy"></a>2.6 kube-proxy</h3><p>​    <a href="https://kubernetes.p2hp.com/docs/reference/command-line-tools-reference/kube-proxy/" target="_blank" rel="noopener">kube-proxy</a> 是集群中每个<a href="https://kubernetes.p2hp.com/docs/concepts/architecture/nodes/" target="_blank" rel="noopener">节点（node）</a>所上运行的网络代理， 实现 Kubernetes <a href="https://kubernetes.p2hp.com/docs/concepts/services-networking/service/" target="_blank" rel="noopener">服务（Service）</a> 概念的一部分。kube-proxy 维护节点上的一些网络规则， 这些网络规则会允许从集群内部或外部的网络会话与 Pod 进行网络通信。</p><p>​    在集群中的Service和Pod大量增加以后，每个Node节点上 iptables中的规则会急速膨胀，导致网络性能显著下降，在某些极端情况下甚至会出现规则丢失的情况，并且这种故障难以重现与排查。于是 Kubernetes从1.8版本开始引入第三代的IPVS（IP Virtual Server）模式.</p><p><strong>iptables与IPVS虽然都是基于Netfilter实现的</strong>，但因为定位不同，二者有着本质的差别：iptables是为防火墙设计的；IPVS专门用于高性能负载均衡，并使用更高效的数据结构（哈希表），允许几乎无限的规模扩张，因此被kube-proxy采纳为第三代模式。 </p><p>与iptables相比，IPVS拥有以下明显优势： </p><ul><li><strong>为大型集群提供了更好的可扩展性和性能；</strong></li><li><strong>支持比iptables更复杂的复制均衡算法（最小负载、最少连接、 加权等）；</strong> </li><li><strong>支持服务器健康检查和连接重试等功能；</strong> </li><li><strong>可以动态修改ipset的集合，即使iptables的规则正在使用这个集合。</strong> </li><li>由于IPVS无法提供包过滤、airpin-masquerade tricks（地址伪装）、 SNAT等功能，因此在某些场景（如NodePort的实现）下还要与iptables搭配使用。 </li></ul><h3 id="2-7-容器运行时（Container-Runtime）"><a href="#2-7-容器运行时（Container-Runtime）" class="headerlink" title="2.7 容器运行时（Container Runtime） "></a>2.7 容器运行时（Container Runtime）<a href="https://kubernetes.p2hp.com/docs/concepts/overview/components/#container-runtime" target="_blank" rel="noopener"> </a></h3><p>​    容器运行环境是负责运行容器的软件。Kubernetes 支持许多容器运行环境，例如 <a href="https://containerd.io/docs/" target="_blank" rel="noopener">containerd</a>、 <a href="https://cri-o.io/#what-is-cri-o" target="_blank" rel="noopener">CRI-O</a> 以及 <a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/container-runtime-interface.md" target="_blank" rel="noopener">Kubernetes CRI (容器运行环境接口)</a> 的其他任何实现。</p><h3 id="2-8-CoreDNS"><a href="#2-8-CoreDNS" class="headerlink" title="2.8 CoreDNS"></a>2.8 CoreDNS</h3><p>​    <a href="https://coredns.io/" target="_blank" rel="noopener">CoreDNS</a> 是一种灵活的，可扩展的 DNS 服务器，可以<a href="https://github.com/coredns/deployment/tree/master/kubernetes" target="_blank" rel="noopener">安装</a>为集群内的Pod提供 DNS 服务。用于Kubernetes集群内部Service的解析，可以让Pod把Service名称解析成Service的IP，然后通过service的IP地址进行连接到对应的应用上。同时扮演着<strong>服务发现</strong>和<strong>DNS 解析</strong>的重要角色，使得集群中的服务和Pod可以通过 DNS 名称进行通信，而无需手动管理 IP 地址。CoreDNS 的插件化架构、轻量级以及与 Kubernetes 的深度集成，使其成为云原生环境下的理想 DNS 解决方案。</p><h3 id="2-9-Calico"><a href="#2-9-Calico" class="headerlink" title="2.9 Calico"></a>2.9 Calico</h3><p>​    为每个 Pod 分配一个唯一的 IP 地址，并确保 Pod 能够跨节点通信。每个 Kubernetes 节点上都会运行一个 <strong>calico-node</strong> 容器，该容器包含 Calico 的核心代理（Felix）和 BGP 客户端，负责管理和维护路由信息。Calico 将每个节点的路由信息分发到集群中的其他节点，从而实现不同节点上的 Pod 之间的直接通信。</p><p>​    </p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://l66stbz.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Docker容器化部署若依项目</title>
    <link href="https://l66stbz.github.io/2024/09/12/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/"/>
    <id>https://l66stbz.github.io/2024/09/12/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/</id>
    <published>2024-09-12T13:50:00.000Z</published>
    <updated>2024-09-13T03:36:26.027Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="若依项目Docker容器化部署"><a href="#若依项目Docker容器化部署" class="headerlink" title="若依项目Docker容器化部署"></a>若依项目Docker容器化部署</h2><p>[TOC]</p><h3 id="1、部署MySQL5-7容器"><a href="#1、部署MySQL5-7容器" class="headerlink" title="1、部署MySQL5.7容器"></a>1、部署MySQL5.7容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 拉取基础镜像</span></span><br><span class="line">$ docker pull mysql:5.7.44</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建数据持久化目录</span></span><br><span class="line">$ mkdir -p /opt/mysql/&#123;data,logs,conf&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 准备MySQL配置文件</span></span><br><span class="line">$ cat &gt;&gt; /opt/mysql/conf/my.cnf &lt;&lt;-EOF</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">default-time_zone = <span class="string">'+8:00'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建数据库添加的配置信息</span></span><br><span class="line">lower_case_table_names=1</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">max_connections=10000</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/run/mysqld/mysqld.sock</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">symbolic-links=0</span><br><span class="line">E</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建MySQL容器</span></span><br><span class="line">$ docker run \</span><br><span class="line">-itd -p 3306:3306 \</span><br><span class="line">--name dbservers --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /opt/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /opt/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /opt/mysql/logs:/logs \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=Abc123, \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">     mysql:5.7.44</span><br></pre></td></tr></table></figure><blockquote><p>提升root权限：–privileged=true<br>设置时区：-e TZ=Asia/Shanghai</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 进入MySQL容器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker ps | grep mysql</span></span><br><span class="line">eb9d2e235664   mysql:5.7.44    "docker-entrypoint.s…"   3 hours ago   Up 3 hours   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   dbservers</span><br><span class="line"><span class="meta">$</span><span class="bash"> docker <span class="built_in">exec</span> -it eb9d2e235664 bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 进入MySQL(容器内操作)</span></span><br><span class="line">bash-4.2# mysql -uroot -pAbc123,</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 创建若依用户(容器内操作)</span></span><br><span class="line">bash-4.2# GRANT ALL PRIVILEGES ON *.* TO 'ruoyi'@'%' IDENTIFIED BY 'Abc123456;' WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 创建数据库(容器内操作)</span></span><br><span class="line">bash-4.2# CREATE DATABASE ruoyi CHARACTER SET utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 刷新权限(容器内操作)</span></span><br><span class="line">bash-4.2# flush privileges;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 下载源码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://gitee.com/y_project/RuoYi-Vue.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/RuoYi-Vue/sql/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 导入SQL文件</span></span><br><span class="line">$ mysql -uruoyi -h192.168.174.101 -p<span class="string">'Abc123456;'</span>  ruoyi &lt; ry_20240629.sql</span><br><span class="line">$ mysql -uruoyi -h192.168.174.101 -p<span class="string">'Abc123456;'</span>  ruoyi &lt; quartz.sql</span><br></pre></td></tr></table></figure><h3 id="2、部署Redis容器"><a href="#2、部署Redis容器" class="headerlink" title="2、部署Redis容器"></a>2、部署Redis容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 拉取基础镜像</span></span><br><span class="line">$ docker pull redis:6.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建持久化目录</span></span><br><span class="line">$ mkdir -p /opt/redis/&#123;conf,data&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 准备redis配置文件(此配置文件仅用于测试，生产环境误用)</span></span><br><span class="line">$ vim /opt/redis/conf/redis.conf</span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">requirepass 123456</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动redis容器</span></span><br><span class="line">$ docker run \</span><br><span class="line">  -p 6379:6379 \</span><br><span class="line">  --name redis \</span><br><span class="line">  --restart=always  \</span><br><span class="line">  -v /opt/redis/data:/data  \</span><br><span class="line">  -v /opt/redis/conf/redis.conf:/etc/redis/redis.conf  \</span><br><span class="line">  -d redis:6.0 redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 进入redis容器</span></span><br><span class="line">$ docker <span class="built_in">exec</span> -it redis  bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试redis可用性</span></span><br><span class="line">root@d3240161b809:/data<span class="comment"># redis-cli </span></span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><h3 id="3、docker-network"><a href="#3、docker-network" class="headerlink" title="3、docker network"></a>3、docker network</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建docker network</span></span><br><span class="line">$ docker network create ruoyinet</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看网络</span></span><br><span class="line">$ docker network ls | grep ruoyi</span><br><span class="line">c5b87e546203   ruoyinet   bridge    <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将MySQL Redis加入自定义网络中</span></span><br><span class="line">$ docker network connect ruoyinet redis</span><br><span class="line">$ docker network connect ruoyinet dbservers</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 拉取测试容器</span></span><br><span class="line">$ docker pull busybox</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动测试容器</span></span><br><span class="line">$ docker run -itd --name busybox busybox</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将测试容器加入自定义docker network</span></span><br><span class="line">$ docker network connect ruoyinet busybox</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试服务之间连通性</span></span><br><span class="line">$ docker <span class="built_in">exec</span> -it busybox ping dbservers</span><br><span class="line">PING dbservers (172.18.0.3): 56 data bytes</span><br><span class="line">64 bytes from 172.18.0.3: seq=0 ttl=64 time=0.671 ms</span><br><span class="line">64 bytes from 172.18.0.3: seq=1 ttl=64 time=0.123 ms</span><br><span class="line"></span><br><span class="line">$ docker <span class="built_in">exec</span> -it busybox ping redis</span><br><span class="line">PING redis (172.18.0.2): 56 data bytes</span><br><span class="line">64 bytes from 172.18.0.2: seq=0 ttl=64 time=0.495 ms</span><br><span class="line">64 bytes from 172.18.0.2: seq=1 ttl=64 time=0.226 ms</span><br></pre></td></tr></table></figure><h3 id="4、前端项目构建（请先启动后端容器后再执行此操作）"><a href="#4、前端项目构建（请先启动后端容器后再执行此操作）" class="headerlink" title="4、前端项目构建（请先启动后端容器后再执行此操作）"></a>4、前端项目构建（请先启动后端容器后再执行此操作）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建重启目录</span></span><br><span class="line">$ mkdir -p /opt/ruoyi-ui</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /opt/ruoyi-ui/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 下载源码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://gitee.com/BRWYZ/ruoyi-vue.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> ruoyi-vue/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 准备nginx配置文件</span></span><br><span class="line">$ vim default.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen  80;</span><br><span class="line">  server_name localhost;</span><br><span class="line">  location / &#123;</span><br><span class="line">    root   /usr/share/nginx/html;</span><br><span class="line">    try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  location /prod-api/ &#123;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_pass http://&lt;ruoyi-admin container IP&gt;:8080/;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编写前端Dockerfile</span></span><br><span class="line">$ vim Dockerfile</span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/node:16.15.0   AS builder</span><br><span class="line">COPY ./ /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN npm install &amp;&amp; npm run build:prod</span><br><span class="line"><span class="comment">#报错网络问题将上一行换成如下行</span></span><br><span class="line"><span class="comment">#RUN   npm install -registry=http://registry.npmmirror.com &amp;&amp; npm run build:prod</span></span><br><span class="line"></span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:v1.24.0</span><br><span class="line">RUN mkdir /app</span><br><span class="line">COPY --from=builder /app/dist /app</span><br><span class="line">COPY default.conf /etc/nginx/conf.d/default.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 构建镜像</span></span><br><span class="line">$ docker build -t ruoyi-ui:v1.0 .</span><br><span class="line">$ docker run -itd --name ruoyi-ui -p 80:80 -v /opt/ruoyi-ui/ruoyi-vue/default.conf:/etc/nginx/conf.d/default.conf --network ruoyinet ruoyi-ui:v1.0</span><br></pre></td></tr></table></figure><h3 id="5、后端容器容器化部署"><a href="#5、后端容器容器化部署" class="headerlink" title="5、后端容器容器化部署"></a>5、后端容器容器化部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 克隆源代码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://gitee.com/BRWYZ/ruoyi-dev.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> ruoyi-dev/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改redis连接地址池</span></span><br><span class="line">$ vim ruoyi-admin/src/main/resources/application.yml</span><br></pre></td></tr></table></figure><p><img src="/2024/09/12/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.png" alt="image-20240908214625582"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 修改MySQL连接地址池</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim  ruoyi-admin/src/main/resources/application-druid.yml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/12/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/2.png" alt="image-20240908214802610"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 编写Dockerfile</span></span><br><span class="line">$ vim Dockerfile</span><br><span class="line">FROM maven:3.9.6 AS builder</span><br><span class="line">COPY ./ /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN mvn install &amp;&amp; <span class="built_in">cd</span> ruoyi-admin &amp;&amp; mvn clean package</span><br><span class="line"></span><br><span class="line">FROM openjdk:11.0.11-9-jre</span><br><span class="line">COPY --from=builder /app/ruoyi-admin/target/ruoyi-admin.jar /app.jar</span><br><span class="line">ENTRYPOINT [<span class="string">"java"</span>, <span class="string">"-jar"</span>, <span class="string">"/app.jar"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 构建镜像</span></span><br><span class="line">$ docker build -t ruoyi-admin:v1.0 .</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动后端容器</span></span><br><span class="line">$ docker run \</span><br><span class="line">-itd --name ruoyi-admin \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">--network ruoyinet \</span><br><span class="line">ruoyi-admin:v1.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看启动日志</span></span><br><span class="line">$ docker logs -f ruoyi-admin</span><br></pre></td></tr></table></figure><p><img src="/2024/09/12/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/3.png" alt="image-20240908230253860"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="https://l66stbz.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker基本操作命令</title>
    <link href="https://l66stbz.github.io/2024/09/11/Docker%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/Docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://l66stbz.github.io/2024/09/11/Docker%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/Docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</id>
    <published>2024-09-11T13:50:00.000Z</published>
    <updated>2024-09-13T03:32:46.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="docker-基本操作命令"><a href="#docker-基本操作命令" class="headerlink" title="docker 基本操作命令"></a>docker 基本操作命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">dockersearch  镜像名#搜索镜像</span><br><span class="line"> -f stars=星数 #根据镜像热度进行搜索</span><br><span class="line"></span><br><span class="line">dockerpull镜像名#拉取镜像</span><br><span class="line">dockerpush镜像名#上传镜像</span><br><span class="line"></span><br><span class="line">dockerimages#查看所有镜像基本信息</span><br><span class="line">dockerimagels</span><br><span class="line">dockerimagelist</span><br><span class="line">-q只查看ID</span><br><span class="line"></span><br><span class="line">dockerps#查看运行状态的容器信息，加了-a则查看所有容器信息</span><br><span class="line">docker container ls</span><br><span class="line">docker container list</span><br><span class="line">docker container ps</span><br><span class="line">-q只查看ID</span><br><span class="line">-a  所有</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockerinspect镜像id/镜像名#查看本地镜像详细信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockerrmi镜像id/镜像名#删除本地镜像（可以删除多个，每个名字之间用空格隔开），需要先停止或删除基于该镜像的容器</span><br><span class="line"></span><br><span class="line">dockerrm容器id/容器名#删除本地容器（可以删除多个，每个名字之间用空格隔开）</span><br><span class="line">-f  强制删除 #一般情况下删除运行中的容器，需要先停止容器再执行删除容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker rmi$(docker images -q)#删除所有镜像</span><br><span class="line">docker rm$(docker ps -qa)#删除所有容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker history   镜像名/镜像ID#查看通过dockerfile制作镜像的过程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockercreate--name  容器名镜像名#创建新容器但不启动</span><br><span class="line">dockerstart容器名/容器ID #运行容器</span><br><span class="line">dockerrestart容器名/容器ID #重启容器</span><br><span class="line">dockerstop容器名/容器ID #停止容器</span><br><span class="line">dockerkill容器名/容器ID #强制停止容器</span><br><span class="line">docker stop/kill$(docker ps -q) #停止所有运行中的容器</span><br><span class="line">dockerpause容器名/容器ID #暂停容器</span><br><span class="line">dockernopause容器名/容器ID #恢复容器的运行</span><br><span class="line">dockerrename旧容器名新容器名   #修改容器名</span><br><span class="line">dockerstats容器名/容器ID #实时显示容器资源使用统计信息</span><br><span class="line">dockerinspect容器id/容器名 #查看本地容器详细信息</span><br><span class="line">dockertop容器id/容器名 #查看容器内进程详细信息</span><br><span class="line">dockercp-a容器名：路径本地存放位置      #从容器拷贝到本机</span><br><span class="line">dockercp-a本地文件路径容器名：路径      #从本机拷贝到容器</span><br><span class="line">docker image save &lt;image_name&gt;:&lt;tag&gt; &gt;/to/path/&lt;image_name&gt;.tar.gz   #导出镜像</span><br><span class="line">docker image load -i /to/path/&lt;image_name&gt;.tar.gz   #导入镜像</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">将镜像推送到ali Registry</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker login --username=命中注定吖 registry.cn-hangzhou.aliyuncs.com</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/l66/nginx:[镜像版本号]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker push registry.cn-hangzhou.aliyuncs.com/l66/nginx:[镜像版本号]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker volume create 数据卷名                     #创建卷</span><br><span class="line">docker volume ls                                 #查看卷（只能查看volume格式）</span><br><span class="line">docker volume inspect 数据卷名                   #查看卷的详细信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockerexec-it容器名/容器ID解释器(bash)#切入正在运行的容器内</span><br><span class="line">退出并停止容器终端：容器终端内执行exit</span><br><span class="line">仅退出容器终端： 快捷键ctrl+p+q</span><br><span class="line">【特殊用法】</span><br><span class="line">dockerexec容器名/容器ID命令#不进入容器，进行容器内的操作</span><br><span class="line">docker exec 容器id/容器名 env                 #查看容器环境变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockerattach容器名/容器ID#切入正在运行的容器内(需要容器创建时指定了有效解释器)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dockerrun -it--name  容器名镜像名解释器#创建并运行一个新Docker 容器</span><br><span class="line"></span><br><span class="line">eg:  docker container run -itd --name webserver -p 80:80 nginx:1.27.1</span><br><span class="line"></span><br><span class="line">​-i：标准输入输出</span><br><span class="line">​-t：分配一个终端或控制台，结合后面的解释器使用</span><br><span class="line">​--restart=always：容器随docker engine自启动，因为在重启docker的时候默认容器都会被关闭   也适用于create选项</span><br><span class="line">​--rm:容器结束时自动清理其运行过程中所产生的数据</span><br><span class="line">​【--rm和--restart=alwarys冲突,不能一起使用】</span><br><span class="line">​-d：后台运行</span><br><span class="line">​-p：指定端口；如：80:80，左边为本机的80端口，右边为容器的80端口</span><br><span class="line">​-e: 运行容器时导入指定的环境变量</span><br><span class="line">​-v：共享本机文件夹</span><br><span class="line">​--volumes-from：共享容器文件夹</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="https://l66stbz.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker容器化</title>
    <link href="https://l66stbz.github.io/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    <id>https://l66stbz.github.io/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/</id>
    <published>2024-09-10T13:50:00.000Z</published>
    <updated>2024-09-13T03:29:17.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-容器简介"><a href="#1-容器简介" class="headerlink" title="1. 容器简介"></a>1. 容器简介</h3><h4 id="1-1-什么是Linux容器"><a href="#1-1-什么是Linux容器" class="headerlink" title="1.1 什么是Linux容器"></a>1.1 什么是Linux容器</h4><p>​    容器其实是一种<strong>沙盒</strong>技术。<strong>沙盒像一个集装箱一样把你的应用“装”起来的技术</strong>。这样应用与应用之间就因为有了边界而不至于相互干扰；而被装进了集装箱的应用，也可以被方便地搬来搬去。<br>​    Linux容器是与系统其他部分隔离开的一系列进程，从另一个<strong>镜像</strong>运行，并由该镜像提供支持进程所需的全部文件。容器提供的镜像包含了应用的所有依赖项，因而在从开发到测试再到生产的整个过程中，它都具有可移植性和一致性。<br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/1.jpg" alt="image.png"></p><h4 id="1-2-容器的基本概念-namespace-cgroups"><a href="#1-2-容器的基本概念-namespace-cgroups" class="headerlink" title="1.2 容器的基本概念(namespace cgroups)"></a>1.2 容器的基本概念(namespace cgroups)</h4><p><strong>隔离性</strong>：容器在操作系统层面提供了进程、文件系统、网络等资源的隔离，确保每个容器内部的操作不会影响到其他容器或主机系统。<br><strong>轻量级</strong>：与虚拟机不同，容器不需要包含整个操作系统，而是共享主机操作系统的内核。因此，容器的启动速度快，占用的资源少。一般容器以毫秒级启动，而虚拟机是分钟级启动。<br><strong>可移植性</strong>：容器镜像包含应用程序及其依赖的所有软件和库，使得容器可以在任何支持容器运行的环境中运行（例如，开发者的本地机器、测试环境、生产环境等）。</p><h4 id="1-3-容器的核心技术实现"><a href="#1-3-容器的核心技术实现" class="headerlink" title="1.3 容器的核心技术实现"></a>1.3 容器的核心技术实现</h4><p><strong>Namespaces</strong>  veth pair</p><ul><li>提供进程、网络、文件系统等资源的隔离，确保每个容器内的进程只能看到并操作属于该容器的资源。比如：命名空间可以提供一个进程相互隔离的独立网络空间，不同的容器间进程pid可以相同，进程并不冲突影响，但可以共享底层的计算和存储资源。</li></ul><p><strong>Cgroups</strong></p><ul><li>管理和限制容器使用的资源（如 CPU、内存、磁盘 I/O 等），确保容器不会超出分配的资源。比如给容器A分配4颗CPU，8G 内存，那这个容器最多用这么多的资源。如果内存超过8G ，会启动swap，效率降低，也可能会被调度系统给kill掉。</li></ul><p>白话文：Namespace的作用是“隔离”，他让应用进程只能“看到”该Namespace内的“世界”；而Cgroups的作用是“限制”，它给这个“世界”围了一圈看不见的“墙”。如此一来，进程就真的被“装”在了一个与世隔绝的“房间”里。这就是所谓的沙盒！</p><h4 id="1-4-容器和虚拟机的区别？"><a href="#1-4-容器和虚拟机的区别？" class="headerlink" title="1.4 容器和虚拟机的区别？"></a>1.4 容器和虚拟机的区别？</h4><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/2.jpg" alt></p><p><strong>传统虚拟技术</strong><br>    <strong>虚拟机（virtual machine）就是带环境安装的一种解决方案。</strong><br>    它可以在一种操作系统里面运行另一种操作系统，比如在Windows 系统里面运行Linux 系统。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。这类虚拟机完美的运行了另一套系统，能够使应用程序，操作系统和硬件三者之间的逻辑不变。<br>虚拟机的缺点：1 资源占用多 2 冗余步骤多 3 启动慢</p><p><strong>容器技术</strong><br>    Linux 容器不是模拟一个完整的操作系统，而是对进程进行隔离。有了容器，就可以将软件运行所需的所有资源打包到一个隔离的容器中。容器与虚拟机不同，不需要捆绑一整套操作系统，只需要软件工作所需的库资源和设置。系统因此而变得高效轻量并保证部署在任何环境中的软件都能始终如一地运行。</p><p><strong>Docker和传统虚拟化方式的不同之处：</strong><br>    传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。</p><p><strong>为什么docker 容器比VM快？</strong><br>    docker有着比虚拟机更少的抽象层。由于docker不需要Hypervisor实现硬件资源虚拟化,运行在docker容器上的程序直接使用的都是实际物理机的硬件资源。因此在CPU、内存利用率上docker将会在效率上有明显优势。<br>    docker利用的是宿主机的内核,而不需要Guest OS。因此,当新建一个容器时,docker不需要和虚拟机一样重新加载一个操作系统内核。避免引寻、加载操作系统内核比较费时费资源的过程,当新建一个虚拟机时,虚拟机软件需要加载Guest OS,这个新建过程是分钟级别的。而docker由于直接利用宿主机的操作系统,则省略了这个过程,因此新建一个docker容器只需要几秒钟。</p><h3 id="2-Docker简介"><a href="#2-Docker简介" class="headerlink" title="2. Docker简介"></a>2. Docker简介</h3><h4 id="2-1-Docker是什么"><a href="#2-1-Docker是什么" class="headerlink" title="2.1 Docker是什么"></a>2.1 Docker是什么</h4><p>​    开发人员通过Docker将他们的想法变为现实将软件打包为标准化单元，<strong><code>用于开发、装运和部署容器是一个标准的软件单元</code></strong>，它封装代码及其所有依赖项，以便应用程序从一个计算环境快速可靠地运行到另一个环境。        </p><p>​    Docker容器镜像是一个轻量级、独立的可执行软件包，包括运行应用程序所需的一切：代码、运行时、系统工具、系统库和设置。<br>​    容器镜像在运行时会变成容器，在Docker容器的情况下，镜像在Docker引擎上运行时会成为容器。容器化软件可用于基于Linux和Windows的应用程序，无论基础结构如何，都将始终运行相同的软件。容器将软件与其环境隔离开来，并确保它统一工作，尽管存在差异，例如开发和阶段之间的差异。<br>​    2013年，Docker推出了集装箱行业标准。容器是一个标准化的软件单元，允许开发人员将应用程序与其环境隔离，解决“它在我的机器上工作”的难题。对于今天数以百万计的开发人员来说，Docker是构建和共享容器化应用程序的事实标准——从桌面到云。我们正在为开发人员和开发团队构建从代码到云的独特连接体验。</p><h4 id="2-2-Docker的目标"><a href="#2-2-Docker的目标" class="headerlink" title="2.2 Docker的目标"></a>2.2 Docker的目标</h4><p>docker的主要目标是”Build,Ship and Run any App,Angwhere”, 构建，运输，处处运行</p><ul><li>构建：做一个docker镜像</li><li>运输：docker pull or push</li><li>运行：启动一个容器</li></ul><p>每一个容器，他都有自己的文件系统<strong>rootfs</strong>。</p><h3 id="3-Docker熟识"><a href="#3-Docker熟识" class="headerlink" title="3. Docker熟识"></a>3. Docker熟识</h3><h4 id="3-1-Docker部署及配置"><a href="#3-1-Docker部署及配置" class="headerlink" title="3.1 Docker部署及配置"></a>3.1 Docker部署及配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">$ yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># Step 2: 添加软件源信息</span></span><br><span class="line">$ yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># Step 3</span></span><br><span class="line">$ sed -i <span class="string">'s+download.docker.com+mirrors.aliyun.com/docker-ce+'</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"><span class="comment"># Step 4: 更新并安装Docker-CE</span></span><br><span class="line">$ yum makecache fast</span><br><span class="line">$ yum -y install docker-ce</span><br><span class="line"><span class="comment"># Step 4: 开启Docker服务</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span>  --now docker </span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试版本等。</span></span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="comment">#   将[docker-ce-test]下方的enabled=0修改为enabled=1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="comment"># Step 1: 查找Docker-CE的版本:</span></span><br><span class="line"><span class="comment"># yum list docker-ce.x86_64 --showduplicates | sort -r</span></span><br><span class="line"><span class="comment">#   Loading mirror speeds from cached hostfile</span></span><br><span class="line"><span class="comment">#   Loaded plugins: branch, fastestmirror, langpacks</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   Available Packages</span></span><br><span class="line"><span class="comment"># Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)</span></span><br><span class="line"><span class="comment"># sudo yum -y install docker-ce-[VERSION]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 配置镜像加速器</span></span><br><span class="line">$ mkdir -p /etc/docker</span><br><span class="line">$ tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [ <span class="string">"http://hub-mirror.c.163.com"</span>, </span><br><span class="line">  <span class="string">"https://docker.m.daocloud.io"</span>, </span><br><span class="line">  <span class="string">"https://dockerproxy.com"</span>, </span><br><span class="line">  <span class="string">"https://docker.mirrors.ustc.edu.cn"</span>, </span><br><span class="line">  <span class="string">"https://docker.nju.edu.cn"</span> ] </span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看是否生效</span></span><br><span class="line">$ docker info |grep -A 5 <span class="string">'Registry Mirrors'</span></span><br><span class="line"> Registry Mirrors:</span><br><span class="line">  http://hub-mirror.c.163.com/</span><br><span class="line">  https://docker.m.daocloud.io/</span><br><span class="line">  https://dockerproxy.com/</span><br><span class="line">  https://docker.mirrors.ustc.edu.cn/</span><br><span class="line">  https://docker.nju.edu.cn/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动nginx:1.21容器，并且后台运行</span></span><br><span class="line">$ docker container run \</span><br><span class="line">-itd  \</span><br><span class="line">--name webserver01 \</span><br><span class="line">    -p 8080:80 \</span><br><span class="line">    nginx:1.21</span><br><span class="line"><span class="comment"># 参数解释</span></span><br><span class="line">-i：让容器的标准输入打开</span><br><span class="line">-t：分配一个伪终端</span><br><span class="line">-d：后台启动</span><br><span class="line">-p: 将宿主机的8080端口映照至容器的80端口</span><br><span class="line"><span class="comment"># 执行命令终端部分回显如下：</span></span><br><span class="line">Unable to find image <span class="string">'nginx:1.21'</span> locally</span><br><span class="line">1.21: Pulling from library/nginx</span><br><span class="line">1fe172e4850f: Pull complete</span><br><span class="line">35c195f487df: Pull complete</span><br><span class="line">213b9b16f495: Pull complete</span><br><span class="line">a8172d9e19b9: Pull complete</span><br><span class="line">f5eee2cb2150: Pull complete</span><br><span class="line">93e404ba8667: Pull complete</span><br><span class="line">Digest: sha256:859ab6768a6f26a79bc42b231664111317d095a4f04e4b6fe79ce37b3d199097</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> nginx:1.21</span><br><span class="line">28a074f14de734d565b61d49f8dd1fd005a7da696b381ec3514fe89449ae96b3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前台运行nginx容器，退出时删除</span></span><br><span class="line">$ docker container run -it nginx:1.21</span><br></pre></td></tr></table></figure><p>测试访问：宿主机IP+8080<br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/3.jpg" alt></p><h4 id="3-2-Docker架构"><a href="#3-2-Docker架构" class="headerlink" title="3.2 Docker架构"></a>3.2 Docker架构</h4><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/4.jpg" alt></p><ol><li><strong>Docker Client（Docker 客户端）</strong></li></ol><p>Docker 客户端是用户与 Docker 系统交互的接口。用户通过 CLI 命令（如 <code>docker run</code>、<code>docker build</code>）与 Docker 守护进程通信，发出管理容器的各种指令。</p><ol start="2"><li><strong>Dockerd（Docker 守护进程）</strong></li></ol><p>Dockerd 是 Docker 的核心守护进程，负责处理来自 Docker 客户端的请求。它管理 Docker 容器、镜像、网络和数据卷，并将请求传递给下一级组件（如 Containerd）。通过 gRPC 与 Containerd 通信。</p><ol start="3"><li><strong>Containerd</strong></li></ol><p>Containerd 是一个高级容器运行时，负责管理容器的整个生命周期。它处理容器的创建、执行、挂载存储和网络管理。通过 gRPC 接收 Dockerd 的指令，并进一步传递给 Runc 和 Shim。</p><ol start="4"><li><strong>Runc</strong></li></ol><p>Runc 是一个 CLI 工具，用于根据 Open Container Initiative (OCI) 规范创建和运行容器。Runc 实际上负责执行容器的启动、停止等底层操作。它通过 <code>fork</code> 进程来创建容器。</p><ol start="5"><li><strong>Shim</strong></li></ol><p>Shim 是一个中介程序，在容器与 Containerd 之间提供隔离。当 Runc 启动容器后，Shim 保持容器运行并将 Runc 从系统进程中分离。这样，如果 Containerd 需要重启或崩溃，容器仍然可以继续运行。<strong>充当父进程，当容器的应用进程结束时，Shim负责接收容器的退出状态并清理资源。</strong></p><h4 id="3-3-Docker基本指令"><a href="#3-3-Docker基本指令" class="headerlink" title="3.3 Docker基本指令"></a>3.3 Docker基本指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker version</span></span><br><span class="line"></span><br><span class="line">Client: Docker Engine - Community<span class="comment"># 这是社区版本的 Docker 引擎。</span></span><br><span class="line"> Version:           26.1.1<span class="comment"># Docker 客户端的版本号。</span></span><br><span class="line"> API version:       1.45<span class="comment"># Docker API 的版本号。Docker引擎通信的接口。</span></span><br><span class="line"> Go version:        go1.21.9<span class="comment"># Go 版本</span></span><br><span class="line"> Git commit:        4cf5afa<span class="comment"># 编译客户端时使用的 Git 提交哈希值。这是特定构建的唯一标识符。</span></span><br><span class="line"> Built:             Tue Apr 30 11:51:00 2024<span class="comment"># 客户端的构建时间。</span></span><br><span class="line"> OS/Arch:           linux/amd64<span class="comment"># 客户端运行的操作系统和架构</span></span><br><span class="line"> Context:           default<span class="comment"># Docker Context 是 Docker CLI 的配置，允许用户在多个 Docker 主机之间轻松切换。</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          26.1.1</span><br><span class="line">  API version:      1.45 (minimum version 1.24)</span><br><span class="line">  Go version:       go1.21.9</span><br><span class="line">  Git commit:       ac2de55</span><br><span class="line">  Built:            Tue Apr 30 11:49:57 2024</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line"> containerd:<span class="comment"># containerd 是一个容器运行时，负责在宿主机上管理容器的生命周期。</span></span><br><span class="line">  Version:          1.6.31</span><br><span class="line">  GitCommit:        e377cd56a71523140ca6ae87e30244719194a521</span><br><span class="line"> </span><br><span class="line"> runc:<span class="comment"># runc 是一个 CLI 工具，用于根据 OCI 规范运行容器。</span></span><br><span class="line">  Version:          1.1.12</span><br><span class="line">  GitCommit:        v1.1.12-0-g51d5e94</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br><span class="line">  </span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker info </span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:    26.1.1</span><br><span class="line"> Context:    default</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Plugins:</span><br><span class="line">  buildx: Docker Buildx (Docker Inc.)</span><br><span class="line">    Version:  v0.14.0</span><br><span class="line">    Path:     /usr/libexec/docker/cli-plugins/docker-buildx</span><br><span class="line">  compose: Docker Compose (Docker Inc.)</span><br><span class="line">    Version:  v2.27.0</span><br><span class="line">    Path:     /usr/libexec/docker/cli-plugins/docker-compose</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Containers: 2</span><br><span class="line">  Running: 2<span class="comment"># 正在运行的容器数量，这里是 2。</span></span><br><span class="line">  Paused: 0 <span class="comment"># 暂停的容器数量，这里是 0。</span></span><br><span class="line">  Stopped: 0<span class="comment"># 停止的容器数量，这里是 0。</span></span><br><span class="line"> Images: 2<span class="comment">#  Docker 镜像的数量，这里是 2。</span></span><br><span class="line"> Server Version: 26.1.1<span class="comment"># Docker 服务器的版本号，这里是 26.1.1。</span></span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">  Backing Filesystem: xfs<span class="comment"># 底层文件系统，这里是 xfs。</span></span><br><span class="line">  Supports d_type: <span class="literal">true</span></span><br><span class="line">  Using metacopy: <span class="literal">false</span></span><br><span class="line">  Native Overlay Diff: <span class="literal">true</span></span><br><span class="line">  userxattr: <span class="literal">false</span></span><br><span class="line"> Logging Driver: json-file</span><br><span class="line"> Cgroup Driver: cgroupfs</span><br><span class="line"> Cgroup Version: 1</span><br><span class="line"> Plugins:</span><br><span class="line">  Volume: <span class="built_in">local</span></span><br><span class="line">  Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">  Log: awslogs fluentd gcplogs gelf journald json-file <span class="built_in">local</span> splunk syslog</span><br><span class="line"> Swarm: inactive</span><br><span class="line"> Runtimes: io.containerd.runc.v2 runc</span><br><span class="line"> Default Runtime: runc</span><br><span class="line"> Init Binary: docker-init</span><br><span class="line"> containerd version: e377cd56a71523140ca6ae87e30244719194a521</span><br><span class="line"> runc version: v1.1.12-0-g51d5e94</span><br><span class="line"> init version: de40ad0</span><br><span class="line"> Security Options:</span><br><span class="line">  seccomp</span><br><span class="line">   Profile: <span class="built_in">builtin</span></span><br><span class="line"> Kernel Version: 3.10.0-1160.el7.x86_64</span><br><span class="line"> Operating System: CentOS Linux 7 (Core)</span><br><span class="line"> OSType: linux</span><br><span class="line"> Architecture: x86_64</span><br><span class="line"> CPUs: 2</span><br><span class="line"> Total Memory: 3.84GiB</span><br><span class="line"> Name: docker-ce</span><br><span class="line"> ID: f0bf43f3-cec5-41dd-8c3d-673a340c7237</span><br><span class="line"> Docker Root Dir: /var/lib/docker</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Experimental: <span class="literal">false</span></span><br><span class="line"> Insecure Registries:</span><br><span class="line">  127.0.0.0/8</span><br><span class="line"> Registry Mirrors:</span><br><span class="line">  https://kr1xs9ba.mirror.aliyuncs.com/</span><br><span class="line"> Live Restore Enabled: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="4-Docker镜像管理"><a href="#4-Docker镜像管理" class="headerlink" title="4. Docker镜像管理"></a>4. Docker镜像管理</h3><h4 id="4-1-登录官方镜像仓库"><a href="#4-1-登录官方镜像仓库" class="headerlink" title="4.1 登录官方镜像仓库"></a>4.1 登录官方镜像仓库</h4><p>链接：<a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker login</span></span><br><span class="line">Log <span class="keyword">in</span> with your Docker ID or email address to push and pull images from Docker Hub. If you don<span class="string">'t have a Docker ID, head over to https://hub.docker.com/ to create one.</span></span><br><span class="line"><span class="string">You can log in with your password or a Personal Access Token (PAT). Using a limited-scope PAT grants better security and is required for organizations using SSO. Learn more at https://docs.docker.com/go/access-tokens/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Username: 2364736365@qq.com      </span></span><br><span class="line"><span class="string">Password: </span></span><br><span class="line"><span class="string">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span></span><br><span class="line"><span class="string">Configure a credential helper to remove this warning. See</span></span><br><span class="line"><span class="string">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Login Succeeded</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 退出</span></span><br><span class="line"><span class="string">[root@docker-ce ~]# docker logout</span></span><br></pre></td></tr></table></figure><h4 id="4-2-搜索官方仓库镜像-docker-search-lt-image-name-gt"><a href="#4-2-搜索官方仓库镜像-docker-search-lt-image-name-gt" class="headerlink" title="4.2 搜索官方仓库镜像 docker search &lt;image_name&gt;"></a>4.2 搜索官方仓库镜像 <code>docker search &lt;image_name&gt;</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker search nginx | head -3</span></span><br><span class="line">NAME                        DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">nginx                       Official build of Nginx.                        16723     [OK]</span><br><span class="line">bitnami/nginx               Bitnami nginx Docker Image                      124                  [OK]</span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/5.jpg" alt="image-20240908142046077"></p><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/6.jpg" alt></p><h4 id="4-2-获取镜像-docker-pull-lt-image-name-gt-lt-tag-gt"><a href="#4-2-获取镜像-docker-pull-lt-image-name-gt-lt-tag-gt" class="headerlink" title="4.2 获取镜像 docker pull &lt;image_name&gt;:&lt;tag&gt;"></a>4.2 获取镜像 <code>docker pull &lt;image_name&gt;:&lt;tag&gt;</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker pull tomcat:8-jdk8-corretto</span></span><br><span class="line">8-jdk8-corretto: Pulling from library/tomcat</span><br><span class="line">8de5b65bd171: Pull complete</span><br><span class="line">00e9707b9594: Pull complete</span><br><span class="line">a4d7141ce82b: Pull complete</span><br><span class="line">683f96ff9142: Pull complete</span><br><span class="line">021d0aeb9b5a: Pull complete</span><br><span class="line">Digest: sha256:5519094808b33f320cb8821e6789ae813d1c71ee3dd03ecc35035fb94be37a3e</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> tomcat:8-jdk8-corretto</span><br><span class="line">docker.io/library/tomcat:8-jdk8-corretto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地所有镜像</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY   TAG               IMAGE ID       CREATED                  SIZE</span><br><span class="line">tomcat       8-jdk8-corretto   6aa794aeaf2e   Less than a second ago   379MB</span><br><span class="line">nginx        1.21              fa5269854a5e   12 days ago              142MB</span><br></pre></td></tr></table></figure><h4 id="4-3-导出镜像-docker-image-save-lt-image-name-gt-lt-tag-gt-gt-to-path-lt-image-name-gt-tar-gz"><a href="#4-3-导出镜像-docker-image-save-lt-image-name-gt-lt-tag-gt-gt-to-path-lt-image-name-gt-tar-gz" class="headerlink" title="4.3 导出镜像 docker image save &lt;image_name&gt;:&lt;tag&gt; &gt;/to/path/&lt;image_name&gt;.tar.gz"></a>4.3 导出镜像 <code>docker image save &lt;image_name&gt;:&lt;tag&gt; &gt;/to/path/&lt;image_name&gt;.tar.gz</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker image \</span><br><span class="line">save tomcat:8-jdk8-corretto &gt;/opt/docker-images-tar/tomcat-8-jdk-corretto.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p> 提示：导出时需要指定镜像的名称和版本，否则再次导入时镜像名称为空</p></blockquote><h4 id="4-4-导入镜像-docker-image-load-i-to-path-lt-image-name-gt-tar-gz"><a href="#4-4-导入镜像-docker-image-load-i-to-path-lt-image-name-gt-tar-gz" class="headerlink" title="4.4 导入镜像: docker image load -i /to/path/&lt;image_name&gt;.tar.gz"></a>4.4 导入镜像: <code>docker image load -i /to/path/&lt;image_name&gt;.tar.gz</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ docker image load -i /opt/docker-images-tar/tomcat-8-jdk-corretto.tar.gz</span><br><span class="line">2ce46c79ab58: Loading layer [==================================================&gt;]  171.1MB/171.1MB</span><br><span class="line">adfbec3e67f4: Loading layer [==================================================&gt;]  184.6MB/184.6MB</span><br><span class="line">62ad8969b17a: Loading layer [==================================================&gt;]  3.072kB/3.072kB</span><br><span class="line">693367907f2b: Loading layer [==================================================&gt;]  31.19MB/31.19MB</span><br><span class="line">21dcce1be3e6: Loading layer [==================================================&gt;]  2.048kB/2.048kB</span><br><span class="line">Loaded image: tomcat:8-jdk8-corretto</span><br><span class="line"></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY   TAG               IMAGE ID       CREATED                  SIZE</span><br><span class="line">tomcat       8-jdk8-corretto   6aa794aeaf2e   Less than a second ago   379MB</span><br><span class="line">nginx        1.21              fa5269854a5e   12 days ago              142MB</span><br></pre></td></tr></table></figure><h4 id="4-5-删除镜像"><a href="#4-5-删除镜像" class="headerlink" title="4.5 删除镜像"></a>4.5 删除镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY   TAG               IMAGE ID       CREATED                  SIZE</span><br><span class="line">tomcat       8-jdk8-corretto   6aa794aeaf2e   Less than a second ago   379MB</span><br><span class="line">nginx        1.21              fa5269854a5e   12 days ago              142MB</span><br><span class="line"></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker image rmi tomcat:8-jdk8-corretto</span></span><br><span class="line">Untagged: tomcat:8-jdk8-corretto</span><br><span class="line">Untagged: tomcat@sha256:5519094808b33f320cb8821e6789ae813d1c71ee3dd03ecc35035fb94be37a3e</span><br><span class="line">Deleted: sha256:6aa794aeaf2e3b423640cb6c28c62735c517b5cf0ac2067f1a6ebc4b826adf35</span><br><span class="line">Deleted: sha256:377575e0dcdd8ca0c48ad4bb750fdef5671d7422e5dfac0aa1056afb3ac0391b</span><br><span class="line">Deleted: sha256:cd150b0a9540259ba404d900d5a4decefb51d5d64f912edf71fc4fbdf1b275b6</span><br><span class="line">Deleted: sha256:e18b666124eab8f055392a4bc8dc0dd3f861963b7c872d535a4ad103192b9def</span><br><span class="line">Deleted: sha256:e3469860a4508d511a68fd1d5ed754565b5c922cc3b283d195a56e42b97d7192</span><br><span class="line">Deleted: sha256:2ce46c79ab58cf3d6f9556e9141c0564407a50028040a94bb8a82ab6e33331c2</span><br><span class="line"></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY   TAG               IMAGE ID       CREATED                  SIZE</span><br><span class="line">nginx        1.21              fa5269854a5e   12 days ago              142MB</span><br></pre></td></tr></table></figure><blockquote><h1 id="删除镜像-删除镜像需要保证没有基于此镜像运行容器，否则需要先删除容器"><a href="#删除镜像-删除镜像需要保证没有基于此镜像运行容器，否则需要先删除容器" class="headerlink" title="删除镜像(删除镜像需要保证没有基于此镜像运行容器，否则需要先删除容器)"></a>删除镜像(删除镜像需要保证没有基于此镜像运行容器，否则需要先删除容器)</h1></blockquote><h4 id="4-6-查看镜像详细信息"><a href="#4-6-查看镜像详细信息" class="headerlink" title="4.6 查看镜像详细信息"></a>4.6 查看镜像详细信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker image inspect nginx:1.21</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Id"</span>: <span class="string">"sha256:fa5269854a5e615e51a72b17ad3fd1e01268f278a6684c8ed3c5f0cdce3f230b"</span>,</span><br><span class="line">        <span class="string">"RepoTags"</span>: [</span><br><span class="line">            <span class="string">"nginx:1.21"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"RepoDigests"</span>: [</span><br><span class="line">            <span class="string">"nginx@sha256:859ab6768a6f26a79bc42b231664111317d095a4f04e4b6fe79ce37b3d199097"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"Parent"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Comment"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Created"</span>: <span class="string">"2022-04-20T10:43:12.055940177Z"</span>,</span><br><span class="line">        <span class="string">"Container"</span>: <span class="string">"3c8758320eb6a5293e75ce1ff5afe91584a72b4ee400792f34985a27673ffbc2"</span>,</span><br><span class="line">        <span class="string">"ContainerConfig"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">"3c8758320eb6"</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"ExposedPorts"</span>: &#123;</span><br><span class="line">                <span class="string">"80/tcp"</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"Tty"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Env"</span>: [<span class="comment"># 容器加载的环境变量</span></span><br><span class="line">                <span class="string">"PATH=/usr/local/sbin:/usr/lo cal/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span>,</span><br><span class="line">                <span class="string">"NGINX_VERSION=1.21.6"</span>,</span><br><span class="line">                <span class="string">"NJS_VERSION=0.7.2"</span>,</span><br><span class="line">                <span class="string">"PKG_RELEASE=1~bullseye"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Cmd"</span>: [<span class="comment"># 容器的启动命令</span></span><br><span class="line">                <span class="string">"/bin/sh"</span>,</span><br><span class="line">                <span class="string">"-c"</span>,</span><br><span class="line">                <span class="string">"#(nop) "</span>,</span><br><span class="line">                <span class="string">"CMD [\"nginx\" \"-g\" \"daemon off;\"]"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Image"</span>: <span class="comment"># 镜像ID"sha256:e158bbfdf1201dbc8876232cef4465c5f69c1fd0986f05ee48291a92debc21a0",</span></span><br><span class="line">            <span class="string">"Volumes"</span>: null,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Entrypoint"</span>: [</span><br><span class="line">                <span class="string">"/docker-entrypoint.sh"</span></span><br><span class="line">            ],</span><br><span class="line">   ......</span><br><span class="line">   ......</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="4-7-镜像的拉取策略（了解：Kubernetes-Pod章节细讲）"><a href="#4-7-镜像的拉取策略（了解：Kubernetes-Pod章节细讲）" class="headerlink" title="4.7 镜像的拉取策略（了解：Kubernetes Pod章节细讲）"></a>4.7 镜像的拉取策略（了解：Kubernetes Pod章节细讲）</h4><p>在 Docker 中，镜像拉取策略（Image Pull Policy）决定了在启动容器时如何拉取镜像。指定镜像拉取策略可以控制 Docker 是否从注册表中拉取最新的镜像，或者使用本地缓存的镜像。</p><ol><li><p><strong>IfNotPresent</strong>（默认策略）： </p><ul><li>仅当本地不存在指定的镜像时才从注册表中拉取镜像。如果本地已有该镜像，则使用本地镜像。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker run --pull=ifnotpresent &lt;image_name&gt;:&lt;image_id&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Always</strong>： </p><ul><li>每次启动容器时总是从注册表中拉取镜像，无论本地是否已有该镜像。</li><li>适用于需要确保总是使用最新版本镜像的情况，确保容器总是基于最新的镜像版本启动。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker run --pull=always &lt;image_name&gt;:&lt;image_id&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Never</strong>： </p><ul><li>仅使用本地已有的镜像，从不从注册表中拉取镜像。如果本地不存在指定的镜像，则启动容器会失败。</li><li>适用于不希望或无法访问镜像注册表的情况，确保使用本地镜像缓存。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-ce ~]<span class="comment"># docker run --pull=never &lt;image_name&gt;:&lt;image_id&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="4-8-阿里云镜像仓库使用"><a href="#4-8-阿里云镜像仓库使用" class="headerlink" title="4.8 阿里云镜像仓库使用"></a>4.8 阿里云镜像仓库使用</h4><p>官网：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 退出Docker官方镜像仓库</span></span><br><span class="line">$ docker <span class="built_in">logout</span></span><br><span class="line">Removing login credentials <span class="keyword">for</span> https://index.docker.io/v1/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录阿里云Docker Registry</span></span><br><span class="line">$ docker login --username=aliyun6412327368 registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">用于登录的用户名为阿里云账号全名，密码为开通服务时设置的密码。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从Registry中拉取镜像</span></span><br><span class="line">$ docker pull registry.cn-hangzhou.aliyuncs.com/hujiaming/jiaming:[镜像版本号]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将镜像推送到Registry</span></span><br><span class="line">$ docker login --username=aliyun6412327368 registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">$ docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/hujiaming/jiaming:[镜像版本号]</span><br><span class="line">$ docker push registry.cn-hangzhou.aliyuncs.com/hujiaming/jiaming:[镜像版本号]</span><br></pre></td></tr></table></figure><h3 id="5-容器的日常管理"><a href="#5-容器的日常管理" class="headerlink" title="5. 容器的日常管理"></a>5. 容器的日常管理</h3><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/7.jpg" alt="aa"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看本地所有容器</span></span><br><span class="line">$ docker container ls</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动一个容器</span></span><br><span class="line">$ docker run -itd --name webserver -p 80:80 nginx:1.21</span><br><span class="line">1257c74b96d9ebebb34e23844838debb1873d5cec7ae5206551dc2463ca8f94a</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看正在运行的容器</span></span><br><span class="line">$ docker ps </span><br><span class="line">CONTAINER ID   IMAGE        COMMAND                   CREATED          STATUS          PORTS                               NAMES</span><br><span class="line">1257c74b96d9   nginx:1.21   <span class="string">"/docker-entrypoint.…"</span>   12 seconds ago   Up 11 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   webserver</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有的容器包括退出</span></span><br><span class="line">$ docker ps -a </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有的容器ID包括退出</span></span><br><span class="line">$ docker ps -aq</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 停止/杀死/重启容器</span></span><br><span class="line">$ docker container stop/<span class="built_in">kill</span>/restart webserver</span><br><span class="line">webserver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE        COMMAND                   CREATED              STATUS                     PORTS     NAMES</span><br><span class="line">1257c74b96d9   nginx:1.21   <span class="string">"/docker-entrypoint.…"</span>   About a minute ago   Exited (0) 8 seconds ago             webserver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定容器</span></span><br><span class="line">$ docker container rm webserver</span><br><span class="line">webserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有的容器（慎用）</span></span><br><span class="line">$ docker stop `docker ps -q`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除已经退出的容器（慎用）</span></span><br><span class="line">$ docker rm `docker ps -a |grep Exited | awk <span class="string">'&#123;print $1&#125;'</span>`</span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/8.jpg" alt></p><ol><li><strong>CONTAINER ID</strong>: <ul><li>容器的唯一标识符（ID）。</li></ul></li><li><strong>IMAGE</strong>: <ul><li>容器所使用的 Docker 镜像。</li></ul></li><li><strong>COMMAND</strong>: <ul><li>容器启动时运行的命令。</li></ul></li><li><strong>CREATED</strong>: <ul><li>容器创建的时间。容器是在 <code>35 minutes ago</code>（35 分钟前）创建的。</li></ul></li><li><strong>STATUS</strong>: <ul><li>容器的当前状态和运行时间。状态是 <code>Up 25 minutes</code>，表示容器已经运行了 25 分钟。</li></ul></li><li><strong>PORTS</strong>: <ul><li>容器的端口映射信息。 <ul><li><code>0.0.0.0:80-&gt;80/tcp</code> 表示宿主机的 <code>80</code> 端口映射到容器的 <code>80</code> 端口，使用 TCP 协议。</li><li><code>:::80-&gt;80/tcp</code> 表示在所有 IPv6 地址上，宿主机的 <code>80</code> 端口映射到容器的 <code>80</code> 端口，使用 TCP 协议。</li></ul></li></ul></li><li><strong>NAMES</strong>: <ul><li>容器的名称。</li></ul></li></ol><p>这个 Docker 容器使用 <code>nginx:1.21</code> 镜像，在 35 分钟前创建，并已经运行了 25 分钟。它将宿主机的 <code>80</code> 端口映射到容器的 <code>80</code> 端口，容器名称是 <code>webserver</code>。</p><h4 id="5-2-查看容器的日志"><a href="#5-2-查看容器的日志" class="headerlink" title="5.2 查看容器的日志"></a>5.2 查看容器的日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看容器的日志</span></span><br><span class="line">$ docker logs -f &lt;容器名称/容器ID&gt;  --tail 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者：</span></span><br><span class="line">$ <span class="built_in">cd</span> /var/lib/docker/containers/&lt;容器id&gt;</span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/9.jpg" alt></p><h4 id="5-3-查看容器的IP地址"><a href="#5-3-查看容器的IP地址" class="headerlink" title="5.3 查看容器的IP地址"></a>5.3 查看容器的IP地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect &lt;容器名称/容器ID&gt; | grep -i -w <span class="string">"ipaddress"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ docker inspect --format <span class="string">'&#123;&#123; .NetworkSettings.IPAddress &#125;&#125;'</span> &lt;容器ID/容器名称&gt;</span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/10.jpg" alt></p><h4 id="5-4-进入容器的方法"><a href="#5-4-进入容器的方法" class="headerlink" title="5.4 进入容器的方法"></a>5.4 进入容器的方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker container run -itd --name webserver -p 8080:80 nginx:1.21</span><br><span class="line">da5151566915f5acce7cf8cb75e475b1ca69860e7a0b64e33600b9aba2eeda1b</span><br><span class="line"></span><br><span class="line">$ docker container <span class="built_in">exec</span> -it webserver bash</span><br><span class="line">root@da5151566915:/<span class="comment"># ls /etc/nginx/conf.d/</span></span><br><span class="line">default.conf</span><br><span class="line">root@da5151566915:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h4 id="5-5-容器与宿主机间传输文件"><a href="#5-5-容器与宿主机间传输文件" class="headerlink" title="5.5 容器与宿主机间传输文件"></a>5.5 容器与宿主机间传输文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将容器的文件拷贝至宿主机中</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker cp webserver:/usr/share/nginx/html/index.html  /tmp/</span></span><br><span class="line">Successfully copied 2.05kB to /tmp/</span><br><span class="line"></span><br><span class="line">[root@docker-ce ~]<span class="comment"># echo "2401" &gt;  /tmp/index.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 宿主机的文件拷贝至容器中</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker cp /tmp/index.html webserver:/usr/share/nginx/html/index.html</span></span><br></pre></td></tr></table></figure><h4 id="5-6-容器的状态（了解，Kubernetes细讲Pod的状态）"><a href="#5-6-容器的状态（了解，Kubernetes细讲Pod的状态）" class="headerlink" title="5.6 容器的状态（了解，Kubernetes细讲Pod的状态）"></a>5.6 容器的状态（了解，<code>Kubernetes细讲Pod的状态</code>）</h4><p><strong>Created</strong>:</p><ul><li>容器已经被创建，但尚未启动。此时，容器处于一种待机状态，等待进一步的操作。</li></ul><p><strong>Running</strong>:</p><ul><li>容器正在运行并执行其主要进程。处于此状态的容器可以处理请求和数据。</li><li><code>docker ps</code> 可以显示所有正在运行的容器。</li></ul><p><strong>Paused</strong>:</p><ul><li>容器的所有进程被暂停（挂起）。此时，容器的 CPU 资源被释放，但内存等其他资源仍然占用。</li><li>你可以通过 <code>docker pause &lt;container_id&gt;</code> 暂停一个容器，并通过 <code>docker unpause &lt;container_id&gt;</code> 恢复它。</li></ul><p><strong>Restarting</strong>:</p><ul><li>容器正在重新启动。通常，这种情况发生在容器配置了自动重启策略时，其进程由于某种原因终止并触发重启。</li></ul><p><strong>Exited</strong>:</p><ul><li>容器的主进程已经停止运行，并且没有自动重启策略，或者重启策略未能触发。容器退出状态码可以通过 <code>docker inspect</code> 命令查看。</li><li><code>docker ps -a</code> 可以显示所有包含已退出容器的列表。</li></ul><p><strong>Dead</strong>:</p><ul><li>容器遇到严重问题，无法恢复。通常，这是 Docker 容器处于崩溃状态的标志，需要人工干预来处理这个容器。</li></ul><h4 id="5-7-容器的重启策略"><a href="#5-7-容器的重启策略" class="headerlink" title="5.7 容器的重启策略"></a>5.7 容器的重启策略</h4><p>略，<code>Kubernetes细讲</code></p><h4 id="5-8-容器重命名-慎用"><a href="#5-8-容器重命名-慎用" class="headerlink" title="5.8 容器重命名(慎用)"></a>5.8 容器重命名(慎用)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看正在运行的容器</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker ps </span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                   CREATED          STATUS          PORTS                               NAMES</span><br><span class="line">804a660194cc   nginx     <span class="string">"/docker-entrypoint.…"</span>   43 seconds ago   Up 41 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   webserver02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改容器的名称</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker rename webserver02 webserver01</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看正在运行的容器名称</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                   CREATED              STATUS              PORTS                               NAMES</span><br><span class="line">804a660194cc   nginx     <span class="string">"/docker-entrypoint.…"</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   webserver01</span><br></pre></td></tr></table></figure><h3 id="6-Docker数据卷的管理"><a href="#6-Docker数据卷的管理" class="headerlink" title="6. Docker数据卷的管理"></a>6. Docker数据卷的管理</h3><p>​    Docker 存储卷（Volume）是用于将数据从容器持久化到宿主机中的一种机制。存储卷可以在容器之间共享和重用，即使容器被删除，卷中的数据仍然会保留。这样容器就算重启数据依然存在！数据卷是经过特殊设计的目录，同一个数据卷可以只支持多个容器的访问。可以对数据卷里的内容直接进行修改。数据卷的变化不会影像镜像的更新。数据卷会一直存在，即使挂载数据卷的容器已经被删除。</p><p><strong>数据卷的特点</strong></p><ul><li>数据卷在容器启动时初始化，如果容器使用的镜像在挂载点包含了数据，这些数据会被拷贝到新初始化的数据卷中。</li><li>数据卷可以在容器之间共享和重用。</li><li>可以对数据卷里的内容直接进行修改。</li><li>数据卷的变化不会影像镜像的更新。</li><li>卷会一直存在，即使挂载数据卷的容器已经被删除。</li></ul><p><strong>Docker数据卷的三种方式</strong></p><ul><li><strong>Volumes</strong>: <ul><li>Docker 管理宿主机文件系统的一部分（/var/lib/docker/volumes）。保存数据的最佳方式。</li></ul></li><li><strong>Bind mounts</strong>: <ul><li>将宿主机的任意位置的文件或者目录挂载到容器中。</li></ul></li><li><strong>tmpfs</strong>：<ul><li>挂载存储在主机系统的内存中，而不会写入主机的文件系统。如果不希望将数据持久存储在任何位置，可以使用tmpfs，同时避免写入容器可写层提高性能。</li></ul></li></ul><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/11.jpg" alt></p><h4 id="6-1-挂载时创建卷（数据卷-临时卷）"><a href="#6-1-挂载时创建卷（数据卷-临时卷）" class="headerlink" title="6.1 挂载时创建卷（数据卷/临时卷）"></a>6.1 挂载时创建卷（数据卷/临时卷）</h4><p>自己指定目录，不管目录有无内容都会覆盖容器目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /opt/docker-volumes</span><br><span class="line"></span><br><span class="line">$ docker rm -f $(docker ps -a -q)</span><br><span class="line"></span><br><span class="line">$ docker container run \</span><br><span class="line">-itd --name webserver \</span><br><span class="line">-p 8080:80 \</span><br><span class="line">-v /opt/docker-volumes/webserver:/usr/share/nginx/html \</span><br><span class="line">nginx:1.21</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ curl http://localhost:8080</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.21.6&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"hello docker volume"</span> &gt;/opt/docker-volumes/webserver/index.html</span><br><span class="line"></span><br><span class="line">$ curl http://localhost:8080</span><br><span class="line">hello docker volume</span><br></pre></td></tr></table></figure><h4 id="6-2-挂载指定volume（数据卷容器）"><a href="#6-2-挂载指定volume（数据卷容器）" class="headerlink" title="6.2 挂载指定volume（数据卷容器）"></a>6.2 挂载指定volume（数据卷容器）</h4><p>​    volume是Docker官方推荐的持久化方案，默认情况下，volume的存储空间来自于宿主机文件系统中的某个目录，如<strong>/var/lib/docker/volumes/</strong>，docker系统外的程序无权限修改其中的数据。一个volume可以同时供多个container使用，如果没有container使用volume，其不会自动删除，用户需运行<strong>docker volume prune</strong>明确删除。</p><p>​    <strong>如果容器中的目录不存在，docker会自动创建目录；如果容器中的目录已有内容，docker会使用宿主机上目录的内容覆盖容器目录的内容。宿主机目录为空的话，容器目录不为空，容器目录会覆盖宿主机目录。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建卷</span></span><br><span class="line">$ docker volume create nginx-test01</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看卷</span></span><br><span class="line">$ docker volume ls </span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>     nginx-test01</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看卷的详细信息</span></span><br><span class="line">$ docker volume inspect nginx-test01</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"CreatedAt"</span>: <span class="string">"2024-06-11T20:58:55+08:00"</span>,</span><br><span class="line">        <span class="string">"Driver"</span>: <span class="string">"local"</span>,</span><br><span class="line">        <span class="string">"Labels"</span>: null,</span><br><span class="line">        <span class="string">"Mountpoint"</span>: <span class="string">"/var/lib/docker/volumes/nginx-test01/_data"</span>,</span><br><span class="line">        <span class="string">"Name"</span>: <span class="string">"nginx-test01"</span>,</span><br><span class="line">        <span class="string">"Options"</span>: null,</span><br><span class="line">        <span class="string">"Scope"</span>: <span class="string">"local"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看nginx-test01持久卷的存放位置</span></span><br><span class="line">$ ll /var/lib/docker/volumes/nginx-test01/_data/</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 挂载测试卷</span></span><br><span class="line">$ docker run -itd \</span><br><span class="line">--name webserver03 \</span><br><span class="line">-p 81:80  \</span><br><span class="line">-v nginx-test01:/usr/share/nginx/html  \</span><br><span class="line">nginx:v1.24.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看容器的详细信息</span></span><br><span class="line">$ docker inspect webserver03</span><br><span class="line">        <span class="string">"Mounts"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"Type"</span>: <span class="string">"volume"</span>,</span><br><span class="line">                <span class="string">"Name"</span>: <span class="string">"nginx-test01"</span>,</span><br><span class="line">                <span class="string">"Source"</span>: <span class="string">"/var/lib/docker/volumes/nginx-test01/_data"</span>,</span><br><span class="line">                <span class="string">"Destination"</span>: <span class="string">"/usr/share/nginx/html"</span>,</span><br><span class="line">                <span class="string">"Driver"</span>: <span class="string">"local"</span>,</span><br><span class="line">                <span class="string">"Mode"</span>: <span class="string">"z"</span>,</span><br><span class="line">                <span class="string">"RW"</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">"Propagation"</span>: <span class="string">""</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看nginx-test01的数据卷目录</span></span><br><span class="line">$ ll /var/lib/docker/volumes/nginx-test01/_data/</span><br><span class="line">总用量 8</span><br><span class="line">-rw-r--r-- 1 root root 497 4月  11 2023 50x.html</span><br><span class="line">-rw-r--r-- 1 root root 615 4月  11 2023 index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问容器</span></span><br><span class="line">$ curl 172.17.0.3</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">html &#123; color-scheme: light dark; &#125;</span><br><span class="line">body &#123; width: 35em; margin: 0 auto;</span><br><span class="line">font-family: Tahoma, Verdana, Arial, sans-serif; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.org/"</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.com/"</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改index.html文件内容</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"hello volume nginx-test01"</span> &gt;  /var/lib/docker/volumes/nginx-test01/_data/index.html </span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次测试</span></span><br><span class="line">$ curl 172.17.0.3</span><br><span class="line">hello volume nginx-test01</span><br></pre></td></tr></table></figure><h4 id="6-2-Bind-Mounts持久化（绑定挂载）"><a href="#6-2-Bind-Mounts持久化（绑定挂载）" class="headerlink" title="6.2  Bind Mounts持久化（绑定挂载）"></a>6.2  Bind Mounts持久化（绑定挂载）</h4><p>需要自己创建目录</p><p>​    bind mount持久化方式将宿主机中的文件、目录挂载到容器上，相应文件、目录可以被宿主机读写，也可以被容器读写。绑定挂载将主机文件系统中的一个目录挂载到容器中，允许容器直接访问和修改主机上的文件。</p><p><strong>使用场景：</strong></p><ul><li>container共享宿主机配置文件，如docker将宿主机文件/etc/resolv.conf文件bind mount到容器上，两者会使用相同的DNS服务器。</li><li>将宿主机开发环境中的源代码或实验结果共享给容器。例如：你在宿主机上进行一个项目Maven的测试，每次你在宿主机上对Maven项目进行了更改后，容器就可以直接获取更改后的结果（最新的代码）。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建数据目录</span></span><br><span class="line">$ mkdir /app/html -p</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建容器并且指定挂载Bind Mounts的卷</span></span><br><span class="line">$ docker run -itd \</span><br><span class="line">--name webserver04 \</span><br><span class="line">-p 82:80  \</span><br><span class="line">--mount <span class="built_in">type</span>=<span class="built_in">bind</span>,src=/app/html/,dst=/usr/share/nginx/html \</span><br><span class="line">nginx:v1.24.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看容器guai'z详细信息</span></span><br><span class="line">$ docker inspect webserver04</span><br><span class="line">            <span class="string">"Mounts"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">"Type"</span>: <span class="string">"bind"</span>,</span><br><span class="line">                    <span class="string">"Source"</span>: <span class="string">"/app/html/"</span>,</span><br><span class="line">                    <span class="string">"Target"</span>: <span class="string">"/usr/share/nginx/html"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 或者</span></span><br><span class="line">$ docker inspect --format=<span class="string">'&#123;&#123;.Mounts&#125;&#125;'</span> &lt;容器id&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试访问容器</span></span><br><span class="line">$ curl 172.17.0.3</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.24.0&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建发布文件</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"hello nginx world"</span> &gt; /app/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次测试</span></span><br><span class="line">$ curl 172.17.0.3</span><br><span class="line">hello nginx world</span><br></pre></td></tr></table></figure><h5 id="6-2-1-bind-mount注意事项"><a href="#6-2-1-bind-mount注意事项" class="headerlink" title="6.2.1 bind mount注意事项"></a>6.2.1 bind mount注意事项</h5></li></ul><ul><li>宿主机目录路径必须以/或~/开头，否则docker会将其当成是volume 而不是bind mount。</li><li>如果宿主机上的目录不存在，docker会自动创建目录（多级的绝对路径好像不行）。</li><li>如果容器中的目录不存在，docker会自动创建目录。</li><li>如果容器中目录已有内容，那么docker会使用宿主机上目录的内容覆盖容器目录的内容。</li></ul><h4 id="6-3-tmpfs-mount持久化"><a href="#6-3-tmpfs-mount持久化" class="headerlink" title="6.3 tmpfs mount持久化"></a>6.3 tmpfs mount持久化</h4><p>tmpfs mount只在Linux主机内存中持久化，是临时性的。当容器停止，tmpfs mount会被移除。只能在Linux主机内存中，不会持久化到磁盘。</p><p>场景：<br>当启动需要访问这些敏感数据的container或者service时，docker会在宿主机上创建一个tmpfs，然后将敏感数据读出写到tmpfs中，再将tmpfs mount到container中，这样能保证数据安全。当容器停止运行时，则相应的tmpfs也从系统中删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建容器并且指定他的卷为tmpfs类型</span></span><br><span class="line">$ docker run -itd  \</span><br><span class="line">--name webserver05  \</span><br><span class="line">--mount <span class="built_in">type</span>=tmpfs,dst=/usr/share/nginx/html  \</span><br><span class="line">nginx:v1.24.0</span><br><span class="line">d8a8122c5eb77e4873866ea33406b7e1ec12eb1ed0ec596bcf6761b78afeacce</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看容器的相关信息</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker inspect webserver05</span></span><br><span class="line">        <span class="string">"Mounts"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">"Type"</span>: <span class="string">"tmpfs"</span>,</span><br><span class="line">                <span class="string">"Source"</span>: <span class="string">""</span>,</span><br><span class="line">                <span class="string">"Destination"</span>: <span class="string">"/usr/share/nginx/html"</span>,</span><br><span class="line">                <span class="string">"Mode"</span>: <span class="string">""</span>,</span><br><span class="line">                <span class="string">"RW"</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">"Propagation"</span>: <span class="string">""</span></span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h4 id="6-4-网络存储（Network-Storage）"><a href="#6-4-网络存储（Network-Storage）" class="headerlink" title="6.4 网络存储（Network Storage）"></a>6.4 网络存储（Network Storage）</h4><p>​    使用网络文件系统（如 NFS等）将远程存储挂载到容器中，适用于需要跨多个主机共享数据的场景。</p><ol><li><strong>nfs服务器配置</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改主机名</span></span><br><span class="line">$ hostnamectl  <span class="built_in">set</span>-hostname nfs-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 关闭防火墙及selinux</span></span><br><span class="line">$ systemctl <span class="built_in">disable</span> --now firewalld &amp;&amp; setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建共享目录</span></span><br><span class="line">$ mkdir /data</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装nfs</span></span><br><span class="line">$ yum -y install nfs-utils rpcbind -y </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 配置nfs</span></span><br><span class="line">$ cat &gt;&gt; cat /etc/exports &lt;&lt;-EOF</span><br><span class="line">/data  *(rw,sync,no_root_squash)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动nfs</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> --now rpcbind nfs-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试挂载</span></span><br><span class="line">$ showmount  -e</span><br><span class="line">Export list <span class="keyword">for</span> nfs-server:</span><br><span class="line">/data *</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>docker服务器配置</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 安装nfs</span></span><br><span class="line">$ yum -y install nfs-utils.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建目录</span></span><br><span class="line">$ mkdir /nfs</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试挂载</span></span><br><span class="line">$ showmount  -e 192.168.174.9</span><br><span class="line">Export list <span class="keyword">for</span> 192.168.174.9:</span><br><span class="line">/data *</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 远程挂载</span></span><br><span class="line">$ mount -t nfs 192.168.174.9:/data /nfs</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看磁盘分区</span></span><br><span class="line">$ df -Th </span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G   12M  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  3.1G   14G   18% /</span><br><span class="line">/dev/sda1               xfs      1014M  137M  878M   14% /boot</span><br><span class="line">tmpfs                   tmpfs     394M     0  394M    0% /run/user/0</span><br><span class="line">192.168.174.9:/data     nfs4       50G  1.4G   49G    3% /nfs</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>docker测试</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 启动docker</span></span><br><span class="line">$ docker run \</span><br><span class="line">-itd \</span><br><span class="line">--name webserver03 \</span><br><span class="line">-v /nfs/webserver03:/usr/share/nginx/html/  \</span><br><span class="line">nginx:1.27.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">$ curl 172.17.0.2</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.27.1&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编写测试文件</span></span><br><span class="line">$ <span class="built_in">echo</span> hello,world &gt; /nfs/webserver03/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 再次测试</span></span><br><span class="line">$ curl 172.17.0.2</span><br><span class="line">hello,world</span><br></pre></td></tr></table></figure><h4 id="6-4-存储卷的生命周期管理"><a href="#6-4-存储卷的生命周期管理" class="headerlink" title="6.4 存储卷的生命周期管理"></a>6.4 存储卷的生命周期管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有volume</span></span><br><span class="line">$ docker volume ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看单个volume详细信息</span></span><br><span class="line">$ docker volume inspect nginx-test01/volume的名称</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"CreatedAt"</span>: <span class="string">"2024-06-11T20:58:55+08:00"</span>,<span class="comment"># 创建时间</span></span><br><span class="line">        <span class="string">"Driver"</span>: <span class="string">"local"</span>,<span class="comment"># 卷的驱动类型。local 是默认驱动，表示卷存储在本地宿主机文件系统中。</span></span><br><span class="line">        <span class="string">"Labels"</span>: null,<span class="comment"># 卷的标签，用于标记或组织卷。可以为空或包含键值对。</span></span><br><span class="line">        <span class="string">"Mountpoint"</span>: <span class="string">"/var/lib/docker/volumes/nginx-test01/_data"</span>,<span class="comment"># 卷在宿主机上的挂载点，即卷数据存储的路径。</span></span><br><span class="line">        <span class="string">"Name"</span>: <span class="string">"nginx-test01"</span>,<span class="comment"># 卷的名称，是在 Docker 中标识这个卷的唯一名称。</span></span><br><span class="line">        <span class="string">"Options"</span>: null,<span class="comment"># 卷的选项，可以用于配置卷的特定行为。可以为空或包含键值对。</span></span><br><span class="line">        <span class="string">"Scope"</span>: <span class="string">"local"</span><span class="comment"># 卷的作用范围。local 表示该卷仅在创建它的宿主机上可用。</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看volume是否挂载</span></span><br><span class="line">$ docker ps -q | xargs docker inspect --format <span class="string">'&#123;&#123; .Id &#125;&#125;: &#123;&#123; .Mounts &#125;&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除未使用的volume(慎用)</span></span><br><span class="line">$ docker volume  prune</span><br><span class="line">WARNING! This will remove anonymous <span class="built_in">local</span> volumes not used by at least one container.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除单个或多个volume</span></span><br><span class="line">$ docker volume rm &lt;VOLUME_NAME&gt; &lt;VOLUME_NAME&gt;</span><br></pre></td></tr></table></figure><h3 id="7-Docker网络"><a href="#7-Docker网络" class="headerlink" title="7. Docker网络"></a>7. Docker网络</h3><h4 id="7-1-Docker网络简介"><a href="#7-1-Docker网络简介" class="headerlink" title="7.1 Docker网络简介"></a>7.1 Docker网络简介</h4><p>​    Docker默认使用<strong>桥接模式</strong>，在宿主机虚拟一个Docker容器网桥(docker0)，Docker启动一个容器时会根据Docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的 Container-IP 直接通信。<br>Docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法直接通过 Container-IP 访问到容器。</p><p>​    如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机（端口映射），即docker run创建容器时候通过-p参数来启用，访问容器的时候就通过[宿主机IP]:[端口]访问容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看网络列表</span></span><br><span class="line">[root@docker-ce ~]<span class="comment"># docker network list</span></span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">6ea2847e7566   bridge    bridge    <span class="built_in">local</span></span><br><span class="line">6dc3b646ecc7   host      host      <span class="built_in">local</span></span><br><span class="line">8017dbee2836   none      null      <span class="built_in">local</span></span><br></pre></td></tr></table></figure><ul><li><strong>bridge</strong>:<ul><li>Docker默认的容器网络驱动。此模式会为每一个容器分配、设置IP等，并将容器连接到一个docker0虚拟网桥，通过docker0网桥以及iptables nat 表配置与宿主机通信。</li></ul></li><li><strong>host</strong>:<ul><li>容器与主机共享同一Network Namespace，共享同一套网络协议栈、路由表及iptables规则等。容器与主机看到的是相同的网络视图。</li></ul></li><li><strong>Container</strong>：<ul><li>创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口。</li></ul></li><li><strong>None</strong>：<ul><li>容器没有任何网络配置， 完全隔离的网络环境。  </li></ul></li></ul><h4 id="7-2-host网络模式配置"><a href="#7-2-host网络模式配置" class="headerlink" title="7.2 host网络模式配置"></a>7.2 host网络模式配置</h4><p>​    相当于Vmware中的桥接模式，与宿主机在同一个网络中，但没有独立IP地址。</p><p>​    Docker使用了Linux的Namespaces技术来进行资源隔离，如PID Namespace隔离进程，Mount Namespace隔离文件系统，Network Namespace隔离网络等。</p><p>​    一个Network Namespace提供了一份独立的网络环境，包括网卡、路由、iptable规则等都与其他的Network Namespace隔离。 一个Docker容器一般会分配一个独立的Network Namespace。 但如果启动容器的时候使用host模式，那么这个容器将不会获得一个独立的Network Namespace， 而是和宿主机共用一个Network Namespace。容器将不会虚拟出自己的网卡、配置自己的IP等，而是使用宿主机的IP和端口。<br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/12.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -itd --name webserver01 --net=host nginx:v1.24.0</span><br><span class="line"></span><br><span class="line">$ docker <span class="built_in">exec</span> -it webserver01 bash</span><br><span class="line"></span><br><span class="line">root@docker-ce:/<span class="comment"># hostname  -I</span></span><br><span class="line">192.168.174.110 172.17.0.1</span><br></pre></td></tr></table></figure><h4 id="7-3-container网络模式配置"><a href="#7-3-container网络模式配置" class="headerlink" title="7.3 container网络模式配置"></a>7.3 container网络模式配置</h4><p>​    该模式指定新创建的容器和已经存在的一个容器共享一个Network Namespace，而不是和宿主机共享。 新创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过<strong>lo网卡</strong>设备通信。<br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/13.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -id --name webserver03 nginx:v1.24.0</span><br><span class="line">6f9927ffd0090d95be1c4d93f278b40dfa8f0319fa4e8105c42a6446c0eba3c6</span><br><span class="line"></span><br><span class="line">$ docker run -itd --name webserver04 --net container:webserver03  registry.cn-hangzhou.aliyuncs.com/hujiaming/tomcat:9.0.89-jdk8</span><br><span class="line"></span><br><span class="line">$ docker <span class="built_in">exec</span> -it webserver03 bash</span><br><span class="line">root@6f9927ffd009:/<span class="comment"># curl  localhost:8080</span></span><br><span class="line">&lt;!doctype html&gt;&lt;html lang=<span class="string">"en"</span>&gt;&lt;head&gt;&lt;title&gt;HTTP Status 404 – Not Found&lt;/title&gt;&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;body &#123;font-family:Tahoma,Arial,sans-serif;&#125; h1, h2, h3, b &#123;color:white;background-color:<span class="comment">#525D76;&#125; h1 &#123;font-size:22px;&#125; h2 &#123;font-size:16px;&#125; h3 &#123;font-size:14px;&#125; p &#123;font-size:12px;&#125; a &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 404 – Not Found&lt;/h1&gt;&lt;hr class="line" /&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt; Status Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt; The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.&lt;/p&gt;&lt;hr class="line" /&gt;&lt;h3&gt;Apache Tomcat/9.0.89&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7-4-null网络模式配置"><a href="#7-4-null网络模式配置" class="headerlink" title="7.4 null网络模式配置"></a>7.4 null网络模式配置</h4><p>none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。 也就是说，这个Docker容器没有网卡、IP、路由等信息。这种网络模式下容器只有lo回环网络，没有其他网卡。这种类型的网络没有办法联网，封闭的网络能很好的保证容器的安全性。</p><h3 id="8-Dockerfile自动构建docker镜像"><a href="#8-Dockerfile自动构建docker镜像" class="headerlink" title="8. Dockerfile自动构建docker镜像"></a>8. Dockerfile自动构建docker镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@e05ec18da21c:/<span class="comment"># ls /</span></span><br><span class="line">bin   dev   docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  docker-entrypoint.d  etc lib   media  opt  root  sbin  sys  usr</span><br></pre></td></tr></table></figure><p>​    这些挂载在容器根目录上、用来<strong>为容器进程提供隔离后执行环境的文件系统</strong>，就是所谓的“容器镜像”。它还有一个更为专业的名字，叫作：rootfs（根文件系统）。以上是一个最常见的 rootfs，或者说容器镜像，会包括如下所示的一些目录和文件，比如 /bin，/etc，/proc 等等；而你进入容器之后执行的 /bin/bash，就是 /bin 目录下的可执行文件，与宿主机的 /bin/bash 完全不同。<strong>正是由于 rootfs 的存在，容器才有了一个被反复宣传至今的重要特性：一致性。</strong></p><p><strong>什么是容器的“一致性”呢？</strong><br>由于云端与本地服务器环境不同，应用的打包过程，一直是最“痛苦”的一个步骤。但有了容器之后，更准确地说，有了容器镜像（即 rootfs）之后，这个问题被非常优雅地解决了。<strong>由于 rootfs 里打包的不只是应用，而是整个操作系统的文件和目录，也就意味着，应用以及它运行所需要的所有依赖，都被封装在了一起。</strong>但实际上，一个一直以来很容易被忽视的事实是，<strong>对一个应用来说，操作系统本身才是它运行所需要的最完整的“依赖库”。</strong>有了容器镜像“打包操作系统”的能力，这个最基础的依赖环境也终于变成了应用沙盒的一部分。这就赋予了容器所谓的一致性：无论在本地、云端，还是在一台任何地方的机器上，用户只需要解压打包好的容器镜像，那么这个应用运行所需要的完整的执行环境就被重现出来了。<strong>这种深入到操作系统级别的运行环境一致性，打通了应用在本地开发和远端执行环境之间难以逾越的鸿沟。</strong><br>不过，这时你可能已经发现了另一个非常棘手的问题：难道我每开发一个应用，或者升级一下现有的应用，都要重复制作一次 rootfs 吗？<br>比如，我现在用Centos操作系统的 ISO 做了一个 rootfs，然后又在里面安装了 Java 环境，用来部署我的 Java 应用。那么，我的另一个同事在发布他的 Java 应用时，显然希望能够直接使用我安装过 Java 环境的 rootfs，而不是重复这个流程。一种比较直观的解决办法是，我在制作 rootfs 的时候，每做一步“有意义”的操作，就保存一个 rootfs 出来，这样其他同事就可以按需求去用他需要的 rootfs 了。但是，这个解决办法并不具备推广性。原因在于，一旦你的同事们修改了这个 rootfs，新旧两个 rootfs 之间就没有任何关系了。这样做的结果就是极度的碎片化。那么，既然这些修改都基于一个旧的 rootfs，我们能不能以增量的方式去做这些修改呢？这样做的好处是，所有人都只需要维护相对于 base rootfs 修改的增量内容，而不是每次修改都制造一个“fork”。</p><p><strong>Docker 在镜像的设计中，引入了层（layer）的概念。也就是说，用户制作镜像的每一步操作，都会生成一个层，也就是一个增量rootfs。</strong><br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/14.jpg" alt></p><p><strong>第一部分：只读层。</strong><br>它是这个容器的 rootfs 最下面的五层，对应的正是 ubuntu:latest 镜像的五层。可以看到，它们的挂载方式都是只读的。</p><p><strong>第二部分：可读写层。</strong><br>    它是这个容器的 rootfs 最上面的一层,它的挂载方式为：rw，即 read write。在没有写入文件之前，这个目录是空的。而一旦在容器里做了写操作，你修改产生的内容就会以增量的方式出现在这个层中。<br>这个可读写层的作用，就是专门用来存放你修改 rootfs 后产生的增量，无论是增、删、改，都发生在这里。而当我们使用完了这个被修改过的容器之后，还可以使用 docker commit 和 push 指令，保存这个被修改过的可读写层，并上传到 Docker Hub 上，供其他人使用；而与此同时，原先的只读层里的内容则不会有任何变化。这，就是增量rootfs 的好处。</p><p><strong>第三部分：Init 层。</strong><br>它是一个以“-init”结尾的层，夹在只读层和读写层之间。Init 层是 Docker 项目单独生成的一个内部层，专门用来存放 /etc/hosts、/etc/resolv.conf 等信息。<br>需要这样一层的原因是，这些文件本来属于只读的 Ubuntu 镜像的一部分，但是用户往往需要在启动容器时写入一些指定的值比如 hostname，所以就需要在可读写层对它们进行修改。<br>可是，这些修改往往只对当前的容器有效，我们并不希望执行 docker commit 时，把这些信息连同可读写层一起提交掉。所以，Docker 做法是，在修改了这些文件之后，以一个单独的层挂载了出来。而用户执行 docker commit 只会提交可读写层，所以是不包含这些内容的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect eeb6ee3f44bd | grep -i workdir</span><br><span class="line">                <span class="string">"WorkDir"</span>: <span class="string">"/var/lib/docker/overlay2/a98f64963021b19fb2703798c7016f35d15d8f4dcf127f732eb0e38d27ca1583/work"</span></span><br><span class="line"></span><br><span class="line">$ ls /var/lib/docker/overlay2/a98f64963021b19fb2703798c7016f35d15d8f4dcf127f732eb0e38d27ca1583/diff</span><br></pre></td></tr></table></figure><p>Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和操作命令;每一条指令构建一层镜像，因此每一条指令的内容，就是描述该层镜像应当如何构建（也就是你要执行的操作命令）。</p><h4 id="8-1-Dockerfile指令集"><a href="#8-1-Dockerfile指令集" class="headerlink" title="8.1 Dockerfile指令集"></a>8.1 Dockerfile指令集</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> 这个镜像的妈妈是谁？（指定基础镜像） yes</span><br><span class="line">如:</span><br><span class="line"><span class="keyword">FROM</span> centos:centos7.<span class="number">9.2009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">MAINTAINER</span> 告诉别人，谁负责养它？（指定维护者信息，可以没有）LABLE key=values</span><br><span class="line">如:</span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> name=<span class="string">"l66"</span>\</span></span><br><span class="line"><span class="bash">      age=<span class="string">"18"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> 你想让它干啥（在命令前面加上RUN即可） yes</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash">/COPY 给它点创业资金（ADD文件，会自动解压） yes</span></span><br><span class="line"></span><br><span class="line">例如:<span class="keyword">COPY</span><span class="bash"> --from=builder /app/dist /app</span></span><br><span class="line">复制行为</span><br><span class="line">复制目录中的内容: <span class="keyword">COPY</span><span class="bash"> 指令将 /app/dist 目录中的所有文件和子目录复制到目标路径 /app 下。这意味着，/app/dist 目录内的所有文件和目录将被直接放置在 /app 目录中。</span></span><br><span class="line">不复制源目录本身: 如果你希望 /app/dist 目录本身被复制到目标镜像中，你需要在目标路径中包含 dist 目录。例如：<span class="keyword">COPY</span><span class="bash"> --from=builder /app/dist /app/dist</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> 我是<span class="built_in">cd</span>,今天刚化了妆（设置当前工作目录，不存在会创建） no</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> 给它一个存放行李的地方（设置卷，挂载主机目录） no</span></span><br><span class="line">如:创建一个<span class="keyword">volume</span><span class="bash">数据卷(默认在/var/lib/docker/volumes/下)，挂载到容器的/app下</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/app"</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> 它要打开的门是啥（指定对外的端口）no</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span>/tcp</span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> 奔跑吧，兄弟！（指定容器启动后的要干的事情,执行完会关闭容器，除非指定在前台运行） no</span></span><br><span class="line">如:</span><br><span class="line">启动编译安装好的nginx,让其在前台运行。</span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/usr/local/nginx/sbin/nginx"</span>, <span class="string">"-g"</span>, <span class="string">"daemon off;"</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash">  容器启动命名  no</span></span><br><span class="line">如:启动编译安装好的nginx,让其在前台运行。</span><br><span class="line"><span class="keyword">ENV</span> PATH /usr/local/nginx/sbin:$PATH</span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"nginx"</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"-g"</span>,<span class="string">"daemon off;"</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> 环境变量   yes</span><br><span class="line">如:声明编译安装好的nginx环境变量方便启动</span><br><span class="line"><span class="keyword">ENV</span> PATH /usr/local/nginx/sbin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> 切换用户  no</span><br><span class="line">如:新建一个用户ldq并切换</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> useradd ldq</span></span><br><span class="line"><span class="keyword">ENV</span> age <span class="number">18</span></span><br><span class="line"><span class="keyword">USER</span> ldq</span><br></pre></td></tr></table></figure><h4 id="8-2-单阶段构建镜像"><a href="#8-2-单阶段构建镜像" class="headerlink" title="8.2 单阶段构建镜像"></a>8.2 单阶段构建镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载基础镜像</span></span><br><span class="line">$ docker pull registry.cn-hangzhou.aliyuncs.com/hujiaming/node:16.15.0</span><br><span class="line">16.15.0: Pulling from library/node</span><br><span class="line">85bed84afb9a: Already exists</span><br><span class="line">5fdd409f4b2b: Already exists</span><br><span class="line">fa3069e6cecf: Already exists</span><br><span class="line">4ee16f45eff9: Already exists</span><br><span class="line">2cee68386155: Already exists</span><br><span class="line">0aa7befa4a1b: Already exists</span><br><span class="line">d89fa2ee2a9e: Already exists</span><br><span class="line">fea81c9d708c: Already exists</span><br><span class="line">69c8c6687712: Already exists</span><br><span class="line">Digest: sha256:a6c217d7c8f001dc6fc081d55c2dd7fb3fefe871d5aa7be9c0c16bd62bea8e0c</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> node:16.15.0</span><br><span class="line">docker.io/library/node:16.15.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建存放目录</span></span><br><span class="line">$ mkdir /opt/docker-images/webserver-vue -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写Dockerfile</span></span><br><span class="line">$ vim /opt/docker-images/webserver/Dockerfile</span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/node:16.15.0</span><br><span class="line"></span><br><span class="line">RUN git <span class="built_in">clone</span> https://gitee.com/mirschao/webserver-vue.git</span><br><span class="line"></span><br><span class="line">WORKDIR webserver-vue</span><br><span class="line"></span><br><span class="line">RUN npm install</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">"npm"</span>, <span class="string">"run"</span>, <span class="string">"serve"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /opt/docker-images/webserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">$ docker build -t webserver:v1.0 .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">$ docker images | grep  -i -w webserver</span><br><span class="line">webserver                                              v1.0              60f727ab4ebe   5 minutes ago   1.05GB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行镜像</span></span><br><span class="line">$ docker run -itd --name webserver10 -p 8080:8080  webserver:v1.0</span><br><span class="line"></span><br><span class="line">$ docker ps  | grep  -w webserver10</span><br><span class="line">97e8ab5a7cfb   webserver:v1.0                                                   <span class="string">"docker-entrypoint.s…"</span>   4 minutes ago       Up 4 minutes       0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   webserver10</span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/15.jpg" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取基础镜像</span></span><br><span class="line">$ docker pull registry.cn-hangzhou.aliyuncs.com/hujiaming/jre:8u211-data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取项目</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://gitee.com/rulaipo/java-test.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> java-test/</span><br><span class="line">$ ls</span><br><span class="line">Dockerfile  spring-cloud-eureka-0.0.1-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看Dockerfile</span></span><br><span class="line"><span class="variable">$cat</span> Dockerfile </span><br><span class="line"><span class="comment"># 基础镜像可以按需修改，可以更改为公司自有镜像</span></span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/jre:8u211-data</span><br><span class="line"><span class="comment"># 切换工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"><span class="comment"># jar 包名称改成实际的名称，本示例为 spring-cloud-eureka-0.0.1-SNAPSHOT.jar</span></span><br><span class="line">COPY spring-cloud-eureka-0.0.1-SNAPSHOT.jar /app</span><br><span class="line"><span class="comment"># 端口</span></span><br><span class="line">EXPOSE 8761</span><br><span class="line"><span class="comment"># 启动 Jar 包(前台运行，这样容器就不会关闭了)</span></span><br><span class="line">CMD [<span class="string">"java"</span>,<span class="string">"-jar"</span>,<span class="string">"spring-cloud-eureka-0.0.1-SNAPSHOT.jar"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">$ docker build -t java-test:v1.0 .</span><br><span class="line">[+] Building 0.1s (8/8) FINISHED                                                                  docker:default</span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                                                        0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 446B                                                                        0.0s</span><br><span class="line"> =&gt; [internal] load metadata <span class="keyword">for</span> registry.cn-hangzhou.aliyuncs.com/hujiaming/jre:8u211-data                 0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                                                           0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                                                             0.0s</span><br><span class="line"> =&gt; [1/3] FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/jre:8u211-data                                   0.0s</span><br><span class="line"> =&gt; [internal] load build context                                                                           0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 62B                                                                            0.0s</span><br><span class="line"> =&gt; CACHED [2/3] WORKDIR /app                                                                               0.0s</span><br><span class="line"> =&gt; CACHED [3/3] COPY spring-cloud-eureka-0.0.1-SNAPSHOT.jar /app                                           0.0s</span><br><span class="line"> =&gt; exporting to image                                                                                      0.0s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; writing image sha256:8975f4ec6299fa9f5679551075aa4235144020ce5826bbd2a5ce5dca63b98a7f                0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/java-test:v1.0                                                           0.0s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">$ docker images | grep java</span><br><span class="line">java-test                                              v1.0              8975f4ec6299   11 minutes ago   174MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">$ docker run -itd --name java-test -p 8761:8761 java-test:v1.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器</span></span><br><span class="line">$ docker ps | grep java </span><br><span class="line">8dcb97455b5d   java-test:v1.0                                                 <span class="string">"java -jar spring-cl…"</span>   9 minutes ago   Up 9 minutes   0.0.0.0:8761-&gt;8761/tcp, :::8761-&gt;8761/tcp   java-test</span><br></pre></td></tr></table></figure><p>测试访问<br><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/16.jpg" alt="image.png"></p><h4 id="8-3-多阶段构建镜像"><a href="#8-3-多阶段构建镜像" class="headerlink" title="8.3 多阶段构建镜像"></a>8.3 多阶段构建镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/hlions/webserver-vue.git</span><br><span class="line">$ <span class="built_in">cd</span> webserver-vue</span><br><span class="line">$ cat Dockerfile</span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/node:16.15.0   AS builder</span><br><span class="line">COPY ./ /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN npm install &amp;&amp; npm run build</span><br><span class="line"></span><br><span class="line">FROM registry.cn-hangzhou.aliyuncs.com/hujiaming/nginx:v1.24.0</span><br><span class="line">RUN mkdir /app</span><br><span class="line">COPY --from=builder /app/dist /app</span><br><span class="line">COPY nginx.conf /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line">$ cat nginx.conf</span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">  include       /etc/nginx/mime.types;</span><br><span class="line">  default_type  application/octet-stream;</span><br><span class="line">  log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                    <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                    <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line">  access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">  sendfile        on;</span><br><span class="line">  keepalive_timeout  65;</span><br><span class="line">  server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">      root   /app;</span><br><span class="line">      index  index.html;</span><br><span class="line">      try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">      root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ docker build -t webserver:v1.1 .</span><br></pre></td></tr></table></figure><h4 id="8-4-Dockerfile优化"><a href="#8-4-Dockerfile优化" class="headerlink" title="8.4 Dockerfile优化"></a>8.4 Dockerfile优化</h4><ol><li><p><strong>多阶段构建镜像</strong></p><p>使用多个FROM指令,将构建过程分为多个阶段；每个阶段生成一个独立的镜像,后续阶段可以使用前面阶段生成的镜像作为基础镜像。多阶段构建可以有效减小最终镜像的体积,分离构建环境和运行环境多阶段构建。它允许在一个Dockerfile中使用多个FROM指令,每个FROM指令都可以使用不同的基础镜像,并且每个FROM指令都开始一个新的构建阶段。多阶段构建的主要目的是<strong>将构建过程分为多个独立的阶段</strong>,<strong>每个阶段生成一个独立的镜像</strong>。后续阶段可以使用前面阶段生成的镜像作为基础镜像,从而实现构建环境和运行环境的分离,有效减小最终镜像的体积。</p></li><li><p><strong>把不需要的命令输出丢入/dev/null</strong></p></li></ol><p>对于某些命令的标准输出和错误输出,如果不需要,可以重定向到/dev/null，避免不必要的输出写入镜像层,减小镜像体积。使用command &gt; /dev/null 2&gt;&amp;1的形式进行重定向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:latest</span><br><span class="line"> </span><br><span class="line">RUN apt-get update &gt; /dev/null 2&gt;&amp;1 &amp;&amp; \</span><br><span class="line">    apt-get install -y nginx &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>使用普通用户运行</strong></li></ol><p>在Dockerfile中使用USER指令切换到非root用户，以最小权限原则运行应用,提高安全性。确保应用程序有足够权限访问所需资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM node:14</span><br><span class="line"></span><br><span class="line">RUN useradd zhangsan</span><br><span class="line">USER zhangsan</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>选择合适的基础镜像</strong></li></ol><ul><li>Alpine Linux是一个面向安全的轻型Linux发行版,镜像体积小，相比Ubuntu、CentOS等,Alpine Linux更适合作为基础镜像，务必评估Alpine Linux与应用程序的兼容性。</li></ul><ol start="5"><li><strong>减少镜像层数</strong></li></ol><ul><li><p>一次RUN指令形成新的一层，尽量Shell命令都写在一行，减少镜像层。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:latest</span><br><span class="line"> </span><br><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install -y nginx &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><h3 id="9-HarBor私有镜像仓库"><a href="#9-HarBor私有镜像仓库" class="headerlink" title="9. HarBor私有镜像仓库"></a>9. HarBor私有镜像仓库</h3><p>Harbor 是一个开源的企业级容器镜像仓库，由 VMware 开发并捐赠给 CNCF（Cloud Native Computing Foundation）。它不仅提供了存储和分发 Docker 镜像的基本功能，还增加了很多企业级功能，使得它在安全性、管理性和可扩展性方面表现优异。Docker容器应用的开发和运行离不开可靠的镜像管理。</p><h4 id="9-1-安装docker-compose"><a href="#9-1-安装docker-compose" class="headerlink" title="9.1 安装docker-compose"></a>9.1 安装docker-compose</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64</span><br><span class="line">$ mv docker-compose-linux-x86_64 /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ chmod a+x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ docker-compose version</span><br><span class="line">Docker Compose version v2.15.1</span><br></pre></td></tr></table></figure><h4 id="9-2-安装Harbor"><a href="#9-2-安装Harbor" class="headerlink" title="9.2 安装Harbor"></a>9.2 安装Harbor</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传安装包</span></span><br><span class="line">[root@docker-ce opt]<span class="comment"># ls</span></span><br><span class="line">harbor-offline-installer-v2.7.1.tgz  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">[root@docker-ce opt]<span class="comment"># tar xf harbor-offline-installer-v2.7.1.tgz </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line">[root@docker-ce opt]<span class="comment"># cd harbor</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取harbor所需的镜像</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># docker load -i harbor.v2.7.1.tar.gz </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># cp harbor.yml.tmpl  harbor.yml</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># vim harbor.yml</span></span><br><span class="line">...</span><br><span class="line">hostname: harbor.tanke.love</span><br><span class="line">http:</span><br><span class="line">  port: 80</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /tmp/fullchain.pem</span><br><span class="line">  private_key: /tmp/privkey.pem</span><br><span class="line">harbor_admin_password: 12345</span><br><span class="line">data_volume: /data/harbor</span><br><span class="line">location: /var/<span class="built_in">log</span>/harbor</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据存放目录</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># mkdir /data/harbor -p</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加权限</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># chmod 777 -R /data/  /var/log/harbor/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成和检查Harbor的配置文件，并确保所有必要的依赖项和环境都已准备就绪。</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># ./prepare </span></span><br><span class="line">prepare base dir is <span class="built_in">set</span> to /opt/harbor</span><br><span class="line">Generated configuration file: /config/portal/nginx.conf</span><br><span class="line">Generated configuration file: /config/<span class="built_in">log</span>/logrotate.conf</span><br><span class="line">Generated configuration file: /config/<span class="built_in">log</span>/rsyslog_docker.conf</span><br><span class="line">Generated configuration file: /config/nginx/nginx.conf</span><br><span class="line">Generated configuration file: /config/core/env</span><br><span class="line">Generated configuration file: /config/core/app.conf</span><br><span class="line">Generated configuration file: /config/registry/config.yml</span><br><span class="line">Generated configuration file: /config/registryctl/env</span><br><span class="line">Generated configuration file: /config/registryctl/config.yml</span><br><span class="line">Generated configuration file: /config/db/env</span><br><span class="line">Generated configuration file: /config/jobservice/env</span><br><span class="line">Generated configuration file: /config/jobservice/config.yml</span><br><span class="line">Generated and saved secret to file: /data/secret/keys/secretkey</span><br><span class="line">Successfully called func: create_root_cert</span><br><span class="line">Generated configuration file: /compose_location/docker-compose.yml</span><br><span class="line">Clean up the input dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># docker-compose images</span></span><br><span class="line">CONTAINER           REPOSITORY                    TAG                 IMAGE ID            SIZE</span><br><span class="line">harbor-core         goharbor/harbor-core          v2.7.1              49d6c8a15d6c        215MB</span><br><span class="line">harbor-db           goharbor/harbor-db            v2.7.1              b3f8d9d6c213        174MB</span><br><span class="line">harbor-jobservice   goharbor/harbor-jobservice    v2.7.1              829d13e6aae7        252MB</span><br><span class="line">harbor-log          goharbor/harbor-log           v2.7.1              eeb93d98a358        133MB</span><br><span class="line">harbor-portal       goharbor/harbor-portal        v2.7.1              fe05b1b0bcfd        135MB</span><br><span class="line">nginx               goharbor/nginx-photon         v2.7.1              e98018335c0d        126MB</span><br><span class="line">redis               goharbor/redis-photon         v2.7.1              229dd1844a26        127MB</span><br><span class="line">registry            goharbor/registry-photon      v2.7.1              9d50b10d3700        78.1MB</span><br><span class="line">registryctl         goharbor/harbor-registryctl   v2.7.1              9b2219d529c8        140MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装和启动 Harbor 的主要安装脚本</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># ./install.sh </span></span><br><span class="line">[Step 5]: starting Harbor ...</span><br><span class="line">WARN[0000] /opt/harbor/docker-compose.yml: `version` is obsolete </span><br><span class="line">[+] Running 10/10</span><br><span class="line"> ✔ Network harbor_harbor        Created                                                                     0.1s </span><br><span class="line"> ✔ Container harbor-log         Started                                                                     0.9s </span><br><span class="line"> ✔ Container registry           Started                                                                     2.3s </span><br><span class="line"> ✔ Container registryctl        Started                                                                     1.9s </span><br><span class="line"> ✔ Container redis              Started                                                                     2.0s </span><br><span class="line"> ✔ Container harbor-portal      Started                                                                     2.3s </span><br><span class="line"> ✔ Container harbor-db          Started                                                                     2.3s </span><br><span class="line"> ✔ Container harbor-core        Started                                                                     2.9s </span><br><span class="line"> ✔ Container nginx              Started                                                                     4.1s </span><br><span class="line"> ✔ Container harbor-jobservice  Started                                                                     4.0s </span><br><span class="line">✔ ----Harbor has been installed and started successfully.----</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动的容器</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># docker-compose ps</span></span><br><span class="line">NAME                IMAGE                                COMMAND                  SERVICE             CREATED             STATUS                    PORTS</span><br><span class="line">harbor-core         goharbor/harbor-core:v2.7.1          <span class="string">"/harbor/entrypoint.…"</span>   core                11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">harbor-db           goharbor/harbor-db:v2.7.1            <span class="string">"/docker-entrypoint.…"</span>   postgresql          11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">harbor-jobservice   goharbor/harbor-jobservice:v2.7.1    <span class="string">"/harbor/entrypoint.…"</span>   jobservice          11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">harbor-log          goharbor/harbor-log:v2.7.1           <span class="string">"/bin/sh -c /usr/loc…"</span>   <span class="built_in">log</span>                 11 minutes ago      Up 11 minutes (healthy)   127.0.0.1:1514-&gt;10514/tcp</span><br><span class="line">harbor-portal       goharbor/harbor-portal:v2.7.1        <span class="string">"nginx -g 'daemon of…"</span>   portal              11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">nginx               goharbor/nginx-photon:v2.7.1         <span class="string">"nginx -g 'daemon of…"</span>   proxy               11 minutes ago      Up 11 minutes (healthy)   0.0.0.0:80-&gt;8080/tcp, :::80-&gt;8080/tcp, 0.0.0.0:443-&gt;8443/tcp, :::443-&gt;8443/tcp</span><br><span class="line">redis               goharbor/redis-photon:v2.7.1         <span class="string">"redis-server /etc/r…"</span>   redis               11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">registry            goharbor/registry-photon:v2.7.1      <span class="string">"/home/harbor/entryp…"</span>   registry            11 minutes ago      Up 11 minutes (healthy)   </span><br><span class="line">registryctl         goharbor/harbor-registryctl:v2.7.1   <span class="string">"/home/harbor/start.…"</span>   registryctl         11 minutes ago      Up 11 minutes (healthy) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录镜像仓库</span></span><br><span class="line">[root@docker-ce harbor]<span class="comment"># docker login https://harbor.tanke.love</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/10/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/Docker%E5%AE%B9%E5%99%A8%E5%8C%96/17.jpg" alt="image.png"></p><h4 id="9-3-docker-compose介绍"><a href="#9-3-docker-compose介绍" class="headerlink" title="9.3 docker-compose介绍"></a>9.3 docker-compose介绍</h4><p> Docker Compose 是一个用于定义和运行多容器 Docker 应用的工具。通过使用 YAML 文件，你可以配置应用需要的所有服务，然后使用一个命令就能创建并启动这些服务。Docker Compose 非常适合用来管理复杂的应用程序，其中包含多个相互依赖的服务。  </p><h4 id="9-2-编排启动镜像"><a href="#9-2-编排启动镜像" class="headerlink" title="9.2 编排启动镜像"></a>9.2 编排启动镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">$ vim /opt/docker-compose/wordpress/docker-compose.yaml</span><br><span class="line">services:</span><br><span class="line">   db:</span><br><span class="line">     image: registry.cn-hangzhou.aliyuncs.com/hujiaming/mysql:5.7.44</span><br><span class="line">     volumes:</span><br><span class="line">       - /data/db_data:/var/lib/mysql</span><br><span class="line">     restart: always</span><br><span class="line">     environment:</span><br><span class="line">       MYSQL_ROOT_PASSWORD: somewordpress</span><br><span class="line">       MYSQL_DATABASE: wordpress</span><br><span class="line">       MYSQL_USER: wordpress</span><br><span class="line">       MYSQL_PASSWORD: wordpress</span><br><span class="line">   wordpress:</span><br><span class="line">     depends_on:</span><br><span class="line">       - db</span><br><span class="line">     image: registry.cn-hangzhou.aliyuncs.com/hujiaming/mysql:5.7.44</span><br><span class="line">     volumes:</span><br><span class="line">       - /data/web_data:/var/www/html</span><br><span class="line">     ports: </span><br><span class="line">       - <span class="string">"8000:80"</span></span><br><span class="line">     restart: always</span><br><span class="line">     environment:</span><br><span class="line">       WORDPRESS_DB_HOST: db:3306</span><br><span class="line">       WORDPRESS_DB_USER: wordpress</span><br><span class="line">       WORDPRESS_DB_PASSWORD: wordpress</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> /opt/docker-compose/wordpress</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">    $ docker-compose up -d</span><br><span class="line">[+] Running 34/34</span><br><span class="line"> ⠿ wordpress Pulled                                                          181.8s</span><br><span class="line">   ⠿ 1fe172e4850f Already exists                                             0.0s</span><br><span class="line">   ⠿ 012a3732d045 Pull complete                                              37.3s</span><br><span class="line">   ⠿ 43092314d50d Pull complete                                              71.3s</span><br><span class="line">   ⠿ 4f615e42d863 Pull complete                                              71.4s</span><br><span class="line">   ⠿ cd39010a4efc Pull complete                                              72.2s</span><br><span class="line">   ⠿ d983c9ce24de Pull complete                                              72.3s</span><br><span class="line">   ⠿ ecbdd59ae430 Pull complete                                              75.8s</span><br><span class="line">   ⠿ 9d02b88c8618 Pull complete                                              79.5s</span><br><span class="line">   ⠿ 50a246031d43 Pull complete                                              79.6s</span><br><span class="line">   ⠿ a6c0267e6c34 Pull complete                                              84.0s</span><br><span class="line">   ⠿ 787ca6348cef Pull complete                                              91.5s</span><br><span class="line">   ⠿ da8ad43595e2 Pull complete                                              97.4s</span><br><span class="line">   ⠿ e191f9e80e29 Pull complete                                              97.4s</span><br><span class="line">   ⠿ fed8d3fd90f9 Pull complete                                              106.6s</span><br><span class="line">   ⠿ 9ffdaa9000ed Pull complete                                              129.4s</span><br><span class="line">   ⠿ 5774aeca6412 Pull complete                                              129.5s</span><br><span class="line">   ⠿ 6978431bb9e2 Pull complete                                              129.6s</span><br><span class="line">   ⠿ fb4d3fb05351 Pull complete                                              129.7s</span><br><span class="line">   ⠿ 23d3af42839e Pull complete                                              133.6s</span><br><span class="line">   ⠿ a5b33728e4a6 Pull complete                                              133.7s</span><br><span class="line">   ⠿ 766e2b674cd0 Pull complete                                              136.9s</span><br><span class="line"> ⠿ db Pulled                                                                 175.8s</span><br><span class="line">   ⠿ 4be315f6562f Pull complete                                              18.4s</span><br><span class="line">   ⠿ 96e2eb237a1b Pull complete                                              18.5s</span><br><span class="line">   ⠿ 8aa3ac85066b Pull complete                                              18.8s</span><br><span class="line">   ⠿ ac7e524f6c89 Pull complete                                              18.9s</span><br><span class="line">   ⠿ f6a88631064f Pull complete                                              19.0s</span><br><span class="line">   ⠿ 15bb3ec3ff50 Pull complete                                              35.7s</span><br><span class="line">   ⠿ ae65dc337dcb Pull complete                                              35.8s</span><br><span class="line">   ⠿ a4c4c43adf52 Pull complete                                              35.9s</span><br><span class="line">   ⠿ c6cab33e8f91 Pull complete                                              140.1s</span><br><span class="line">   ⠿ 2e1c4f2c43f6 Pull complete                                              140.2s</span><br><span class="line">   ⠿ 2e5ee322af48 Pull complete                                              140.2s</span><br><span class="line">[+] Running 3/3</span><br><span class="line"> ⠿ Network root_default        Created                                       0.1s</span><br><span class="line"> ⠿ Container root-db-1         Started                                       0.8s</span><br><span class="line"> ⠿ Container root-wordpress-1  Started                                       1.1s</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="https://l66stbz.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>若依项目动静分离</title>
    <link href="https://l66stbz.github.io/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/"/>
    <id>https://l66stbz.github.io/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/</id>
    <published>2024-09-09T13:50:00.000Z</published>
    <updated>2024-09-07T11:39:14.373Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="若依项目动静分离项目实现"><a href="#若依项目动静分离项目实现" class="headerlink" title="若依项目动静分离项目实现"></a>若依项目动静分离项目实现</h1><p>[TOC]</p><p>若依（RuoYi）是一款基于 Spring Boot + Spring Security + MyBatis 的快速开发框架，提供了简洁的代码生成、权限管理、用户管理等功能，适用于企业后台管理系统的快速搭建。动静分离是若依项目架构的一部分，旨在提高系统的性能和安全性。</p><h4 id="若依动静分离的典型架构："><a href="#若依动静分离的典型架构：" class="headerlink" title="若依动静分离的典型架构："></a>若依动静分离的典型架构：</h4><ol><li><strong>前端（RuoYi-Vue）</strong>：<ul><li>前端使用 Vue.js 框架进行开发，构建了一个单页面应用程序（SPA）。</li><li>前端代码通过 Vue CLI 编译和打包为静态文件（如 HTML、CSS、JavaScript）。</li></ul></li><li><strong>后端（RuoYi-Admin）</strong>：<ul><li>后端基于 Spring Boot，提供 RESTful API 服务，处理业务逻辑、数据库操作和权限管理。</li><li>后端不再直接处理静态资源请求，专注于处理动态请求，如 API 调用和业务处理。</li></ul></li></ol><h3 id="1、服务需求"><a href="#1、服务需求" class="headerlink" title="1、服务需求"></a>1、服务需求</h3><ul><li>MySQL5.7：后端存储</li><li>Redis 6.0：缓存</li><li>Nginx 1.24：前端项目</li><li>jdk 1.8</li><li>maven：编译后端项目</li><li>nodejs：编译前端项目</li></ul><h3 id="2、环境安装"><a href="#2、环境安装" class="headerlink" title="2、环境安装"></a>2、环境安装</h3><h4 id="1-MySQL5-7安装与配置"><a href="#1-MySQL5-7安装与配置" class="headerlink" title="1. MySQL5.7安装与配置"></a>1. MySQL5.7安装与配置</h4><ol><li><strong>安装MySQL5.7</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 卸载旧依赖</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># yum erase mariadb mariadb-server mariadb-libs mariadb-devel -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装wget</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># yum install -y wget yum-utils git</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装MySQL 安装源</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># yum install -y mysql80-community-release-el7-3.noarch.rpm </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动MySQL5.7安装源</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># vim /etc/yum.repos.d/mysql-community.repo</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/1.png" alt="image-20240816204911175"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ruoyi ~]# vim /etc/yum.repos.d/mysql-community-source.repo</span><br></pre></td></tr></table></figure><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/2.png" alt="image-20240816204953072"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 安装MySQL5.7</span></span><br><span class="line">[root@ruoyi ~]# yum install -y mysql-community-server</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动MySQL</span></span><br><span class="line">[root@ruoyi ~]# systemctl enable --now mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看密码</span></span><br><span class="line">[root@ruoyi ~]# grep "password"  /var/log/mysqld.log</span><br><span class="line">2024-08-16T12:58:32.136381Z 1 [Note] A temporary password is generated for root@localhost: )Q#B=;Nvf2jp</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>修改root密码与主机连接地址</strong></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 登录MySQL</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># mysql -uroot -p')Q#B=;Nvf2jp'</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改root密码为Abc123456;</span></span><br><span class="line">mysql&gt; SET PASSWORD = PASSWORD('Abc123456;');</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 设置root用户远程登录</span></span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'Abc123456;' WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>修改配置文件</strong></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@ruoyi ~]</span><span class="comment"># vim /etc/my.cnf</span></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">default-time_zone</span> = <span class="string">'+8:00'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建数据库添加的配置信息</span></span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">collation-server</span>=utf8_general_ci</span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">10000</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="attr">datadir</span>=/var/lib/mysql</span><br><span class="line"><span class="attr">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="attr">symbolic-links</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启MySQL</span></span><br><span class="line"><span class="section">[root@ruoyi ~]</span><span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>拉取源码</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ruoyi ~]# git clone https://gitee.com/y_project/RuoYi-Vue.git</span><br><span class="line">正克隆到 'RuoYi-Vue'...</span><br><span class="line">remote: Enumerating objects: 16754, done.</span><br><span class="line">remote: Counting objects: 100% (261/261), done.</span><br><span class="line">remote: Compressing objects: 100% (166/166), done.</span><br><span class="line">remote: Total 16754 (delta 64), reused 145 (delta 34), pack-reused 16493</span><br><span class="line">接收对象中: 100% (16754/16754), 4.02 MiB | 2.92 MiB/s, done.</span><br><span class="line">处理 delta 中: 100% (8472/8472), done.</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>导入数据表</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建数据库</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># mysql -uroot -p'Abc123456;'</span></span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE DATABASE ruoyi CHARACTER SET utf8mb4;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">[root@ruoyi sql]<span class="comment"># cd /root/RuoYi-Vue/sql/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 导入数据</span></span><br><span class="line">[root@ruoyi sql]<span class="comment"># mysql -uroot -p'Abc123456;'  ruoyi &lt; ry_20240629.sql </span></span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">[root@ruoyi sql]<span class="comment"># mysql -uroot -p'Abc123456;'  ruoyi &lt; quartz.sql </span></span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看数据是否导入</span></span><br><span class="line">略</span><br></pre></td></tr></table></figure><h4 id="2-Redis安装和配置"><a href="#2-Redis安装和配置" class="headerlink" title="2. Redis安装和配置"></a>2. Redis安装和配置</h4><ol><li><strong>安装</strong></li></ol><p>​        略</p><ol start="2"><li><strong>配置修改</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改配置文件</span></span><br><span class="line">[root@redis-server ~]<span class="comment"># vim /usr/local/redis/redis.conf </span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">daemonize yes</span><br><span class="line">logfile <span class="string">"/var/log/redis.log"</span></span><br><span class="line">requirepass 123456</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动redis</span></span><br><span class="line">[root@redis-server ~]<span class="comment"># cd /usr/local/redis/src/</span></span><br><span class="line">[root@redis-server src]<span class="comment"># ./redis-server  ../redis.conf </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试redis</span></span><br><span class="line">[root@redis-server src]<span class="comment"># ./redis-cli </span></span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><h4 id="3-nginx安装"><a href="#3-nginx安装" class="headerlink" title="3. nginx安装"></a>3. nginx安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ruoyi sql]<span class="comment"># yum install -y nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-安装JDK1-8"><a href="#4-安装JDK1-8" class="headerlink" title="4. 安装JDK1.8"></a>4. 安装JDK1.8</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@ruoyi ~]<span class="comment"># ls</span></span><br><span class="line">jdk-8u211-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 解压安装包</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># tar xf jdk-8u211-linux-x64.tar.gz  -C /usr/local/ &amp;&amp; cd /usr/local/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更改目录名称</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># mv jdk1.8.0_211/ java</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 声明环境变量</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># cat &gt;&gt; /etc/profile.d/jdk.sh &lt;&lt;-EOF</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 指定java安装目录</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java</span><br><span class="line"><span class="comment"># 用于指定java系统查找命令的路径</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/jre/bin:<span class="variable">$PATH</span> </span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重新加载环境变量</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># source /etc/profile.d/jdk.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">"1.8.0_211"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span><br></pre></td></tr></table></figure><h4 id="5-安装maven"><a href="#5-安装maven" class="headerlink" title="5. 安装maven"></a>5. 安装maven</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 解压安装包</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># tar xf apache-maven-3.9.6-bin.tar.gz  -C /usr/local/ &amp;&amp; cd /usr/local/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 声明maven环境变量</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># cat &gt;&gt; /etc/profile.d/mvn.sh &lt;&lt;EOF</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/usr/<span class="built_in">local</span>/apache-maven-3.9.6/</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重新加载环境变量</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># source /etc/profile.d/mvn.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试使用</span></span><br><span class="line">[root@ruoyi <span class="built_in">local</span>]<span class="comment"># mvn -v</span></span><br><span class="line">Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae)</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 修改mvn插件拉取地址</span><br><span class="line">[root@localhost ~]# vim /usr/local/apache-maven-3.9.6/conf/settings.xml </span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>一般在maven安装目录的<code>/usr/local/apache-maven-3.9.6/conf/settings.xml</code>，在<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>标签中添加 mirror 子节点</p></blockquote><h4 id="6-安装nodejs"><a href="#6-安装nodejs" class="headerlink" title="6. 安装nodejs"></a>6. 安装nodejs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 解压安装包</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tar xf node-v16.13.0-linux-x64.tar.xz  -C /usr/local/ &amp;&amp; cd /usr/local/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建软链接</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ln -s node-v16.13.0-linux-x64  node</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 声明环境变量</span></span><br><span class="line">[root@localhost node]<span class="comment"># cat &gt;&gt; /etc/profile.d/node.sh &lt;&lt;-EOF</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/usr/<span class="built_in">local</span>/node</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NODE_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> NODE_PATH=<span class="variable">$NODE_HOME</span>/lib/node_mudules</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重新加载配置文件</span></span><br><span class="line">[root@localhost node]<span class="comment"># source  /etc/profile.d/node.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 测试是否安装成功</span></span><br><span class="line">[root@localhost node]<span class="comment"># node -v</span></span><br><span class="line">v16.13.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;创建node相关命令软链接</span></span><br><span class="line">[root@localhost node]<span class="comment"># ln -s /usr/local/node/bin/node /usr/local/bin/node</span></span><br><span class="line">[root@localhost node]<span class="comment"># ln -s /usr/local/node/bin/npm /usr/local/bin/npm</span></span><br></pre></td></tr></table></figure><h4 id="7-更改配置信息"><a href="#7-更改配置信息" class="headerlink" title="7. 更改配置信息"></a>7. 更改配置信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /root/RuoYi-Vue/ruoyi-admin/src/main/resources</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 更改数据库连接池</span></span><br><span class="line">[root@ruoyi resources]<span class="comment"># vim application-druid.yml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/3.png" alt="image-20240816220601158"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 更改redis连接池</span></span><br><span class="line">[root@ruoyi resources]<span class="comment"># vim application.yml</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/4.png" alt="image-20240816220736591"></p><h4 id="8-后端应用打包"><a href="#8-后端应用打包" class="headerlink" title="8. 后端应用打包"></a>8. 后端应用打包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">[root@ruoyi ~]<span class="comment"># cd RuoYi-Vue/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装插件</span></span><br><span class="line">[root@ruoyi RuoYi-Vue]<span class="comment"># mvn install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换后端代码目录</span></span><br><span class="line">[root@ruoyi RuoYi-Vue]<span class="comment"># cd ruoyi-admin/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编译代码</span></span><br><span class="line">[root@ruoyi ruoyi-admin]<span class="comment"># mvn clean package</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看当前目录信息</span></span><br><span class="line">[root@ruoyi ruoyi-admin]<span class="comment"># ls</span></span><br><span class="line">pom.xml  src  target</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看jar包</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># ls</span></span><br><span class="line">ruoyi-admin.jar</span><br></pre></td></tr></table></figure><h4 id="9-前端打包"><a href="#9-前端打包" class="headerlink" title="9. 前端打包"></a>9. 前端打包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换前端代码目录</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># cd /root/RuoYi-Vue/ruoyi-ui/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装插件</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># npm install -registry=http://npmmirror.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装cnpm</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># npm install -g cnpm -registry=http://registry.npmmirror.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装vue3</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># cnpm init vue@3.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 安装插件</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># cnpm install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编译前端代码</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># npm run build:prod</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看当前目录</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># ls</span></span><br><span class="line">dist</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># cd dist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看前端项目</span></span><br><span class="line">[root@ruoyi dist]<span class="comment"># ls</span></span><br><span class="line">favicon.ico  html  index.html  index.html.gz  robots.txt  static</span><br></pre></td></tr></table></figure><h4 id="10-前端项目部署"><a href="#10-前端项目部署" class="headerlink" title="10. 前端项目部署"></a>10. 前端项目部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建日志目录</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># mkdir -p /opt/project/ruoyi/logs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建前端项目存放目录</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># mkdir -p /ruoyi/ruoyi-ui</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 拷贝前端项目到指定目录</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># cp -r /root/RuoYi-Vue/ruoyi-ui/dist  /ruoyi/ruoyi-ui</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; nginx配置文件准备</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># vim /etc/nginx/conf.d/default.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">location / &#123;</span><br><span class="line">    root   /ruoyi/ruoyi-ui/dist;</span><br><span class="line">    try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /prod-api/ &#123;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080/;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 检查语法格式</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># nginx -t</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动nginx</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># systemctl enable --now nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 检查nginx启动情况</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># systemctl status nginx</span></span><br></pre></td></tr></table></figure><h4 id="11-后端部署"><a href="#11-后端部署" class="headerlink" title="11. 后端部署"></a>11. 后端部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 切换目录</span></span><br><span class="line">[root@ruoyi ruoyi-ui]<span class="comment"># cd /root/RuoYi-Vue/ruoyi-admin/target</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动jar包</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># nohup  java -jar ruoyi-admin.jar &amp;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看启动日志</span></span><br><span class="line">[root@ruoyi target]<span class="comment"># tail -f nohup.out</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/5.png" alt="image-20240817230157499"></p><h4 id="12-访问应用"><a href="#12-访问应用" class="headerlink" title="12. 访问应用"></a>12. 访问应用</h4><p><a href="http://192.168.174.41" target="_blank" rel="noopener">http://192.168.174.41</a></p><p><img src="/2024/09/09/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/6.png" alt="image-20240817225111942"></p><h3 id="3、Redis数据解释"><a href="#3、Redis数据解释" class="headerlink" title="3、Redis数据解释"></a>3、Redis数据解释</h3><p>这些 Redis 中的键值是若依（RuoYi）系统中使用的配置项和字典数据。它们存储了系统的一些全局配置、字典项和设定，供系统各个模块使用。下面是对这些 Redis 键的详细解释：</p><ol><li><strong><code>sys_config:sys.index.sideTheme</code></strong></li></ol><ul><li><strong>解释</strong>：这个键用于存储系统首页侧边栏的主题配置，通常决定了系统 UI 的侧边栏风格（比如浅色、深色等）。</li></ul><ol start="2"><li><strong><code>sys_dict:sys_oper_type</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储操作类型的字典值。比如系统中的操作类型（查询、删除、编辑等），这些值用于前端选择框或其他界面。</li></ul><ol start="3"><li><strong><code>sys_config:sys.index.skinName</code></strong></li></ol><ul><li><strong>解释</strong>：这个键存储系统首页皮肤名称配置，决定了系统 UI 的皮肤样式（比如默认皮肤、蓝色皮肤等）。</li></ul><ol start="4"><li><strong><code>sys_dict:sys_notice_type</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储系统中公告的类型（如通知、公告、系统消息等）。这些字典数据通常用于公告管理模块中。</li></ul><ol start="5"><li><strong><code>sys_config:sys.login.blackIPList</code></strong></li></ol><ul><li><strong>解释</strong>：这个键用于存储系统登录的黑名单 IP 列表，防止黑名单中的 IP 地址登录系统，提升系统的安全性。</li></ul><ol start="6"><li><strong><code>sys_dict:sys_notice_status</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储系统公告的状态信息（如已发布、草稿等）。公告管理中会根据这个状态来区分公告的当前状态。</li></ul><ol start="7"><li><strong><code>sys_config:sys.account.registerUser</code></strong></li></ol><ul><li><strong>解释</strong>：这个键用于存储系统是否允许用户注册的配置（例如，是否启用用户自注册功能）。</li></ul><ol start="8"><li><strong><code>sys_dict:sys_normal_disable</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储通用的启用/禁用状态。这通常用于各类表单或功能开关的状态选项（如是否启用某项功能）。</li></ul><ol start="9"><li><strong><code>sys_dict:sys_yes_no</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储系统中通用的“是/否”选项，供选择题型的问题或功能开关使用。</li></ul><ol start="10"><li><strong><code>sys_dict:sys_common_status</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储通用的状态信息，通常用于描述资源的状态，如启用、停用、正常、异常等。</li></ul><ol start="11"><li><strong><code>sys_config:sys.user.initPassword</code></strong></li></ol><ul><li><strong>解释</strong>：这个键用于存储系统中新用户的初始化密码配置。新用户注册或管理员创建新用户时，系统会自动设置该初始化密码。</li></ul><ol start="12"><li><strong><code>sys_dict:sys_user_sex</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储用户性别的字典选项（如男性、女性、未知），用于用户信息表单中的性别选择框。</li></ul><ol start="13"><li><strong><code>sys_config:sys.account.captchaEnabled</code></strong></li></ol><ul><li><strong>解释</strong>：这个键用于存储系统是否启用登录验证码功能的配置。启用后，在用户登录时会要求输入验证码以提高安全性。</li></ul><ol start="14"><li><strong><code>sys_dict:sys_job_status</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储任务调度（如定时任务）中的任务状态（如正常、暂停等），用于描述当前任务的执行情况。</li></ul><ol start="15"><li><strong><code>sys_dict:sys_show_hide</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储系统中通用的显示/隐藏状态，常用于控制某些 UI 元素或功能是否在页面上显示。</li></ul><ol start="16"><li><strong><code>sys_dict:sys_job_group</code></strong></li></ol><ul><li><strong>解释</strong>：这是一个字典数据键，存储定时任务的任务组别信息。定时任务可以根据分组来组织和管理不同的任务。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Redis" scheme="https://l66stbz.github.io/tags/Redis/"/>
    
      <category term="Nginx" scheme="https://l66stbz.github.io/tags/Nginx/"/>
    
      <category term="MySQL" scheme="https://l66stbz.github.io/tags/MySQL/"/>
    
      <category term="Maven" scheme="https://l66stbz.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>https证书申请</title>
    <link href="https://l66stbz.github.io/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/"/>
    <id>https://l66stbz.github.io/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/</id>
    <published>2024-09-08T13:50:00.000Z</published>
    <updated>2024-09-07T13:15:41.676Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="https证书申请流程"><a href="#https证书申请流程" class="headerlink" title="https证书申请流程"></a>https证书申请流程</h1><p>申请地址：<a href="https://certbot.eff.org" target="_blank" rel="noopener">https://certbot.eff.org</a></p><p>环境准备：</p><ul><li>一台centos 7 LInux操作系统主机，并且能够<code>正常上网</code>；</li><li><code>真实域名</code>。</li></ul><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/1.png" alt="image-20240907172819897"></p><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/2.png" alt="image-20240318184845187"></p><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/3.png" alt="image-20240318184912074"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install -y epel-release</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum makecache fast</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install -y snapd nginx</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable --now snapd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ln -s /var/lib/snapd/snap /snap</span></span><br><span class="line">[root@localhost ~]<span class="comment"># snap --help</span></span><br><span class="line">The snap <span class="built_in">command</span> lets you install, configure, refresh and remove snaps.</span><br><span class="line">Snaps are packages that work across many different Linux distributions,</span><br><span class="line">enabling secure delivery and operation of the latest apps and utilities.</span><br><span class="line"></span><br><span class="line">Usage: snap &lt;<span class="built_in">command</span>&gt; [&lt;options&gt;...]</span><br><span class="line"></span><br><span class="line">Commonly used commands can be classified as follows:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Certbot软件包，并使用了--classic标志(经典模式)</span></span><br><span class="line">[root@localhost ~]<span class="comment"># snap install --classic certbot</span></span><br><span class="line">Warning: /var/lib/snapd/snap/bin was not found <span class="keyword">in</span> your <span class="variable">$PATH</span>. If you<span class="string">'ve not restarted your session</span></span><br><span class="line"><span class="string">         since you installed snapd, try doing that. Please see https://forum.snapcraft.io/t/9469</span></span><br><span class="line"><span class="string">         for more details.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">certbot 2.9.0 from Certbot Project (certbot-eff✓) installed</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@localhost ~]# ln -s /snap/bin/certbot /usr/bin/certbot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@localhost ~]# certbot certonly --manual --preferred-challenges dns -d *.tanke.love</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># certbot certonly --manual --preferred-challenges dns -d *.tanke.love 这条命令用于使用Certbot工具获取SSL/TLS证书。</span></span><br><span class="line"><span class="string"># 具体解释如下：</span></span><br><span class="line"><span class="string">certbot: 是Certbot的命令行工具，用于管理SSL/TLS证书。</span></span><br><span class="line"><span class="string">certonly: 表示只获取证书而不配置自动更新和续订。</span></span><br><span class="line"><span class="string">--manual: 指定手动验证模式，即通过手动创建验证文件来证明域名所有权。</span></span><br><span class="line"><span class="string">--preferred-challenges dns: 指定首选的验证方式为DNS（DNS challenge），即通过在DNS记录中添加特定的TXT记录来证明域名所有权。</span></span><br><span class="line"><span class="string">-d *.tanke.love: 指定要获取证书的域名，这里包括tanke.love和以*.tanke.love开头的所有子域名。</span></span><br><span class="line"><span class="string">综上所述，该命令的作用是使用Certbot工具，通过手动验证模式和DNS挑战方式，为tanke.love和以*.tanke.love开头的所有子域名获取SSL/TLS证书。</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/4.png" alt="image-20240318185145827"></p><blockquote><p>之后一直按两次回车</p></blockquote><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/5.png" alt="image-20240318185406394"></p><p>登录购买域名的云厂商</p><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/6.png" alt="image-20240318185524734"></p><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/7.png" alt="报错"></p><blockquote><p>如果出现上述报错则重新生成证书：</p><p><code>certbot certonly --manual --preferred-challenges dns -d tanke.love,*.tanke.love -v</code></p></blockquote><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/8.png" alt="image-20240318185643750"></p><blockquote><p>证书、私钥存放处</p></blockquote><p>测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动nginx</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl  enable --now nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vim /etc/nginx/conf.d/default.conf </span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  test.tanke.love;</span><br><span class="line">    location / &#123;</span><br><span class="line">      rewrite ^(.*)$  https://test.tanke.love<span class="variable">$1</span> permanent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen     443 ssl;</span><br><span class="line">    server_name test.tanke.love;</span><br><span class="line">    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_certificate     /etc/letsencrypt/live/tanke.love/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/tanke.love/privkey.pem;</span><br><span class="line">    ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查语法</span></span><br><span class="line">[root@localhost ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启nginx</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart nginx</span></span><br></pre></td></tr></table></figure><p>访问nginx</p><p><img src="/2024/09/08/https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E6%B5%81%E7%A8%8B/9.png" alt="image-20240318190036735"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="https" scheme="https://l66stbz.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins_webhooks自动触发</title>
    <link href="https://l66stbz.github.io/2024/09/07/Jenkins_webhooks%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91/Jenkins_webhooks%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91/"/>
    <id>https://l66stbz.github.io/2024/09/07/Jenkins_webhooks%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91/Jenkins_webhooks%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91/</id>
    <published>2024-09-07T13:50:00.000Z</published>
    <updated>2024-09-07T02:53:46.357Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Jenkins-Gitlab-webhook触发自动构建项目"><a href="#Jenkins-Gitlab-webhook触发自动构建项目" class="headerlink" title="Jenkins+Gitlab webhook触发自动构建项目"></a>Jenkins+Gitlab webhook触发自动构建项目</h1><ul><li>效果：只要Gitlab仓库代码更新，Jenkins自动拉取代码，自动完成构建任务。无需手动点击“立即构建”或者”参数化构建”</li><li>需求场景：</li></ul><p>1、项目代码的更新迭代较多，运维很有可能不在场，每次点击比较麻烦<br>2、更新的可能不是代码，可能是一些资源（比如：静态文件等）<br>Jenkins版本：2.303.1 Gitlab版本：12.6.3</p><h3 id="安装配置Gitlab"><a href="#安装配置Gitlab" class="headerlink" title="安装配置Gitlab"></a>安装配置Gitlab</h3><p>Yum安装即可 ， 过程 略<br>Gitlab平台root用户密码配置为12345678</p><h5 id="创建一个项目-私有仓库"><a href="#创建一个项目-私有仓库" class="headerlink" title="创建一个项目(私有仓库)"></a>创建一个项目(私有仓库)</h5><p>准备测试代码：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339450086-a5163726-3591-49fb-ab72-99eaedb19147.png#averageHue=%23f8f8f7&clientId=u906c2411-8505-4&from=paste&id=u0ea14367&originHeight=764&originWidth=1410&originalType=url&ratio=1&rotation=0&showTitle=false&size=80118&status=done&style=none&taskId=ua1308608-2d59-4ea6-9bc4-95e56016842&title=" alt="image.png"></p><h3 id="后端服务器准备"><a href="#后端服务器准备" class="headerlink" title="后端服务器准备"></a>后端服务器准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-server ~]# tar -xvzf jdk-8u211-linux-x64.tar.gz  -C /usr/local/</span><br><span class="line">[root@docker-server ~]# cd /usr/local/</span><br><span class="line">[root@docker-server local]# mv jdk1.8.0_211/ java </span><br><span class="line">[root@docker-server local]# vim /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash">最文件最后面添加</span></span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">[root@docker-server local]# source /etc/profile</span><br><span class="line">[root@docker-server local]# java -version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1668657965540-c9e2d959-1187-43df-b9ef-ddd1bee4cede.png#averageHue=%23110f0d&clientId=u41b33c8d-0e66-4&from=paste&height=138&id=u4d5d4339&originHeight=172&originWidth=1077&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19231&status=done&style=none&taskId=u2563c73e-477e-4119-bd5e-641d263bc45&title=&width=861.6" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@docker-server ~]# tar -xvzf apache-tomcat-8.5.45.tar.gz -C /data/application/</span><br><span class="line">[root@docker-server application]# mv apache-tomcat-8.5.45/ tomcat</span><br><span class="line">[root@docker-server application]# ls</span><br><span class="line">tomcat</span><br><span class="line">[root@docker-server application]# rm -rf tomcat/webapps/*</span><br></pre></td></tr></table></figure><h3 id="安装配置Jenkins"><a href="#安装配置Jenkins" class="headerlink" title="安装配置Jenkins"></a>安装配置Jenkins</h3><hr><p>安装过程略<br>1.安装jdk<br>2.安装Tomcat<br>3.安装Maven（可选，不确定是否编译）<br>4.配置环境变量<br>5.启动</p><hr><h5 id="记得配置jdk和maven"><a href="#记得配置jdk和maven" class="headerlink" title="记得配置jdk和maven"></a>记得配置jdk和maven</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339450493-8b5749b0-cde5-4aab-b5f2-1a6ef40a9909.png#averageHue=%23fcf9f8&clientId=u906c2411-8505-4&from=paste&id=uaf1a0dd1&originHeight=559&originWidth=1391&originalType=url&ratio=1&rotation=0&showTitle=false&size=49698&status=done&style=none&taskId=u2630baa1-b1ae-4d23-9564-a817a95abd4&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339450471-4e2975d3-907d-48a0-8ab3-7cede4a8e63e.png#averageHue=%23fcf8f7&clientId=u906c2411-8505-4&from=paste&id=ucd969ba5&originHeight=338&originWidth=1384&originalType=url&ratio=1&rotation=0&showTitle=false&size=27130&status=done&style=none&taskId=uccd2f5f8-02ec-4e5e-b0d4-fc7850fb24a&title=" alt="image.png"></p><h5 id="安装Gitlab-hooks-plugins插件"><a href="#安装Gitlab-hooks-plugins插件" class="headerlink" title="安装Gitlab hooks plugins插件"></a>安装Gitlab hooks plugins插件</h5><p>因为要用gitlab hook自动拉取代码的功能，需要安装GItlab hooks插件，才具有自动构建的功能<br>去“插件管理”页面，“可选插件”，搜索“Gitlab Hook Plugin”，“Gitlab”，点击“直接安装即可”<br><strong>注意：安装过程和网络有关。网络必须顺畅。且能正常连同国外Jenkins网站，才能下载成功</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339451257-03a9e617-4080-487c-9ef3-6eb31a83e03b.png#averageHue=%23f7f4f3&clientId=u906c2411-8505-4&from=paste&id=uec338be8&originHeight=396&originWidth=1429&originalType=url&ratio=1&rotation=0&showTitle=false&size=42412&status=done&style=none&taskId=u51a6ed98-1ca1-4f79-bca8-0b74c5b3227&title=" alt="image.png"></p><h5 id="新建Gitlab-webhook相关项目"><a href="#新建Gitlab-webhook相关项目" class="headerlink" title="新建Gitlab webhook相关项目"></a>新建Gitlab webhook相关项目</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339451477-659d9eb1-cbeb-4103-aa9c-9148c97deefb.png#averageHue=%23fdfbfa&clientId=u906c2411-8505-4&from=paste&id=u5579bbda&originHeight=357&originWidth=482&originalType=url&ratio=1&rotation=0&showTitle=false&size=56892&status=done&style=none&taskId=uf467cd17-d756-4ecc-86a6-c7c626fecd5&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339451581-049775dc-c2d3-4896-aa6b-a9a9555035c4.png#averageHue=%23f2efee&clientId=u906c2411-8505-4&from=paste&id=u2952ff74&originHeight=741&originWidth=1182&originalType=url&ratio=1&rotation=0&showTitle=false&size=108445&status=done&style=none&taskId=u73c397ac-e471-4270-8b1c-47f43891084&title=" alt="image.png"><br>Jenkins具体配置<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339451724-29d99afa-cd2c-4804-afc9-30bc3fc183e6.png#averageHue=%23f9f9f9&clientId=u906c2411-8505-4&from=paste&id=u97304910&originHeight=791&originWidth=1238&originalType=url&ratio=1&rotation=0&showTitle=false&size=61208&status=done&style=none&taskId=uece6411e-b5bd-4b15-9d39-73cd75a3c1d&title=" alt="image.png"><br>来到Gitlab的test1项目中，复制拉取地址<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339451783-1ad11f51-3850-4b7b-9172-aa55d79c1202.png#averageHue=%23f4f2f0&clientId=u906c2411-8505-4&from=paste&id=u336e5830&originHeight=587&originWidth=1209&originalType=url&ratio=1&rotation=0&showTitle=false&size=72759&status=done&style=none&taskId=u3890b92b-f3fd-44ab-a2d3-03bd3a1dde2&title=" alt="image.png"><br>粘贴到<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339452308-7ab21409-79fc-4f1b-a0c4-1b43dbf958cd.png#averageHue=%23f0eeee&clientId=u906c2411-8505-4&from=paste&id=u90026910&originHeight=384&originWidth=665&originalType=url&ratio=1&rotation=0&showTitle=false&size=81473&status=done&style=none&taskId=u91687a63-90c7-4783-8deb-ed083fb2b61&title=" alt="image.png"><br>出现一堆报红，正常！因为需要配置私钥和公钥<br>需要把Jenkins服务器的私钥，配置到test1项目中。把Jenkins服务器的公钥，配置到GItlab的服务里面。<br>这样拉取就可以免密了！<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339452330-0558eb84-97cd-4798-9960-6a7361e52a94.png#averageHue=%23f6f4f3&clientId=u906c2411-8505-4&from=paste&id=u8baece68&originHeight=624&originWidth=1377&originalType=url&ratio=1&rotation=0&showTitle=false&size=58621&status=done&style=none&taskId=ua231ac47-f96c-4eb9-a34f-b050d49f1a7&title=" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins-server ~]# useradd jenkins </span><br><span class="line">[root@jenkins-server ~]# su - jenkins </span><br><span class="line">[jenkins@jenkins-server ~]$ ssh-keygen </span><br><span class="line">[jenkins@jenkins-server ~]$ cat .ssh/id_rsa #查看jenkins用户的私钥</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339452630-bcb3e967-f73e-491c-9560-6548e57cf3d7.png#averageHue=%23f2f2f2&clientId=u906c2411-8505-4&from=paste&id=u3e67ff06&originHeight=168&originWidth=701&originalType=url&ratio=1&rotation=0&showTitle=false&size=26907&status=done&style=none&taskId=uff4d170a-8b99-44a1-a528-dfa803e09e3&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339452704-d7fadc16-7915-4eb9-92f4-0fa260f2a263.png#averageHue=%23f1efef&clientId=u906c2411-8505-4&from=paste&id=uec4fb4da&originHeight=445&originWidth=640&originalType=url&ratio=1&rotation=0&showTitle=false&size=80700&status=done&style=none&taskId=ud53d52df-5ef9-46fa-8ba7-798134dd06e&title=" alt="image.png"><br>看到仍然报红，将jenkins服务器上面的jenkins用户的公钥添加到gitlab中<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339452746-df4fd441-7651-4747-afe0-ecd535e7b1f5.png#averageHue=%23f8f7f7&clientId=u906c2411-8505-4&from=paste&id=uef93001f&originHeight=364&originWidth=352&originalType=url&ratio=1&rotation=0&showTitle=false&size=17535&status=done&style=none&taskId=u89b0491e-45b0-4fb6-85b9-954fa5d8ac7&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339453366-abb0080e-1cb3-4b37-9a9b-dd6ec542138a.png#averageHue=%23f8f7f6&clientId=u906c2411-8505-4&from=paste&id=ucc4739bd&originHeight=731&originWidth=376&originalType=url&ratio=1&rotation=0&showTitle=false&size=27394&status=done&style=none&taskId=ud2e08a0d-2a04-4074-aa59-01a7d3c96dc&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339453499-a98b031a-9d85-483f-8ed2-d4d31a6d3ed7.png#averageHue=%23fdfdfd&clientId=u906c2411-8505-4&from=paste&id=uf11af350&originHeight=372&originWidth=639&originalType=url&ratio=1&rotation=0&showTitle=false&size=62599&status=done&style=none&taskId=u7173c5fa-9dfa-4608-aa6a-4f58ea5c259&title=" alt="image.png"><br>登录到jenkins服务器中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[jenkins@jenkins-server ~]$ cat .ssh/id_rsa.pub #查看jenkins用户的公钥</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339453533-430970e4-ad4f-4de0-be5a-222b39987336.png#averageHue=%23fcfcfb&clientId=u906c2411-8505-4&from=paste&id=uc9a106a7&originHeight=357&originWidth=679&originalType=url&ratio=1&rotation=0&showTitle=false&size=108115&status=done&style=none&taskId=u8d374270-1da8-4d2e-b356-ea18250588e&title=" alt="    "><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339453540-f7318326-a77c-453b-bd24-2d91e9e77fd3.png#averageHue=%23f2f0f0&clientId=u906c2411-8505-4&from=paste&id=uf8b8e17d&originHeight=635&originWidth=1154&originalType=url&ratio=1&rotation=0&showTitle=false&size=56319&status=done&style=none&taskId=u788919d7-2216-4ff0-a23a-802ffc58ae4&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339454024-f8f61b4c-ec46-417f-bd59-a3a89927a1bc.png#averageHue=%23f8f6f6&clientId=u906c2411-8505-4&from=paste&id=u595c5040&originHeight=612&originWidth=1384&originalType=url&ratio=1&rotation=0&showTitle=false&size=56224&status=done&style=none&taskId=uae5c2893-4672-46ce-a7d2-7467d1641cd&title=" alt="image.png"></p><h5 id="构建触发器"><a href="#构建触发器" class="headerlink" title="构建触发器"></a>构建触发器</h5><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406062233805.png" alt="image-20240606223324696"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406062235372.png" alt="image-20240606223549283"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406062317898.png" alt="image-20240606231753843"><br><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406062319107.png" alt="image-20240606231934059"></p><blockquote><p>Token值作用：<br>        Jenkins Webhook Token值用于身份验证，确保只有拥有正确Token的服务器才能触发Jenkins上的构建或者部署等操作。这样做可以防止未经授权的用户触发Jenkins作业，从而保护你的Jenkins从脚本未授权访问。</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339455074-c91f4733-2eb4-4b78-92e7-d6b59387f49b.png#averageHue=%23f8f8f8&clientId=u906c2411-8505-4&from=paste&id=u41b5bb26&originHeight=788&originWidth=1219&originalType=url&ratio=1&rotation=0&showTitle=false&size=58281&status=done&style=none&taskId=u9d538894-0503-4cfa-9ae6-11114fb88d4&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1671003567422-b95fb9a9-7222-49c5-85df-bf3d2384a5b8.png#averageHue=%23f9f9f9&clientId=uf10e4cac-5303-4&from=paste&height=304&id=u788c6bb5&originHeight=380&originWidth=1192&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13651&status=done&style=none&taskId=ud8968b42-99cd-422c-b30b-48dcec89143&title=&width=953.6" alt="image.png"><br><strong>要记录下上边的URL和认证密钥，切换到gitlab，找到对应的git库点击setting –&gt; webhook ,填写以下内容</strong><br>地址：<a href="http://192.168.182.130:8080/jenkins/project/test3" target="_blank" rel="noopener">http://192.168.182.130:8080/jenkins/project/test3</a><br>Secret token：aab74fc9bd2427f6989e7a2b8ab9b178</p><h5 id="配置GItlab"><a href="#配置GItlab" class="headerlink" title="配置GItlab"></a>配置GItlab</h5><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042248815.png" alt="image-20240904224827758"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042249976.png" alt="image-20240904224918937"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042250206.png" alt="image-20240904225005158"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042252038.png" alt="image-20240904225205979"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042252306.png" alt="image-20240904225240275"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042255287.png" alt="image-20240904225517250"><br>添加完成之后报错测试：<br><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042259709.png" alt="image-20240904225901653"></p><p>这是因为gitlab 10.6 版本以后为了安全，不允许向本地网络发送webhook请求，设置如下：<br>登录管理员账号</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042259375.png" alt="image-20240904225938343"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042300145.png" alt="image-20240904230021125"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042300498.png" alt="image-20240904230051447"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042301751.png" alt="image-20240904230123696"></p><p>再次测试</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042302281.png" alt="image-20240904230236244"></p><p>注意：Jenkins需要配置git用户名 和 邮箱地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client ~]# su - jenkins</span><br><span class="line">[root@git-client ~]# git config --global user.email "soho@163.com"</span><br><span class="line">[root@git-client ~]# git config --global user.name "soho"</span><br></pre></td></tr></table></figure><h5 id="开始测试"><a href="#开始测试" class="headerlink" title="开始测试"></a>开始测试</h5><p>在任何一台测试都可以。我这里在gitlab机器上面测试： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client ~]# yum -y install git</span><br><span class="line">[root@git-client ~]# git config --global user.email "fei@163.com"</span><br><span class="line">[root@git-client ~]# git config --global user.name "fei"</span><br><span class="line">[root@git-client ~]# ssh-keygen #生成秘钥 </span><br><span class="line">[root@git-client ~]# cat .ssh/id_rsa.pub #查看生成的公钥添加到gitlab里面去</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339457522-e0dc8b3c-4cd9-4dec-81ff-9526fca3a1f4.png#averageHue=%23fcf9f8&clientId=u906c2411-8505-4&from=paste&id=u9473ed30&originHeight=655&originWidth=1312&originalType=url&ratio=1&rotation=0&showTitle=false&size=79132&status=done&style=none&taskId=u1d4bd9cc-a9e6-4a97-b876-a353a31c62c&title=" alt="image.png"><br>先克隆一下仓库 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client ~]# git clone git@192.168.91.168:root/cloudweb.git</span><br><span class="line">[root@git-client ~]# cd cloudweb</span><br><span class="line">[root@gitlab-server cloudweb]# vi src/main/webapp/index.jsp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339457611-c7cd98b1-81b3-43c5-b131-6f7150447207.png#averageHue=%230b0807&clientId=u906c2411-8505-4&from=paste&id=uaed1fbaf&originHeight=471&originWidth=1148&originalType=url&ratio=1&rotation=0&showTitle=false&size=57180&status=done&style=none&taskId=ub6d5ec08-2b3c-4b51-b844-da79b2c366c&title=" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client cloudweb]# git add *</span><br><span class="line">[root@git-client cloudweb]# git commit -m "用户名 和 密码"</span><br><span class="line">[root@git-client cloudweb]# git push origin main</span><br></pre></td></tr></table></figure><p><strong>返回到jenkins页面查看是否自动发布</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339457837-da51c7ad-d30b-47df-a527-33a19f6ec5f1.png#averageHue=%23f9f7f7&clientId=u906c2411-8505-4&from=paste&id=u660d37c6&originHeight=735&originWidth=830&originalType=url&ratio=1&rotation=0&showTitle=false&size=83684&status=done&style=none&taskId=uead1a787-5533-4fba-8fcc-64aa8630aec&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339457884-662e646b-17aa-4da0-b8d1-80a81bacf6c4.png#averageHue=%23f8f8f8&clientId=u906c2411-8505-4&from=paste&id=uf5c6d881&originHeight=814&originWidth=1154&originalType=url&ratio=1&rotation=0&showTitle=false&size=58919&status=done&style=none&taskId=u855574ed-2c84-4c67-864f-91e7126887b&title=" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins easy-springmvc-maven]# cd /root/.jenkins/workspace/test3</span><br><span class="line">[root@jenkins test3]# ls</span><br><span class="line">pom.xml  README.md  src  target</span><br></pre></td></tr></table></figure><p>访问tomcat页面，验证：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339457945-39707c2f-1640-4b42-b939-da12b60842f4.png#averageHue=%23fbf4f3&clientId=u906c2411-8505-4&from=paste&id=u14aa3013&originHeight=305&originWidth=876&originalType=url&ratio=1&rotation=0&showTitle=false&size=32046&status=done&style=none&taskId=u5be31ed1-73a7-43c8-aba1-fb10902abea&title=" alt="image.png"></p><h5 id="基于Git参数化自动构建项目"><a href="#基于Git参数化自动构建项目" class="headerlink" title="基于Git参数化自动构建项目"></a>基于Git参数化自动构建项目</h5><p>Gitlab仓库中有测试项目：github同步过来的<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339458793-75860ac5-6ced-48ad-88ba-255ae90736ce.png#averageHue=%23f9f8f8&clientId=u906c2411-8505-4&from=paste&id=u6fd87062&originHeight=799&originWidth=1664&originalType=url&ratio=1&rotation=0&showTitle=false&size=106320&status=done&style=none&taskId=u7c287d42-8c3e-4ec2-ac8f-8943f367541&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339458960-29b3f694-a3e6-4287-be24-1836ead55d1f.png#averageHue=%23f9f8f7&clientId=u906c2411-8505-4&from=paste&id=u8ad800bf&originHeight=850&originWidth=1709&originalType=url&ratio=1&rotation=0&showTitle=false&size=130778&status=done&style=none&taskId=u6b010326-64c7-482e-8abb-abf7753bedb&title=" alt="image.png"><br>Jenkins配置：<br>修改原来的”test3”项目：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339458921-bb9fd087-b3e9-42e1-8b26-6a5015b4497a.png#averageHue=%23f9f8f8&clientId=u906c2411-8505-4&from=paste&id=uab5ba6f1&originHeight=697&originWidth=1380&originalType=url&ratio=1&rotation=0&showTitle=false&size=55227&status=done&style=none&taskId=u859da46f-5cdd-440f-96d8-6ebeda874c0&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1671004781816-03fd5b23-070b-4ab1-8659-51181c036fb5.png#averageHue=%23f9f8f8&clientId=uf10e4cac-5303-4&from=paste&height=558&id=uc427b370&originHeight=698&originWidth=1227&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39176&status=done&style=none&taskId=ufae10fdf-4362-4747-88e7-84f29390d2d&title=&width=981.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339458944-e8f8d880-5157-4679-a864-12b290e77111.png#averageHue=%23f8f8f8&clientId=u906c2411-8505-4&from=paste&id=u25ba60a4&originHeight=319&originWidth=1230&originalType=url&ratio=1&rotation=0&showTitle=false&size=20207&status=done&style=none&taskId=ua7e03506-261b-44c6-99eb-92466249ea0&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339459581-8f071137-bb20-49df-81e1-14b017130b17.png#averageHue=%23f8f8f8&clientId=u906c2411-8505-4&from=paste&id=u36572c38&originHeight=542&originWidth=1210&originalType=url&ratio=1&rotation=0&showTitle=false&size=40524&status=done&style=none&taskId=u9158ebf4-ff9f-4e86-b48f-940adf3d9a9&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652339459775-2f398091-f525-43dd-9bc3-9c3b614f242e.png#averageHue=%23f9f8f8&clientId=u906c2411-8505-4&from=paste&id=uf61f52e5&originHeight=752&originWidth=1377&originalType=url&ratio=1&rotation=0&showTitle=false&size=66157&status=done&style=none&taskId=u570ab265-1e87-46ab-8b03-e367300fd4a&title=" alt="image.png"><br>测试：<br>推送代码，打tag。代码也会自动构建；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Gitlab" scheme="https://l66stbz.github.io/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins结合Ansible实战</title>
    <link href="https://l66stbz.github.io/2024/09/06/Jenkins%E7%BB%93%E5%90%88Ansible/Jenkins%E7%BB%93%E5%90%88Ansible%E5%AE%9E%E6%88%98/"/>
    <id>https://l66stbz.github.io/2024/09/06/Jenkins%E7%BB%93%E5%90%88Ansible/Jenkins%E7%BB%93%E5%90%88Ansible%E5%AE%9E%E6%88%98/</id>
    <published>2024-09-06T13:50:00.000Z</published>
    <updated>2024-09-07T02:56:35.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Jenkins机器安装ansbile"><a href="#Jenkins机器安装ansbile" class="headerlink" title="Jenkins机器安装ansbile"></a>Jenkins机器安装ansbile</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# yum -y install epel-release ; yum -y install ansible</span><br><span class="line">[root@jenkins ~]# ansible --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23214851/1679016832101-f7861920-12df-4400-a30b-8203947a4d29.png#averageHue=%230e0c0b&clientId=ubc832016-903d-4&from=paste&height=214&id=u7abac654&originHeight=267&originWidth=1635&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=33085&status=done&style=none&taskId=u0332b32c-23f1-4bf9-ab82-7370fb1b97e&title=&width=1308" alt="image.png"></p><h2 id="配置ansible主机清单"><a href="#配置ansible主机清单" class="headerlink" title="配置ansible主机清单"></a>配置ansible主机清单</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# cat /etc/hosts</span><br><span class="line">192.168.91.135 tomcat1</span><br><span class="line">[root@jenkins ~]# cat /etc/ansible/hosts</span><br><span class="line">[tomcat-server]</span><br><span class="line">tomcat1</span><br><span class="line">[root@jenkins ~]# ssh-keygen  #一路回车</span><br><span class="line">[root@jenkins ~]# ssh-copy-id  tomcat1</span><br><span class="line">[root@jenkins ~]# ansible  tomcat1 -m ping</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652604647061-95d77ff5-08db-41f1-a036-668471340993.png#averageHue=%23111111&clientId=u79cad725-0258-4&from=paste&height=258&id=uaf063a20&originHeight=323&originWidth=1578&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24656&status=done&style=none&taskId=u0aac4999-6c9d-4deb-9d9e-62104b15a2a&title=&width=1262.4" alt="image.png"></p><h2 id="jenkins安装ansible插件"><a href="#jenkins安装ansible插件" class="headerlink" title="jenkins安装ansible插件"></a>jenkins安装ansible插件</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652603544389-7267f901-0756-4e88-b959-f3eed81c653a.png#averageHue=%23fbfbfb&clientId=u79cad725-0258-4&from=paste&height=318&id=u47daa618&originHeight=398&originWidth=1106&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35947&status=done&style=none&taskId=uc1aac753-2897-4b54-bd73-30e0747f5d5&title=&width=884.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652603568650-04b8061c-d6d4-4a09-9085-c31dc44dd169.png#averageHue=%23fdfbfa&clientId=u79cad725-0258-4&from=paste&height=488&id=ub4a91851&originHeight=610&originWidth=784&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49053&status=done&style=none&taskId=u8ea64723-e064-460d-b448-ee16b2398fb&title=&width=627.2" alt="image.png"></p><h2 id="jenkins配置ansible工具"><a href="#jenkins配置ansible工具" class="headerlink" title="jenkins配置ansible工具"></a>jenkins配置ansible工具</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652603669517-940d69e3-a6f5-4eea-aef2-250f4ae62778.png#averageHue=%23fdfcfc&clientId=u79cad725-0258-4&from=paste&height=550&id=u5db17df4&originHeight=687&originWidth=741&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27373&status=done&style=none&taskId=u8eeda135-f5d3-40b4-8901-78cb798f53c&title=&width=592.8" alt="image.png"></p><h2 id="Jenkins使用ansible命令"><a href="#Jenkins使用ansible命令" class="headerlink" title="Jenkins使用ansible命令"></a>Jenkins使用ansible命令</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652603730238-be015a61-17ad-48c4-b9f8-5d2747a4ace1.png#averageHue=%23f09d80&clientId=u79cad725-0258-4&from=paste&height=466&id=u8c01a436&originHeight=583&originWidth=835&originalType=binary&ratio=1&rotation=0&showTitle=false&size=73081&status=done&style=none&taskId=u57b34db4-d765-422a-8152-c8a85ae76d2&title=&width=668" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652604195896-759d4b45-a307-4dc8-a5eb-a5e9caba8c21.png#averageHue=%23f6f5f4&clientId=u79cad725-0258-4&from=paste&height=522&id=ubc31d2e9&originHeight=653&originWidth=599&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60350&status=done&style=none&taskId=ub7909703-beb7-4fc4-86e3-c81d40306b3&title=&width=479.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652604809053-a306df5b-51c2-4494-a070-4df4a6433ade.png#averageHue=%23f8f6f5&clientId=u79cad725-0258-4&from=paste&height=521&id=vtvi8&originHeight=651&originWidth=850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50795&status=done&style=none&taskId=u8f44598c-a064-45d1-8c47-6acc896abcf&title=&width=680" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652604830834-831ca24a-7523-47de-9928-7b56ccb3c504.png#averageHue=%23f9f8f7&clientId=u79cad725-0258-4&from=paste&height=359&id=aMY20&originHeight=449&originWidth=579&originalType=binary&ratio=1&rotation=0&showTitle=false&size=54310&status=done&style=none&taskId=u7f5e986e-08fb-4321-a3d6-e2c7feaaf1f&title=&width=463.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652604727453-dcdc0fdb-0812-4449-b624-ed23259b9a8a.png#averageHue=%23f9f8f8&clientId=u79cad725-0258-4&from=paste&height=324&id=irwnd&originHeight=405&originWidth=937&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33405&status=done&style=none&taskId=u3ed155c9-1a9d-4992-87d5-67d27676b06&title=&width=749.6" alt="image.png"></p><h2 id="jenkins使用ansible-playbook剧本"><a href="#jenkins使用ansible-playbook剧本" class="headerlink" title="jenkins使用ansible-playbook剧本"></a>jenkins使用ansible-playbook剧本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# cat /etc/ansible/test.yaml </span><br><span class="line">---</span><br><span class="line">- hosts: tomcat-server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: ip</span><br><span class="line">    shell: ip a</span><br><span class="line">    register: result   # 显示结果为"result"</span><br><span class="line">  - debug: var=result  # 将显示结果var赋值给result</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652605596723-393c498f-d5e3-4186-99dc-1a050ef5f35c.png#averageHue=%23f8f7f7&clientId=u79cad725-0258-4&from=paste&height=546&id=u2d7d2823&originHeight=683&originWidth=1020&originalType=binary&ratio=1&rotation=0&showTitle=false&size=66975&status=done&style=none&taskId=u52d22f18-a815-42de-b772-65d70817ae1&title=&width=816" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652607436031-2dcb7e30-c9d0-4180-8460-9987e1b12102.png#averageHue=%23f8f8f7&clientId=u79cad725-0258-4&from=paste&height=518&id=uc278892b&originHeight=648&originWidth=945&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36774&status=done&style=none&taskId=ub106e2ee-930d-4728-951f-e52e6c38068&title=&width=756" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652607665526-d896ed6e-3380-43c2-afb2-b240a7ba9768.png#averageHue=%23f8f8f8&clientId=u79cad725-0258-4&from=paste&height=481&id=ue2cb6dce&originHeight=601&originWidth=1325&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25728&status=done&style=none&taskId=uf237605f-59ce-461f-a1ba-1bbdc58a768&title=&width=1060" alt="image.png"></p><h2 id="jenkins-ansible构建maven项目"><a href="#jenkins-ansible构建maven项目" class="headerlink" title="jenkins+ansible构建maven项目"></a>jenkins+ansible构建maven项目</h2><h3 id="jenkins安装git"><a href="#jenkins安装git" class="headerlink" title="jenkins安装git"></a>jenkins安装git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# yum -y install git</span><br></pre></td></tr></table></figure><h3 id="添加maven和jdk工具"><a href="#添加maven和jdk工具" class="headerlink" title="添加maven和jdk工具"></a>添加maven和jdk工具</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652610261361-8a0f6452-ffe9-428e-968b-cbbf7b1e2db0.png#averageHue=%23fdfafa&clientId=u79cad725-0258-4&from=paste&height=349&id=u363b55d9&originHeight=436&originWidth=1341&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20317&status=done&style=none&taskId=u4b696e70-40de-459b-84ef-a3a52997f88&title=&width=1072.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652610273174-4e16bf3f-503a-4576-aa25-f4a085d28308.png#averageHue=%23fdfcfc&clientId=u79cad725-0258-4&from=paste&height=273&id=uf72f75bb&originHeight=341&originWidth=1173&originalType=binary&ratio=1&rotation=0&showTitle=false&size=12804&status=done&style=none&taskId=uf7bbed60-3642-4a7b-ac55-9fc54f8e187&title=&width=938.4" alt="image.png"></p><h3 id="jenkins配置gitee公钥"><a href="#jenkins配置gitee公钥" class="headerlink" title="jenkins配置gitee公钥"></a>jenkins配置gitee公钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# cat /root/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652609908349-dc52acf4-d8c2-4ace-8da3-80655ecff70d.png#averageHue=%23fcf8f6&clientId=u79cad725-0258-4&from=paste&height=502&id=u2abc66ac&originHeight=627&originWidth=1204&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74242&status=done&style=none&taskId=u123aaa07-2031-4d76-9c56-4778598c330&title=&width=963.2" alt="image.png"></p><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652610074494-3c9b8747-df51-41c1-ab62-87af9530d62f.png#averageHue=%23e9d7b4&clientId=u79cad725-0258-4&from=paste&height=481&id=kWQ49&originHeight=601&originWidth=853&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74664&status=done&style=none&taskId=uca732fed-4cc7-41c8-a9e2-aba82f853b3&title=&width=682.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652611355973-6b7c91f1-3e05-4fff-9e07-4d60f54adccf.png#averageHue=%23f8f8f7&clientId=u8aa8131c-4fd7-4&from=paste&height=436&id=u2c0b83ee&originHeight=545&originWidth=843&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34531&status=done&style=none&taskId=u2521bda8-20ea-4ce1-90a6-f08d716935a&title=&width=674.4" alt="image.png"></p><h3 id="git参数化构建"><a href="#git参数化构建" class="headerlink" title="git参数化构建"></a>git参数化构建</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652611383994-0a35ad2f-3cdb-4e79-87ef-a274b2e8cea2.png#averageHue=%23f9f8f8&clientId=u8aa8131c-4fd7-4&from=paste&height=462&id=ud977b561&originHeight=577&originWidth=846&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34159&status=done&style=none&taskId=u324f9b2e-a796-4922-b5a2-c40e341186d&title=&width=676.8" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# cat /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652609865581-be69c4bb-063f-4891-a237-37aeedb7d2b3.png#averageHue=%23f1f0f0&clientId=u79cad725-0258-4&from=paste&height=377&id=Kq6v3&originHeight=471&originWidth=997&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23449&status=done&style=none&taskId=u21f6c9a9-8e67-4a2f-a3dd-1b7a8abbf63&title=&width=797.6" alt="image.png"><br>gitee仓库地址：<a href="mailto:git@gitee.com">git@gitee.com</a>:youngfit/easy-springmvc-maven.git<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652611795725-93970a10-b15a-4763-8fbe-2b2564df350e.png#averageHue=%23f8f3f3&clientId=uac85a916-f04e-4&from=paste&height=475&id=u826a3a8b&originHeight=594&originWidth=934&originalType=binary&ratio=1&rotation=0&showTitle=false&size=54431&status=done&style=none&taskId=u7ebdaf60-1e21-44a3-9920-d9521ad8335&title=&width=747.2" alt="image.png"></p><h3 id="配置maven构建参数"><a href="#配置maven构建参数" class="headerlink" title="配置maven构建参数"></a>配置maven构建参数</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652611875771-8a6bc43a-9bd4-4016-af13-79901d34b40d.png#averageHue=%23f8f5f4&clientId=uac85a916-f04e-4&from=paste&height=339&id=ue0598ec0&originHeight=424&originWidth=929&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34663&status=done&style=none&taskId=u4c23fa3b-a5fc-497d-a9d9-3ef90ea1f2e&title=&width=743.2" alt="image.png"></p><h3 id="配置ansible运行指令"><a href="#配置ansible运行指令" class="headerlink" title="配置ansible运行指令"></a>配置ansible运行指令</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652611979490-53f61480-86e1-4928-a31b-88528b9e2e28.png#averageHue=%23f8f1ef&clientId=uac85a916-f04e-4&from=paste&height=484&id=u28a0433e&originHeight=605&originWidth=843&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60777&status=done&style=none&taskId=ue60b19bc-18ea-4883-b42e-83f8395cb28&title=&width=674.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612130399-769218e8-17af-4279-953e-a4e7917abb17.png#averageHue=%23f8f6f6&clientId=uac85a916-f04e-4&from=paste&height=198&id=u070d4281&originHeight=247&originWidth=818&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13305&status=done&style=none&taskId=u1aae56f9-0515-47fb-b1f2-f3c1641de96&title=&width=654.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612028320-22b7d1f0-2d47-4ddc-984f-e97bfb8e4c14.png#averageHue=%23f8f5f5&clientId=uac85a916-f04e-4&from=paste&height=421&id=u089ce852&originHeight=526&originWidth=854&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44082&status=done&style=none&taskId=u7157eb97-ec00-481f-a427-3eb3526dc33&title=&width=683.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612125644-6eba4ed2-d441-4c3c-8a0d-f87c15d95dca.png#averageHue=%23f8f6f6&clientId=uac85a916-f04e-4&from=paste&height=198&id=u573eed75&originHeight=247&originWidth=818&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13305&status=done&style=none&taskId=u0f6d7b27-7395-4595-b58b-7a77ef8c4ea&title=&width=654.4" alt="image.png"><br>–&gt;保存</p><h3 id="tomcat服务器配置"><a href="#tomcat服务器配置" class="headerlink" title="tomcat服务器配置"></a>tomcat服务器配置</h3><h4 id="安装jdk和tomcat"><a href="#安装jdk和tomcat" class="headerlink" title="安装jdk和tomcat"></a>安装jdk和tomcat</h4><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">安装jdk8和tomcat</span><br><span class="line">[root@tomcat local]# cat /etc/profile</span><br><span class="line">TOMCAT_HOME=/data/application/tomcat</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">MAVEN_HOME=/usr/local/java/maven</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$MAVEN_HOME/bin</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br></pre></td></tr></table></figure><h4 id="配置脚本"><a href="#配置脚本" class="headerlink" title="配置脚本"></a>配置脚本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat local]# cat /opt/script/app-jenkins.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">本脚本适用于jenkins持续集成，实现备份war包到代码更新上线！使用时请注意全局变量。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">================</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Defining variables</span></span><br><span class="line">export JAVA_HOME=/usr/local/java</span><br><span class="line">webapp_path="/usr/local/tomcat/webapps"</span><br><span class="line">tomcat_run="/usr/local/tomcat/bin"</span><br><span class="line">updata_path="/data/update/`date +%F-%T`"</span><br><span class="line">backup_path="/data/backup/`date +%F-%T`"</span><br><span class="line">tomcat_pid=`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`</span><br><span class="line">files_dir="easy-springmvc-maven"</span><br><span class="line">files="easy-springmvc-maven.war"</span><br><span class="line">job_path="/root/upload"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">Preparation environment</span></span><br><span class="line">echo "Creating related directory"</span><br><span class="line">mkdir -p $updata_path</span><br><span class="line">mkdir -p $backup_path</span><br><span class="line"></span><br><span class="line">echo "Move the uploaded war package to the update directory"</span><br><span class="line">mv $job_path/$files $updata_path</span><br><span class="line"></span><br><span class="line">echo "========================================================="</span><br><span class="line">cd /opt</span><br><span class="line">echo "Backing up java project"</span><br><span class="line">if [ -f $webapp_path/$files ];then</span><br><span class="line">tar czf $backup_path/`date +%F-%H`.tar.gz $webapp_path</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "打包失败，自动退出"</span><br><span class="line">exit 1</span><br><span class="line">else</span><br><span class="line">echo "Checking if tomcat is started"</span><br><span class="line">if [ -n "$tomcat_pid" ];then</span><br><span class="line">kill -9 $tomcat_pid</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "tomcat关闭失败，将会自动退出"</span><br><span class="line">exit 2</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">cd $webapp_path</span><br><span class="line">rm -rf $files &amp;&amp; rm -rf $files_dir</span><br><span class="line">cp $updata_path/$files $webapp_path</span><br><span class="line">cd /opt</span><br><span class="line"><span class="meta">$</span><span class="bash">tomcat_run/startup.sh</span></span><br><span class="line">sleep 5</span><br><span class="line">echo "显示tomcat的pid"</span><br><span class="line">echo "`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`"</span><br><span class="line">echo "tomcat startup"</span><br><span class="line">echo "请手动查看tomcat日志。脚本将会自动退出"</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">echo "Checking if tomcat is started"</span><br><span class="line">        if [ -n "$tomcat_pid" ];then</span><br><span class="line">        kill -9 $tomcat_pid</span><br><span class="line">                if [ $? -ne 0 ];then</span><br><span class="line">                echo "tomcat关闭失败，将会自动退出"</span><br><span class="line">                       exit 2</span><br><span class="line">                fi</span><br><span class="line">        fi</span><br><span class="line">cp $updata_path/$files $webapp_path</span><br><span class="line"><span class="meta">$</span><span class="bash">tomcat_run/startup.sh</span></span><br><span class="line">        sleep 5</span><br><span class="line">        echo "显示tomcat的pid"</span><br><span class="line">        echo "`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`"</span><br><span class="line">        echo "tomcat startup"</span><br><span class="line">        echo "请手动查看tomcat日志。脚本将会自动退出"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="构建测试"><a href="#构建测试" class="headerlink" title="构建测试"></a>构建测试</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612259599-3cc9d776-4b04-45e8-bff1-039e611e8a9f.png#averageHue=%23f7f6f6&clientId=uac85a916-f04e-4&from=paste&height=328&id=ueb8dc7d2&originHeight=410&originWidth=708&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33586&status=done&style=none&taskId=u03e1d9ee-3c0c-46dd-86c9-3e3295d894c&title=&width=566.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612288024-409c6f1a-1b92-41ac-9115-1754b8a3b24b.png#averageHue=%23f8f7f7&clientId=uac85a916-f04e-4&from=paste&height=192&id=u3c072fde&originHeight=240&originWidth=988&originalType=binary&ratio=1&rotation=0&showTitle=false&size=8407&status=done&style=none&taskId=u737b0840-f7d6-49bb-9ff7-aa6ab5a96fd&title=&width=790.4" alt="image.png"></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612332300-e4b305a3-214a-467f-b72d-ceecb03c64ad.png#averageHue=%23191512&clientId=uac85a916-f04e-4&from=paste&height=214&id=u8f55922b&originHeight=268&originWidth=1892&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51166&status=done&style=none&taskId=uf98bb5b4-0429-49f1-9cf6-2ce168b520c&title=&width=1513.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612358182-e6386625-b08f-4a44-b494-ec6bb5cab75a.png#averageHue=%23f9f8f7&clientId=uac85a916-f04e-4&from=paste&height=130&id=u8bd03ab1&originHeight=163&originWidth=598&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13201&status=done&style=none&taskId=u8f7b7bc2-a718-45f3-9e2a-4955a822fe2&title=&width=478.4" alt="image.png"><br>来一次版本回退试试<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612541841-e3e2a74b-797d-4641-a24a-1819f77cecb7.png#averageHue=%23f7f7f7&clientId=uac85a916-f04e-4&from=paste&height=294&id=ud5d87799&originHeight=368&originWidth=793&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31992&status=done&style=none&taskId=ua322e0e5-a834-4dba-8456-d696291520b&title=&width=634.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1652612529056-cbf855c2-df50-47cf-b35a-91c305ac3505.png#averageHue=%23f9f9f8&clientId=uac85a916-f04e-4&from=paste&height=136&id=ubacbff0d&originHeight=170&originWidth=652&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14509&status=done&style=none&taskId=u9037453f-e71b-4c6f-9c80-2a4034fce5f&title=&width=521.6" alt="image.png"><br>没毛病</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Ansible" scheme="https://l66stbz.github.io/tags/Ansible/"/>
    
      <category term="Jenkins" scheme="https://l66stbz.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins_CI_CD应用</title>
    <link href="https://l66stbz.github.io/2024/09/05/Jenkins_CI_CD%E5%BA%94%E7%94%A8/Jenkins_CI_CD%E5%BA%94%E7%94%A8/"/>
    <id>https://l66stbz.github.io/2024/09/05/Jenkins_CI_CD%E5%BA%94%E7%94%A8/Jenkins_CI_CD%E5%BA%94%E7%94%A8/</id>
    <published>2024-09-05T13:50:00.000Z</published>
    <updated>2024-09-07T03:00:14.263Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>什么是CI/CD</strong>：持续集成/持续发布—开发(git) –&gt;git主库–&gt;jenkins(git+jdk+tomcat+maven打包+测试）–&gt;发布到tomcat服务器。</p><p>Jenkins是一个功能强大的应用程序，允许<strong>持续集成和持续交付项目</strong>，无论用的是什么平台。这是一个免费的源代码，可以处理任何类型的构建或持续集成。集成Jenkins可以用于一些测试和部署技术。</p><p>为什么要 CI / CD 方法</p><p>简介</p><p>软件开发的连续方法基于自动执行脚本，以最大限度地减少在开发应用程序时引入错误的可能性。从新代码的开发到部署，它们需要较少的人为干预甚至根本不需要干预。</p><p>它涉及在每次小迭代中不断构建，测试和部署代码更改，从而减少基于有缺陷或失败的先前版本开发新代码的机会。</p><p>这种方法有三种主要方法，每种方法都根据最适合您的策略进行应用。</p><p><strong>持续集成</strong>(Continuous Integration, CI):  代码合并，构建，部署，测试都在一起，不断地执行这个过程，并对结果反馈。</p><p><strong>持续部署</strong>(Continuous Deployment, CD):　部署到测试环境、预生产环境/灰度环境、生产环境。</p><p><strong>持续交付</strong>(Continuous Delivery, CD):  将最终产品发布到生产环境、给用户使用。</p><h3 id="一、jenkins介绍"><a href="#一、jenkins介绍" class="headerlink" title="一、jenkins介绍"></a>一、jenkins介绍</h3><p>Jenkins是帮我们将代码进行统一的编译打包、还可以放到tomcat容器中进行发布。<br>我们通过配置，将以前：编译、打包、上传、部署到Tomcat中的过程交给Jenkins，Jenkins通过给定的代码地址URL（代码仓库地址），将代码拉取到其“宿主服务器”（Jenkins的安装位置），进行编译、打包和发布到Tomcat容器中。</p><h5 id="1、Jenkins概述"><a href="#1、Jenkins概述" class="headerlink" title="1、Jenkins概述"></a>1、Jenkins概述</h5><p>​    是一个开源的、提供友好操作界面的持续集成(CI)工具，主要用于持续、自动的构建的一些定时执行的任务。Jenkins用Java语言编写，可在Tomcat等流行的容器中运行，也可独立运行。</p><p>jenkins通常与版本管理工具(SCM)、构建工具结合使用；常用的版本控制工具有SVN、GIT。jenkins构建工具有Maven、Ant、Gradle。</p><h5 id="2、Jenkins目标"><a href="#2、Jenkins目标" class="headerlink" title="2、Jenkins目标"></a>2、Jenkins目标</h5><p>① 持续、自动地构建/测试软件项目。</p><p>② 监控软件开发流程，快速问题定位及处理，提高开发效率。</p><h5 id="3、Jenkins特性"><a href="#3、Jenkins特性" class="headerlink" title="3、Jenkins特性"></a>3、Jenkins特性</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">① 开源的java语言开发持续集成工具，支持CI，CD。</span><br><span class="line">② 易于安装部署配置：可通过yum安装,或下载war包以及通过docker容器等快速实现安装部署，可方便web界面配置管理。</span><br><span class="line">③ 消息通知及测试报告：集成RSS/E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知，生成JUnit/TestNG测试报告。</span><br><span class="line">④ 分布式构建：支持Jenkins能够让多台计算机一起构建/测试。</span><br><span class="line">⑤ 文件识别:Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等。</span><br><span class="line">⑥ 丰富的插件支持:支持扩展插件，你可以开发适合自己团队使用的工具，如git，svn，maven，docker等。</span><br></pre></td></tr></table></figure><p>工作流程图:</p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/1569246908031.png#id=pHA8p&originHeight=338&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">测试环境中：</span><br><span class="line">1.开发者会将代码上传到版本库中。</span><br><span class="line">2.jenkins通过配置版本库的连接地址，获取到源代码。</span><br><span class="line">3.jenkins获取到源代码之后通过参数化构建(或者触发器)开始编译打包。</span><br><span class="line">4.jenkins通过调用maven（Ant或者Gradle）命令实现编译打包过程。</span><br><span class="line">5.生成的war包通过ssh插件上传到远程tomcat服务器中通过shell脚本自动发布项目。</span><br><span class="line"></span><br><span class="line">生产环境：</span><br><span class="line">测试环境将项目测试没问题后，将项目推送到线上正式环境。</span><br><span class="line">1.可以选择手动。</span><br><span class="line">2.也可以通过调用脚本推送过去。</span><br></pre></td></tr></table></figure><h5 id="4、产品发布流程"><a href="#4、产品发布流程" class="headerlink" title="4、产品发布流程"></a>4、产品发布流程</h5><p>产品设计成型 -&gt; 开发人员开发代码 -&gt; 测试人员测试功能 -&gt; 运维人员发布上线</p><p>持续集成（Continuous integration，简称CI）</p><p>持续部署（continuous deployment）</p><p>持续交付（Continuous delivery）</p><h3 id="二、部署应用Jenkins-Gitlub-Tomcat实战"><a href="#二、部署应用Jenkins-Gitlub-Tomcat实战" class="headerlink" title="二、部署应用Jenkins+Gitlub+Tomcat实战"></a>二、部署应用Jenkins+Gitlub+Tomcat实战</h3><p>准备环境:</p><p>两台机器</p><p>git-server    —-<a href="https://github.com/bingyue/easy-springmvc-maven" target="_blank" rel="noopener">https://github.com/bingyue/easy-springmvc-maven</a></p><p>jenkins-server    —192.168.246.212—最好是3个G以上</p><h5 id="java-server-—–192-168-246-210"><a href="#java-server-—–192-168-246-210" class="headerlink" title="java-server   —–192.168.246.210"></a>java-server   —–192.168.246.210</h5><p><a href="https://github.com/bingyue/easy-springmvc-maven" target="_blank" rel="noopener">https://github.com/bingyue/easy-springmvc-maven</a></p><h3 id="Jenkins2-303-1版本安装"><a href="#Jenkins2-303-1版本安装" class="headerlink" title="Jenkins2.303.1版本安装"></a>Jenkins2.303.1版本安装</h3><h4 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1. 下载安装包"></a>1. 下载安装包</h4><p>百度搜索openjdk11、tomcat、maven、jenkins<br>openjdk11经过测试之后，不能运行当前版本jenkins。我这里换成了jdk1.8的<br>jdk官网：<a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/downloads/</a><br>jenkins官网：<a href="https://www.jenkins.io/" target="_blank" rel="noopener">https://www.jenkins.io/</a><br>tomcat官网：<a href="https://tomcat.apache.org/" target="_blank" rel="noopener">https://tomcat.apache.org/</a><br>maven官网：<a href="https://maven.apache.org/" target="_blank" rel="noopener">https://maven.apache.org/</a></p><p><strong>因为jenkins本身BUG比较多的原因，在做以下些许实验时会出现很多报错属于正常现象。当然也可以解决。</strong></p><p><strong>也可以选取别的jenkins版本。本人在完成以后又采用了别的版本进行尝试，效果还不错。</strong></p><p><strong>使用的是yum安装的jenkins2.475，jdk17，编译安装Maven3.9.9。</strong></p><p><strong>最终在构建build过程可能会报一个问题，说插件版本怎么，什么6版本7版本什么的等等。</strong></p><p><strong>如果出现该问题，可以去管理页面工具内，将Maven修改为自动安装，版本选择3.9.9，jdk可以自己在jenkins机器上再在opt下解压一个jdk11版本，不需要配置环境变量，然后jdk安装选择自己安装，路径就写刚刚opt下解压的jdk家目录。然后应用保存，再次构建build，success！！！</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# wget https://get.jenkins.io/war/2.461/jenkins.war</span><br><span class="line">[root@jenkins ~]# wget https://downloads.apache.org/maven/maven-3/3.8.2/binaries/apache-maven-3.8.2-bin.tar.gz</span><br><span class="line">[root@jenkins ~]# wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.45/bin/apache-tomcat-8.5.45.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]<span class="comment"># ls</span></span><br><span class="line">apache-maven-3.8.5-bin.tar.gz  apache-tomcat-8.5.45.tar.gz  jdk-11.0.20_linux-x64_bin.tar.gz  jenkins.war</span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># tar xf apache-maven-3.8.5-bin.tar.gz  -C /usr/local/</span></span><br><span class="line">[root@jenkins ~]<span class="comment"># tar xf jdk-11.0.20_linux-x64_bin.tar.gz  -C /usr/local/</span></span><br><span class="line">[root@jenkins ~]<span class="comment"># tar xf apache-tomcat-8.5.45.tar.gz  -C /usr/local/</span></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># mv apache-maven-3.8.5/ maven</span></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># mv apache-tomcat-8.5.45/  tomcat</span></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># mv jdk-11.0.20/ java</span></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># cat &gt;&gt; /etc/profile.d/java.sh &lt;&lt;-EOF</span></span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/java</span><br><span class="line">MAVEN_HOME=/usr/<span class="built_in">local</span>/maven</span><br><span class="line">PATH=\<span class="variable">$PATH</span>:\<span class="variable">$JAVA_HOME</span>/bin:\<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL JAVA_HOME MAVEN_HOME</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># source /etc/profile.d/java.sh </span></span><br><span class="line"></span><br><span class="line">[root@jenkins bin]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">"11.0.20"</span> 2023-07-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment 18.9 (build 11.0.20+9-LTS-256)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.20+9-LTS-256, mixed mode)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># mvn -v</span></span><br><span class="line">Apache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0)</span><br><span class="line">Maven home: /usr/<span class="built_in">local</span>/maven</span><br><span class="line">Java version: 17.0.12, vendor: Oracle Corporation, runtime: /usr/<span class="built_in">local</span>/java</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"3.10.0-1160.el7.x86_64"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></span><br><span class="line"></span><br><span class="line">[root@jenkins <span class="built_in">local</span>]<span class="comment"># cd ~</span></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># rm -rf /usr/local/tomcat/webapps/*</span></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># cp jenkins.war  /usr/local/tomcat/webapps/</span></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]<span class="comment"># /usr/local/tomcat/bin/catalina.sh  start</span></span><br><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/<span class="built_in">local</span>/java</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Using CATALINA_OPTS:   </span><br><span class="line">Tomcat started.</span><br><span class="line"></span><br><span class="line">    [root@jenkins ~]<span class="comment"># yum install fontconfig  -y</span></span><br></pre></td></tr></table></figure><blockquote><p>Jenkins 中插件依赖 <code>fontconfig</code> 来渲染字体。<code>fontconfig</code> 是一个库，主要用于管理和配置系统中的字体，使得应用程序能够正确地找到和使用字体文件。</p></blockquote><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409030943902.png" alt="image-20240903094334603"></p><h4 id="2-访问登录"><a href="#2-访问登录" class="headerlink" title="2. 访问登录"></a>2. 访问登录</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409030945715.png" alt="image-20240903094549627"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409030947165.png" alt="image-20240903094719930"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409030949929.png" alt="image-20240903094913864"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312227364.png" alt="image-20240831222710254"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312253909.png" alt="image-20240831225301810"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312253474.png" alt="image-20240831225337384"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312254272.png" alt="image-20240831225404169"></p><blockquote><p>Username:admin</p><p>password：cat ~/.jenkins/secrets/initialAdminPassword<br>9ab0d5cf97d94dadbacfe5aa588f0c61</p></blockquote><h4 id="3-插件安装"><a href="#3-插件安装" class="headerlink" title="3. 插件安装"></a>3. 插件安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">安装插件:</span><br><span class="line">所需的插件:</span><br><span class="line">• Maven插件 Maven Integration plugin</span><br><span class="line">• 发布插件 Deploy to container Plugin</span><br><span class="line">需要安装插件如下：</span><br><span class="line">安装插件</span><br><span class="line">`Deploy to container    ---支持自动化代码部署到tomcat容器`</span><br><span class="line">`GIT plugin  可能已经安装,可在已安装列表中查询出来`</span><br><span class="line">`Maven Integration   jenkins利用Maven编译，打包所需插件`</span><br><span class="line">`Publish Over SSH  通过ssh连接`</span><br><span class="line">`ssh  插件`</span><br><span class="line"></span><br><span class="line">安装过程:</span><br><span class="line">系统管理---&gt;插件管理----&gt;可选插件---&gt;过滤Deploy to container----&gt;勾选---&gt;直接安装</span><br></pre></td></tr></table></figure><ol><li><strong>选择Jenkins配置管理</strong></li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312256265.png" alt="image-20240831225603191"></p><ol start="2"><li>==点击完成以后，进入Jenkins配置。往下拉找到<strong><code>Plugins</code></strong>==</li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312258924.png" alt="image-20240831225826850"></p><ol start="3"><li><strong>更换国内插件下载地址</strong></li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312303909.png" alt="image-20240831230303843"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312304600.png" alt="image-20240831230446526"></p><blockquote><p>插件链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a> </p></blockquote><ol start="4"><li><strong>更新插件</strong></li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312306862.png" alt="image-20240831230629797"></p><ol start="5"><li><strong>下载插件</strong></li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202408312308451.png" alt="image-20240831230847378"></p><h5 id="5-邮箱配置-可选"><a href="#5-邮箱配置-可选" class="headerlink" title="5.邮箱配置(可选)"></a>5.邮箱配置(可选)</h5><p>安装邮件插件，才能确保邮件发送成功。否则可能不会发送邮件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email Extension Template</span><br><span class="line">Email Ext Recipients Column</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052117930.png" alt="image-20240605211735834"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052118645.png" alt="image-20240605211806552"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052119412.png" alt="image-20240605211939322"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052128190.png" alt="image-20240605212833063"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052125567.png" alt="image-20240605212526477"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052131280.png" alt="image-20240605213106207"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052132032.png" alt="image-20240605213200921"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052144905.png" alt="image-20240605214417819"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052144361.png" alt="image-20240605214458248"></p><h5 id="6-配置Jenkins私钥"><a href="#6-配置Jenkins私钥" class="headerlink" title="6.配置Jenkins私钥"></a>6.配置Jenkins私钥</h5><p>​    说明：Jenkins需要去Gitlab中拉取代码，Jenkins服务器的公钥需要配置Gitlab SSH中，Jenkins私钥配置Jenkins服务中，目的是为了实现Jenkins服务加载到本地私钥，实现服务之间密钥认证。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# ssh-keygen</span><br><span class="line">[root@jenkins ~]# cat /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052152131.png" alt="image-20240605215247049"></p><h5 id="7-添加后端服务器"><a href="#7-添加后端服务器" class="headerlink" title="7.添加后端服务器"></a>7.添加后端服务器</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 公钥发送到后端服务器，才能实现免密；</span></span><br><span class="line">[root@jenkins ~]<span class="comment"># ssh-copy-id -i root@192.168.153.194</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052219851.png" alt="image-20240605221943775"></p><h5 id="8-配置JDK和Maven"><a href="#8-配置JDK和Maven" class="headerlink" title="8.配置JDK和Maven"></a>8.配置JDK和Maven</h5><p>虽然Jenkins服务器上，已经安装了JDK和maven工具，但是，还需要在Jenkins服务中，进行配置；</p><p>这样Jenkins才能自动化的使用两个工具；</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052230149.png" alt="image-20240605223015075"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052230960.png" alt="image-20240605223041884"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052233436.png" alt="image-20240605223326356"></p><p>JDK配置</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052234005.png" alt="image-20240605223430949"></p><p>maven配置</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052237362.png" alt="image-20240605223711300"></p><p><strong>如果有多个jdk和maven需要配置的话，可以点击新增jdk或者新增maven</strong></p><p>==========================</p><h5 id="9-构建发布任务"><a href="#9-构建发布任务" class="headerlink" title="9.构建发布任务"></a>9.构建发布任务</h5><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052241569.png" alt="image-20240605224145476"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052243447.png" alt="image-20240605224326357"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052253276.png" alt="image-20240605225328164"></p><p>拉取代码环节</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052251818.png" alt="image-20240605225142703"></p><p><a href="https://github.com/bingyue/easy-springmvc-maven" target="_blank" rel="noopener">https://github.com/bingyue/easy-springmvc-maven</a><br>或者用以下链接<br><a href="https://gitee.com/youngfit/easy-springmvc-maven.git" target="_blank" rel="noopener">https://gitee.com/youngfit/easy-springmvc-maven.git</a></p><p>这里是我再github上，找的一个开源项目。能进行编译打包<br>如果jenkins服务器还未安装git客户端，请先安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y git</span><br></pre></td></tr></table></figure><p>编译打包环节</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052256521.png" alt="image-20240605225610418"></p><p>测试拉取代码、编译打包环节</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052310474.png" alt="image-20240605231009330"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052310568.png" alt="image-20240605231049474"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052311123.png" alt="image-20240605231132040"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052314164.png" alt="image-20240605231442049"></p><p><strong>持续发布</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052315434.png" alt="image-20240605231556343"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052316155.png" alt="image-20240605231625066"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406052338169.png" alt="image-20240605233844052"></p><blockquote><p>如果有多个后端服务器，可以点击 ADD server进行添加</p></blockquote><h5 id="10-java服务器添加脚本"><a href="#10-java服务器添加脚本" class="headerlink" title="10.java服务器添加脚本"></a>10.java服务器添加脚本</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 上传jdk</span></span><br><span class="line">[root@java-server ~]# tar xzf jdk-8u191-linux-x64.tar.gz -C /usr/local/</span><br><span class="line">[root@java-server ~]# cd /usr/local/</span><br><span class="line">[root@java-server local]# mv jdk1.8.0_191/ java</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载tomcat</span></span><br><span class="line">[root@java-server ~]# wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.42/bin/apache-tomcat-8.5.42.tar.gz</span><br><span class="line">[root@java-server ~]# tar xzf apache-tomcat-8.5.42.tar.gz -C /usr/local</span><br><span class="line">[root@java-server ~]# cd /usr/local</span><br><span class="line">[root@java-server local]# mv apache-tomcat-8.5.42/ tomcat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境变量</span></span><br><span class="line">[root@java-server local]# vim /etc/profile</span><br><span class="line">export JAVA_HOME=/usr/local/java</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export TOMCAT_HOME=/data/application/tomcat</span><br><span class="line">[root@java-server local]# source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试:</span></span><br><span class="line">[root@java-server local]# java -version </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除tomcat默认发布目录下面的内容:</span></span><br><span class="line">[root@java-server local]# rm -rf /usr/local/tomcat/webapps/*</span><br><span class="line">[root@java-server local]# cd /usr/local/tomcat/webapps/</span><br><span class="line">[root@java-server webapps]# ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建目录和脚本:</span></span><br><span class="line">[root@java-server ~]# mkdir /opt/script  #创建脚本目录</span><br><span class="line">[root@java-server ~]# vim app-jenkins.sh   #创建脚本</span><br><span class="line"><span class="meta">#</span><span class="bash"> 脚本内容在后面：</span></span><br><span class="line">[root@java-server ~]# chmod +x app-jenkins.sh  #添加执行权限</span><br><span class="line">[root@java-server ~]# mv app-jenkins.sh /opt/script/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 脚本内容:</span></span><br><span class="line">[root@java-server script]# cat app-jenkins.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">本脚本适用于jenkins持续集成，实现备份war包到代码更新上线！使用时请注意全局变量。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">================</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Defining variables</span></span><br><span class="line">export JAVA_HOME=/usr/local/java</span><br><span class="line">webapp_path="/usr/local/tomcat/webapps"</span><br><span class="line">tomcat_run="/usr/local/tomcat/bin"</span><br><span class="line">updata_path="/data/update/`date +%F-%T`"</span><br><span class="line">backup_path="/data/backup/`date +%F-%T`"</span><br><span class="line">tomcat_pid=`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`</span><br><span class="line">files_dir="easy-springmvc-maven"</span><br><span class="line">files="easy-springmvc-maven.war"</span><br><span class="line">job_path="/root/upload"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">Preparation environment</span></span><br><span class="line">echo "Creating related directory"</span><br><span class="line">mkdir -p $updata_path</span><br><span class="line">mkdir -p $backup_path</span><br><span class="line"></span><br><span class="line">echo "Move the uploaded war package to the update directory"</span><br><span class="line">mv $job_path/$files $updata_path</span><br><span class="line"></span><br><span class="line">echo "========================================================="</span><br><span class="line">cd /opt</span><br><span class="line">echo "Backing up java project"</span><br><span class="line">if [ -f $webapp_path/$files ];then</span><br><span class="line">tar czf $backup_path/`date +%F-%H`.tar.gz $webapp_path</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "打包失败，自动退出"</span><br><span class="line">exit 1</span><br><span class="line">else</span><br><span class="line">echo "Checking if tomcat is started"</span><br><span class="line">if [ -n "$tomcat_pid" ];then</span><br><span class="line">kill -9 $tomcat_pid</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "tomcat关闭失败，将会自动退出"</span><br><span class="line">exit 2</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">cd $webapp_path</span><br><span class="line">rm -rf $files &amp;&amp; rm -rf $files_dir</span><br><span class="line">cp $updata_path/$files $webapp_path</span><br><span class="line">cd /opt</span><br><span class="line"><span class="meta">$</span><span class="bash">tomcat_run/startup.sh</span></span><br><span class="line">sleep 5</span><br><span class="line">echo "显示tomcat的pid"</span><br><span class="line">echo "`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`"</span><br><span class="line">echo "tomcat startup"</span><br><span class="line">echo "请手动查看tomcat日志。脚本将会自动退出"</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">echo "Checking if tomcat is started"</span><br><span class="line">        if [ -n "$tomcat_pid" ];then</span><br><span class="line">        kill -9 $tomcat_pid</span><br><span class="line">                if [ $? -ne 0 ];then</span><br><span class="line">                echo "tomcat关闭失败，将会自动退出"</span><br><span class="line">                       exit 2</span><br><span class="line">                fi</span><br><span class="line">        fi</span><br><span class="line">cp $updata_path/$files $webapp_path</span><br><span class="line"><span class="meta">$</span><span class="bash">tomcat_run/startup.sh</span></span><br><span class="line">        sleep 5</span><br><span class="line">        echo "显示tomcat的pid"</span><br><span class="line">        echo "`ps -ef | grep tomcat | grep -v grep | awk '&#123;print $2&#125;'`"</span><br><span class="line">        echo "tomcat startup"</span><br><span class="line">        echo "请手动查看tomcat日志。脚本将会自动退出"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h5 id="11-启用邮箱"><a href="#11-启用邮箱" class="headerlink" title="11.启用邮箱"></a>11.启用邮箱</h5><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20210902225124311.png#id=FYeGR&originHeight=348&originWidth=1180&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><h5 id="12-构建项目"><a href="#12-构建项目" class="headerlink" title="12.构建项目"></a>12.构建项目</h5><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20210908135616162.png#id=KdAEl&originHeight=690&originWidth=1032&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20210908135410486.png#id=v6wk4&originHeight=843&originWidth=1516&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><h5 id="13-访问tomcat测试"><a href="#13-访问tomcat测试" class="headerlink" title="13.访问tomcat测试"></a>13.访问tomcat测试</h5><h5 id="14-更新测试"><a href="#14-更新测试" class="headerlink" title="14.更新测试"></a>14.更新测试</h5><p>随便找台机器，作为开发人员</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> https://gitee.com/youngfit/easy-springmvc-maven.git</span></span><br><span class="line">[root@tomcat-server ~]# cd easy-springmvc-maven/</span><br><span class="line">[root@tomcat-server easy-springmvc-maven]# vim src/main/webapp/index.jsp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670918518215-2552f3ca-ca0a-4a47-8b76-009acbafcbd2.png#averageHue=%2319120f&clientId=ue8bb4b21-b411-4&from=paste&height=270&id=ub6d69520&originHeight=337&originWidth=1374&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45475&status=done&style=none&taskId=u1348085e-6537-4a05-82a6-afe703b709b&title=&width=1099.2" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-server easy-springmvc-maven]# git add *</span><br><span class="line">[root@tomcat-server easy-springmvc-maven]# git config --global user.email "feigeyoungfit@163.com"</span><br><span class="line">[root@tomcat-server easy-springmvc-maven]# git config --global user.name "feigeyoungfit"</span><br><span class="line">[root@tomcat-server easy-springmvc-maven]# git commit -m "username &amp; password"</span><br><span class="line">[master 5e9f4fd] username &amp; password</span><br><span class="line"> 1 file changed, 2 insertions(+), 2 deletions(-)</span><br><span class="line">[root@tomcat-server easy-springmvc-maven]# git push origin master</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919912187-f18cd605-47a6-4f10-8a12-ca11021e0e23.png#averageHue=%23e1e0e0&clientId=ue8bb4b21-b411-4&from=paste&height=537&id=ue4e4287b&originHeight=671&originWidth=828&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71982&status=done&style=none&taskId=uf0b6f731-f9a5-425e-9a51-271bd54b105&title=&width=662.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919928266-aa1943a1-8b17-4a64-9e53-2a4fa91bbf92.png#averageHue=%23f9f8f6&clientId=ue8bb4b21-b411-4&from=paste&height=138&id=u6b6d26de&originHeight=172&originWidth=867&originalType=binary&ratio=1&rotation=0&showTitle=false&size=22742&status=done&style=none&taskId=u523f16b2-2c0f-4398-8763-4b2d6d13623&title=&width=693.6" alt="image.png"></p><h5 id="16-准备开源项目"><a href="#16-准备开源项目" class="headerlink" title="16.准备开源项目"></a>16.准备开源项目</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919078484-e544e579-a23f-4806-9af8-c0625b6d369c.png#averageHue=%23fdfbfb&clientId=ue8bb4b21-b411-4&from=paste&height=753&id=u4588efc7&originHeight=941&originWidth=1436&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106808&status=done&style=none&taskId=ucb40a564-95ff-4402-ba46-7a0979e49c1&title=&width=1148.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919234756-2fbc5a36-7d89-4fc0-a874-c4fe88dfa40b.png#averageHue=%23e6e6e5&clientId=ue8bb4b21-b411-4&from=paste&height=542&id=u0ccb950b&originHeight=677&originWidth=1431&originalType=binary&ratio=1&rotation=0&showTitle=false&size=73115&status=done&style=none&taskId=u6b8737ae-ae21-403b-9c44-51a226acaab&title=&width=1144.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919255822-92e587de-9e8e-4ed7-b6da-b9867306135c.png#averageHue=%23fbfafa&clientId=ue8bb4b21-b411-4&from=paste&height=392&id=ub4c62a24&originHeight=490&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=false&size=47692&status=done&style=none&taskId=ucc0c67fa-5f9e-4a51-b054-ade525e3d73&title=&width=997.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919270148-4cbef903-4c46-45ed-aa52-5050b9dbb2ec.png#averageHue=%23fbfaf9&clientId=ue8bb4b21-b411-4&from=paste&height=371&id=ua0e36b8b&originHeight=464&originWidth=1427&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59493&status=done&style=none&taskId=u8e5eb6d2-9958-448a-a909-033584fd918&title=&width=1141.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919311801-1ed69934-9bf2-4ac0-bf64-476be3affd3c.png#averageHue=%23fbf7f4&clientId=ue8bb4b21-b411-4&from=paste&height=372&id=ue6281309&originHeight=465&originWidth=1330&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77373&status=done&style=none&taskId=ue0f2857e-bd61-4872-a256-54de1f07375&title=&width=1064" alt="image.png"><br>随便找台机器，作为开发人员的开发环境，需要安装git，以及配置git邮箱、用户名；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-server tmp]# git clone https://gitee.com/youngfit/testweb.git</span><br><span class="line">[root@tomcat-server tmp]# cd testweb/</span><br></pre></td></tr></table></figure><p>将easy-springmvc-maven-master.zip 源码包，上传到开发人员机器<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919554706-240cfaa3-2ac9-43f1-b76e-c5b493b9684c.png#averageHue=%231a100e&clientId=ue8bb4b21-b411-4&from=paste&height=60&id=u80be9d1b&originHeight=75&originWidth=956&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9004&status=done&style=none&taskId=u09afd9a8-a675-446d-8bc5-537ea9d1b20&title=&width=764.8" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-server testweb]# yum -y install unzip</span><br><span class="line">[root@tomcat-server testweb]# unzip easy-springmvc-maven-master.zip</span><br><span class="line">[root@tomcat-server testweb]# cp -r easy-springmvc-maven-master/* .</span><br><span class="line">cp: overwrite ‘./README.md’? y</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919639327-a296021b-c0c2-4495-bfd4-26b4538475fb.png#averageHue=%23100a09&clientId=ue8bb4b21-b411-4&from=paste&height=66&id=ub370334a&originHeight=82&originWidth=1611&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14170&status=done&style=none&taskId=u6297a9cc-c9cc-472c-9e76-8bdf8f5b8b0&title=&width=1288.8" alt="image.png"><br>因为已经拷贝出来了。删除没用的压缩包、目录、文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-server testweb]# rm -rf easy-springmvc-maven-master easy-springmvc-maven-master.zip </span><br><span class="line">[root@tomcat-server testweb]# ls</span><br><span class="line">pom.xml  README.en.md  README.md  src</span><br><span class="line">[root@tomcat-server testweb]# rm -rf README.en.md </span><br><span class="line">[root@tomcat-server testweb]# ls</span><br><span class="line">pom.xml  README.md  src</span><br><span class="line">[root@tomcat-server testweb]# git add *</span><br><span class="line">[root@tomcat-server testweb]# git commit -m "version1"</span><br><span class="line">[root@tomcat-server testweb]# git push origin master</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919712737-dd65eae8-d3b5-4747-bce8-2b2ad0e6ae05.png#averageHue=%2314110f&clientId=ue8bb4b21-b411-4&from=paste&height=261&id=u362b0106&originHeight=326&originWidth=987&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43757&status=done&style=none&taskId=u0293cfea-497b-4f34-93cd-327b3cdd417&title=&width=789.6" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670919730307-6ed78e76-c901-4f1d-9b7a-61473ef21966.png#averageHue=%23fbf9f7&clientId=ue8bb4b21-b411-4&from=paste&height=459&id=u666e6a25&originHeight=574&originWidth=1181&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57690&status=done&style=none&taskId=u3a97539a-8010-41f1-b0be-9b3c680f3bb&title=&width=944.8" alt="image.png"></p><hr><h3 id="三、Jenkins-Gitlab-maven项目实战"><a href="#三、Jenkins-Gitlab-maven项目实战" class="headerlink" title="三、Jenkins+Gitlab+maven项目实战"></a>三、Jenkins+Gitlab+maven项目实战</h3><p>Jenkins服务器去拉取代码。所以要下载git客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins-server ~]# yum -y install git</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050943547.png" alt="image-20240905094347496"></p><p><strong>关闭ssh密钥认证</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060714828.png" alt="image-20240606071447681"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050942962.png" alt="image-20240905094202917"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060712798.png" alt="img"></p><p><strong>开始构建maven项目</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050941876.png" alt="image-20240905094127648"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060719247.png" alt="image-20240606071945163"></p><p>[root@jenkins ~]# cat /root/.ssh/id_rsa</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670984467041-34a29369-80a9-4899-aa2b-ac9d87da0b2f.png#averageHue=%23faf6f6&clientId=u57f8f598-4783-4&from=paste&height=546&id=u6adabec6&originHeight=683&originWidth=1393&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55101&status=done&style=none&taskId=uc846644c-9248-4ed5-bb22-fec57d76c8f&title=&width=1114.4" alt="image.png"></p><p>==<strong>Gitlab配置jenkins公钥</strong>==</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# cat /root/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050944325.png" alt="image-20240905094444287"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050945288.png" alt="image-20240905094527221"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050947183.png" alt="image-20240905094720026"></p><p>==<strong>编译后设置</strong>==</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060722445.png" alt="image-20240606072233374"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060723001.png" alt="image-20240606072318936"></p><p><img src="/2024/09/05/Jenkins_CI_CD%E5%BA%94%E7%94%A8/Jenkins_CI_CD%E5%BA%94%E7%94%A8/C:%5CUsers%5Clenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240905094825309.png" alt="image-20240905094825309"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050949100.png" alt="image-20240905094908060"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670984967094-cb72f86f-bc21-492d-960a-0bac7994bf76.png#averageHue=%23f1f1f0&clientId=u57f8f598-4783-4&from=paste&height=578&id=uf941f65c&originHeight=722&originWidth=1628&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71489&status=done&style=none&taskId=ucb0896d2-21a2-4103-9a09-132151d0fe0&title=&width=1302.4" alt="image.png"></p><p><strong>访问测试</strong><br><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409050950396.png" alt="image-20240905095008329"><br><strong>开发更新代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client mnt]# git clone git@192.168.91.168:root&#x2F;cloudweb.git</span><br><span class="line">[root@git-client mnt]# cd cloudweb&#x2F;</span><br><span class="line">[root@git-client mnt]# vim src&#x2F;main&#x2F;webapp&#x2F;index.jsp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670985229589-55325db8-cc65-4369-baf6-91c3e369e7e9.png#averageHue=%23100a09&clientId=u57f8f598-4783-4&from=paste&height=254&id=u37402819&originHeight=317&originWidth=1362&originalType=binary&ratio=1&rotation=0&showTitle=false&size=37929&status=done&style=none&taskId=u47116c1a-9c12-4b57-ba0f-81ce0e09d87&title=&width=1089.6" alt="image.png"></p><h3 id="四、Jenkins-git参数化构建"><a href="#四、Jenkins-git参数化构建" class="headerlink" title="四、Jenkins git参数化构建"></a>四、Jenkins git参数化构建</h3><p>git参数化构建：开发人员推送代码之前，对此版本的代码，打一个标签(tag)。我们可以认作为是此套代码的版本号。后续可以方便我们进行版本之间的切换。尤其是刚上线一套代码有问题，可以运用jenkins立即进行版本回退/切换；</p><p>Gitlab仓库代码准备：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1654067572140-a2b87e7c-1721-430e-b0d4-664bb7bbe168.png#averageHue=%23f8f6f5&clientId=u6057b347-398d-4&from=paste&height=566&id=ubade1162&originHeight=708&originWidth=1399&originalType=binary&ratio=1&rotation=0&showTitle=false&size=82385&status=done&style=none&taskId=u0fba8d82-3adc-41d3-83fb-c8bb62a7fde&title=&width=1119.2" alt="image.png"><br>首先，需要安装插件”Git Parameter”。如图</p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20220326112424871.png#id=c9sRL&originHeight=619&originWidth=1782&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><strong>手动测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client ~]# git clone git@192.168.91.168:root/cloudweb.git</span><br><span class="line">[root@git-client ~]# cd cloudweb</span><br><span class="line">[root@git-client cloudweb]# vim src/main/webapp/index.jsp</span><br></pre></td></tr></table></figure><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20220326113630658.png#id=C2EuJ&originHeight=463&originWidth=1289&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab easy-springmvc-maven]# git add *</span><br><span class="line">[root@gitlab easy-springmvc-maven]# git commit -m "修改用户为密码"</span><br><span class="line">[root@gitlab easy-springmvc-maven]# git tag -a "v1.0" -m "修改用户为密码"</span><br><span class="line">[root@gitlab easy-springmvc-maven]# git tag  #查看一下</span><br><span class="line">v1.0</span><br><span class="line">[root@gitlab easy-springmvc-maven]# git push origin v1.0</span><br><span class="line">[root@gitlab easy-springmvc-maven]#</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670987518538-79276bf9-3ac9-443a-9e89-06d8cadf420d.png#averageHue=%23faf8f6&clientId=u57f8f598-4783-4&from=paste&height=558&id=u5ab13157&originHeight=698&originWidth=1224&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60919&status=done&style=none&taskId=u9e62e22f-f157-4f65-b376-03f22aa5879&title=&width=979.2" alt="image.png"></p><h4 id="1-配置Jenkins参数化构建（tag方式）"><a href="#1-配置Jenkins参数化构建（tag方式）" class="headerlink" title="1. 配置Jenkins参数化构建（tag方式）"></a>1. 配置Jenkins参数化构建（tag方式）</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060125491.png" alt="image-20240606012539201"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060126396.png" alt="image-20240606012642272"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060127090.png" alt="image-20240606012743783"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042309949.png" alt="image-20240904230953886"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042311411.png" alt="image-20240904231101366"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409051610470.png" alt="image-20240905161021397"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060143446.png" alt="image-20240606014338355"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202406060143393.png" alt="image-20240606014352191"></p><p><strong>开发人员再次更新代码，推送仓库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client cloudweb]# vim src/main/webapp/index.jsp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670988048171-5da1ebd5-d6ad-4f68-ac47-6e268998ed00.png#averageHue=%23070302&clientId=u57f8f598-4783-4&from=paste&height=254&id=u9452d61e&originHeight=318&originWidth=1358&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34425&status=done&style=none&taskId=u4ba042e4-bd77-4868-8219-5eabca205b1&title=&width=1086.4" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@git-client cloudweb]# git add *</span><br><span class="line">[root@git-client cloudweb]# git commit -m "用户user &amp; 密码pass"</span><br><span class="line">[master ffa6acf] 用户user &amp; 密码pass</span><br><span class="line"> 1 file changed, 2 insertions(+), 2 deletions(-)</span><br><span class="line">[root@git-client cloudweb]# git tag -a "v1.1" -m "用户user &amp; 密码pass"</span><br><span class="line">[root@git-client cloudweb]# git tag</span><br><span class="line">v1.0</span><br><span class="line">v1.1</span><br><span class="line">[root@git-client cloudweb]# git push origin v1.1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670988152608-80c3a16b-83e9-4363-b7f4-ba00d661a53c.png#averageHue=%23faf8f6&clientId=u57f8f598-4783-4&from=paste&height=526&id=ua1da8988&originHeight=657&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59352&status=done&style=none&taskId=ue251d857-c5bd-422e-9950-f730f20c6f6&title=&width=997.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/23214851/1670988252805-47ea6916-a09e-44c6-a3a1-efd91dfdc5f4.png#averageHue=%23fbfafa&clientId=u57f8f598-4783-4&from=paste&height=437&id=u152c49b0&originHeight=546&originWidth=860&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34691&status=done&style=none&taskId=u1a502756-cb0b-46f3-abcb-5c6105cba0f&title=&width=688" alt="image.png"><br>访问测试<br>尝试进行版本切换，再访问测试</p><h4 id="2-配置Jenkins参数化构建-commit修订号"><a href="#2-配置Jenkins参数化构建-commit修订号" class="headerlink" title="2. 配置Jenkins参数化构建(commit修订号)"></a>2. 配置Jenkins参数化构建(commit修订号)</h4><p>开发人员如果不会打标签，或者说他们不愿意配合打标签<br><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042313326.png" alt="image-20240904231317277"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042313722.png" alt="image-20240904231352677"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042314229.png" alt="image-20240904231415192"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042314484.png" alt="image-20240904231444426"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042315878.png" alt="image-20240904231509849"></p><blockquote><p><strong>Root POM    # 指定编译文件</strong><br><strong>Goals and options    # 编译命令</strong></p></blockquote><p>测试：</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202409042315313.png" alt="image-20240904231547271"></p><h3 id="五、Jenkins多节点配置"><a href="#五、Jenkins多节点配置" class="headerlink" title="五、Jenkins多节点配置"></a>五、Jenkins多节点配置</h3><p>在企业里面使用Jenkins自动部署+测试平台时，每天更新发布几个网站版本,很频繁,但是对于一些大型的企业来讲，Jenkins就需要同时处理很多的任务，这时候就需要借助Jenkins多个node或者我们所说的Jenkins分布式SLAVE，今天我们带大家来学习Jenkins多实例的配置；</p><p>添加Linux平台Jenkins SLAVE配置：</p><ol><li>由于Jenkins是Java程序，添加的SLAVE客户端服务器必须安装Java JDK环境；</li><li>创建远程执行Jenkins任务的用户，一般为Jenkins用户，工作目录为/home/Jenkins;</li><li>Jenkins服务器免秘钥登录Slave服务器或者通过用户名和密码登录；</li></ol><h4 id="1-添加从节点"><a href="#1-添加从节点" class="headerlink" title="1.添加从节点"></a>1.添加从节点</h4><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009204536504.png#id=SoNjI&originHeight=845&originWidth=1692&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009204609760.png#id=de9Yc&originHeight=631&originWidth=1893&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009204648831.png#id=qbSD8&originHeight=558&originWidth=1895&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><h4 id="2-参数详解"><a href="#2-参数详解" class="headerlink" title="2.参数详解"></a>2.参数详解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">名字：节点的名字</span><br><span class="line">描述：说明这个节点的用途等</span><br><span class="line">of executors:并发构建数量</span><br><span class="line">远程工作目录：用于存放jenkins的工作空间的</span><br><span class="line">标签：分配job会以标签的名称去分配</span><br><span class="line">用法：节点的使用策略</span><br><span class="line">启动方法：windows的话就不要给自己添堵了，选择 Java web start</span><br></pre></td></tr></table></figure><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20220328104326621.png#id=kdaUn&originHeight=620&originWidth=1300&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009221943512.png#id=qG4LQ&originHeight=607&originWidth=924&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009221815103.png#id=ubYos&originHeight=655&originWidth=945&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><h4 id="3-指定java命令路径"><a href="#3-指定java命令路径" class="headerlink" title="3.指定java命令路径"></a>3.指定java命令路径</h4><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009221903569.png#id=fMA2s&originHeight=811&originWidth=933&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009222015840.png#id=d2gER&originHeight=366&originWidth=1264&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><h4 id="4-测试从节点"><a href="#4-测试从节点" class="headerlink" title="4.测试从节点"></a>4.测试从节点</h4><p>项目指定到哪个节点运行。</p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20220328104400072.png#id=yHjLw&originHeight=528&originWidth=1559&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009222752678.png#id=ZbUbb&originHeight=691&originWidth=1584&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt></p><p><img src="https://youngfitfei.oss-cn-beijing.aliyuncs.com/img/image-20211009224634465.png#id=pjo2H&originHeight=270&originWidth=1481&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=" alt>    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Ansible" scheme="https://l66stbz.github.io/tags/Ansible/"/>
    
      <category term="Jenkins" scheme="https://l66stbz.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab企业级代码管理</title>
    <link href="https://l66stbz.github.io/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"/>
    <id>https://l66stbz.github.io/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/</id>
    <published>2024-09-04T13:50:00.000Z</published>
    <updated>2024-09-07T03:20:21.062Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>GitLab 是一个综合性的 DevOps 平台，主要用于代码存储和项目管理。它集成了 Git 仓库管理、持续集成和持续交付（CI/CD）、项目管理、安全性等多种功能。  </p><h3 id="2、功能"><a href="#2、功能" class="headerlink" title="2、功能"></a>2、功能</h3><ul><li>提供 Git 仓库托管服务，支持分支管理、代码审查和合并请求。  </li><li>提供详细的代码历史记录和变更日志，方便开发人员跟踪代码变动。  </li><li>持续集成（CI），自动化构建、测试和集成代码 。<h3 id="3、Gitlab安装"><a href="#3、Gitlab安装" class="headerlink" title="3、Gitlab安装"></a>3、Gitlab安装</h3></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab ~]<span class="comment"># ls</span></span><br><span class="line">gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Gitlab</span></span><br><span class="line">[root@gitlab ~]<span class="comment"># yum  localinstall -y gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/2.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建ssl证书存放路径</span></span><br><span class="line">[root@gitlab ~]<span class="comment"># mkdir /etc/gitlab/ssl</span></span><br><span class="line"><span class="comment"># 上传证书</span></span><br><span class="line">[root@gitlab ssl]<span class="comment"># ll /etc/gitlab/ssl/privkey.pem </span></span><br><span class="line">-rw-r--r--. 1 root root 241 6月   4 20:32 /etc/gitlab/ssl/privkey.pem</span><br><span class="line">[root@gitlab ssl]<span class="comment"># ll /etc/gitlab/ssl/fullchain.pem </span></span><br><span class="line">-rw-r--r--. 1 root root 3306 6月   4 20:32 /etc/gitlab/ssl/fullchain.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@gitlab ~]<span class="comment">#  egrep -v "^(#|$)" /etc/gitlab/gitlab.rb </span></span><br><span class="line"><span class="comment"># 定义 GitLab 实例的外部访问 URL。用户通过此 URL 访问 GitLab 界面。</span></span><br><span class="line">external_url <span class="string">'https://gitlab.tanke.love'</span></span><br><span class="line"><span class="comment"># 设置 GitLab 的时区为 "Asia/Shanghai"。这影响到 GitLab 中时间显示的区域设置。</span></span><br><span class="line">gitlab_rails[<span class="string">'time_zone'</span>] = <span class="string">'Asia/Shanghai'</span></span><br><span class="line"><span class="comment"># 定义 Git 数据存储的路径。</span></span><br><span class="line">git_data_dirs(&#123;</span><br><span class="line">  <span class="string">"default"</span> =&gt; &#123;</span><br><span class="line">    <span class="string">"path"</span> =&gt; <span class="string">"/mnt/nfs-01/git-data"</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 设置 GitLab Shell 使用的 SSH 端口。</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_shell_ssh_port'</span>] = 22</span><br><span class="line"><span class="comment"># 启用 Nginx，GitLab 使用 Nginx 作为 Web 服务器。</span></span><br><span class="line">nginx[<span class="string">'enable'</span>] = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 设置最大请求体大小为 250MB</span></span><br><span class="line">nginx[<span class="string">'client_max_body_size'</span>] = <span class="string">'250m'</span></span><br><span class="line"><span class="comment"># 启用 HTTP 到 HTTPS 的重定向，确保所有流量通过 HTTPS。</span></span><br><span class="line">nginx[<span class="string">'redirect_http_to_https'</span>] = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 设置重定向端口为 80。</span></span><br><span class="line">nginx[<span class="string">'redirect_http_to_https_port'</span>] = 80</span><br><span class="line"><span class="comment"># 指定 SSL 证书和密钥的位置，用于 HTTPS。</span></span><br><span class="line">nginx[<span class="string">'ssl_certificate'</span>] = <span class="string">"/tmp/fullchain.pem"</span></span><br><span class="line">nginx[<span class="string">'ssl_certificate_key'</span>] = <span class="string">"/tmp/privkey.pem"</span></span><br><span class="line">nginx[<span class="string">'ssl_ciphers'</span>] = <span class="string">"ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"</span></span><br><span class="line">nginx[<span class="string">'ssl_prefer_server_ciphers'</span>] = <span class="string">"off"</span></span><br><span class="line"><span class="comment"># 定义支持的 SSL/TLS 协议版本。</span></span><br><span class="line">nginx[<span class="string">'ssl_protocols'</span>] = <span class="string">"TLSv1.2 TLSv1.3"</span></span><br><span class="line"><span class="comment"># 配置 SSL 会话缓存，提高性能。</span></span><br><span class="line">nginx[<span class="string">'ssl_session_cache'</span>] = <span class="string">"shared:SSL:10m"</span></span><br><span class="line"><span class="comment"># 超时时间。</span></span><br><span class="line">nginx[<span class="string">'ssl_session_timeout'</span>] = <span class="string">"1d"</span></span><br><span class="line"><span class="comment"># 启用 Gzip 压缩，提高传输效率。</span></span><br><span class="line">nginx[<span class="string">'gzip_enabled'</span>] = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">[root@gitlab ~]<span class="comment"># gitlab-ctl  reconfigure</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/3.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/gitlab/initial_root_password #密码存放地</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动实例</span></span><br><span class="line">[root@localhost ~]<span class="comment"># gitlab-ctl start</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/4.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/5.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/6.png" alt="image.png"></p><blockquote><p>任何人都可以注册帐户。<br>只允许任何人在GitLab实例上注册您打算供任何人使用的帐户。允许任何人注册会使GitLab实例更容易受到攻击。</p></blockquote><h3 id="更改Root密码"><a href="#更改Root密码" class="headerlink" title="更改Root密码"></a>更改Root密码</h3><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/7.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/8.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/9.png" alt="image.png"></p><h1 id="创建新项目"><a href="#创建新项目" class="headerlink" title="创建新项目"></a>创建新项目</h1><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/10.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/11.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/12.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/13.png" alt="image.png"></p><h2 id="拉取项目代码仓库"><a href="#拉取项目代码仓库" class="headerlink" title="拉取项目代码仓库"></a>拉取项目代码仓库</h2><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/14.png" alt="image.png"></p><h2 id="上传SSH公钥"><a href="#上传SSH公钥" class="headerlink" title="上传SSH公钥"></a>上传SSH公钥</h2><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/15.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/16.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看本地公钥</span></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/qf2401 (master)</span><br><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDN9T3s7uqnOSI2hME0EOdyWQvVw8Cu0uBFFH/vEIaBsyzJylAPI/td0QxLHnCSbRrD+GrIfh99/5giVTx0vNo6dBwhiTp3BlrQhVgBXCqd9evH5Mn03JZBK9aIrUumliaBpWezXh4Se2OSxlpAKt1aNopw8Acvh9IvLCPEOcKHdwEloogz4nRqkG9ZGfuObXeu9sxWt7efg3eASExA7H+x9bvGOkVLm33V+LFWD1/ln4nwGbkvQkh0fCTHZiWbSCTpXKQtmknvBfrT7Fn2VtUhP4jWZhfuft1Ty2j2Jmajc6ZbgEc5z1M3JQo+KoVYlKlaONs5+u/Pmj6pdqpinMo0klwI4hJsO2J0TN+j9S6tR8V60yB5Ep8KpDpsRwANEXVaHwsBfIZEh7Cqn1rabf/mE2bXoXmRb8DDc4b/ycF9DLi8ZtHs9CcJWcs8eTuiqgyON75wNGILC4pxJLCFHEQ7JMCa3yCN/2XVSNRIeXdgaOScj2x68ezcJ+zEWEKio6E= hjm131641@163.com</span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/17.png" alt="image.png"></p><h2 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop</span><br><span class="line">$ git <span class="built_in">clone</span> git@gitlab.tanke.love:gitlab-instance-d5d699e8/study-test-cloud.git</span><br><span class="line">Cloning into <span class="string">'study-test-cloud'</span>...</span><br><span class="line">remote: Enumerating objects: 3, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Receiving objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop</span><br><span class="line">$ ls</span><br><span class="line">Bandicam/  desktop.ini  qf2401/  study-test-cloud/  work/  郑州千锋/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"# 铭哥真帅"</span> &gt; test.md</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git add .</span><br><span class="line">warning: <span class="keyword">in</span> the working copy of <span class="string">'test.md'</span>, LF will be replaced by CRLF the next time Git touches it</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git commit  -am <span class="string">"first commit"</span></span><br><span class="line">[main 1416f75] first commit</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 test.md</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git push origin main</span><br><span class="line">Enumerating objects: 4, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (4/4), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 32 threads</span><br><span class="line">Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 280 bytes | 280.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)</span><br><span class="line">To gitlab.tanke.love:gitlab-instance-d5d699e8/study-test-cloud.git</span><br><span class="line">   7f887e5..1416f75  main -&gt; main</span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/18.png" alt="image.png"></p><h2 id="Tag版本推送"><a href="#Tag版本推送" class="headerlink" title="Tag版本推送"></a>Tag版本推送</h2><p>GitLab 的 tag（标签）在版本控制中主要用于标记某个特定的提交（commit）点。这些标签通常用于表示软件的发布版本，使得开发者能够轻松地引用和查找这些重要的提交点。</p><ol><li><strong>版本标记</strong>：<ul><li>标签可以标记代码库中的特定版本，如 v1.0.0、v2.1.3 等。这有助于开发者和其他利益相关者（如产品经理、测试人员、用户等）清楚地了解代码的当前状态和历史版本。</li></ul></li><li><strong>发布管理</strong>：<ul><li>当软件达到某个稳定状态并准备发布时，可以为该状态创建一个标签。这有助于在后续开发过程中追踪和比较不同版本之间的差异。</li><li>通过标签，可以轻松地回滚到以前的版本，如果新版本出现严重问题或不符合预期。</li></ul></li><li><strong>构建和部署</strong>：<ul><li>在持续集成/持续部署（CI/CD）流程中，标签经常用于触发构建和部署操作。例如，当一个新的标签被推送到代码库时，CI/CD 系统可以自动构建和部署该版本的软件。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ vim tag.txt</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git add .</span><br><span class="line">warning: <span class="keyword">in</span> the working copy of <span class="string">'tag.txt'</span>, LF will be replaced by CRLF the next time Git touches it</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git commit  -m <span class="string">"net tag.txt"</span></span><br><span class="line">[main 3461e18] net tag.txt</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 tag.txt</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git tag  -a <span class="string">"v1.1"</span> -m <span class="string">"new e.txt"</span></span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git push origin  main</span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git push origin  v1.1</span><br><span class="line">Enumerating objects: 5, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 32 threads</span><br><span class="line">Compressing objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (4/4), 424 bytes | 424.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)</span><br><span class="line">To gitlab.tanke.love:gitlab-instance-d5d699e8/study-test-cloud.git</span><br><span class="line"> * [new tag]         v1.1 -&gt; v1.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lenovo@LAPTOP-P0AL7U72 MINGW64 ~/Desktop/study-test-cloud (main)</span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 3461e180cc300dddd9ea289c619b74f771e57dd9 (HEAD -&gt; main, tag: v1.1)</span><br><span class="line">Author: jiaming &lt;hjm131641@163.com&gt;</span><br><span class="line">Date:   Tue Jun 4 23:30:26 2024 +0800</span><br><span class="line"></span><br><span class="line">    net tag.txt</span><br><span class="line"></span><br><span class="line">commit c3aba0f8f1d3fa73789ce7562ed97526433628b0 (origin/main, origin/HEAD)</span><br><span class="line">Author: jiaming &lt;hjm131641@163.com&gt;</span><br><span class="line">Date:   Tue Jun 4 23:22:26 2024 +0800</span><br><span class="line"></span><br><span class="line">    first commit</span><br><span class="line"></span><br><span class="line">commit 1416f75324c274ae5b813ee7ce8d80a09d61212b</span><br><span class="line">Author: jiaming &lt;hjm131641@163.com&gt;</span><br><span class="line">Date:   Tue Jun 4 23:02:44 2024 +0800</span><br><span class="line"></span><br><span class="line">    first commit</span><br><span class="line"></span><br><span class="line">commit 7f887e5c316766a6cab4b81ba73cfd00e1230fc2</span><br><span class="line">Author: Administrator &lt;admin@example.com&gt;</span><br><span class="line">Date:   Tue Jun 4 22:55:52 2024 +0800</span><br><span class="line"></span><br><span class="line">    Initial commit</span><br></pre></td></tr></table></figure><h2 id="Gitlab备份"><a href="#Gitlab备份" class="headerlink" title="Gitlab备份"></a>Gitlab备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Gitlab的版本</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /opt/gitlab/embedded/service/gitlab-rails/VERSION </span></span><br><span class="line">15.1.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开配置文件数据备份</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vim /etc/gitlab/gitlab.rb </span></span><br><span class="line">gitlab_rails[<span class="string">'backup_path'</span>] = <span class="string">"/var/opt/gitlab/backups"</span><span class="comment">#备份的路径</span></span><br><span class="line">gitlab_rails[<span class="string">'backup_archive_permissions'</span>] = 0644<span class="comment">#备份文件的默认权限</span></span><br><span class="line">gitlab_rails[<span class="string">'backup_keep_time'</span>] = 604800<span class="comment">#保留时长，秒为单位</span></span><br></pre></td></tr></table></figure>设置备份保留时长，防止每天执行备份，肯定有目录被爆满的风险，打开/etc/gitlab/gitlab.rb配置文件，找到如下配置<br>该项定义了默认备份出文件的路径，可以通过修改该配置，并执行 <strong>gitlab-ctl reconfigure 或者 gitlab-ctl  restart</strong> 重启服务生效。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># gitlab-ctl reconfigure</span></span><br><span class="line">或者</span><br><span class="line">[root@localhost ~]<span class="comment"># gitlab-ctl  restart</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行备份命令进行备份</span></span><br><span class="line">[root@localhost ~]<span class="comment"># gitlab-rake gitlab:backup:create</span></span><br></pre></td></tr></table></figure><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/19.png" alt="image.png"><br>也可以添加到 crontab 中定时执行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure>可以到/var/opt/gitlab/backups找到备份包，解压查看，会发现备份的还是比较全面的，数据库、repositories、build、upload等分类还是比较清晰的。备份完成，会在备份目录中生成一个当天日期的tar包。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ll /var/opt/gitlab/backups/</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Gitlab数据恢复"><a href="#Gitlab数据恢复" class="headerlink" title="Gitlab数据恢复"></a>Gitlab数据恢复</h2><p>特别注意：</p><ul><li>备份目录和gitlab.rb中定义的备份目录必须一致</li><li>GitLab的版本和备份文件中的版本必须一致，否则还原时会报错。</li></ul><p>模拟删除数据<br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/20.png" alt="image.png"><br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/21.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  cd /var/opt/gitlab/backups</span></span><br><span class="line">[root@localhost backups]<span class="comment"># ls</span></span><br><span class="line">1717517821_2024_06_05_15.1.2_gitlab_backup.tar</span><br><span class="line">[root@localhost ~]<span class="comment">#  gitlab-rake gitlab:backup:restore BACKUP=/var/opt/gitlab/backups/</span></span><br><span class="line"><span class="comment"># 注意恢复文件的名称</span></span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/22.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40379882/1717519006307-206d83b4-2a2c-4afb-8e06-2ba73f12538b.png#averageHue=%230f0d0c&clientId=ued8afcd3-562e-4&from=paste&height=444&id=u3c1082bf&originHeight=666&originWidth=1674&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=95727&status=done&style=none&taskId=ub7b8d439-5831-4b8e-b61c-bfe69b20fb3&title=&width=1116" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40379882/1717519030944-9de30b46-c1fb-4ffc-a9d4-7fce862bff83.png#averageHue=%23150e0d&clientId=ued8afcd3-562e-4&from=paste&height=335&id=u2dfcc94d&originHeight=502&originWidth=2305&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=88401&status=done&style=none&taskId=ua70807c8-3ba2-492c-9bbe-c5e8bd05a9a&title=&width=1536.6666666666667" alt="image.png"><br>恢复完成后，启动刚刚的两个服务，或者重启所有服务，再打开浏览器进行访问，发现数据和之前的一致：<br><strong>注意：通过备份文件恢复gitlab必须保证两台主机的gitlab版本一致，否则会提示版本不匹配</strong></p><p>再次查看Gitlab<br><img src="/2024/09/04/gitlab%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Gitlab%E4%BC%81%E4%B8%9A%E7%BA%A7%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/23.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Gitlab" scheme="https://l66stbz.github.io/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>study</title>
    <link href="https://l66stbz.github.io/2024/09/03/study/test/"/>
    <id>https://l66stbz.github.io/2024/09/03/study/test/</id>
    <published>2024-09-03T13:50:00.000Z</published>
    <updated>2024-09-03T12:27:22.248Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="http://192.168.100.150:80" target="_blank" rel="noopener">http://192.168.100.150:80</a><br>默认用户: admin  默认密码: ChangeMe</p><p>你仨低价阿萨德</p><p><img src="/2024/09/03/study/test/1.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Ansible" scheme="https://l66stbz.github.io/tags/Ansible/"/>
    
  </entry>
  
</feed>
