<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L66</title>
  
  <subtitle>胜天半子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://l66stbz.github.io/"/>
  <updated>2024-08-02T14:00:22.541Z</updated>
  <id>https://l66stbz.github.io/</id>
  
  <author>
    <name>L66</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux内核升级</title>
    <link href="https://l66stbz.github.io/2024/07/31/Linux%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/"/>
    <id>https://l66stbz.github.io/2024/07/31/Linux%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/</id>
    <published>2024-07-31T12:18:00.000Z</published>
    <updated>2024-08-02T14:00:22.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Linux内核升级"><a href="#Linux内核升级" class="headerlink" title="Linux内核升级"></a>Linux内核升级</h2><p><strong>首先需要把升级内核需要的两个rpm包拉到本地</strong></p><p><a href="https://l66stbz.github.io/2024/07/31/Linux内核升级/kernel-ml-4.19.12-1.el7.elrepo.x86_64.rpm" title="点击下载">kernel-ml-4.19.12-1.el7.elrepo.x86_64.rpm</a></p><p><a href="https://l66stbz.github.io/2024/07/31/Linux内核升级/kernel-ml-devel-4.19.12-1.el7.elrepo.x86_64.rpm" title="点击下载">kernel-ml-devel-4.19.12-1.el7.elrepo.x86_64.rpm</a></p><p><strong><img src="/2024/07/31/Linux%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/2.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 所有节点安装内核包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum localinstall -y kernel-ml*</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 所有节点更改内核启动顺序</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> grub2-set-default  0 &amp;&amp; grub2-mkconfig -o /etc/grub2.cfg</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> grubby --args=<span class="string">"user_namespace.enable=1"</span> --update-kernel=<span class="string">"<span class="variable">$(grubby --default-kernel)</span>"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看内核版本是否改变</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> grubby --default-kernel </span></span><br><span class="line"> /boot/vmlinuz-4.19.12-1.el7.elrepo.x86_64</span><br><span class="line"><span class="meta">$</span><span class="bash"> uname -r</span></span><br><span class="line"> 3.10.0-1160.el7.x86_64</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 未改变的话重启一下机器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> reboot</span></span><br></pre></td></tr></table></figure><p><strong>升级内核之后，uname -r查看的话是不会直接更新的，需要再重启一下才可以，重启之后在如下页面默认选项为升级后的内核版本，如果想要使用之前的内核版本就选择下边的。</strong></p><p><strong><img src="/2024/07/31/Linux%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/1.png" class></strong></p><p><strong>升级Linux内核是保持系统安全、稳定和高效运行的重要手段之一。尽管在升级时需要注意与系统中其他组件的兼容性，但从长远来看，升级内核通常会带来多方面的好处，有助于提升整体系统性能和安全性。</strong></p><h2 id="Linux中的一些内核配置参数与详解"><a href="#Linux中的一些内核配置参数与详解" class="headerlink" title="Linux中的一些内核配置参数与详解"></a>Linux中的一些内核配置参数与详解</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward = 1 #允许IPv4数据包转发。当这个参数设置为1时，Linux内核将允许作为路由器使用，可以将接收到的数据包从一个网络接口转发到另一个网络接口。</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1  #如果使用Linux桥接技术（如虚拟化中常用的网桥），此参数启用iptables对桥接的数据包进行过滤和处理。</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1 #类似于上一个参数，但用于IPv6的iptables过滤和处理。</span><br><span class="line"></span><br><span class="line">fs.may_detach_mounts = 1  #允许文件系统卸载已被其他进程打开的文件。通常用于特定的文件系统管理场景。</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.route_localnet = 1  #允许接收到的数据包目标地址是本地网络的地址时被路由。</span><br><span class="line"></span><br><span class="line">vm.overcommit_memory=1  #内存过commit机制设置。当设置为1时，系统允许分配比实际可用物理内存更多的内存，但这可能导致内存不足时的OOM（Out of Memory）错误。</span><br><span class="line"></span><br><span class="line">vm.panic_on_oom=0  #当内存不足时，是否触发系统崩溃（panic）。设置为0时，系统不会在OOM时触发panic。</span><br><span class="line"></span><br><span class="line">fs.inotify.max_user_watches=89100  #允许每个用户的inotify监视器数量达到的最大值。</span><br><span class="line"></span><br><span class="line">fs.file-max=52706963  #系统中打开文件的最大数量限制。</span><br><span class="line"></span><br><span class="line">fs.nr_open=52706963  #系统中同时打开的文件描述符的最大数量。</span><br><span class="line"></span><br><span class="line">net.netfilter.nf_conntrack_max=2310720  #允许系统中同时跟踪的网络连接的最大数量。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_keepalive_time = 600     #TCP连接的空闲超时时间，单位为秒。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3    #在TCP keepalive期间发送的探测数目。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 15    #在TCP keepalive探测之间的间隔时间，单位为秒。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000  #系统中保持TIME-WAIT套接字的最大数量。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_tw_reuse = 1   #允许重用TIME-WAIT套接字。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_max_orphans = 327680   #允许系统同时存在的TCP孤立连接的最大数量。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_orphan_retries = 3    # TCP孤立连接的重试次数。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_syncookies = 1    #启用TCP SYN cookies，用于防范SYN洪水攻击。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384   #TCP半连接队列（SYN队列）的最大长度。</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_conntrack_max = 65536   #同时跟踪的IP连接的最大数量（已废弃，一般使用`net.netfilter.nf_conntrack_max`）。</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_timestamps = 0  #禁用TCP时间戳，用于保护系统免受某些网络攻击。</span><br><span class="line"></span><br><span class="line">net.core.somaxconn = 16384  #系统中允许在处于TCP连接队列中的未完成连接的最大数量。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat &lt;&lt;-EOF &gt;&gt;/etc/security/limits.conf</span></span><br><span class="line">* soft nofile 655360   #设置所有用户（*）的软件（soft）文件描述符限制（nofile）为 655360。这意味着任何进程在运行时可以打开的文件数量的软限制被设置为 655360。</span><br><span class="line">* hard nofile 131072   #设置所有用户（*）的硬件（hard）文件描述符限制（nofile）为 `131072`。硬限制是软限制的上限，即用户可以通过重新设置来增加其软限制，但不能超过硬限制。</span><br><span class="line">* soft nproc 655350    #设置所有用户（*）的软件进程数（nproc）限制为 655350。软进程数限制是系统允许的最大进程数量。</span><br><span class="line">* hard nproc 655350    #设置所有用户（*）的硬件进程数（nproc）限制为 655350。硬进程数限制同样作为软限制的上限。</span><br><span class="line">* soft memlock unlimited  #设置所有用户（*）的软件内存锁定限制为无限制。这表示任何用户的进程可以锁定（即防止被交换到磁盘上）任意量的内存。</span><br><span class="line">* hard memlock unlimited  #设置所有用户（*）的硬件内存锁定限制为无限制。硬内存锁定限制同样作为软限制的上限。</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">注:/etc/security/limits.conf 是一个配置文件，用于设置系统用户的资源限制。这些资源限制包括打开的文件数、可创建的进程数、内存锁定量等。这些限制对于管理系统资源和提高系统安全性都非常重要。具体来说，这个文件允许系统管理员为各个用户或用户组设置以下类型的限制：</span><br><span class="line"></span><br><span class="line">软限制（soft limit）：软限制是用户当前可以使用的资源的最大值，通常可以通过用户自己修改。</span><br><span class="line">硬限制（hard limit）：硬限制是软限制的上限，即用户可以通过重新设置来增加其软限制，但不能超过硬限制。只有超级用户（root）可以增加硬限制。</span><br><span class="line"></span><br><span class="line">这些限制在多用户系统中特别有用，可以防止个别用户占用过多的系统资源，保证系统的稳定性和可靠性。常见的限制参数包括打开文件数、进程数、内存锁定、CPU时间等。</span><br><span class="line">编辑/etc/security/limits.conf 文件需要超级用户权限，因为这些限制对系统整体性能有较大的影响，需要慎重设置。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>shell自动化脚本学习要点笔记</title>
    <link href="https://l66stbz.github.io/2024/07/30/shell%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E5%AD%A6%E4%B9%A0%E8%A6%81%E7%82%B9%E7%AC%94%E8%AE%B0/"/>
    <id>https://l66stbz.github.io/2024/07/30/shell%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E5%AD%A6%E4%B9%A0%E8%A6%81%E7%82%B9%E7%AC%94%E8%AE%B0/</id>
    <published>2024-07-30T12:18:00.000Z</published>
    <updated>2024-07-30T12:13:01.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一些常见的预定义变量的含义"><a href="#一些常见的预定义变量的含义" class="headerlink" title="一些常见的预定义变量的含义"></a>一些常见的预定义变量的含义</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">预定义的变量是由Shell自身维护的特殊变量，它们通常保存了一些特定的系统信息。</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">HOME：当前用户的主目录。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">USER：当前用户的用户名。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">PATH：可执行文件的搜索路径。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">PWD：当前工作目录。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">OLDPWD：前一个工作目录。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">SHELL：当前使用的Shell。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">?：最后执行的命令的退出状态（返回值）。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">$：当前Shell的进程ID。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">!：最后运行的后台命令的进程ID。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"><span class="comment">#：传递给脚本或函数的参数个数。</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">@：以独立字符串显示每个参数。</span></span><br></pre></td></tr></table></figure><h4 id="获取变量长度的常用方法"><a href="#获取变量长度的常用方法" class="headerlink" title="获取变量长度的常用方法"></a>获取变量长度的常用方法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">echo $&#123;#变量名&#125;</span><br><span class="line">输出变量的长度(必须大括号包起来)</span><br><span class="line"></span><br><span class="line">或wc -L也可以获取长度</span><br><span class="line"></span><br><span class="line">如:echo $变量名|wc -L</span><br><span class="line"></span><br><span class="line">wc -l 获取行数</span><br><span class="line">例:cat /var/log/messages</span><br><span class="line">或wc -l &lt;/var/log/messages</span><br><span class="line"></span><br><span class="line">wc的一些比较常用的参数:</span><br><span class="line">-c, --bytes：统计字节数。</span><br><span class="line"></span><br><span class="line">-m, --chars：统计字符数。</span><br><span class="line"></span><br><span class="line">-w, --words：统计字数。</span><br><span class="line"></span><br><span class="line">-l, --lines：统计行数。</span><br><span class="line"></span><br><span class="line">-L, --max-line-length：统计最长行的长度。</span><br></pre></td></tr></table></figure><h4 id="测试主机某端口放开情况的一些方法"><a href="#测试主机某端口放开情况的一些方法" class="headerlink" title="测试主机某端口放开情况的一些方法"></a>测试主机某端口放开情况的一些方法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">echo &amp;&gt;/dev/null  &gt;/dev/tcp/192.168.100.50/23 测试别的主机的端口是否可达</span><br><span class="line">&amp;&gt;/dev/null &gt;/dev/tcp/192.168.100.50/23 </span><br><span class="line">(可以不加echo,&amp;&gt;/dev/null不可以放后边，放后边失败依然会有回显)</span><br><span class="line"></span><br><span class="line">telnet IP port 如:telnet 192.168.100.50 23(成功的话会不好退出，测试不建议使用这个)</span><br><span class="line"></span><br><span class="line">nc -z -w2 192.168.100.50 22</span><br><span class="line">-z 只用于测试，不发送任何数据，无论成功与否不会有任何回显。</span><br><span class="line">-w2 超时时间，如果超过2秒没有反馈，则认为该端口没有放开。</span><br></pre></td></tr></table></figure><h4 id="if中判断正则一些符号和参数的解释"><a href="#if中判断正则一些符号和参数的解释" class="headerlink" title="if中判断正则一些符号和参数的解释"></a>if中判断正则一些符号和参数的解释</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">if  [ $&#123;#passwd&#125; -gt 8 ]  &amp;&amp; [[ $&#123;passwd&#125; =~ [a-z] ]] &amp;&amp; [[ $&#123;passwd&#125; =~ [A-Z] ]]</span><br><span class="line">if [[ $IP =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]</span><br><span class="line">if [[ "$number" =~ ^[0-9]+$ ]] &amp;&amp; [ "$number" -ne 0 ]</span><br><span class="line">if [[ $num =~ ^[1-9][0-9]*$ ]]  #表示第一个数字匹配1-9之间的数字，之后匹配任意数量的数字（包括零个数字）0-9之间的数字。</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;<span class="comment">#passwd&#125; 表示变量passwd的长度</span></span></span><br><span class="line">=~ 是 Bash 中用来进行正则表达式匹配的操作符</span><br><span class="line">^ 表示匹配输入字符串的开始位置。</span><br><span class="line">[0-9]&#123;1,3&#125; 表示一个由1到3个数字（0-9之间的任意数字）组成的匹配模式。</span><br><span class="line">[0-9]+ 表示匹配一个或多个数字（0到9之间的任意数字），至少匹配一个数字。</span><br><span class="line">[0-9]* 表示匹配任意数量的数字（包括零个数字）。</span><br><span class="line"><span class="meta">$</span><span class="bash"> 表示匹配输入字符串的结束位置。</span></span><br><span class="line">正则表达式是需要用[[]]包起来，[[]]能用正则，而[]不行。</span><br><span class="line">不能直接将 &amp;&amp; 换成 -a，因为 [[ ]] 结构不支持 -a。尽管条件一不是[[]]结构！</span><br><span class="line"></span><br><span class="line">-a用来连接多个条件判断的逻辑与</span><br><span class="line">&amp;&amp; 是逻辑与操作符，用于连接命令或者条件判断，表示前一个命令或条件成功后，才会执行后面的命令或条件。</span><br></pre></td></tr></table></figure><h4 id="回车符和换行符解释"><a href="#回车符和换行符解释" class="headerlink" title="回车符和换行符解释"></a>回车符和换行符解释</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1. 回车符（\r）：这个符号用于表示光标返回到当前行的开头，如果有新的字符输入，将覆盖已存在的字符。在shell命令中，\r可以用于在同一行上连续输出不同的内容，例如：</span><br><span class="line"></span><br><span class="line">echo -e “Hello\rWorld”</span><br><span class="line"></span><br><span class="line">输出结果为：World。</span><br><span class="line"></span><br><span class="line">2. 换行符（\n）：这个符号用于表示光标移至下一行的开头，如果有新的字符输入，将在新的行上输出。在shell命令中，\n可以用于将一行分割成多行以提高可读性，例如：</span><br><span class="line"></span><br><span class="line">echo -e “This is line 1.\nThis is line 2.”</span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line"></span><br><span class="line">This is line 1.</span><br><span class="line">This is line 2.</span><br></pre></td></tr></table></figure><h4 id="for循环的常见写法"><a href="#for循环的常见写法" class="headerlink" title="for循环的常见写法"></a>for循环的常见写法</h4><p>下面以求1到5的和为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从范围中取值</span></span><br><span class="line">sum=0</span><br><span class="line">for i in &#123;1..5&#125;  </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">for</span> i <span class="keyword">in</span> 192.168.174.&#123;2..254&#125;  增加了前缀</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">for</span> i <span class="keyword">in</span> `seq -w 0 05`  -w：表示宽度，它会在生成的数字前面补零，以保证输出的宽度一致。</span></span><br><span class="line">do</span><br><span class="line">        let sum=$sum+$i</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum=0</span><br><span class="line">for i in `seq 1 1 5` #表示在1-5中取值，中间的1表示间隔为1的取值，不写默认为1</span><br><span class="line">do</span><br><span class="line">        let sum=$sum+$i</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum=0</span><br><span class="line">for((i=1;i&lt;=5;i++))</span><br><span class="line">do</span><br><span class="line">        let sum=$sum+$i</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">设置池，从池中读取值</span></span><br><span class="line">sum=0</span><br><span class="line">port="1 2 3 4 5"</span><br><span class="line">for i in $port</span><br><span class="line">do</span><br><span class="line">        let sum=$sum+$i</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从文件中读取</span></span><br><span class="line">sum=0</span><br><span class="line">read -p "请输入文件路径:" file</span><br><span class="line">for i in `cat $file`</span><br><span class="line">do</span><br><span class="line">        let sum=$sum+$i</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br></pre></td></tr></table></figure><h4 id="for循环范例和两种无交互修改密码的方法"><a href="#for循环范例和两种无交互修改密码的方法" class="headerlink" title="for循环范例和两种无交互修改密码的方法"></a>for循环范例和两种无交互修改密码的方法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">范例:新建10个用户给他们设置随机密码并将用户名密码记录到/tmp/userpassword文件中</span></span><br><span class="line">for u in `seq -w 0 09`</span><br><span class="line">do</span><br><span class="line">    #创建用户</span><br><span class="line">    useradd user_$u</span><br><span class="line">    #生成密码</span><br><span class="line">    p=`mkpasswd -s 0 -l 10`</span><br><span class="line">    #-s 参数用于指定密码中特殊字符的最少位数，设置为0表示不要求密码中包含特殊字符</span><br><span class="line">    #-l 参数表示密码长度为10位</span><br><span class="line">    #从标准输入中读取密码进行修改（不安全）</span><br><span class="line">    echo $p|passwd --stdin user_$u</span><br><span class="line">    #常规修改密码</span><br><span class="line">    echo -e "$p\n$p"|passwd user_$u</span><br><span class="line">    #将创建的用户及对应的密码记录到日志文件中</span><br><span class="line">    echo "user_$u $p" &gt;&gt; /tmp/userpassword</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="while循环的常见写法"><a href="#while循环的常见写法" class="headerlink" title="while循环的常见写法"></a>while循环的常见写法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">常规<span class="keyword">while</span>循环</span></span><br><span class="line">while 条件测试操作</span><br><span class="line">do</span><br><span class="line">  命令序列</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">while</span>的死循环</span></span><br><span class="line">while  :</span><br><span class="line">do</span><br><span class="line">    循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">while</span>循环+<span class="built_in">read</span>读取文件(其为一行一行读取进行循环)</span></span><br><span class="line">while  read  变量</span><br><span class="line">do</span><br><span class="line">    循环体</span><br><span class="line">done  &lt;文件路径</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">cat 文件路径 |while read 变量</span><br><span class="line">do</span><br><span class="line">    循环体</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">两种写法均可实现读取文件的效果！！！</span><br></pre></td></tr></table></figure><h4 id="cat和重定向结合使用的几种形式"><a href="#cat和重定向结合使用的几种形式" class="headerlink" title="cat和重定向结合使用的几种形式"></a>cat和重定向结合使用的几种形式</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; file:</span><br><span class="line">将输入重定向到文件，并覆盖原有内容。即将用户在终端中输入的内容写入文件中，并覆盖文件中原有的内容。</span><br><span class="line">**举例来说，执行命令cat &gt; example.txt，然后输入一些文本内容并按下回车键，输入完成后使用 Ctrl+D 结束输入，此时该文本内容就被覆盖写入了example.txt文件中。</span><br><span class="line"></span><br><span class="line">cat &lt; file &lt;&lt; EOF:</span><br><span class="line">从文件中读取输入，并直到遇到EOF（End Of File）为止。即从指定的文件中读取内容，并将其传递给cat命令作为标准输入，直到遇到EOF时结束输入。EOF是自定义的结束标识符，可以使用任意字符或字符串代替，只需保证开始和结束时使用相同的字符或字符串即可。</span><br><span class="line"></span><br><span class="line">**举例来说，执行命令cat &lt;&lt; EOF，然后在终端中输入一些文本内容并按下回车键，然后输入EOF作为结束标识符，输入完成后使用 Ctrl+D结束输入，此时该文本内容就被作为标准输入传递给了cat命令。</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;- EOF:</span><br><span class="line">从文件中读取输入，并直到遇到EOF为止。和上述方式类似，区别在于在EOF前添加了一个“-”号，表示忽略所有的前导制表符（Tab）字符。`这个方式通常用于在shell脚本中输入多行文本内容。用来打印菜单，常与case结合使用`</span><br><span class="line"></span><br><span class="line">**举例来说，执行命令cat &lt;&lt;- EOF，然后在终端中输入一些文本内容并按下回车键，然后输入EOF作为结束标识符，输入完成后使用 Ctrl+D结束输入，此时该文本内容就被作为标准输入传递给了cat命令，并忽略了所有的前导制表符（Tab）字符。</span><br></pre></td></tr></table></figure><h4 id="利用grep或egrep过滤文件中的空行和注释行-常用"><a href="#利用grep或egrep过滤文件中的空行和注释行-常用" class="headerlink" title="利用grep或egrep过滤文件中的空行和注释行(常用)"></a>利用grep或egrep过滤文件中的空行和注释行(常用)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mycat 2024-07-29]# egrep -v "^(#|$)" /etc/rc.d/rc.local  #过滤注释行和空行</span><br><span class="line">touch /var/lock/subsys/local   </span><br><span class="line"></span><br><span class="line">或[root@mycat ~]# grep -vE "^($|#)" anaconda-ks.cfg</span><br></pre></td></tr></table></figure><h4 id="sed使用实例的详解"><a href="#sed使用实例的详解" class="headerlink" title="sed使用实例的详解"></a>sed使用实例的详解</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sed -e "s|^mirrorlist=|#mirrorlist=|g" \</span><br><span class="line">    -e "s|^#baseurl=http://mirror.centos.org/centos/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/6.10|g" \</span><br><span class="line">    -e "s|^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/6.10|g" \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-*.repo</span><br><span class="line"></span><br><span class="line">详解如下:</span><br><span class="line">-e 多重编辑</span><br><span class="line">-e "s|^mirrorlist=|#mirrorlist=|g"  这个部分用于注释掉以 mirrorlist= 开头的行，将其替换为#mirrorlist=。这样做的目的是禁用使用镜像列表的方式获取软件包信息。</span><br><span class="line"></span><br><span class="line">-e "s|^#baseurl=http://mirror.centos.org/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/6.10|g"   这个部分用于替换以 #baseurl=http://mirror.centos.org/\$releasever 开头的行，将其替换为指向清华大学 TUNA 镜像站点的 URL。$releasever 将会被当前 CentOS 版本号替换。</span><br><span class="line"></span><br><span class="line">-e "s|^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/6.10|g"  这个部分用于替换以 #baseurl=http://mirror.centos.org/\$contentdir/\$releasever 开头的行，同样将其替换为指向清华大学 TUNA 镜像站点的 URL。这里也使用了 $contentdir 和 $releasever 的变量，会被相应的值替换。</span><br><span class="line"></span><br><span class="line">-i.bak：这个选项让 sed 在编辑文件时备份原始文件，备份文件的扩展名为 .bak。</span><br><span class="line"></span><br><span class="line">/etc/yum.repos.d/CentOS-*.repo：这是指定要操作的目标文件，它匹配所有以 CentOS- 开头且以 .repo 结尾的文件名，通常是 CentOS YUM 仓库的配置文件。</span><br><span class="line"></span><br><span class="line">每一行末尾的反斜杠 \ 是用来续行的标记。在Shell脚本或命令行中，反斜杠 \ 可以用来告诉解释器，当前行的命令在下一行继续。这是为了提高可读性，尤其是当命令很长时。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://l66stbz.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Mysql高可用-MHA</title>
    <link href="https://l66stbz.github.io/2024/07/27/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8-MHA/"/>
    <id>https://l66stbz.github.io/2024/07/27/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8-MHA/</id>
    <published>2024-07-27T12:18:00.000Z</published>
    <updated>2024-07-29T12:24:59.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><table><thead><tr><th>IP</th><th>主机名</th><th>角色</th><th>OS</th></tr></thead><tbody><tr><td>192.168.96.136</td><td>mysql-master</td><td>mysql master、MHA manager、MHA node</td><td>Centos7</td></tr><tr><td>192.168.96.142</td><td>mysql-slave1</td><td>mysql slave1、MHA node</td><td>Centos7</td></tr><tr><td>192.168.96.143</td><td>mysql-slave2</td><td>mysql slave2、MHA node</td><td>Centos7</td></tr></tbody></table><h3 id="1、配置hosts"><a href="#1、配置hosts" class="headerlink" title="1、配置hosts"></a>1、配置hosts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.96.136 mysql-master</span><br><span class="line">192.168.96.142 mysql-slave1</span><br><span class="line">192.168.96.143 mysql-slave2</span><br></pre></td></tr></table></figure><h3 id="2、关闭防火墙"><a href="#2、关闭防火墙" class="headerlink" title="2、关闭防火墙"></a>2、关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><h3 id="3、禁用SELinux"><a href="#3、禁用SELinux" class="headerlink" title="3、禁用SELinux"></a>3、禁用SELinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时关闭；关闭swap主要是为了性能考虑</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment"># 可以通过这个命令查看swap是否关闭了</span></span><br><span class="line">free</span><br><span class="line"><span class="comment"># 永久关闭        </span></span><br><span class="line">sed -ri <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="4、关闭swap"><a href="#4、关闭swap" class="headerlink" title="4、关闭swap"></a>4、关闭swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时关闭；关闭swap主要是为了性能考虑</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment"># 可以通过这个命令查看swap是否关闭了</span></span><br><span class="line">free</span><br><span class="line"><span class="comment"># 永久关闭        </span></span><br><span class="line">sed -ri <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="5、配置互信（3台机器互相发送公钥）"><a href="#5、配置互信（3台机器互相发送公钥）" class="headerlink" title="5、配置互信（3台机器互相发送公钥）"></a>5、配置互信（3台机器互相发送公钥）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id mysql-master</span><br><span class="line">ssh-copy-id mysql-slave1</span><br><span class="line">ssh-copy-id mysql-slave2</span><br></pre></td></tr></table></figure><h2 id="二、mysql主从部署"><a href="#二、mysql主从部署" class="headerlink" title="二、mysql主从部署"></a>二、mysql主从部署</h2><h3 id="1）安装mysql（MySQL5-7-29）"><a href="#1）安装mysql（MySQL5-7-29）" class="headerlink" title="1）安装mysql（MySQL5.7.29）"></a>1）安装mysql（MySQL5.7.29）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加mysql-server源</span></span><br><span class="line">mkdir -p /opt/mysql-mha; <span class="built_in">cd</span> /opt/mysql-mha</span><br><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line"><span class="comment"># 解决报错如，Check that the correct key URLs are configured for this repository.</span></span><br><span class="line">rpm --import http://repo.mysql.com/RPM-GPG-KEY-mysql-2022  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新yum缓存</span></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用yum查看MySQL的仓库，查看MySQL的版本</span></span><br><span class="line">yum repolist all | grep mysql</span><br><span class="line"><span class="comment"># 安装yum-config-manager</span></span><br><span class="line">yum -y install yum-utils</span><br><span class="line"><span class="comment"># 修改为需要的版本，即禁用yum存储库中mysql不需要的版本和开启需要的版本</span></span><br><span class="line">yum-config-manager --<span class="built_in">disable</span> mysql80-community</span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> mysql57-community</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先禁用本地的 MySQL 模块，要不然找不到mysql-community-server，默认mysql-server是8.0的版本</span></span><br><span class="line">yum module <span class="built_in">disable</span> mysql  <span class="comment">#centos 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始安装mysql server和mysql client</span></span><br><span class="line">yum install mysql-community-server mysql -y</span><br></pre></td></tr></table></figure><h3 id="2）mysql-节点配置"><a href="#2）mysql-节点配置" class="headerlink" title="2）mysql 节点配置"></a>2）mysql 节点配置</h3><h4 id="1、修改配置文件"><a href="#1、修改配置文件" class="headerlink" title="1、修改配置文件"></a>1、修改配置文件</h4><p>修改mysql的所有节点mysql的主配置文件 （<code>/etc/my.cnf</code>）<br><strong>Master 节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server-id = 1</span><br><span class="line"><span class="built_in">log</span>-bin=mysql-bin</span><br><span class="line">binlog_format=mixed</span><br><span class="line"><span class="built_in">log</span>-slave-updates=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>Slave1,Slave2节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server-id = 2 (slave3节点，则server-id=3。三台节点server-id不可重复)</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">relay-log=relay-log-bin</span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br></pre></td></tr></table></figure><h4 id="3、启动服务"><a href="#3、启动服务" class="headerlink" title="3、启动服务"></a>3、启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h4 id="5、设置root密码"><a href="#5、设置root密码" class="headerlink" title="5、设置root密码"></a>5、设置root密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认密码</span></span><br><span class="line">grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置root密码</span></span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line">ALTER user <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><h3 id="3）配置mysql-一主两从"><a href="#3）配置mysql-一主两从" class="headerlink" title="3）配置mysql 一主两从"></a>3）配置mysql 一主两从</h3><h4 id="1、-所有数据库节点进行mysql授权"><a href="#1、-所有数据库节点进行mysql授权" class="headerlink" title="1、 所有数据库节点进行mysql授权"></a>1、 所有数据库节点进行mysql授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录客户端</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line">123456</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库进行同步使用的用户</span></span><br><span class="line">grant replication slave on *.* to <span class="string">'slave'</span>@<span class="string">'192.168.96.%'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MHA-manager使用</span></span><br><span class="line">grant all  on *.* to <span class="string">'mha'</span>@<span class="string">'192.168.96.%'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#防止从库通过主机名连接不上主库</span></span><br><span class="line">grant all on *.* to <span class="string">'mha'</span>@<span class="string">'%'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h4 id="2、在主库查看二进制文件和偏移量（master节点）"><a href="#2、在主库查看二进制文件和偏移量（master节点）" class="headerlink" title="2、在主库查看二进制文件和偏移量（master节点）"></a>2、在主库查看二进制文件和偏移量（master节点）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line"></span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure><h4 id="3、slave1-slave2-执行同步操作"><a href="#3、slave1-slave2-执行同步操作" class="headerlink" title="3、slave1,slave2 执行同步操作"></a>3、slave1,slave2 执行同步操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">change master to </span><br><span class="line">master_host=<span class="string">'192.168.96.136'</span>, </span><br><span class="line">master_user=<span class="string">'slave'</span>, </span><br><span class="line">master_password=<span class="string">'123456'</span>, </span><br><span class="line">master_log_file=<span class="string">'mysql-bin.000001'</span>, </span><br><span class="line">master_log_pos=154;</span><br><span class="line"></span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#两个slave节点都需要 IO线程和 SQL 线程为yes状态</span></span><br><span class="line">show slave status \G</span><br><span class="line"></span><br><span class="line">...........</span><br><span class="line">     Slave_IO_Running: Yes</span><br><span class="line">     Slave_SQL_Running: Yes</span><br><span class="line">.........</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011210551104.png" alt="image-20221011210551104"></p><h4 id="4、两个从库都设置为只读模式"><a href="#4、两个从库都设置为只读模式" class="headerlink" title="4、两个从库都设置为只读模式"></a>4、两个从库都设置为只读模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过全局变量 read_only设置。设置值为1，或者on，表示开启。设置值为0或者off，表示关闭</span></span><br><span class="line">mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> global read_only=1;</span><br><span class="line">show  global variables like <span class="string">'read_only'</span>;</span><br><span class="line"><span class="comment"># 【注意】得退出客户端再登录才会生效</span></span><br></pre></td></tr></table></figure><h2 id="三、MHA概述"><a href="#三、MHA概述" class="headerlink" title="三、MHA概述"></a>三、MHA概述</h2><blockquote><p>MHA（Master High Availability）是由日本人yoshinorim开发的一款成熟且开源的MySQL高可用程序，它实现了MySQL主从环境下MASTER宕机后能够自动进行单次故障转移的功能，其本身由perl语言编写，安装方便使用简单。</p></blockquote><p>MHA官网：<a href="https://code.google.com/archive/p/mysql-master-ha/" target="_blank" rel="noopener">https://code.google.com/archive/p/mysql-master-ha/</a><br>GitHub地址：<a href="https://github.com/yoshinorim/mha4mysql-manager" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-manager</a><br>文档：<a href="https://github.com/yoshinorim/mha4mysql-manager/wiki" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-manager/wiki</a></p><h2 id="四、MHA架构"><a href="#四、MHA架构" class="headerlink" title="四、MHA架构"></a>四、MHA架构</h2><p>当一个 master 崩溃时，MHA 会恢复下面的 rest slave。</p><p><img src="https://img.beyourself.org.cn/1601821-20220720215905161-1671408365.png" alt="img"></p><h2 id="五、MHA-组件"><a href="#五、MHA-组件" class="headerlink" title="五、MHA 组件"></a>五、MHA 组件</h2><p>MHA 由 MHA Manager 和 MHA Node 组成，如下所示：</p><p><img src="https://img.beyourself.org.cn/1601821-20220720215919036-206371713.png" alt="img"></p><ul><li><code>MHA Manager</code>有监控MySQL master、控制master故障转移等管理程序。</li><li>MHA 节点具有故障转移辅助脚本，例如解析 MySQL 二进制/中继日志，识别中继日志位置，中继日志应从哪个位置应用到其他从站，将事件应用到目标从站等。MHA 节点在每个 MySQL 服务器上运行。</li><li>当 MHA Manager 进行故障转移时，MHA Manager 通过 SSH 连接 <code>MHA Node</code> 并在需要时执行 MHA Node 命令。</li></ul><h2 id="六、安装MHA软件"><a href="#六、安装MHA软件" class="headerlink" title="六、安装MHA软件"></a>六、安装MHA软件</h2><p>下载地址：<a href="https://github.com/yoshinorim/mha4mysql-manager/wiki/Downloads" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-manager/wiki/Downloads</a></p><h3 id="1）所有节点安装MHA-node软件"><a href="#1）所有节点安装MHA-node软件" class="headerlink" title="1）所有节点安装MHA node软件"></a>1）所有节点安装MHA node软件</h3><p>下载地址：<a href="https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/mysql-mha</span><br><span class="line"><span class="comment">#注意，所有节点都需要安装MHA node</span></span><br><span class="line"><span class="comment">#1、先安装相关依赖：</span></span><br><span class="line">yum install perl-DBD-MySQL -y</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"><span class="comment">#2、安装mha：</span></span><br><span class="line">rpm -ivh mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"><span class="comment"># 也可以使用下面方式安装</span></span><br><span class="line"><span class="comment"># yum install -y mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br></pre></td></tr></table></figure><h3 id="2）-安装mha-manager（master节点上）"><a href="#2）-安装mha-manager（master节点上）" class="headerlink" title="2） 安装mha manager（master节点上）"></a>2） 安装mha manager（master节点上）</h3><h4 id="1、安装mha-manager"><a href="#1、安装mha-manager" class="headerlink" title="1、安装mha manager"></a>1、安装mha manager</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先安装好依赖</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install perl-Config-Tiny perl-Time-HiRes perl-Parallel-ForkManager perl-Log-Dispatch perl-DBD-MySQL ncftp</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/yoshinorim/mha4mysql-manager/releases/tag/v0.58</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">rpm -ivh mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="2、-编写master-ip-failover脚本（manager节点）"><a href="#2、-编写master-ip-failover脚本（manager节点）" class="headerlink" title="2、 编写master_ip_failover脚本（manager节点）"></a>2、 编写master_ip_failover脚本（manager节点）</h4><p><code>/opt/mysql-mha/master_ip_failover</code>，下面配置文件中会用到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env perl</span></span><br><span class="line">use strict;</span><br><span class="line">use warnings FATAL =&gt; <span class="string">'all'</span>;</span><br><span class="line"> </span><br><span class="line">use Getopt::Long;</span><br><span class="line"> </span><br><span class="line">my (</span><br><span class="line">    <span class="variable">$command</span>, <span class="variable">$orig_master_host</span>, <span class="variable">$orig_master_ip</span>,<span class="variable">$ssh_user</span>,</span><br><span class="line">    <span class="variable">$orig_master_port</span>, <span class="variable">$new_master_host</span>, <span class="variable">$new_master_ip</span>,<span class="variable">$new_master_port</span>,</span><br><span class="line">    <span class="variable">$orig_master_ssh_port</span>,<span class="variable">$new_master_ssh_port</span>,<span class="variable">$new_master_user</span>,<span class="variable">$new_master_password</span></span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 这里定义的虚拟IP配置要注意，这个ip必须要与你自己的集群在同一个网段，否则无效</span></span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">'192.168.96.200/24'</span>;</span><br><span class="line">my <span class="variable">$key</span> = <span class="string">'1'</span>;</span><br><span class="line"><span class="comment"># 这里的网卡名称 “ens33” 需要根据你机器的网卡名称进行修改</span></span><br><span class="line"><span class="comment"># 如果多台机器直接的网卡名称不统一，有两种方式，一个是改脚本，二是把网卡名称修改成统一</span></span><br><span class="line"><span class="comment"># 我这边实际情况是修改成统一的网卡名称</span></span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">"sudo /sbin/ifconfig ens33:<span class="variable">$key</span> <span class="variable">$vip</span>"</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">"sudo /sbin/ifconfig ens33:<span class="variable">$key</span> down"</span>;</span><br><span class="line">my <span class="variable">$ssh_Bcast_arp</span>= <span class="string">"sudo /sbin/arping -I bond0 -c 3 -A <span class="variable">$vip</span>"</span>;</span><br><span class="line"></span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">'command=s'</span>          =&gt; \<span class="variable">$command</span>,</span><br><span class="line">    <span class="string">'ssh_user=s'</span>         =&gt; \<span class="variable">$ssh_user</span>,</span><br><span class="line">    <span class="string">'orig_master_host=s'</span> =&gt; \<span class="variable">$orig_master_host</span>,</span><br><span class="line">    <span class="string">'orig_master_ip=s'</span>   =&gt; \<span class="variable">$orig_master_ip</span>,</span><br><span class="line">    <span class="string">'orig_master_port=i'</span> =&gt; \<span class="variable">$orig_master_port</span>,</span><br><span class="line">    <span class="string">'orig_master_ssh_port=i'</span> =&gt; \<span class="variable">$orig_master_ssh_port</span>,</span><br><span class="line">    <span class="string">'new_master_host=s'</span>  =&gt; \<span class="variable">$new_master_host</span>,</span><br><span class="line">    <span class="string">'new_master_ip=s'</span>    =&gt; \<span class="variable">$new_master_ip</span>,</span><br><span class="line">    <span class="string">'new_master_port=i'</span>  =&gt; \<span class="variable">$new_master_port</span>,</span><br><span class="line">    <span class="string">'new_master_ssh_port'</span> =&gt; \<span class="variable">$new_master_ssh_port</span>,</span><br><span class="line">    <span class="string">'new_master_user'</span> =&gt; \<span class="variable">$new_master_user</span>,</span><br><span class="line">    <span class="string">'new_master_password'</span> =&gt; \<span class="variable">$new_master_password</span></span><br><span class="line"> </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">exit</span> &amp;main();</span><br><span class="line"> </span><br><span class="line">sub main &#123;</span><br><span class="line">    <span class="variable">$ssh_user</span> = defined <span class="variable">$ssh_user</span> ? <span class="variable">$ssh_user</span> : <span class="string">'root'</span>;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">"\n\nIN SCRIPT TEST====<span class="variable">$ssh_user</span>|<span class="variable">$ssh_stop_vip</span>==<span class="variable">$ssh_user</span>|<span class="variable">$ssh_start_vip</span>===\n\n"</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> ( <span class="variable">$command</span> eq <span class="string">"stop"</span> || <span class="variable">$command</span> eq <span class="string">"stopssh"</span> ) &#123;</span><br><span class="line"> </span><br><span class="line">        my <span class="variable">$exit_code</span> = 1;</span><br><span class="line">        <span class="built_in">eval</span> &#123;</span><br><span class="line">            <span class="built_in">print</span> <span class="string">"Disabling the VIP on old master: <span class="variable">$orig_master_host</span> \n"</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            <span class="variable">$exit_code</span> = 0;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$@</span>) &#123;</span><br><span class="line">            warn <span class="string">"Got Error: <span class="variable">$@</span>\n"</span>;</span><br><span class="line">            <span class="built_in">exit</span> <span class="variable">$exit_code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$exit_code</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    elsif ( <span class="variable">$command</span> eq <span class="string">"start"</span> ) &#123;</span><br><span class="line"> </span><br><span class="line">        my <span class="variable">$exit_code</span> = 10;</span><br><span class="line">        <span class="built_in">eval</span> &#123;</span><br><span class="line">            <span class="built_in">print</span> <span class="string">"Enabling the VIP - <span class="variable">$vip</span> on the new master - <span class="variable">$new_master_host</span> \n"</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">        &amp;start_arp();</span><br><span class="line">            <span class="variable">$exit_code</span> = 0;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$@</span>) &#123;</span><br><span class="line">            warn <span class="variable">$@</span>;</span><br><span class="line">            <span class="built_in">exit</span> <span class="variable">$exit_code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$exit_code</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    elsif ( <span class="variable">$command</span> eq <span class="string">"status"</span> ) &#123;</span><br><span class="line">        <span class="built_in">print</span> <span class="string">"Checking the Status of the script.. OK \n"</span>;</span><br><span class="line">        <span class="built_in">exit</span> 0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="built_in">exit</span> 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub <span class="function"><span class="title">start_vip</span></span>() &#123;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \" <span class="variable">$ssh_start_vip</span> \"`;</span><br><span class="line">&#125;</span><br><span class="line">sub <span class="function"><span class="title">stop_vip</span></span>() &#123;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\@<span class="variable">$orig_master_host</span> \" <span class="variable">$ssh_stop_vip</span> \"`;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub <span class="function"><span class="title">start_arp</span></span>() &#123;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \" <span class="variable">$ssh_Bcast_arp</span> \"`;</span><br><span class="line">&#125;</span><br><span class="line">sub usage &#123;</span><br><span class="line">    <span class="built_in">print</span></span><br><span class="line">    <span class="string">"Usage: master_ip_failover --command=start|stop|stopssh|status --ssh_user=user --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给该脚本添加可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x /opt/mysql-mha/master_ip_failover</span><br></pre></td></tr></table></figure><h4 id="3、-配置（manager节点）"><a href="#3、-配置（manager节点）" class="headerlink" title="3、 配置（manager节点）"></a>3、 配置（manager节点）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建相关目录（所有节点）</span></span><br><span class="line">mkdir -p /opt/mysql-mha/mha-node</span><br><span class="line"><span class="comment"># manager节点</span></span><br><span class="line">mkdir -p /opt/mysql-mha/mha</span><br><span class="line"><span class="comment">#编写配置文件</span></span><br><span class="line">vim /opt/mysql-mha/mysql_mha.cnf</span><br><span class="line"><span class="comment">#内容如下:</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">[server default]</span><br><span class="line"><span class="comment">#mha访问数据库的账号与密码</span></span><br><span class="line">user=mha</span><br><span class="line">password=123456</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment">#指定mha的工作目录</span></span><br><span class="line">manager_workdir=/opt/mysql-mha/mha</span><br><span class="line"><span class="comment">#指定管理日志路径</span></span><br><span class="line">manager_log=/opt/mysql-mha/manager.log</span><br><span class="line"><span class="comment">#指定master节点存放binlog的日志文件的目录 log_bin=mysql_bin默认是在/var/lib/mysql</span></span><br><span class="line">master_binlog_dir=/var/lib/mysql</span><br><span class="line"><span class="comment">#指定mha在远程节点上的工作目录</span></span><br><span class="line">remote_workdir=/opt/mysql-mha/mha-node</span><br><span class="line"><span class="comment">#指定主从复制的mysq用户和密码</span></span><br><span class="line">repl_user=slave</span><br><span class="line">repl_password=123456</span><br><span class="line"><span class="comment">#指定检测间隔时间</span></span><br><span class="line">ping_interval=1</span><br><span class="line"><span class="comment">#指定一个脚本，该脚本实现了在主从切换之后，将虚拟ip漂移到新的master上</span></span><br><span class="line">master_ip_failover_script=/opt/mysql-mha/master_ip_failover</span><br><span class="line"><span class="comment">#指定检查的从服务器IP地址.有几个，就用-s选项加几个</span></span><br><span class="line">secondary_check_script=/usr/bin/masterha_secondary_check -s 192.168.96.142 -s 192.168.96.143</span><br><span class="line"><span class="comment">#用于故障切换的时候发送邮件提醒</span></span><br><span class="line"><span class="comment">#report_script=/data1/mysql-mha/send_mail</span></span><br><span class="line">[server1]</span><br><span class="line">hostname=192.168.96.136</span><br><span class="line">port=3306</span><br><span class="line">ssh_user=root</span><br><span class="line">candidate_master=1</span><br><span class="line">check_repl_delay=0</span><br><span class="line">[server2]</span><br><span class="line">hostname=192.168.96.142</span><br><span class="line">port=3306</span><br><span class="line">ssh_user=root</span><br><span class="line">candidate_master=1</span><br><span class="line">check_repl_delay=0</span><br><span class="line">[server3]</span><br><span class="line">hostname=192.168.96.143</span><br><span class="line">port=3306</span><br><span class="line">ssh_user=root</span><br><span class="line">candidate_master=1</span><br><span class="line">check_repl_delay=0</span><br></pre></td></tr></table></figure><p><strong>candidate_master=1</strong></p><blockquote><p>设置为候选master，设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个从库不是集群中最新的slave，no_master=1正好相反</p></blockquote><p><strong>check_repl_delay=0</strong></p><blockquote><p>默认情况下如果一个slave落后master 超过100M的relay logs的话，MHA将不会选择该slave作为一个新的master， 因为对于这个slave的恢复需要花费很长时间；通过设置check_repl_delay=0，MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master=1的主机非常有用，因为这个候选主在切换的过程中一定是新的master</p></blockquote><h3 id="5）在master上手动启动虚拟iP"><a href="#5）在master上手动启动虚拟iP" class="headerlink" title="5）在master上手动启动虚拟iP"></a>5）在master上手动启动虚拟iP</h3><p>第一次配置需要在master节点上手动启动虚拟IP，标签要和master_ip_faioverl配置文件中my $key = ‘1’; 一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ifconfig ens33:1 192.168.96.200/24</span><br></pre></td></tr></table></figure><h3 id="6）在manager-节点测试ssh-无密认证"><a href="#6）在manager-节点测试ssh-无密认证" class="headerlink" title="6）在manager 节点测试ssh 无密认证"></a>6）在manager 节点测试ssh 无密认证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterha_check_ssh   -conf=/opt/mysql-mha/mysql_mha.cnf</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011211008551.png" alt="image-20221011211008551"></p><h3 id="7）在manager-节点上测试mysql主从情况"><a href="#7）在manager-节点上测试mysql主从情况" class="headerlink" title="7）在manager 节点上测试mysql主从情况"></a>7）在manager 节点上测试mysql主从情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterha_check_repl -conf=/opt/mysql-mha/mysql_mha.cnf</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212043467.png" alt="image-20221011212043467"></p><h3 id="8）在manage上启动mha"><a href="#8）在manage上启动mha" class="headerlink" title="8）在manage上启动mha"></a>8）在manage上启动mha</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nohup masterha_manager  \</span><br><span class="line">--conf=/opt/mysql-mha/mysql_mha.cnf \</span><br><span class="line">--remove_dead_master_conf \</span><br><span class="line">--ignore_last_failover &lt; /dev/null &gt; /var/<span class="built_in">log</span>/mha_manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><ul><li><code>--remove_dead_master_conf</code>：该参数代表当发生主从切换后，老的主库的 ip 将会从配置文件中移除。</li><li><code>--manger_log</code>：日志存放位置。</li><li><code>--ignore_last_failover</code>：在缺省情况下，如果 MHA 检测到连续发生宕机，且两次宕机间隔不足 8 小时的话，则不会进行 Failover， 之所以这样限制是为了避免 ping-pong 效应。该参数代表忽略上次 MHA 触发切换产生的文件，默认情况下，MHA 发生切换后会在日志记目录，也就是上面设置的日志app1.failover.complete文件，下次再次切换的时候如果发现该目录下存在该文件将不允许触发切换，除非在第一次切换后收到删除该文件，为了方便，这里设置为–ignore_last_failover。</li></ul><h3 id="9）查看MHA状态"><a href="#9）查看MHA状态" class="headerlink" title="9）查看MHA状态"></a>9）查看MHA状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterha_check_status --conf=/opt/mysql-mha/mysql_mha.cnf</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212129910.png" alt="image-20221011212129910"></p><h3 id="10）查看MHA日志文件"><a href="#10）查看MHA日志文件" class="headerlink" title="10）查看MHA日志文件"></a>10）查看MHA日志文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/mysql-mha/manager.log | grep <span class="string">"current master"</span></span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212156588.png" alt="image-20221011212156588"></p><h3 id="11）manager节点关闭manager服务"><a href="#11）manager节点关闭manager服务" class="headerlink" title="11）manager节点关闭manager服务"></a>11）manager节点关闭manager服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterha_stop --conf=/opt/mysql-mha/mysql_mha.cnf</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212350934.png" alt="image-20221011212350934"></p><h2 id="七、故障模拟与恢复"><a href="#七、故障模拟与恢复" class="headerlink" title="七、故障模拟与恢复"></a>七、故障模拟与恢复</h2><h3 id="1）停掉mysql-master"><a href="#1）停掉mysql-master" class="headerlink" title="1）停掉mysql master"></a>1）停掉mysql master</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure><h3 id="2）查看主备节点"><a href="#2）查看主备节点" class="headerlink" title="2）查看主备节点"></a>2）查看主备节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看虚拟ip</span></span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212533704.png" alt="image-20221011212533704"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录mysql查看主从关系</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line">123456</span><br><span class="line"><span class="comment"># 发现143这个节点已经变成主节点了</span></span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212611349.png" alt="image-20221011212611349"></p><p><img src="https://img.beyourself.org.cn/image-20221011212630888.png" alt="image-20221011212630888"></p><h3 id="3）故障恢复"><a href="#3）故障恢复" class="headerlink" title="3）故障恢复"></a>3）故障恢复</h3><p>先在当前的主库服务器slave1上查看二进制日志和同步点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">123456</span><br><span class="line"></span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure><p>再在<strong>原master</strong>服务器上执行同步操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先恢复mysql服务</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指向新的master节点进行同步</span></span><br><span class="line">change master to</span><br><span class="line">  master_host=<span class="string">'192.168.96.143'</span>,</span><br><span class="line">  master_user=<span class="string">'slave'</span>,</span><br><span class="line">  master_password=<span class="string">'123456'</span>,</span><br><span class="line">  master_log_file=<span class="string">'mysql-bin.000001'</span>,</span><br><span class="line">  master_log_pos=154;</span><br><span class="line"></span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里需要过一段时间再看同步状态</span></span><br><span class="line">show slave status\G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果期间没有数据产生，可以直接查看主从状态，为正常状态且以转移</span></span><br></pre></td></tr></table></figure><p><img src="https://img.beyourself.org.cn/image-20221011212941456.png" alt="image-20221011212941456"></p><h2 id="常见报错解决："><a href="#常见报错解决：" class="headerlink" title="常见报错解决："></a>常见报错解决：</h2><p><strong><img src="/2024/07/27/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8-MHA/1.png" class></strong></p><p>说明机器之间的免密通信没有做好，可以把之前的密钥文件(/root/.ssh下的所有文件)全部删除，重新生成密钥并给每台机器发送自己的公钥。(3台机器之间一定要互相给公钥，自己给自己也要给！！)</p><p><strong><img src="/2024/07/27/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8-MHA/2.png" class></strong></p><p>一般是因为防火墙未关的原因或者是因为有的节点并没有设置对应要求的MySQL用户，导致无法连接。</p><p>如果在最后测试时，主库挂了之后，从库成功成为了主库，且主库与从库之间的数据也会同步，但是VIP并没有漂移过来，在配置文件确定没错的情况下，大概率是因为发生了脑裂，可以重新启动一下主节点和从节点机器试一下。</p><h3 id="关于MHA-manager和主库是否要在一台机器的问题"><a href="#关于MHA-manager和主库是否要在一台机器的问题" class="headerlink" title="关于MHA-manager和主库是否要在一台机器的问题"></a>关于MHA-manager和主库是否要在一台机器的问题</h3><p>根据MHA的设计，通常将MHA的管理节点和数据库节点分离，即管理节点不应该直接兼顾MySQL的主库角色。这是为了确保高可用解决方案的稳定性和可靠性，避免单点故障和资源争用。</p><p>但是公司中会由于服务器规模不够，会将其会组合在一块，这种场景就没有办法了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="MySQL" scheme="https://l66stbz.github.io/tags/MySQL/"/>
    
      <category term="MHA" scheme="https://l66stbz.github.io/tags/MHA/"/>
    
  </entry>
  
  <entry>
    <title>关系型数据库管理系统Mysql</title>
    <link href="https://l66stbz.github.io/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/"/>
    <id>https://l66stbz.github.io/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/</id>
    <published>2024-07-23T13:00:00.000Z</published>
    <updated>2024-07-23T13:39:55.661Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h1 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h1><h1 id="一、数据库介绍"><a href="#一、数据库介绍" class="headerlink" title="一、数据库介绍"></a>一、数据库介绍</h1><h3 id="1、什么是数据库"><a href="#1、什么是数据库" class="headerlink" title="1、什么是数据库"></a>1、什么是数据库</h3><ul><li>数据库就是一个存放计算机数据的仓库，这个仓库是按照一定的数据结构（数据结构是指数据的组织形式或数据之间的联系）来对数据进行组织和存储的，可以通过数据库提供的多种方法来管理其中的数据。</li><li>数据库（Database）是一个<code>有组织的数据集合</code>，通常以电子方式存储和管理。它们<code>允许用户高效地存储、检索、更新和删除数据</code>。数据库可以用于多种目的，从简单的个人信息管理到复杂的企业级应用程序。数据库通常通过<code>数据库管理系统</code>（DBMS）来进行管理和操作。</li></ul><h4 id="1-1-关键概念"><a href="#1-1-关键概念" class="headerlink" title="1.1 关键概念"></a>1.1 <strong>关键概念</strong></h4><ul><li><strong>数据表（Table）</strong>：数据库中的基本结构，数据以行和列的形式存储，每行代表一个记录，每列代表一个字段。</li><li><strong>记录（Record）</strong>：表中的一行，表示一个完整的数据项。</li><li><strong>字段（Field）</strong>：表中的一列，表示数据的一个属性。</li><li><strong>主键（Primary Key）</strong>：唯一标识表中每条记录的字段或字段组合。</li><li><strong>外键（Foreign Key）</strong>：在一个表中引用另一个表的主键，用于建立表之间的关系。</li><li><strong>查询（Query）</strong>：用于从数据库中检索数据的请求，可以使用结构化查询语言（SQL）来编写。</li></ul><p>​        </p><h3 id="2、数据库的种类"><a href="#2、数据库的种类" class="headerlink" title="2、数据库的种类"></a>2、数据库的种类</h3><ul><li>最常用的数据库模式主要有两种，即<strong>关系型数据库</strong>和<strong>非关系型数据库</strong>。</li></ul><h3 id="3、生产环境常用数据库"><a href="#3、生产环境常用数据库" class="headerlink" title="3、生产环境常用数据库"></a>3、生产环境常用数据库</h3><ul><li><strong>关系型数据库：</strong>数据以表格的形式存储，通过SQL进行操作。常见的关系型数据库包括<code>MySQL</code>、<code>PostgreSQL</code>、<code>Oracle</code>和<code>SQL Server</code>。</li><li><strong>非关系型数据库：</strong>：不使用表格存储数据，适用于处理大规模和非结构化数据。常见的NoSQL数据库包括<code>MongoDB</code>、<code>Redis</code>。</li></ul><h3 id="4、关系型数据库"><a href="#4、关系型数据库" class="headerlink" title="4、关系型数据库"></a>4、关系型数据库</h3><h4 id="1、关系型数据库介绍"><a href="#1、关系型数据库介绍" class="headerlink" title="1、关系型数据库介绍"></a>1、关系型数据库介绍</h4><ul><li>关系型数据库模型是把复杂的数据结构归结为简单的二元关系（即二维表格形式）。在关系型数据库中，对数据的操作几乎全部建立在一个或多个关系表格上，通过这些关联的表格分类、合并、连接或选取等运算来实现数据的管理。</li><li>关系型数据可以很好地存储一些关系模型的数据，比如一个老师对应多个学生的数据（“一对多”），一本书对应多个作者（“一对多”），一本书对应一个出版日期（“一对一”）</li></ul><ul><li><p>关系型数据库诞生距今已有 40 多年了，从理论产生到发展到实现产品，例如：常见的 MySQL 和 Oracle 数据库，Oracle 在数据库领域里上升到了霸主地位，形成每年高达数百亿美元的庞大产业市场，而 MySQL 也是不容忽视的数据库，以至于被 Oracle 重金收购了。</p></li><li><p>数据的存储形式：</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220800545.png" alt="1566118937818"></p></li></ul><h4 id="2、关系型数据库小结"><a href="#2、关系型数据库小结" class="headerlink" title="2、关系型数据库小结"></a>2、关系型数据库小结</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 关系型数据库在存储数据时实际就是采用的一张二维表（和 Word 和 Excell 里表格几乎一样）。</span><br><span class="line">- 市场占有量较大的是 MySQL 和 Oracle 数据库，而互联网场景最常用的是 MySQL 数据库。</span><br><span class="line">- 通过 SQL 结构化查询语言来存取、管理关系型数据库的数据。</span><br><span class="line">- 关系型数据库在保持数据安全和数据一致性方面很强，遵循 ACID 理论 ACID指的的事务的4大特性</span><br></pre></td></tr></table></figure><h3 id="5、非关系型数据库"><a href="#5、非关系型数据库" class="headerlink" title="5、非关系型数据库"></a>5、非关系型数据库</h3><h4 id="1、非关系数据库诞生的背景"><a href="#1、非关系数据库诞生的背景" class="headerlink" title="1、非关系数据库诞生的背景"></a>1、非关系数据库诞生的背景</h4><ul><li>非关系型数据库也被称为 NoSQL 数据库，NoSQL 的本意是 “Not Only SQL”，指的是非关系型数据库，而不是“NO SQL”的意思，NoSQL 的产生并不是要彻底否定关系型数据库，而是作为传统数据库的一个有效补充。NoSQL 数据库在特定的场景下可以发挥难以想象的高效率和高性能。特别是对于规模日益扩大的海量数据，超大规模和高并发的微博、微信、SNS 类型的纯动态网站已经显得力不从心，暴露了很多难以克服的问题，例如：传统的关系型数据库IO瓶颈、性能瓶颈都难以有效突破，于是开始出现了大批针对特定场景，以高性能和使用便利为目的功能特异化的数据库产品。NoSQL（非关系型）类的数据库就是这样的情景中诞生并得到了非常迅速的发展。</li></ul><ul><li>NoSQL 是非关系型数据库的广义定义。它打破了长久以来关系型数据库与ACID理论大一统的局面。NoSQL数据存储不需要固定的表结构，通常也不存在连续操作。</li></ul><h4 id="非关系型数据库小结"><a href="#非关系型数据库小结" class="headerlink" title="非关系型数据库小结"></a>非关系型数据库小结</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- NoSQL 数据库不是否定关系型数据库，而是作为关系数据库的一个重要补充。</span><br><span class="line">- NoSQL 数据库为了灵活及高性能、高并发而生，忽略影响高性能、高并发的功能。</span><br><span class="line">- 在NoSQL 数据库领域，当今的最典型产品为 Redis（持久化缓存）、MongoDB、Memcached（纯内存）等。</span><br><span class="line">- NoSQL 数据库没有标准的查询语言（SQL），通常使用数据接口或者查询API。</span><br></pre></td></tr></table></figure><h4 id="3、非关系型数据库种类"><a href="#3、非关系型数据库种类" class="headerlink" title="3、非关系型数据库种类"></a>3、非关系型数据库种类</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.键值（Key-Value）存储数据库</span><br><span class="line">- 键值数据库就类似传统语言中使用的哈希表。可以通过key来添加、查询或者删除数据，因为使用key主键访问，所以会获得很高的性能及扩展性。这个表中有一个特定的键和一个指针指向特定的数据。Key-Value模型对于IT系统来说的优势在于简单、易部署、高并发。</span><br><span class="line">- 典型产品：Memcached、Redis、MemcachedB</span><br><span class="line"></span><br><span class="line">2、列存储（Column-Oriented）数据库</span><br><span class="line">- 列存储数据库将数据存储存在列族（Column Family）中，一个列族存储经常被一起查询的相关数据。举个例子，如果有一个 Person 类，通常会一起查询他们的姓名和年龄而不是薪资。这种情况下，姓名和年龄就会被放入一个列族中，而薪资则在另一个列族中。这部分数据库通常用来应对分布式存储的海量数据。键仍然存在，但是他们的特点是指向了多个列。这些列是由列家族来安排的。</span><br><span class="line">- 典型产品：Cassandra，HBase</span><br><span class="line"></span><br><span class="line">3、面向文档（Document-Oriented）的数据库</span><br><span class="line">- 面向文档数据库会将数据以文档的形式存储,数据存储的最小单位是文档，同一个表中存储的文档属性可以是不同的，数据可以使用XML、JSON等多种形式存储。</span><br><span class="line">- 典型产品：MongDB、CouchDB</span><br><span class="line"></span><br><span class="line">4、图形（Graph）数据库</span><br><span class="line">- 图形数据库允许我们将数据以图的方式存储。图形结构的数据库同其他行列以及刚性结构的 SQL 数据库不同，它是使用灵活的图形模型，并且能够扩展到多个服务器上。</span><br><span class="line">- 典型产品：Neo4J、InfoGr id</span><br></pre></td></tr></table></figure><h3 id="6、常用关系型数据库管理系统"><a href="#6、常用关系型数据库管理系统" class="headerlink" title="6、常用关系型数据库管理系统"></a>6、常用关系型数据库管理系统</h3><h4 id="1、Oracle-数据库"><a href="#1、Oracle-数据库" class="headerlink" title="1、Oracle 数据库"></a>1、Oracle 数据库</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215689.png" alt="image-20200816141727203"></p><ul><li>Oracle 前身叫 SDL，由 Larry Ellison 和另两个编程人员在1977创办，他们开发了自己的拳头产品，在市场上大量销售，1979年，Oracle 公司引入了第一个商用 SQL关系数据库管理系统。Oracle公司是最早开发关系数据库的厂商之一，其产品支持最广泛的操作系统平台。目前 Oracle 关系数据库产品的市场占有率数一数二。</li></ul><ul><li>Oracle 公司是目前全球最大的数据库软件公司，也是近年业务增长极为迅速的软件提供与服务商。</li></ul><ul><li>主要应用范围：传统大企业，大公司，政府，金融，证券等等。</li></ul><ul><li>版本升级：Oracle8i，Oracle9i，Oracle10g，Oracle11g，Oracle12c。</li></ul><h4 id="2、MySQL-数据库"><a href="#2、MySQL-数据库" class="headerlink" title="2、MySQL 数据库"></a>2、MySQL 数据库</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215154.png" alt="image-20200816141801461"></p><ul><li>MySQL 数据库是一个中小型关系型数据库管理系统，软件开发者为瑞典 MySQL AB 公司。在2008年1月16号被 Sun 公司收购，后 Sun 公司又被 Oracle 公司收购。目前MySQL 被广泛地应用在 Internet 上的大中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，许多大中小型网站为了降低网站总体拥有成本而选择了 MySQL 作为网站数据库，甚至国内知名的淘宝网也选择弃用 Oracle 而更换为更开放的 MySQL。</li></ul><ul><li>MySQL 数据库主要应用范围：互联网领域，大中小型网站，游戏公司，电商平台等等。</li></ul><h4 id="3、MariaDB-数据库"><a href="#3、MariaDB-数据库" class="headerlink" title="3、MariaDB 数据库"></a>3、MariaDB 数据库</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215837.png" alt="image-20200816141836935"></p><ul><li>MariaDB 数据库管理系统是 MySQL 数据库的一个分支，主要由开源社区维护。开发这个 MariaDB 数据库分支的可能原因之一是：甲骨文公司收购了MySQL 后，有将 MySQL 闭源的潜在风险，因此 MySQL 开源社区采用分支的方式来避开这个风险。</li></ul><ul><li>开发 MariaDB 数据库的目的是完全兼容 MySQL 数据库，包括 API 和命令行，使之能轻松的成为 MySQL 的代替品。在存储引擎方面，使用 XtraDB （英语：XtraDB）来代替MySQL 的 InnoDB MariaDB 由 MySQL 的创始人 Michael Widenius（英语：Michael Widenius）主导开发，他早前曾以 10 亿美元的价格，将自己创建的公司MySQL AB卖给了 SUN，此后，随着 SUN 被甲骨文收购，MySQL 的所有权也落入Oracle 的手中，MariaDB 数据库的名称来自 MySQL 的创始人Michael Widenius 的女儿 Maria 的名字。</li></ul><h4 id="4、SQL-Server-数据库"><a href="#4、SQL-Server-数据库" class="headerlink" title="4、SQL Server 数据库"></a>4、SQL Server 数据库</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215233.png" alt="image-20200816141945977"></p><ul><li>Microsoft SQL Server是微软公司开发的大型关系型数据库系统。1987年，微软和IBM合作开发完成 OS/2，IBM 在其销售的 OS/2 ExtendedEdition 系统中绑定了 OS/2 DatabaseManager，而微软产品线中尚缺少数据库产品。为此，微软将目光投向 Sybase，同 Sybase 签订了合作协议，使用 Sybase 的技术开发基于 OS/2 平台的关系型数据库。1989年，微软发布了 SQLServer1.0 版。</li></ul><ul><li>SQL Server 的功能比较全面，效率高，可以作为中型企业或单位的数据库平台。</li><li>SQL Server 可以与 Windows 操作系统紧密集成，不论是应用程序开发速度还是系统事务处理运行速度，都能得到较大的 提升。SQL Server 的缺点是只能在 Windows 系统下运行。</li></ul><ul><li>主要应用范围：部分企业电商（央视购物），使用windows服务器平台的企业。</li></ul><h3 id="7、常用非关系型数据库管理系统"><a href="#7、常用非关系型数据库管理系统" class="headerlink" title="7、常用非关系型数据库管理系统"></a>7、常用非关系型数据库管理系统</h3><h4 id="1、Memcached（Key-Value）"><a href="#1、Memcached（Key-Value）" class="headerlink" title="1、Memcached（Key-Value）"></a>1、Memcached（Key-Value）</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215159.png" alt="image-20200816202927598"> </p><ul><li>Memcached 是一个开源的、高性能的、具有分布式内存对象的缓存系统。通过它可以减轻数据库负载，加速动态的 Web 应用，最初版本由 LiveJoumal 的 Brad Fitzpatrick在2003年开发完成。目前全球有非常多的用户都在使用它来构建自己的大负载网站或提高自己的高访问网站的响应速度。注意：Memcache 是这个项目的名称，而Memcached 是服务器端的主程序文件名。</li></ul><ul><li>缓存一般用来保存一些经常被存取的对象或数据（例如，浏览器会把经常访问的网页缓存起来一样），通过缓存来存取对象或数据要比在磁盘上存取快很多，前者是内存，后 者是磁盘。Memcached 是一种纯内存缓存系统，把经常存取的对象或数据缓存在 Memcached 的内存中，这些被缓存的数据被程序通过API的方式被存取，Memcached里面的数据就像一张巨大的 HASH 表，数据以 Key-Value 对的方式存在。Memcached 通过缓存经常被存取的对象或数据，从而减轻频繁读取数据库的压力，提高网站的响应速度.官方：<a href="http://Memcached.org/" target="_blank" rel="noopener">http://Memcached.org/</a></li></ul><ul><li>由于Memcached 为纯内存缓存软件，一旦重启所有数据都会丢失，因此，新浪网基于 Memcached 开发了一个开源项目 MemcacheDB。通过为 Memcached 增加 Berkeley DB 的持久化存储机制和异步主辅复制机制，使 Memcached 具备了事务恢复能力、持久化数据存储能力和分布式复制能力，但是最近几年逐渐被其他的持久化产品替代例如Redis。 </li></ul><p>Memcached缺点：</p><p>1、存储的数据类型比较单一  只能存储字符串</p><p>2、无法持久化(没办法把数据存放到磁盘中)</p><h4 id="2、Redis（Key-Value）"><a href="#2、Redis（Key-Value）" class="headerlink" title="2、Redis（Key-Value）"></a>2、Redis（Key-Value）</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215519.jpg" alt="img"></p><ul><li><p>Redis 是一个Key-Value型存储系统。但Redis支持的存储value 类型相对更多，包括 string（字符串）、list（列表）、set（集合）和 zset（有序集合）等。这些数据类型都支持 push/pop、add/remove 及取交集、并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，Redis 支持各种不同方式的排序。与 Memcached 一样，为了保证效率，Redis 的数据都是缓存在内存中。区别是 Redis 会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了 Master-Slave（主从）同步。</p></li><li><p>Redis 是一个高性能的 Key-Value 数据库。Redis 的出现，很大程度补偿了 Memcached 这类 Key-Value 存储的不足，在部分场合可以对关系数据库有很好的补充作用。它提供了 Python，Ruby，Erlang，PHP 客户端，使用很方便。官方：<a href="http://www.Redis.io/documentation" target="_blank" rel="noopener">http://www.Redis.io/documentation</a></p></li><li><p>Redis 特点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 支持内存缓存，这个功能相当于 Memcached。</span><br><span class="line">2. 支持持久化存储，这个功能相当于 MemcacheDB。</span><br><span class="line">3. 数据类型更丰富。比其他 Key-Value 库功能更强。</span><br><span class="line">4. 支持主从集群，分布式。</span><br></pre></td></tr></table></figure></li><li><p>应用：缓存从存取 Memcached 更改存取 Redis。</p></li></ul><h4 id="3、MongoDB-（Document-Web）"><a href="#3、MongoDB-（Document-Web）" class="headerlink" title="3、MongoDB  （Document-Web）"></a>3、MongoDB  （Document-Web）</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215347.jpg" alt="img"></p><ul><li>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，类似 Json 的 Bjson 格式，因此可以存储比较复杂的数据类型。MongoDB 最大的特点是他支持查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。它的特点是高性能、易部署、易使用，存储数据非常方便。</li><li>MongoDB 服务端可运行在 Linux、Windows 或 OS X 平台，支持32位和64位应用，默认端口为 27017。推荐运行在64位平台。</li></ul><ul><li>MongoDB 把数据存储在文件中（默认路径为：/data/db）。</li></ul><h1 id="二、前言"><a href="#二、前言" class="headerlink" title="二、前言"></a>二、前言</h1><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407092215528.png" alt="image-20200816143411900"></p><p>MySQL是一个<strong>关系型数据库管理系统</strong>，由瑞典MySQL AB 公司开发，目前属于 <a href="https://baike.baidu.com/item/Oracle" target="_blank" rel="noopener">Oracle</a> 旗下产品。MySQL 是最流行的<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/696511" target="_blank" rel="noopener">关系型数据库管理系统</a>之一，在 WEB 应用方面，MySQL是最好的 <a href="https://baike.baidu.com/item/RDBMS/1048260" target="_blank" rel="noopener">RDBMS</a> (Relational Database Management System，关系数据库管理系统) 应用软件之一。关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728" target="_blank" rel="noopener">数据库</a>的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是<a href="https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E7%A0%81/7176422" target="_blank" rel="noopener">开放源码</a>这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p><p>RDBMS即关系数据库管理系统(Relational Database Management System)</p><h4 id="MySQL-类型"><a href="#MySQL-类型" class="headerlink" title="MySQL  类型"></a>MySQL  类型</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 1、MySQL Community Server</span></span></span><br><span class="line"></span><br><span class="line">- MySQL Community Server是社区版本，开源免费，但不提供官方技术支持。MySQL Community Server也是我们通常用的MySQL的版本。根据不同的操作系统平台细分为多个版本。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 2、MySQL Enterprise Edition</span></span></span><br><span class="line"></span><br><span class="line">- MySQL Enterprise Edition企业版本，需付费，可以试用30天。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 3、MySQL Cluster</span></span></span><br><span class="line"></span><br><span class="line">- MySQL Cluster集群版，开源免费。可将几个MySQL Server封装成一个Server。MySQL Cluster CGE 高级集群版，需付费。</span><br></pre></td></tr></table></figure><h4 id="MySQL-安装方式"><a href="#MySQL-安装方式" class="headerlink" title="MySQL 安装方式"></a>MySQL 安装方式</h4><h6 id="1、yum-安装"><a href="#1、yum-安装" class="headerlink" title="1、yum 安装"></a>1、yum 安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">优点：操作简单易用。不用单独下载，服务器可以联网且yum源没有问题即可(可以选择国内的163/阿里源)</span><br></pre></td></tr></table></figure><h6 id="2、编译安装"><a href="#2、编译安装" class="headerlink" title="2、编译安装"></a>2、编译安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 5.1.X 及之前的版本是通过下载tar包以后解压后进入软件包解压路径。然后./configure、make、make install</span><br><span class="line"></span><br><span class="line">- 5.4.X 到 5.7.X 通过下载tar包以后解压后进入软件包解压路径。然后 cmake、make、make install(cmake需要提前安装)</span><br><span class="line"></span><br><span class="line">优点：可以定制功能特性。</span><br></pre></td></tr></table></figure><h6 id="3、二进制安装"><a href="#3、二进制安装" class="headerlink" title="3、二进制安装"></a>3、二进制安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官方下载二进制包，解压初始化即可直接使用不用安装</span><br></pre></td></tr></table></figure><h6 id="4、rpm-安装"><a href="#4、rpm-安装" class="headerlink" title="4、rpm 安装"></a>4、rpm 安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 需要提前下载 rpm 软件包上传到服务器系统本地</span><br><span class="line">- 使用 rpm 或者 yum 命令直接安装</span><br></pre></td></tr></table></figure><h4 id="MySQL-版本号"><a href="#MySQL-版本号" class="headerlink" title="MySQL 版本号"></a>MySQL 版本号</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">以 MySQL 5.7.27 这个版本的版本号为例说明每个数字含义。</span><br><span class="line"></span><br><span class="line">- 第一个数字(5)主版本号：文件格式改动时，将作为新的版本发布；</span><br><span class="line">- 第二个数字(7)发行版本号：新增特性或者改动不兼容时，发行版本号需要更改；</span><br><span class="line">- 第三个数字(27)发行序列号：主要是小的改动，如bug的修复、函数添加或更改、配置参数的更改等。</span><br></pre></td></tr></table></figure><h5 id="关系型数据库与非关系型数据库的区别"><a href="#关系型数据库与非关系型数据库的区别" class="headerlink" title="关系型数据库与非关系型数据库的区别:"></a>关系型数据库与非关系型数据库的区别:</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.关系型数据库:</span><br><span class="line">优点：</span><br><span class="line">1、易于维护：都是使用表结构，格式一致；</span><br><span class="line">2、使用方便：SQL语言通用，可用于复杂查询；</span><br><span class="line">3、复杂操作：支持SQL，可用于一个表以及多个表之间非常复杂的查询。</span><br><span class="line">缺点：</span><br><span class="line">1、读写性能比较差，尤其是海量数据的高效率读写；</span><br><span class="line">2、固定的表结构，灵活度稍欠；</span><br><span class="line">3、高并发读写需求，传统关系型数据库来说，硬盘I/O是一个很大的瓶颈。</span><br><span class="line">=============================================================================</span><br><span class="line">2.非关系型数据库严格上不是一种数据库，应该是一种数据结构化存储方法的集合，可以是文档或者键值对等。</span><br><span class="line">优点：</span><br><span class="line">1、格式灵活：存储数据的格式可以是key,value形式、文档形式、图片形式等等，使用灵活，应用场景广泛。</span><br><span class="line">2、速度快：nosql可以使用硬盘或者随机存储器作为载体，而关系型数据库只能使用硬盘；</span><br><span class="line">3、高扩展性；</span><br><span class="line">4、成本低：nosql数据库部署简单，基本都是开源软件。</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">1、不提供sql支持；</span><br><span class="line">2、无事务处理；</span><br><span class="line">3、数据结构相对复杂，复杂查询方面稍欠。</span><br></pre></td></tr></table></figure><p>MySQL的官方网址： <a href="http://www.mysql.com/" target="_blank" rel="noopener">http://www.mysql.com/</a> ，MySQL的社区版本下载地址为： <a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/</a> ，在写本文时，当前的MySQL最新版本是：8.0 。</p><p><strong>什么是sql？</strong></p><p>SQL代表结构化查询语言(Structured Query Language)。SQL是用于访问数据库的标准化语言。</p><p>SQL包含三个部分：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据定义语言包含定义数据库及其对象的语句，例如表，视图，触发器，存储过程等。</span><br><span class="line">数据操作语言包含允许您更新和查询数据的语句。</span><br><span class="line">数据控制语言允许授予用户权限访问数据库中特定数据的权限。</span><br></pre></td></tr></table></figure><h3 id="mysql安装"><a href="#mysql安装" class="headerlink" title="mysql安装"></a>mysql安装</h3><p>关闭防火墙和selinux</p><h4 id="1、编译安装mysql5-7"><a href="#1、编译安装mysql5-7" class="headerlink" title="1、编译安装mysql5.7"></a>1、编译安装mysql5.7</h4><p>1、清理安装环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum erase mariadb mariadb-server mariadb-libs mariadb-devel -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel -r mysql</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /etc/my*</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /var/lib/mysql</span></span><br></pre></td></tr></table></figure><p>2、创建mysql用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# useradd -r mysql -M -s /bin/false</span><br></pre></td></tr></table></figure><p>3、从官网下载tar包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.27.tar.gz</span><br></pre></td></tr></table></figure><p>4、安装编译工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum -y install ncurses ncurses-devel openssl-devel bison gcc gcc-c++ make</span></span><br><span class="line">cmake:</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum -y install cmake</span></span><br></pre></td></tr></table></figure><p>5、创建mysql目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# mkdir -p /usr/local/&#123;data,mysql,log&#125;</span><br></pre></td></tr></table></figure><p>6、解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# tar xzvf mysql-boost-5.7.27.tar.gz -C /usr/local/</span><br><span class="line">注:如果安装的MySQL5.7及以上的版本，在编译安装之前需要安装boost,因为高版本mysql需要boots库的安装才可以正常运行。否则会报CMake Error at cmake/boost.cmake:81错误</span><br><span class="line">安装包里面自带boost包</span><br><span class="line">Boost库是为C++语言标准库提供扩展的一些C++程序库</span><br></pre></td></tr></table></figure><p>7、编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">cd 解压的mysql目录</span><br><span class="line">[root@mysql-server ~]# cd /usr/local/mysql-5.7.27/</span><br><span class="line">[root@mysql-server mysql-5.7.27]# cmake . \</span><br><span class="line">-DWITH_BOOST=boost/boost_1_59_0/ \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DMYSQL_DATADIR=/usr/local/mysql/data \</span><br><span class="line">-DINSTALL_MANDIR=/usr/share/man \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1</span><br><span class="line"></span><br><span class="line">提示：boost也可以使用如下指令自动下载，如果不下载bost压缩包，把下面的这一条添加到配置中第二行</span><br><span class="line">-DDOWNLOAD_BOOST=1/</span><br><span class="line">参数详解:</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \   安装目录</span><br><span class="line">-DSYSCONFDIR=/etc \   配置文件存放 （默认可以不安装配置文件）</span><br><span class="line">-DMYSQL_DATADIR=/usr/local/mysql/data \   数据目录   错误日志文件也会在这个目录</span><br><span class="line">-DINSTALL_MANDIR=/usr/share/man \     帮助文档 </span><br><span class="line">-DMYSQL_TCP_PORT=3306 \     默认端口</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \  sock文件位置，用来做网络通信的，客户端连接服务器的时候用</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \    默认字符集。字符集的支持，可以调</span><br><span class="line">-DEXTRA_CHARSETS=all \   扩展的字符集支持所有的</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \  支持的</span><br><span class="line">-DWITH_READLINE=1 \    上下翻历史命令</span><br><span class="line">-DWITH_SSL=system \    使用私钥和证书登陆（公钥）  可以加密。 适用与长连接。坏处：速度慢</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \   嵌入式数据库</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \    从本地倒入数据，不是备份和恢复。</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1  默认的存储引擎，支持外键</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801366.png" alt="image-20201202104048131"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql-5.7.27]# make &amp;&amp; make install</span><br><span class="line">如果安装出错，想重新安装：</span><br><span class="line">    不用重新解压，只需要删除安装目录中的缓存文件CMakeCache.txt</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801462.png" alt="image-20201202104258768"></p><p><strong>需要很长时间！</strong>大约半小时</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801542.png" alt="image-20201202110755681"></p><p>8、初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql-5.7.27]# cd /usr/local/mysql</span><br><span class="line">[root@mysql-server mysql]# chown -R mysql.mysql .</span><br><span class="line">[root@mysql-server mysql]# ./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data     ---初始化完成之后，一定要记住提示最后的密码用于登陆或者修改密码</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801149.png" alt="image-20201202110930476"></p><p>2720C+Xa:E+j</p><p> 初始化,只需要初始化一次</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# vim /etc/my.cnf    ---将文件中所有内容注释掉在添加如下内容</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">user = mysql</span><br><span class="line">basedir = /usr/local/mysql  #指定安装目录</span><br><span class="line">datadir = /usr/local/mysql/data  #指定数据存放目录</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">character_set_server = utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参数详解：</span><br><span class="line">[client]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认连接端口</span></span><br><span class="line">port = 3306</span><br><span class="line"><span class="meta">#</span><span class="bash"> 用于本地连接的socket套接字</span></span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"><span class="meta">#</span><span class="bash"> 编码</span></span><br><span class="line">default-character-set = utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务端口号，默认3306</span></span><br><span class="line">port = 3306</span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql启动用户</span></span><br><span class="line">user = mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql安装根目录</span></span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql数据文件所在位置</span></span><br><span class="line">datadir = /usr/local/mysql/data</span><br><span class="line"><span class="meta">#</span><span class="bash"> 为MySQL客户端程序和服务器之间的本地通讯指定一个套接字文件</span></span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据库默认字符集,主流字符集支持一些特殊表情符号(特殊表情符占用4个字节)</span></span><br><span class="line">character_set_server = utf8</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801157.png" alt="image-20201202111147795"></p><p>9、启动mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# cd /usr/local/mysql</span><br><span class="line">[root@mysql-server mysql]# ./bin/mysqld_safe --user=mysql &amp;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801514.png" alt="image-20201202111228305"></p><p>10、登录mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql]# /usr/local/mysql/bin/mysql -uroot -p'2720C+Xa:E+j'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.7.27</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><p>11、修改密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql]# /usr/local/mysql/bin/mysqladmin -u root -p'2720C+Xa:E+j'  password '1'</span><br><span class="line">mysqladmin: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Warning: Since password will be sent to server in plain text, use ssl connection to ensure password safety.</span><br></pre></td></tr></table></figure><p>12、添加环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql]# vim /etc/profile    ---添加如下</span><br><span class="line">PATH=$PATH:$HOME/bin:/usr/local/mysql/bin</span><br><span class="line">[root@mysql-server mysql]# source /etc/profile</span><br><span class="line">之后就可以在任何地方使用mysql命令登陆Mysql服务器：</span><br><span class="line">[root@mysql-server mysql]# mysql --version</span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.27, for Linux (x86_64) using  EditLine wrapper</span><br><span class="line">[root@mysql-server mysql]# mysql -uroot -p'1'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.7.27 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"><span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><p>13、配置mysqld服务的管理工具：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql]# cd /usr/local/mysql/support-files/</span><br><span class="line">[root@mysql-server support-files]# cp mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@mysql-server support-files]# chkconfig --add mysqld</span><br><span class="line">[root@mysql-server support-files]# chkconfig mysqld on</span><br><span class="line">先将原来的进程杀掉</span><br><span class="line">[root@mysql-server ~]# /etc/init.d/mysqld start </span><br><span class="line">Starting MySQL. SUCCESS! </span><br><span class="line">[root@mysql-server ~]# netstat -lntp </span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1087/sshd           </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1087/sshd           </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      31249/mysqld        </span><br><span class="line">[root@mysql-server ~]# /etc/init.d/mysqld stop</span><br></pre></td></tr></table></figure><p>数据库编译安装完成.</p><h4 id="2、yum安装方式"><a href="#2、yum安装方式" class="headerlink" title="2、yum安装方式"></a>2、yum安装方式</h4><p>关闭防火墙和selinux</p><p>mysql的官方网站：<a href="http://www.mysql.com" target="_blank" rel="noopener">www.mysql.com</a></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801865.png" alt="1566135397943"></p><p>拉到底</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801462.png" alt="1566135423896"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801573.png" alt="1566135475994"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801722.png" alt="1566135502131"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801129.png" alt="1566135543502"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801983.png" alt="1566136040912"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下载</span><br><span class="line">[root@mysql-server ~]# wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">或者下载到本地上传到服务器</span><br></pre></td></tr></table></figure><p>2.安装mysql的yum仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">[root@mysql-server ~]# yum -y install yum-utils    #安装yum工具包</span><br></pre></td></tr></table></figure><p>3、配置yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# vim /etc/yum.repos.d/mysql-community.repo   #修改如下</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801807.png" alt="1566136558444"></p><p>1表示开启，0表示关闭</p><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum-config-manager --<span class="built_in">enable</span> mysql57-community   将禁用的yum源库启用</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum-config-manager --<span class="built_in">disable</span> mysql80-community   将启用的yum源库禁用</span></span><br></pre></td></tr></table></figure><p>4、安装数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# yum install -y mysql-community-server</span><br><span class="line">启动服务</span><br><span class="line">[root@mysql-server ~]# systemctl start mysqld</span><br><span class="line">设置开机启动</span><br><span class="line">[root@mysql-server ~]# systemctl enable mysqld</span><br></pre></td></tr></table></figure><p>5、查找密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">密码保存在日志文件中</span><br><span class="line">[root@mysql-server ~]# grep password /var/log/mysqld.log</span><br><span class="line">2019-08-18T14:03:51.991454Z 1 [Note] A temporary password is generated for root@localhost: woHtkMgau9,w</span><br></pre></td></tr></table></figure><p>6、修改密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">两种方式：</span><br><span class="line">第一种：</span><br><span class="line">[root@mysql-server ~]# mysql -uroot -p'woHtkMgau9,w'   #登录</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.7.27</span><br><span class="line">....</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'1'</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line">Bye</span><br><span class="line">[root@mysql-server ~]# mysql -uroot -p'1'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.27 MySQL Community Server (GPL)</span><br><span class="line">...</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line">第二种：</span><br><span class="line"><span class="meta">#</span><span class="bash"> mysqladmin -u root -p<span class="string">'旧密码'</span> password <span class="string">'新密码'</span></span></span><br><span class="line">注：修改密码必须大小写数字和特殊符号都有。</span><br></pre></td></tr></table></figure><p><strong>扩展</strong></p><p>通过配置文件设置密码强度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># vim /etc/my.cnf   #在最后添加如下内容</span></span><br><span class="line">validate_password=off</span><br><span class="line"></span><br><span class="line">[root@mysql-server ~]<span class="comment"># systemctl restart mysqld   #重启mysql生效</span></span><br><span class="line">可以用第二种方式修改为简单的密码：</span><br><span class="line">[root@mysql-server ~]<span class="comment"># mysqladmin -uroot -p'1' password '1'</span></span><br><span class="line">mysqladmin: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Warning: Since password will be sent to server <span class="keyword">in</span> plain text, use ssl connection to ensure password safety.</span><br><span class="line">[root@mysql-server ~]<span class="comment"># mysql -uroot -p1</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.27 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">编译安装：</span><br><span class="line"><span class="meta">#</span><span class="bash"> ls</span></span><br><span class="line">COPYING       README       bin   include  mysql-test  support-files</span><br><span class="line">COPYING-test  README-test  docs  lib      share</span><br><span class="line"></span><br><span class="line">1、bin目录</span><br><span class="line">用于放置一些可执行文件，如mysql、mysqld、mysqlbinlog等。</span><br><span class="line">2、include目录</span><br><span class="line">用于放置一些头文件，如：mysql.h、mysql_ername.h等。</span><br><span class="line">3、lib目录</span><br><span class="line">用于放置一系列库文件。</span><br><span class="line">4、share目录</span><br><span class="line">用于存放字符集、语言等信息。</span><br><span class="line"></span><br><span class="line">yum安装：</span><br><span class="line">/var/lib/mysql    #存放数据文件</span><br><span class="line">/usr/share/mysql  #用于存放字符集、语言等信息。</span><br></pre></td></tr></table></figure><h1 id="三、数据库基本操作"><a href="#三、数据库基本操作" class="headerlink" title="三、数据库基本操作"></a>三、数据库基本操作</h1><h3 id="一、数据库存储引擎（扩展）"><a href="#一、数据库存储引擎（扩展）" class="headerlink" title="一、数据库存储引擎（扩展）"></a>一、数据库存储引擎（扩展）</h3><p>​       数据库存储引擎是数据库底层软件组织，数据库管理系统（DBMS）使用数据引擎进行创建、查询、更新和删除数据。不同的存储引擎提供不同的存储机制、索引、锁定等功能，使用不同的存储引擎，还可以 获得特定的功能。现在许多不同的数据库管理系统都支持多种不同的数据引擎。MySQL的核心就是存储引擎。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MySQL存储引擎介绍 </span><br><span class="line">文件系统： 操作系统组织和存取数据的一种机制。文件系统是一种软件。 </span><br><span class="line">类型：ext2 3 4 ，xfs</span><br><span class="line">不管使用什么文件系统，数据内容不会变化 不同的是，存储空间、大小、速度。 </span><br><span class="line">MySQL引擎： 可以理解为，MySQL的“文件系统”，只不过功能更加强大。 </span><br><span class="line">MySQL引擎功能： 除了可以提供基本的存取功能，还有更多功能事务功能、锁定、备份和恢复、优化以及特殊功能。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1、InnoDB存储引擎:默认引擎，最常用的。 #速度较慢，但是非常安全，支持事务。</span><br><span class="line">  InnoDB是事务型数据库的首选引擎，支持事务安全表（ACID），支持行锁定和外键;InnoDB是默认的MySQL引擎</span><br><span class="line">InnoDB特点： </span><br><span class="line">  支持事务处理，支持外键，支持崩溃修复和并发控制。如果需要对事务的完整性要求比较高（比如银行），要求实现并发控制（比如售票），那选择InnoDB有很大的优势。如果需要频繁的更新、删除操作的数据库，也可以选择InnoDB，因为支持事务的提交（commit）和回滚（rollback）。</span><br><span class="line"></span><br><span class="line">2、MyISAM存储引擎：（了解）#牺牲一些安全性，一般不出错，不支持事务，速度比innodb引擎要快一些。</span><br><span class="line">     MyISAM基于ISAM存储引擎，并对其进行扩展。它是在Web、数据仓储和其他应用环境下最常使用的存储引擎之一。MyISAM拥有较高的插入、查询速度，但不支持事务。</span><br><span class="line">MyISAM特点： </span><br><span class="line">     插入数据快，空间和内存使用比较低。如果表主要是用于插入新记录和读出记录，那么选择MyISAM能实现处理高效率。如果应用的完整性、并发性要求比较低，也可以使用。</span><br><span class="line">12306查询 只生成一条数据这种适合</span><br><span class="line"></span><br><span class="line">3、MEMORY内存型引擎(了解)#很大程度牺牲安全性，速度很快，全部占用的内存。</span><br><span class="line">   MEMORY存储引擎将表中的数据存储到内存中，为查询和引用其他表数据提供快速访问</span><br><span class="line">MEMORY特点： </span><br><span class="line">   所有的数据都在内存中，数据的处理速度快，但是安全性不高。如果需要很快的读写速度，对数据的安全性要求较低，可以选择MEMOEY。它对表的大小有要求，不能建立太大的表。所以，这类数据库只使用在相对较小的数据库表。</span><br><span class="line"></span><br><span class="line">4、Archive(归档引擎)</span><br></pre></td></tr></table></figure><p>  <strong>如何选择引擎：</strong>如果要提供提交、回滚、并要求实现并发控制，InnoDB是一个好的选择；如果数据表主要用来插入和查询记录，则MyISAM引擎能提供较高的处理效率；如果只是临时存放数据，数据量不大，并且不需要较高的数据安全性，可以选择将数据保存在内存中的Memory引擎；MySQL中使用该引擎作为临时表，存放查询的中间结果；如果只有INSERT和SELECT操作，可以选择Archive，Archive支持高并发的插入操作，但是本身不是事务安全的。Archive非常适合存储归档数据，如记录日志信息可以使用Archive。</p><p>​        <strong>使用哪一种引擎需要灵活选择，一个数据库中多个表可以使用不同引擎以满足各种性能和实际需求，使用合适的存储引擎，将会提高整个数据库的性能。</strong></p><p> 存储引擎查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show engines;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801947.png" alt="1566142892507"></p><p>修改搜索引擎</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ENGINE=引擎;</span><br></pre></td></tr></table></figure><p>看你的mysql当前默认的存储引擎:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;%storage_engine%&#39;;</span><br></pre></td></tr></table></figure><p>如何查看Mysql服务器上的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br></pre></td></tr></table></figure><p>创建时候指定引擎</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t1(id int,manager char(10)) engine &#x3D;innodb;</span><br></pre></td></tr></table></figure><p><strong>了解:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.什么是外键：外键的主要作用是保持数据的一致性、完整性。</span><br><span class="line">2.什么是索引:索引相当于书中的目录，可以提高数据检索的效率，降低数据库的IO的压力。MySQL在300万条记录左右性能开始逐渐下降，虽然官方文档说500~800w记录，所以大数据量建立索引是非常有必要的</span><br><span class="line">3.什么是行锁定与锁表：可以将一张表锁定和可以单独锁一行的记录。为了防止你在操作的同时也有别人在操作。</span><br><span class="line">4.什么是事务：事务是由一步或几步数据库的操作。这系列操作要么全部执行，要么全部放弃执行。</span><br></pre></td></tr></table></figure><h4 id="事务控制语言-TCL"><a href="#事务控制语言-TCL" class="headerlink" title="事务控制语言(TCL)"></a>事务控制语言(TCL)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事务控制语言 （Transation Control Language）  有时可能需要使用 DML 进行批量数据的删除，修改，增加。比如，在一个员工系统中，想删除一个人的信息。除了删除这个人的基本信息外，还应该删除与此人有关的其他信息，如邮箱，地址等等。那么从开始执行到结束，就会构成一个事务。对于事务，要保证事务的完整性。要么成功，要么撤回。</span><br></pre></td></tr></table></figure><h6 id="事务要符合四个条件-ACID-："><a href="#事务要符合四个条件-ACID-：" class="headerlink" title="事务要符合四个条件(ACID)："></a>事务要符合四个条件(ACID)：</h6><p>事务具有<strong>四个特性</strong>：<strong>原子性</strong>（Atomicity）、<strong>一致性</strong>（Consistency）、<strong>隔离性</strong>（Isolation）和<strong>持续性</strong>（Durability）。这四个特性也简称<strong>ACID</strong>性。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">（1）原子性：事务是应用中最小的执行单位，就如原子是自然界最小颗粒，事务要么成功，要么撤回.具有不可再分的特征一样。事务是应用中不可再分的最小执行体。（最小了，不可再分了）</span><br><span class="line"></span><br><span class="line">（2）一致性：事务执行的结果，必须使数据库从一个一致性状态，变到另一个一致性状态比如：当数据库中只包含事务成功提交的结果时，数据库处于一致性状态。一致性是通过原子性来保证的。</span><br><span class="line"></span><br><span class="line">（3）隔离性：当涉及到多用户操作同一张表时，数据库会为每一个用户开启一个事务。各个事务的执行互不干扰，任意一个事务的内部操作对其他并发的事务都是隔离的。也就是说：并发执行的事务之间不能看到对方的中间状态，并发执行的事务之间不相互影响。（说白了，就是你做你的，我做我的！）</span><br><span class="line"></span><br><span class="line">（4）持续性：持续性也称为持久性指事务一旦提交对数据所做的任何改变，都要记录到永久存储器中，通常是保存进物理数据库。即使数据库崩溃了，我们也要保证事务的完整性。</span><br></pre></td></tr></table></figure><h3 id="二、sql语句"><a href="#二、sql语句" class="headerlink" title="二、sql语句"></a>二、sql语句</h3><p>增删改查</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SQL（Structured Query Language 即结构化查询语言）</span><br><span class="line">SQL语言主要用于存取数据、查询数据、更新数据和管理关系数据库系统，SQL语言由IBM开发。</span><br><span class="line">DDL语句数据库定义语言：数据库、表、视图、索引、存储过程，例如CREATE DROP ALTER</span><br><span class="line">DML语句   数据库操纵语言（对记录的操作）： 插入数据INSERT、删除数据DELETE、更新数据UPDATE</span><br><span class="line">DCL语句数据库控制语言（和权限有关）： 例如控制用户的访问权限GRANT、REVOKE</span><br><span class="line">DQL语句   数据库查询语言：查询数据SELECT</span><br></pre></td></tr></table></figure><p><strong>程序连接数据库的文件:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A. ODBC --------- PHP&lt;.php&gt;</span><br><span class="line">B. JDBC ----------- JAVA &lt;.jsp&gt;</span><br></pre></td></tr></table></figure><p>==========================================================================</p><p>库—-相当于一个目录，存放数据的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">库里面存放的表， 相当于是文件。</span><br><span class="line">每一行叫做记录，除第一行。</span><br><span class="line">每一列叫一个字段。列上面的第一个叫字段名称。</span><br><span class="line">创建一个库：----&gt;查看库---&gt;进入这个库-----&gt;创建表-----&gt;查看表：查看表名，表的字段（表结构），表里面的内容（表记录），查看表的状态-----&gt;修改表：添加字段，删除字段，修改字段-----&gt;修改记录（更新记录），添加记录，删除记录。各种查询，删除表，删除库。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.创建库</span><br><span class="line">mysql&gt; create database 库名;</span><br><span class="line">2.查看数据库</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">3.进入数据库</span><br><span class="line">mysql&gt; use 库名</span><br><span class="line">4.查看当前所在的库</span><br><span class="line">mysql&gt; select database();</span><br><span class="line">5.查看当前库下所有的表格</span><br><span class="line">mysql&gt; show tables;</span><br></pre></td></tr></table></figure><p>创建表</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段名<span class="number">1</span>  类型[(宽度) 约束条件],</span><br><span class="line">字段名<span class="number">2</span>  类型[(宽度) 约束条件],</span><br><span class="line">字段名<span class="number">3</span>  类型[(宽度) 约束条件]</span><br><span class="line">)[存储引擎 字符集];</span><br><span class="line">==在同一张表中，字段名是不能相同</span><br><span class="line">==宽度和约束条件可选</span><br><span class="line">==字段名和类型是必须的</span><br><span class="line">=========================================================</span><br><span class="line">1.创建表:</span><br><span class="line">创建表 <span class="keyword">create</span> <span class="keyword">table</span> t1(<span class="keyword">id</span> <span class="built_in">int</span>,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),age <span class="built_in">int</span>); </span><br><span class="line">                      字段 类型 字段 类型(长度)，字段 类型 </span><br><span class="line">mysql&gt; create table t1(id int,name varchar(50),sex enum('m','f'),age int);</span><br><span class="line"></span><br><span class="line">2.查看有哪些表</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"></span><br><span class="line">3.查看表结构：</span><br><span class="line">mysql&gt; desc t1;</span><br><span class="line"></span><br><span class="line">4.查看表里面的所有记录:</span><br><span class="line">语法: <span class="keyword">select</span> 内容 <span class="keyword">from</span> 表名；</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> t1;</span><br><span class="line">*:代表所有内容</span><br><span class="line"></span><br><span class="line">5.查看表里面的指定字段：</span><br><span class="line">语法:<span class="keyword">select</span> 字段，字段 <span class="keyword">from</span> 表名；</span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">name</span>,sex <span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line">6.查看表的状态</span><br><span class="line">mysql&gt; show table status like '表名'\G    ---每条SQL语句会以分号结尾，想看的清楚一些以\G结尾，一条记录一条记录显示。（把表90度向左反转，第一列显示字段，第二列显示记录）使用的\G就不用添加分号了</span><br><span class="line"></span><br><span class="line">7.修改表名称</span><br><span class="line">方式一、语法:<span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名;</span><br><span class="line">mysql&gt; rename table t1 to t2;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">方式二、语法:<span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> 新表名;</span><br><span class="line">mysql&gt; alter table t2 rename t3;</span><br><span class="line"></span><br><span class="line">8.使用edit(\e)编辑<span class="comment">------了解</span></span><br><span class="line">mysql&gt; \e  #可以写新的语句，调用的vim编辑器，在里面结尾的时候不加分号，保存退出之后在加“;”</span><br><span class="line">    -&gt; ;</span><br><span class="line">    </span><br><span class="line">9.删除表</span><br><span class="line">mysql&gt; drop table 表名;</span><br><span class="line"></span><br><span class="line">10.删除库</span><br><span class="line">mysql&gt; drop database 库名;</span><br></pre></td></tr></table></figure><h1 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h1><h1 id="四、数据类型"><a href="#四、数据类型" class="headerlink" title="四、数据类型"></a>四、数据类型</h1><h2 id="1、数据类型"><a href="#1、数据类型" class="headerlink" title="1、数据类型"></a><strong>1、数据类型</strong></h2><p>在MySQL数据库管理系统中，可以通过存储引擎来决定表的类型。同时，MySQL数据库管理系统也<br>提供了数据类型决定表存储数据的类型。</p><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">1.整型</span><br><span class="line">作用：用于存储用户的年龄、游戏的Level、经验值等。</span><br><span class="line">分类：tinyint  smallint  mediumint  int  bigint</span><br><span class="line"></span><br><span class="line">常用的是int</span><br><span class="line">显示宽度：类型后面小括号内的数字是显示的最小宽度，并不能限制插入数值的大小    </span><br><span class="line">比如：bigint(2)    2是显示宽度</span><br><span class="line">取值范围：</span><br><span class="line">| MySQL数据类型   |       最小值                |  最大值              |</span><br><span class="line">| <span class="comment">------------- | -------------------------- | -------------------- |</span></span><br><span class="line">| tinyint(n)    |  -128                      |  127                 |</span><br><span class="line">| smallint(n)   |  -32,768                   |  32,767              |</span><br><span class="line">| mediumint(n)  |  -8388608                  |  8388607             |</span><br><span class="line">| int(n)        |  -2,147,483,648            |  2,147,483,647       |</span><br><span class="line">| bigint(n)     |  -9,223,372,036,854,775,808|  9,223,372,036,854,7 |</span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line">结论：</span><br><span class="line">- 当整数值超过 int 数据类型支持的范围时，就可以采用 bigint。</span><br><span class="line">- 在 MySQL 中，int 数据类型是主要的整数数据类型。</span><br><span class="line">- int(n)里的n是表示<span class="keyword">SELECT</span>查询结果集中的显示宽度，并不影响实际的取值范围，没有影响到显示的宽度</span><br><span class="line"></span><br><span class="line"><span class="comment">#整形的宽度仅为显示宽度，不是限制。因此建议整形无须指定宽度。</span></span><br><span class="line">示例：</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> ldq.test1(age <span class="built_in">int</span>(<span class="number">10</span>));     //在ldq库下创建test1表格，设置数据类型</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  test1(age) values(1000);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  test1(age) values(2147483647);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  test1(age) values(2147483648);    //超出范围，报错</span><br><span class="line">ERROR 1264 (22003): Out of range value for column 'age' at row 1</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test1;//查询</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| age        |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">|        100 |</span><br><span class="line">|       1000 |</span><br><span class="line">| 2147483647 |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">=====================================================</span><br><span class="line"><span class="number">2.</span>浮点数类型     <span class="built_in">FLOAT</span> <span class="keyword">DOUBLE</span></span><br><span class="line">作用：用于存储用户的身高、体重、薪水等</span><br><span class="line"><span class="built_in">float</span>(<span class="number">5</span>,<span class="number">3</span>)      <span class="comment">#一共5位，小数占3位.做了限制</span></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> test4(float_test <span class="built_in">float</span>(<span class="number">5</span>,<span class="number">2</span>));  <span class="comment">#案例   宽度不算小数点</span></span><br><span class="line">mysql&gt; desc test4;</span><br><span class="line">+<span class="comment">------------+------------+------+-----+---------+-------+</span></span><br><span class="line">| Field      | Type       | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">------------+------------+------+-----+---------+-------+</span></span><br><span class="line">| float_test | float(5,2) | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">------------+------------+------+-----+---------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> test4(float_test) <span class="keyword">values</span>(<span class="number">123.345534354</span>);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test4(float_test) values(34.39567);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test4(float_test) values(678.99993);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test4(float_test) values(6784.9);</span><br><span class="line">ERROR 1264 (22003): Out of range value for column 'float_test' at row 1</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test4;</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| float_test |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">|     123.35 |</span><br><span class="line">|      34.40 |</span><br><span class="line">|     679.00 |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">====================================================================================</span><br><span class="line">定点数类型    <span class="built_in">DEC</span></span><br><span class="line">定点数在MySQL内部以字符串形式存储，比浮点数更精确，适合用来表示货币等精度高的数据。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>字符串类型  </span><br><span class="line">作用：用于存储用户的姓名、爱好、电话，邮箱地址，发布的文章等 </span><br><span class="line">字符类型 <span class="built_in">char</span> <span class="built_in">varchar</span>  <span class="comment">--存字符串</span></span><br><span class="line"></span><br><span class="line">- <span class="built_in">char</span>表示定长字符串，长度是固定的；如果插入数据的长度小于<span class="built_in">char</span>的固定长度时，则用空格填充；因为长度固定，所以存取速度要比<span class="built_in">varchar</span>快很多，甚至能快<span class="number">50</span>%，但正因为其长度固定，所以会占据多余的空间。</span><br><span class="line">- <span class="built_in">varchar</span>表示可变长字符串，长度是可变的；插入的数据是多长，就按照多长来存储；<span class="built_in">varchar</span>在存取方面与<span class="built_in">char</span>相反，它存取慢，因为长度不固定，但正因如此，不占据多余的空间。</span><br><span class="line">- 结合性能角度（<span class="built_in">char</span>更快），节省磁盘空间角度（<span class="built_in">varchar</span>更小），具体情况还需具体来设计数据库才是妥当的做法。</span><br><span class="line"></span><br><span class="line"><span class="built_in">char</span>(<span class="number">10</span>)        根据<span class="number">10</span>，占<span class="number">10</span>个.</span><br><span class="line">    列的长度固定为创建表时声明的长度： <span class="number">0</span> ~ <span class="number">255</span></span><br><span class="line"><span class="built_in">varchar</span>(<span class="number">10</span>)     根据实际字符串长度占空间，最多<span class="number">10</span>个</span><br><span class="line">    列中的值为可变长字符串，长度： <span class="number">0</span> ~ <span class="number">65535</span></span><br><span class="line"></span><br><span class="line">案例:</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> t8(c <span class="built_in">char</span>(<span class="number">5</span>),v <span class="built_in">varchar</span>(<span class="number">12</span>));</span><br><span class="line">Query OK, 0 rows affected (0.42 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t8 values('abcde','abcdef');</span><br><span class="line">Query OK, 1 row affected (0.38 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t8 values('abc','abcdef');  #char可以少于规定长度。</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t8 values('abc777','abcdef7');  #char不能大于规定的长度。</span><br><span class="line">ERROR 1406 (22001): Data too long for column 'c' at row 1</span><br><span class="line">mysql&gt; </span><br><span class="line">=====================================================================</span><br><span class="line">总结：</span><br><span class="line">1.经常变化的字段用varchar</span><br><span class="line">2.知道固定长度的用char</span><br><span class="line">3.超过255字符的只能用varchar或者text</span><br><span class="line">4.能用varchar的地方不用text</span><br><span class="line">text：文本格式</span><br><span class="line"><span class="comment">-----------------------------------------------------------------</span></span><br><span class="line">4.枚举类型 enum </span><br><span class="line">mysql&gt; create table t10(name enum('m','w'));</span><br><span class="line">只能从tom,jim两个里面2选其1</span><br><span class="line">（enumeration）  </span><br><span class="line"> 有限制的时候用枚举</span><br><span class="line"> </span><br><span class="line">案例：</span><br><span class="line">mysql&gt; insert into t10(sex) values('m');</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t10 values('w');</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t10 values('n');</span><br><span class="line">ERROR 1265 (01000): Data truncated for column 'sex' at row 1</span><br><span class="line">==================================================================</span><br><span class="line">5.日期类型</span><br><span class="line">===时间和日期类型测试：year、date、time、datetime、timestamp</span><br><span class="line">作用：用于存储用户的注册时间，文章的发布时间，文章的更新时间，员工的入职时间等</span><br><span class="line">注意事项:</span><br><span class="line">==插入年份时，尽量使用4位值</span><br><span class="line">==插入两位年份时，&lt;=69，以20开头，比如65,  结果2065      </span><br><span class="line">                 &gt;=70，以19开头，比如82，结果1982</span><br><span class="line">案例:</span><br><span class="line">mysql&gt; create table test_time(d date,t time,dt datetime);</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)+</span><br><span class="line">mysql&gt; desc test_time;</span><br><span class="line">+<span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line">| Field | Type     | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line">| d     | date     | YES  |     | NULL    |       |</span><br><span class="line">| t     | time     | YES  |     | NULL    |       |</span><br><span class="line">| dt    | datetime | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> test_time <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="keyword">now</span>(),<span class="keyword">now</span>());</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.02 sec)</span><br><span class="line">mysql&gt; select * from test_time;</span><br><span class="line">+<span class="comment">------------+----------+---------------------+</span></span><br><span class="line">| d          | t        | dt                  |</span><br><span class="line">+<span class="comment">------------+----------+---------------------+</span></span><br><span class="line">| 2019-08-23 | 00:26:29 | 2019-08-23 00:26:29 |</span><br><span class="line">+<span class="comment">------------+----------+---------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">测试年：</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> t3(born_year <span class="keyword">year</span>);</span><br><span class="line">Query OK, 0 rows affected (0.40 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc t3;</span><br><span class="line">+<span class="comment">-----------+---------+------+-----+---------+-------+</span></span><br><span class="line">| Field     | Type    | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-----------+---------+------+-----+---------+-------+</span></span><br><span class="line">| born_year | year(4) | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-----------+---------+------+-----+---------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> t3 <span class="keyword">values</span> (<span class="number">12</span>),(<span class="number">80</span>);</span><br><span class="line">Query OK, 2 rows affected (0.06 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line">mysql&gt; select * from t3;</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| born_year |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">|      2012 |</span><br><span class="line">|      1980 |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> t3 <span class="keyword">values</span> (<span class="number">2019</span>),(<span class="number">81</span>);</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line">mysql&gt; select * from t3;</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| born_year |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">|      2012 |</span><br><span class="line">|      1980 |</span><br><span class="line">|      2019 |</span><br><span class="line">|      1981 |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h1 id="五、表完整性约束"><a href="#五、表完整性约束" class="headerlink" title="五、表完整性约束"></a>五、表完整性约束</h1><p>作用：用于保证数据的完整性和一致性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">约束条件说明</span><br><span class="line">PRIMARY KEY (PK)标识该字段为该表的主键，可以唯一的标识记录，不可以为空  UNIQUE + NOT NULL</span><br><span class="line">FOREIGN KEY (FK)标识该字段为该表的外键，实现表与表之间的关联</span><br><span class="line">NULL                标识是否允许为空，默认为NULL。</span><br><span class="line">NOT NULL标识该字段不能为空，可以修改。</span><br><span class="line">UNIQUE KEY  (UK)    标识该字段的值是唯一的，可以为空，一个表中可以有多个UNIQUE KEY</span><br><span class="line">AUTO_INCREMENT标识该字段的值自动增长（整数类型，而且为主键）</span><br><span class="line">DEFAULT为该字段设置默认值</span><br><span class="line">UNSIGNED            无符号，正数</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.主键</span><br><span class="line">每张表里只能有一个主键，不能为空，而且唯一，主键保证记录的唯一性，主键自动为NOT NULL。</span><br><span class="line">一个 UNIQUE KEY 又是一个NOT NULL的时候，那么它被当做PRIMARY KEY主键。</span><br><span class="line"></span><br><span class="line">定义两种方式：</span><br><span class="line"><span class="meta">#</span><span class="bash">表存在，添加约束</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table t7 add primary key (hostname);</span></span><br><span class="line"></span><br><span class="line">创建表并指定约束</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t9(hostname char(20),ip char(150),primary key(hostname));</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801430.png" alt="1566197904818"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t9(hostname,ip) values(<span class="string">'l66.com'</span>, <span class="string">'10.10.10.11'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t9(hostname,ip) values(<span class="string">'l66.com'</span>, <span class="string">'10.10.10.12'</span>);</span></span><br><span class="line">ERROR 1062 (23000): Duplicate entry 'l66.com' for key 'PRIMARY'</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t9(hostname,ip) values(<span class="string">'l66'</span>, <span class="string">'10.10.10.11'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t9;</span></span><br><span class="line">+-----------+-------------+</span><br><span class="line">| hostname  | ip          |</span><br><span class="line">+-----------+-------------+</span><br><span class="line">| l66     | 10.10.10.11 |</span><br><span class="line">| l66.com | 10.10.10.11 |</span><br><span class="line">+-----------+-------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t9(hostname,ip) values(<span class="string">'ldqjy'</span>, <span class="string">'10.10.10.12'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t9;</span></span><br><span class="line">+-----------+-------------+</span><br><span class="line">| hostname  | ip          |</span><br><span class="line">+-----------+-------------+</span><br><span class="line">| l66     | 10.10.10.11 |</span><br><span class="line">| l66.com | 10.10.10.11 |</span><br><span class="line">| ldqjy      | 10.10.10.12 |</span><br><span class="line">+-----------+-------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">删除主键</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table tab_name  drop  primary key;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2.auto_increment自增--------自动编号，且必须与主键组合使用默认情况下，起始值为1，每次的增量为1。当插入记录时，如果为AUTO_INCREMENT数据列明确指定了一个数值，则会出现两种情况：</span><br><span class="line">- 如果插入的值与已有的编号重复，则会出现出错信息，因为AUTO_INCREMENT数据列的值必须是唯一的；</span><br><span class="line">- 如果插入的值大于已编号的值，则会把该插入到数据列中，并使在下一个编号将从这个新值开始递增。也就是说，可以跳过一些编号。如果自增序列的最大值被删除了，则在插入新记录时，该值被重用。</span><br><span class="line">（每张表只能有一个字段为自曾） （成了key才可以自动增长）</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> CREATE TABLE department3 (</span></span><br><span class="line">    dept_id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    dept_name VARCHAR(30),</span><br><span class="line">    comment VARCHAR(50)</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220801232.png" alt="1566200736746"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from department3;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">插入值</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into department3(dept_name, comment) values(<span class="string">'tom'</span>,<span class="string">'test'</span>), (<span class="string">'jack'</span>, <span class="string">'test2'</span>);</span></span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from department3;</span></span><br><span class="line">+---------+-----------+---------+</span><br><span class="line">| dept_id | dept_name | comment |</span><br><span class="line">+---------+-----------+---------+</span><br><span class="line">|       1 | tom       | test    |</span><br><span class="line">|       2 | jack      | test2   |</span><br><span class="line">+---------+-----------+---------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">删除自动增长</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> ALTER TABLE department3 CHANGE dept_id  dept_id INT NOT NULL;</span></span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc department3;</span></span><br><span class="line">+-----------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field     | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-----------+-------------+------+-----+---------+-------+</span><br><span class="line">| dept_id   | int(11)     | NO   | PRI | NULL    |       |</span><br><span class="line">| dept_name | varchar(30) | YES  |     | NULL    |       |</span><br><span class="line">| comment   | varchar(50) | YES  |     | NULL    |       |</span><br><span class="line">+-----------+-------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">再次插入数据，报错</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into department3(dept_name,comment) values(<span class="string">'tom'</span>,<span class="string">'test1'</span>),(<span class="string">'jack'</span>,<span class="string">'test2'</span>);</span></span><br><span class="line">ERROR 1364 (HY000): Field 'dept_id' doesn't have a default value</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3.设置唯一约束 UNIQUE，字段添加唯一约束之后，该字段的值不能重复，也就是说在一列当中不能出现一样的值。</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> CREATE TABLE department2 (</span></span><br><span class="line">     dept_id INT,</span><br><span class="line">     dept_name VARCHAR(30) UNIQUE,</span><br><span class="line">     comment VARCHAR(50)</span><br><span class="line">     );</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220802291.png" alt="1566201134895"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407220802255.png" alt="1566201535604"></p><p>插入数据的时候id和comment字段相同可以插入数据，如果有相同的名字不唯一。所以插入数据失败。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4.null与not null</span><br><span class="line">1. 是否允许为空，默认NULL，可设置NOT NULL，字段不允许为空，必须赋值</span><br><span class="line">2. 字段是否有默认值，缺省的默认值是NULL，如果插入记录时不给字段赋值，此字段使用默认值</span><br><span class="line">sex enum('male','female') not null default 'male'  #只能选择male和female，不允许为空，默认是male</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t4(id int(5),name varchar(10),sex enum(<span class="string">'male'</span>,<span class="string">'female'</span>) not null default <span class="string">'male'</span>);</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t4(id,name) values(1,<span class="string">'tom'</span>);</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t4;</span></span><br><span class="line">+------+------+------+</span><br><span class="line">| id   | name | sex  |</span><br><span class="line">+------+------+------+</span><br><span class="line">|    1 | tom  | male |</span><br><span class="line">+------+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">允许为null</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t1(id int(5),name varchar(10),age int(5));</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t1;</span></span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int(5)      | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int(5)      | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t1(id,name) values(1,<span class="string">'tom'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t1;</span></span><br><span class="line">+------+------+------+</span><br><span class="line">| id   | name | age  |</span><br><span class="line">+------+------+------+</span><br><span class="line">|    1 | tom  | NULL |</span><br><span class="line">+------+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>指定字符集:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">修改字符集 ：在创建表的最后面指定一下： default charset=utf8  #可以指定中文</span><br><span class="line"></span><br><span class="line">* 未指定之前，插入</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t1(id,name) values(1,<span class="string">'石宇飞'</span>);</span></span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: '\xE7\x9F\xB3\xE5\xAE\x87...' for column 'name' at row 1</span><br><span class="line"></span><br><span class="line">* 创建表格式指定字符集为utf-8</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t6(id int(2),name char(5),age int(4)) default charset=utf8;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t6;</span></span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| Field | Type    | Null | Key | Default | Extra |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| id    | int(2)  | YES  |     | NULL    |       |</span><br><span class="line">| name  | char(5) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int(4)  | YES  |     | NULL    |       |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t6(id,name) values(1,<span class="string">'石宇飞'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">5.默认约束</span><br><span class="line">添加/删除默认约束</span><br><span class="line"></span><br><span class="line">1.创建一个表</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table user(id int not null, name varchar(20), number int, primary key(id));</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> describe user;</span></span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type        | Null | Key | Default | Extra |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| id     | int(11)     | NO   | PRI | NULL    |       |</span><br><span class="line">| name   | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| number | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">2、设置默认值</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> ALTER TABLE user ALTER number SET DEFAULT 0;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> DESCRIBE user;</span></span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type        | Null | Key | Default | Extra |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| id     | int(11)     | NO   | PRI | NULL    |       |</span><br><span class="line">| name   | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| number | int(11)     | YES  |     | 0       |       |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、插入值</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> ALTER TABLE user CHANGE id id INT NOT NULL AUTO_INCREMENT;</span></span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> INSERT INTO user(name) VALUES(<span class="string">'rock'</span>); </span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> INSERT INTO user(name) VALUES(<span class="string">'rock'</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from user;</span></span><br><span class="line">+----+------+--------+</span><br><span class="line">| id | name | number |</span><br><span class="line">+----+------+--------+</span><br><span class="line">|  1 | rock |      0 |</span><br><span class="line">|  2 | rock |      0 |</span><br><span class="line">+----+------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">删除默认值</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> ALTER TABLE user ALTER number drop DEFAULT;</span></span><br></pre></td></tr></table></figure><p><strong>作业</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.查一下oracle和mysql的区别写出几点即可。---面试</span><br></pre></td></tr></table></figure><h1 id="六、表操作"><a href="#六、表操作" class="headerlink" title="六、表操作"></a>六、表操作</h1><h3 id="6-1-添加字段"><a href="#6-1-添加字段" class="headerlink" title="6.1 添加字段"></a>6.1 添加字段</h3><p>格式：<code>ALTER TABLE 表名 ADD [COLUMN] 字段名 字段类型 [FIRST|AFTER 字段名];</code></p><p>使用<code>ALTER TABLE 语句</code>可以实现： </p><ul><li>向已有的表中添加列 </li><li>修改现有表中的列 </li><li>删除现有表中的列 </li><li>重命名现有表中的列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 准备基础库</span></span><br><span class="line">mysql&gt; create database emp01 character set utf8;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建基础表</span></span><br><span class="line">mysql&gt; create table emp (</span><br><span class="line">         id int,</span><br><span class="line">         name varchar(20)</span><br><span class="line">       );</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| id    | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-1-1-表最后列添加一个新字段"><a href="#6-1-1-表最后列添加一个新字段" class="headerlink" title="6.1.1 表最后列添加一个新字段"></a>6.1.1 表最后列添加一个新字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 在emp01表最后一列添加一个新字段</span></span><br><span class="line">mysql&gt; alter table emp add math int(10);</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| id    | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| math  | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-------+-------------+------+-----+---------+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-1-2-表最后列添加多个新字段"><a href="#6-1-2-表最后列添加多个新字段" class="headerlink" title="6.1.2 表最后列添加多个新字段"></a>6.1.2 表最后列添加多个新字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 添加多个字段,中间用逗号隔开。</span></span><br><span class="line">mysql&gt; alter table emp  add (chinese int(10),english int(10));</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name    | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-1-3-添加字段至表内指定字段之后"><a href="#6-1-3-添加字段至表内指定字段之后" class="headerlink" title="6.1.3 添加字段至表内指定字段之后"></a>6.1.3 添加字段至表内指定字段之后</h4><p>语法格式：<code>alter table 表名 add 添加字段名 类型(长度) after 字段名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 把添加的字段放到name后面</span></span><br><span class="line">mysql&gt; alter table emp add age char(3) after name;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name    | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-1-4-添加字段到第一列"><a href="#6-1-4-添加字段到第一列" class="headerlink" title="6.1.4 添加字段到第一列"></a>6.1.4 添加字段到第一列</h4><p>语法格式：<code>alter table 表名 add 添加字段名 类型(长度) first;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table emp add class char(10) first;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name    | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="6-2-修改字段和类型"><a href="#6-2-修改字段和类型" class="headerlink" title="6.2 修改字段和类型"></a>6.2 修改字段和类型</h3><h4 id="6-2-1-修改字段名称（慎用）"><a href="#6-2-1-修改字段名称（慎用）" class="headerlink" title="6.2.1 修改字段名称（慎用）"></a>6.2.1 修改字段名称（慎用）</h4><p>语法格式：<code>ALTER TABLE 表名 CHANGE 旧列名 新列名 新数据类型;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 原表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name    | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改name字段名为names</span></span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">change</span> <span class="keyword">name</span> <span class="keyword">names</span> <span class="built_in">varchar</span>(<span class="number">20</span>);</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 新表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| names   | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-2-2-修改字段类型长度"><a href="#6-2-2-修改字段类型长度" class="headerlink" title="6.2.2 修改字段类型长度"></a>6.2.2 修改字段类型长度</h4><p>语法格式：<code>ALTER TABLE 表名 MODIFY 【COLUMN】 字段名1 字段类型 【DEFAULT 默认值】【FIRST|AFTER 字段名 2】;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 原表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| names   | varchar(20) | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改name字段类型的长度为30，并且移动至math字段后</span></span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">table</span> emp  <span class="keyword">modify</span> <span class="keyword">names</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">after</span> math;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 新表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| names   | varchar(30) | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-2-3-删除字段（慎用）"><a href="#6-2-3-删除字段（慎用）" class="headerlink" title="6.2.3 删除字段（慎用）"></a>6.2.3 删除字段（慎用）</h4><p>语法格式：<code>ALTER TABLE 表名 DROP 【COLUMN】字段名</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 原表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| class   | char(10)    | YES  |     | NULL    |       |</span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| names   | varchar(30) | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 删除class字段</span></span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">class</span>;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 新表结构</span></span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">| id      | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| age     | char(3)     | YES  |     | NULL    |       |</span><br><span class="line">| math    | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| names   | varchar(30) | YES  |     | NULL    |       |</span><br><span class="line">| chinese | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">| english | int(10)     | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">---------+-------------+------+-----+---------+-------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 也可以使用以下SQL语句查看表结构</span></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> emp \G</span><br></pre></td></tr></table></figure><h3 id="6-3-插入数据-添加纪录"><a href="#6-3-插入数据-添加纪录" class="headerlink" title="6.3 插入数据(添加纪录)"></a>6.3 插入数据(添加纪录)</h3><p><strong>创建初始表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t3(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    sex enum('m','f'),</span><br><span class="line">    age int</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"> <span class="comment">#&gt;&gt;&gt; 查看表结构</span></span><br><span class="line"> mysql&gt; show create table t3 \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t3</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t3`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`sex`</span> enum(<span class="string">'m'</span>,<span class="string">'f'</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：字符串必须引号引起来；记录与表头相对应，表头与字段用逗号隔开。</strong></p></blockquote><h4 id="6-3-1-添加一条数据"><a href="#6-3-1-添加一条数据" class="headerlink" title="6.3.1 添加一条数据"></a>6.3.1 添加一条数据</h4><p>语法格式：<code>insert into 表名(字段1,字段2,字段3,字段4) values(值1,&quot;值2&quot;,&quot;值3&quot;,值4);</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into t3(id,name,sex,age) values(1,"小贺","f",18);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select  * from t3;</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">| id   | name   | sex  | age  |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">|    1 | 小贺   | f    |   1 |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>注意：添加的记录与表头要对应。</p></blockquote><h4 id="6-3-2-添加多条数据"><a href="#6-3-2-添加多条数据" class="headerlink" title="6.3.2 添加多条数据"></a>6.3.2 添加多条数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into t3(id,name,sex,age) values(2,"小飞","m",18),(3,"铭哥","m",17);</span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select  * from t3;</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">| id   | name   | sex  | age  |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">|    1 | 小贺   | f    |   60 |</span><br><span class="line">|    2 | 小飞   | m    |   18 |</span><br><span class="line">|    3 | 铭哥   | m    |   17 |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用set命令添加</span></span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> t3 <span class="keyword">set</span>  <span class="keyword">id</span>=<span class="number">4</span>,<span class="keyword">name</span>=<span class="string">"小建"</span>,sex=<span class="string">"f"</span>,age=<span class="number">15</span>;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select  * from t3;</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">| id   | name   | sex  | age  |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">|    1 | 小贺   | f    |   60 |</span><br><span class="line">|    2 | 小飞   | m    |   18 |</span><br><span class="line">|    3 | 铭哥   | m    |   17 |</span><br><span class="line">|    4 | 小建   | f    |   15 |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-3-3-更新字段值"><a href="#6-3-3-更新字段值" class="headerlink" title="6.3.3 更新字段值"></a>6.3.3 更新字段值</h4><p>语法格式：<code>UPDATE 表名 SET 更新字段=更新值 where  更新字段=原有值</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 将名字为小建改为贝贝</span></span><br><span class="line">mysql&gt; update t3 set name = "贝贝" where id = 4;</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select  name from t3;</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">| id   | name   | sex  | age  |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">|    1 | 小贺   | f    |   60 |</span><br><span class="line">|    2 | 小飞   | m    |   18 |</span><br><span class="line">|    3 | 铭哥   | m    |   17 |</span><br><span class="line">|    4 | 贝贝   | f    |   15 |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-3-4-删除单行记录"><a href="#6-3-4-删除单行记录" class="headerlink" title="6.3.4 删除单行记录"></a>6.3.4 删除单行记录</h4><p>语法格式：<code>delete from 表名 where 字段=值</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 删除名称为小贺那一行记录</span></span><br><span class="line">mysql&gt; delete from t3 where name = "小贺";</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from t3;</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">| id   | name   | sex  | age  |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">|    2 | 小飞   | m    |   18 |</span><br><span class="line">|    3 | 铭哥   | m    |   17 |</span><br><span class="line">|    4 | 贝贝   | f    |   15 |</span><br><span class="line">+<span class="comment">------+--------+------+------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-3-5-删除整张表记录"><a href="#6-3-5-删除整张表记录" class="headerlink" title="6.3.5 删除整张表记录"></a>6.3.5 删除整张表记录</h4><p>语法格式：<code>delete from 表名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from t3;</span><br><span class="line">Query OK, 3 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from t3;</span><br><span class="line">Empty <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="6-4-单表查询"><a href="#6-4-单表查询" class="headerlink" title="6.4 单表查询"></a>6.4 <code>单表查询</code></h3><p><strong>准备测试表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mysql -uroot -pabc123 &lt; study.sql </span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看所有数据库</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 切换study数据库</span></span><br><span class="line">mysql&gt; <span class="keyword">use</span> study;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line"><span class="keyword">Database</span> <span class="keyword">changed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看当前数据库所有的表</span></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| Tables_in_study  |</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| countries        |  <span class="comment"># 国家表</span></span><br><span class="line">| departments      |  <span class="comment"># 部门表</span></span><br><span class="line">| emp_details_view |  </span><br><span class="line">| employees        |  <span class="comment"># 员工表</span></span><br><span class="line">| job_grades       |</span><br><span class="line">| job_history      |</span><br><span class="line">| jobs             |  <span class="comment"># 职业</span></span><br><span class="line">| locations        |  <span class="comment"># 位置</span></span><br><span class="line">| order            |</span><br><span class="line">| regions          |  <span class="comment"># 城市</span></span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">10 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-4-1-整表查询（慎用）"><a href="#6-4-1-整表查询（慎用）" class="headerlink" title="6.4.1 整表查询（慎用）"></a>6.4.1 整表查询（慎用）</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407122343671.png" alt="img"></p><h4 id="6-4-2-多字段查询"><a href="#6-4-2-多字段查询" class="headerlink" title="6.4.2 多字段查询"></a>6.4.2 多字段查询</h4><p>语法格式：<code>select 字段1,字段2,字段3，.. from employees;</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看部门表中员工部门id，员工名字，员工姓氏</span></span><br><span class="line">mysql&gt; select employee_id,first_name,last_name from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407122350956.png" alt="img"></p><h4 id="6-4-3-比较运算符使用"><a href="#6-4-3-比较运算符使用" class="headerlink" title="6.4.3 比较运算符使用"></a>6.4.3 比较运算符使用</h4><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407122351821.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查询员工工资大于1000的员工id和名字</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary from employees where salary &gt; 1000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工等于10000的员工Id和名字</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary from employees where salary = 10000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工工资不等于10000的员工Id和名字</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary from employees where salary != 10000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工小于10000的员工Id和名字</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary from employees where salary &lt; 10000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工工资大于等于10000的员工Id和名字</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary from employees where salary &gt;= 10000;</span><br></pre></td></tr></table></figure><h4 id="6-4-4-查询字段别名设置AS"><a href="#6-4-4-查询字段别名设置AS" class="headerlink" title="6.4.4 查询字段别名设置AS"></a>6.4.4 查询字段别名设置<code>AS</code></h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查询员工工资大于等于10000的员工信息</span></span><br><span class="line">mysql&gt; select employee_id,first_name,salary as "salry_num" from employees where salary &gt;= 10000;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407130006848.png" alt="img"></p><h4 id="6-4-5-去除重复行"><a href="#6-4-5-去除重复行" class="headerlink" title="6.4.5 去除重复行"></a>6.4.5 去除重复行</h4><p>语法格式：<code>SELECT DISTINCT 字段名 FROM 表名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select distinct  department_id from employees;</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">| department_id |</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">|          NULL |</span><br><span class="line">|            10 |</span><br><span class="line">|            20 |</span><br><span class="line">|            30 |</span><br><span class="line">|            40 |</span><br><span class="line">|            50 |</span><br><span class="line">|            60 |</span><br><span class="line">|            70 |</span><br><span class="line">|            80 |</span><br><span class="line">|            90 |</span><br><span class="line">|           100 |</span><br><span class="line">|           110 |</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">12 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-4-6-逻辑运算符"><a href="#6-4-6-逻辑运算符" class="headerlink" title="6.4.6 逻辑运算符"></a>6.4.6 逻辑运算符</h4><p>​        逻辑运算符主要用来判断表达式的真假，在MySQL中，逻辑运算符的返回结果为1、0或者NULL。</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131642416.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; NOT使用</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询职业不是"PR_REP(销售)"和"SH_CLERK(业务员)"的员工信息</span></span><br><span class="line">mysql&gt;  select employee_id,first_name,last_name,job_id from employees where job_id not in ("PR_REP","SH_CLERK");</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; AND或&amp;&amp;使用</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询工资大于等于10000且小于等于20000的员工信息</span></span><br><span class="line">mysql&gt; select last_name,salary from study.employees where salary &gt;= 10000 and salary &lt;= 20000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; OR或者||使用</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询工资大于等于10000或者小于等于20000的员工信息</span></span><br><span class="line">mysql&gt; select last_name,salary from study.employees where salary &gt;= 10000 || salary &lt;= 20000;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意： OR可以和AND一起使用，但是在使用时要注意两者的优先级，由于AND的优先级高于OR，因此先对AND两边的操作数进行操作，再与OR中的操作数结合。</strong></p></blockquote><h3 id="6-5-函数"><a href="#6-5-函数" class="headerlink" title="6.5 函数"></a>6.5 函数</h3><p>简介：函数可以把我们<code>经常使用的代码</code>封装起来， 需要的时候直接调用即可。这样既 <code>提高了代码效率</code> ，又 <code>提高了可维护性</code> 。在 SQL 中我们也可以使用函数对检索出来的数据进行函数操作。使用这些函数，可以极大地提高用户对数据库的管理效率 。</p><p>​        函数分成<code>内置函数</code>和 <code>自定义函数</code> 。在 SQL 语言中，同样也包括了<code>内置函数</code>和<code>自定义函数</code>。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写的</p><h4 id="6-5-1-MySQL内置函数分类"><a href="#6-5-1-MySQL内置函数分类" class="headerlink" title="6.5.1 MySQL内置函数分类"></a>6.5.1 MySQL内置函数分类</h4><p>​        MySQL提供的内置函数从实现的功能角度可以分为<strong>数值函数、字符串函数、日期和时间函数、流程控制函数、聚合函数等。</strong>这些丰富的内置函数再分为两类： <strong>单行函数 、聚合函数</strong> 。</p><h4 id="6-5-2-单行函数"><a href="#6-5-2-单行函数" class="headerlink" title="6.5.2 单行函数"></a>6.5.2 单行函数</h4><p>​        只对一行进行变换；每行返回一个结果。</p><h5 id="1-数值函数"><a href="#1-数值函数" class="headerlink" title="1. 数值函数"></a>1. 数值函数</h5><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>ABS(x)</td><td>取x的绝对值</td></tr><tr><td>SIGN(X)</td><td>取X的符号。正数返回1，负数返回-1，0返回0</td></tr><tr><td>PI()</td><td>取圆周率的值</td></tr><tr><td>RAND()</td><td>取0~1的随机值</td></tr><tr><td>ROUND(x)</td><td>取一个对x的值进行四舍五入后，最接近于X的整数</td></tr><tr><td>TRUNCATE(x,y)</td><td>取数字x截断为y位小数的结果</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ABS(-321),ABS(456),SIGN(-10),SIGN(10),PI(),RAND(),ROUND(1.5),TRUNCATE(3.1415,2)  FROM DUAL;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131330422.png" alt="img"></p><h5 id="2-字符串函数"><a href="#2-字符串函数" class="headerlink" title="2. 字符串函数"></a>2. 字符串函数</h5><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>CHAR_LENGTH(s)</td><td>字符串s的字符数。</td></tr><tr><td>LENGTH(s)</td><td>返回字符串s的字节数</td></tr><tr><td>CONCAT(s1,s2,……,sn)</td><td>连接s1,s2,……,sn为一个字符串</td></tr><tr><td>CONCAT_WS(z, s1,s2,……,sn)</td><td>同CONCAT(s1,s2,…)函数，但是每个字符串之间要加上z</td></tr><tr><td>REPLACE(str, a, b)</td><td>字符串b替换字符串str中所有出现的字符串a</td></tr><tr><td>UPPER(s)</td><td>字符串s的所有字母转成大写字母</td></tr><tr><td>LOWER(s)</td><td>字符串s的所有字母转成小写字母</td></tr><tr><td>LEFT(str,n)</td><td>返回字符串str最左边的n个字符</td></tr><tr><td>RIGHT(str,n)</td><td>返回字符串str最右边的n个字符</td></tr><tr><td>LPAD(str, len, pad)</td><td>用字符串pad对str最左边进行填充，直到str的长度为len个字符</td></tr><tr><td>RPAD(str ,len, pad)</td><td>用字符串pad对str最右边进行填充，直到str的长度为len个字符</td></tr><tr><td>LTRIM(s)</td><td>去掉字符串s左侧的空格</td></tr><tr><td>RTRIM(s)</td><td>去掉字符串s右侧的空格</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select char_length("mingge"),length("铭哥"),concat("胡","佳","铭"),concat_ws("z","胡","佳","铭"),replace("azzzzzZbbb","z","c") from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131351392.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select upper("mingge"),lower("mingge"),left("hello,world",5),right("hello,world",5),lpad("world",10,"hello"),rpad("hello",10,"world") from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131356932.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ltrim(" hello"),rtrim("world ") from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131357439.png" alt="img"></p><h5 id="3-日期和时间函数"><a href="#3-日期和时间函数" class="headerlink" title="3. 日期和时间函数"></a>3. 日期和时间函数</h5><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>CURDATE() ，CURRENT_DATE()</td><td>当前日期，只包含年、 月、日</td></tr><tr><td>CURTIME() ， CURRENT_TIME()</td><td>当前时间，只包含时、 分、秒</td></tr><tr><td>NOW() / SYSDATE() / CURRENT_TIMESTAMP() / LOCALTIME() / LOCALTIMESTAMP()</td><td>当前系统日期和时间</td></tr><tr><td>UTC_DATE()</td><td>UTC（世界标准时间） 日期</td></tr><tr><td>UTC_TIME()</td><td>UTC（世界标准时间） 时间</td></tr><tr><td>UNIX_TIMESTAMP()。单位为毫秒</td><td>UNIX时间戳的形式返回当前时间。</td></tr><tr><td>UNIX_TIMESTAMP(date)</td><td>将时间date以UNIX时间戳的形式返回。</td></tr><tr><td>FROM_UNIXTIME(timestamp)</td><td>将UNIX时间戳的时间转换为普通格式的时间</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT CURDATE(),CURTIME(),NOW(),UTC_DATE(),UTC_TIME() FROM DUAL;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131416980.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select unix_timestamp(),from_unixtime(1720851662),unix_timestamp('2024-07-13 14:22:50'),from_unixtime(1720851770) from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131423364.png" alt="img"></p><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>YEAR(date) / MONTH(date) / DAY(date)</td><td>返回具体的日期值</td></tr><tr><td>HOUR(time) / MINUTE(time) / SECOND(time)</td><td>返回具体的时间值</td></tr><tr><td>MONTHNAME(date)</td><td>返回月份</td></tr><tr><td>DAYNAME(date)</td><td>返回星期几</td></tr><tr><td>WEEKDAY(date)</td><td>返回周几，注意，周1是0，周2是1，。。。周日是6</td></tr><tr><td>QUARTER(date)</td><td>返回日期对应的季度，范围为1～4</td></tr><tr><td>WEEK(date) ， WEEKOFYEAR(date)</td><td>返回一年中的第几周</td></tr><tr><td>DAYOFYEAR(date)</td><td>返回日期是一年中的第几天</td></tr><tr><td>DAYOFMONTH(date)</td><td>返回日期位于所在月份的第几天</td></tr><tr><td>DAYOFWEEK(date)</td><td>返回周几，注意：周日是1，周一是2，。。。周六是 7</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select year(curdate()),month(curdate()),day(curdate()) from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131429665.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select hour(curtime()),minute(now()),second(sysdate()) from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131431728.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select monthname('2024-7-13'),dayname('2024-7-13'),weekday('2024-7-13'),quarter(curdate()),week(curdate()),dayofyear(now()),dayofmonth(now()),dayofweek(now()) from dual;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131435666.png" alt="img"></p><h5 id="4-流程控制函数"><a href="#4-流程控制函数" class="headerlink" title="4. 流程控制函数"></a>4. 流程控制函数</h5><p>​    流程处理函数可以根据不同的条件，执行不同的处理流程，可以在SQL语句中实现不同的条件选择。</p><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>IF(value,value1,value2)</td><td>如果value的值为TRUE，返回value1， 否则返回value2</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果value1不为NULL，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN 条件1 THEN 结果1 WHEN 条件2 THEN 结果2 …. [ELSE resultn] END</td><td>相当于shell的if…else if…else…</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select employee_id,first_name,last_name,salary,if(salary &gt;= 10000,'工资略高','工资一般') from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131446726.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select first_name,last_name,commission_pct,if(commission_pct is null,0,commission_pct) from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131450819.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select first_name,last_name,commission_pct,ifnull(commission_pct,0) from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131452019.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select employee_id,first_name,last_name,salary, </span><br><span class="line">              case when salary&gt;=17000 then '工资挺高'</span><br><span class="line">                   when salary&gt;=10000 then '工资一般'</span><br><span class="line">                   when salary&gt;=8000 then '工资很低'</span><br><span class="line">                   else '呵呵' <span class="keyword">END</span> <span class="string">"工资收入"</span></span><br><span class="line">       <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131457403.png" alt="img"></p><h4 id="6-5-3-聚合函数"><a href="#6-5-3-聚合函数" class="headerlink" title="6.5.3 聚合函数"></a>6.5.3 聚合函数</h4><p>​        对一组数据进行汇总的函数，输入的是一组数据的集合，输出的是单个值。聚合函数作用于一组数据，并对一组数据返回一个值。</p><table><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>AVG()</td><td>平均值</td></tr><tr><td>SUM()</td><td>总和</td></tr><tr><td>MAX()</td><td>最大值</td></tr><tr><td>MIN()</td><td>最小值</td></tr><tr><td>COUNT()</td><td>个数</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工表中所有员工平均工资</span></span><br><span class="line">mysql&gt; select avg(salary) from employees;</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">| avg(salary) |</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">| 6461.682243 |</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工工资总和</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">sum</span>(salary) <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">| sum(salary) |</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">|   691400.00 |</span><br><span class="line">+<span class="comment">-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工12个月的工资总和</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">sum</span>(salary * <span class="number">12</span>) <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| sum(salary * 12) |</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">|       8296800.00 |</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看最高工资和最低工资的员工</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">max</span>(salary),<span class="keyword">min</span>(salary) <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">-------------+-------------+</span></span><br><span class="line">| max(salary) | min(salary) |</span><br><span class="line">+<span class="comment">-------------+-------------+</span></span><br><span class="line">|    24000.00 |     2100.00 |</span><br><span class="line">+<span class="comment">-------------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看员工id的个数</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">count</span>(employee_id) <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| count(employee_id) |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">|                107 |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看表中总记录</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">count</span>(*)  <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| count(*) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|      107 |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询表中包含空值的记录</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">count</span>(employee_id)  <span class="keyword">from</span> employees  <span class="keyword">where</span> employee_id <span class="keyword">is</span> <span class="literal">null</span>;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| count(employee_id) |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">|                  0 |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>注意：conut函数在统计默认情况不包含空值</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt; 查询员工的平均奖金率</span></span><br><span class="line">mysql&gt; select sum(commission_pct) / count(ifnull(commission_pct,0)) from employees;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131625383.png" alt></p><h5 id="1-分组查询GROUP-BY"><a href="#1-分组查询GROUP-BY" class="headerlink" title="1. 分组查询GROUP BY"></a>1. 分组查询<code>GROUP BY</code></h5><p>​        在MySQL中，<code>GROUP BY</code>子句用于将结果集中的行按一个或多个列进行分组。常与聚合函数（如<code>COUNT()</code>、<code>SUM()</code>、<code>AVG()</code>、<code>MAX()</code>、<code>MIN()</code>等）结合使用，以对每个组执行某种计算。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 准备初始表</span></span><br><span class="line">mysql&gt; CREATE TABLE employees (</span><br><span class="line">       id INT PRIMARY KEY, <span class="comment">-- 员工ID，主键</span></span><br><span class="line">       name VARCHAR(50), <span class="comment">-- 员工姓名</span></span><br><span class="line">       department VARCHAR(50), <span class="comment">-- 部门</span></span><br><span class="line">       salary INT <span class="comment">-- 工资</span></span><br><span class="line">       );</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt;  插入数据</span></span><br><span class="line">mysql&gt; INSERT INTO employees (id, name, department, salary) VALUES</span><br><span class="line">(1, 'Alice', 'Sales', 5000),</span><br><span class="line">(2, 'Bob', 'HR', 4000),</span><br><span class="line">(3, 'Charlie', 'Sales', 5500),</span><br><span class="line">(4, 'David', 'IT', 6000),</span><br><span class="line">(5, 'Eve', 'IT', 6200),</span><br><span class="line">(6, 'Frank', 'Sales', 5300);</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 统计每个部门的员工人数</span></span><br><span class="line">mysql&gt; SELECT department,COUNT(*) AS num_employees</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department;</span><br><span class="line">+<span class="comment">------------+---------------+</span></span><br><span class="line">| department | num_employees |</span><br><span class="line">+<span class="comment">------------+---------------+</span></span><br><span class="line">| HR         |             1 |</span><br><span class="line">| IT         |             2 |</span><br><span class="line">| Sales      |             3 |</span><br><span class="line">+<span class="comment">------------+---------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 计算每个部门的平均工资</span></span><br><span class="line">mysql&gt; <span class="keyword">SELECT</span> department, <span class="keyword">AVG</span>(salary) <span class="keyword">AS</span> avg_salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department;</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| department | avg_salary |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| HR         |  4000.0000 |</span><br><span class="line">| IT         |  6100.0000 |</span><br><span class="line">| Sales      |  5266.6667 |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 获取每个部门的最高工资</span></span><br><span class="line">mysql&gt; <span class="keyword">SELECT</span> department, <span class="keyword">MAX</span>(salary) <span class="keyword">AS</span> max_salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department;</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| department | max_salary |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| HR         |       4000 |</span><br><span class="line">| IT         |       6200 |</span><br><span class="line">| Sales      |       5500 |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li><code>GROUP BY</code>子句应出现在<code>SELECT</code>查询的<code>WHERE</code>子句之后和<code>ORDER BY</code>子句之前。</li><li><code>SELECT</code>查询中的列必须出现在<code>GROUP BY</code>子句中，或者是聚合函数的参数。</li></ul></blockquote><h3 id="6-6-表复制"><a href="#6-6-表复制" class="headerlink" title="6.6 表复制"></a>6.6 表复制</h3><p>​        在MySQL中可以基于某一张存在的表创建新表，但主键、外键和索引不会复制</p><p>语法格式：<code>create table 新表名 select * from 存在的表名</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table emp01.test  select * from   study.employees;</span><br><span class="line">Query OK, 107 rows affected (0.04 sec)</span><br><span class="line">Records: 107  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from emp01.test</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131632370.png" alt="img"></p><h4 id="6-6-1-单、多字段复制"><a href="#6-6-1-单、多字段复制" class="headerlink" title="6.6.1 单、多字段复制"></a>6.6.1 单、多字段复制</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table emp01.test02  select mployee_id,first_name,last_name  from study.employees;</span><br><span class="line">Query OK, 107 rows affected (0.02 sec)</span><br><span class="line">Records: 107  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from emp01.test02</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407131634865.png" alt></p><h3 id="6-7-范围查询BETWEEN-AND"><a href="#6-7-范围查询BETWEEN-AND" class="headerlink" title="6.7 范围查询BETWEEN AND"></a>6.7 范围查询<code>BETWEEN AND</code></h3><p>​        BETWEEN运算符使用的格式通常为<code>SELECT 字段名 FROM TABLE WHERE 字段名 BETWEEN 值1 AND 值2</code>，此时，当值大于或等于值1，并且值小于或等于值2时，结果为1，否则结果为0。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select last_name,salary from employees where salary between 5000 AND 10000;</span><br></pre></td></tr></table></figure><h3 id="6-8-IS-NULL空值和IS-NOT-NULL非空值查询"><a href="#6-8-IS-NULL空值和IS-NOT-NULL非空值查询" class="headerlink" title="6.8 IS NULL空值和IS NOT NULL非空值查询"></a>6.8 <code>IS NULL空值和IS NOT NULL非空值查询</code></h3><h4 id="6-8-1-IS-NULL-查询"><a href="#6-8-1-IS-NULL-查询" class="headerlink" title="6.8.1 IS NULL 查询"></a>6.8.1 IS NULL 查询</h4><p>​        空运算符（IS NULL或者ISNULL）判断一个值是否为NULL，如果为NULL则返回1，否则返回 0。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查询commission_pct等于NULL</span></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE commission_pct IS NULL;</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE commission_pct &lt;=&gt; NULL;</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE ISNULL(commission_pct);</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL 5.7 此语句无法实现</span></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE commission_pct = NULL;</span><br></pre></td></tr></table></figure><h4 id="6-8-2-IS-NOT-NULL"><a href="#6-8-2-IS-NOT-NULL" class="headerlink" title="6.8.2 IS NOT NULL"></a>6.8.2 IS NOT NULL</h4><p>​        非空运算符（IS NOT NULL）判断一个值是否不为NULL，如果不为NULL则返回1，否则返回0。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查询commission_pct不等于NULL</span></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE commission_pct IS NOT NULL;</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE NOT commission_pct &lt;=&gt; NULL;</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT employee_id,commission_pct FROM employees WHERE NOT ISNULL(commission_pct);</span><br></pre></td></tr></table></figure><h3 id="6-9-IN运算符使用"><a href="#6-9-IN运算符使用" class="headerlink" title="6.9 IN运算符使用"></a>6.9 <code>IN运算符使用</code></h3><p>​            IN运算符用于判断给定的值是否是IN列表中的一个值，如果是则返回1，否则返回0。如果给定的值为NULL，或者IN列表中存在NULL，则结果为NULL。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT employee_id,last_name,salary,manager_id FROM employees WHERE manager_id IN (100,101);</span><br></pre></td></tr></table></figure><h3 id="6-10-排序查询"><a href="#6-10-排序查询" class="headerlink" title="6.10 排序查询"></a>6.10 排序查询</h3><p>​        <strong>使用 <code>ORDER BY</code>子句排序;ASC:：升序；DESC：降序。<code>ORDER BY</code>子句在SELECT语句的结尾。在排序时，默认升序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 准备初始表</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建 employees 表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 员工ID，主键</span></span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名</span></span><br><span class="line">    department <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门</span></span><br><span class="line">    salary <span class="built_in">INT</span>, <span class="comment">-- 工资</span></span><br><span class="line">    hire_date <span class="built_in">DATE</span> <span class="comment">-- 入职日期</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 插入初始数据</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employees (<span class="keyword">id</span>, <span class="keyword">name</span>, department, salary, hire_date) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'Alice'</span>, <span class="string">'Sales'</span>, <span class="number">5000</span>, <span class="string">'2020-01-15'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'Bob'</span>, <span class="string">'HR'</span>, <span class="number">4000</span>, <span class="string">'2019-03-22'</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">'Charlie'</span>, <span class="string">'Sales'</span>, <span class="number">5500</span>, <span class="string">'2021-06-10'</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">'David'</span>, <span class="string">'IT'</span>, <span class="number">6000</span>, <span class="string">'2018-11-30'</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">'Eve'</span>, <span class="string">'IT'</span>, <span class="number">6200</span>, <span class="string">'2017-07-19'</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="string">'Frank'</span>, <span class="string">'Sales'</span>, <span class="number">5300</span>, <span class="string">'2020-05-25'</span>);</span><br></pre></td></tr></table></figure><h4 id="6-10-1-单列排序"><a href="#6-10-1-单列排序" class="headerlink" title="6.10.1 单列排序"></a>6.10.1 单列排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 按salary升序排序</span></span><br><span class="line">mysql&gt; SELECT * FROM employees</span><br><span class="line">       ORDER BY salary ASC;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |</span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |</span><br><span class="line">|  6 | Frank   | Sales      |   5300 | 2020-05-25 |</span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |</span><br><span class="line">|  4 | David   | IT         |   6000 | 2018-11-30 |</span><br><span class="line">|  5 | Eve     | IT         |   6200 | 2017-07-19 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 按hire_date降序排序</span></span><br><span class="line">mysql&gt; <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees</span><br><span class="line">       <span class="keyword">ORDER</span> <span class="keyword">BY</span> hire_date <span class="keyword">DESC</span>;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |</span><br><span class="line">|  6 | Frank   | Sales      |   5300 | 2020-05-25 |</span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |</span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |</span><br><span class="line">|  4 | David   | IT         |   6000 | 2018-11-30 |</span><br><span class="line">|  5 | Eve     | IT         |   6200 | 2017-07-19 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-10-2-多列排序"><a href="#6-10-2-多列排序" class="headerlink" title="6.10.2 多列排序"></a>6.10.2 多列排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 按salary升序，然后按hire_date降序排序</span></span><br><span class="line">mysql&gt; SELECT * FROM employees</span><br><span class="line">       ORDER BY salary ASC, hire_date DESC;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |</span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |</span><br><span class="line">|  6 | Frank   | Sales      |   5300 | 2020-05-25 |</span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |</span><br><span class="line">|  4 | David   | IT         |   6000 | 2018-11-30 |</span><br><span class="line">|  5 | Eve     | IT         |   6200 | 2017-07-19 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第 一列数据中所有值都是唯一的，将不再对第二列进行排序。</code></strong></p></blockquote><h4 id="6-10-3-按别名排序"><a href="#6-10-3-按别名排序" class="headerlink" title="6.10.3 按别名排序"></a>6.10.3 按别名排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 按工资的10%升序排序</span></span><br><span class="line">mysql&gt; SELECT *,(salary * 0.1) AS salary_bonus FROM employees</span><br><span class="line">       ORDER BY salary_bonus ASC;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+--------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  | salary_bonus |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+--------------+</span></span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |        400.0 |</span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |        500.0 |</span><br><span class="line">|  6 | Frank   | Sales      |   5300 | 2020-05-25 |        530.0 |</span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |        550.0 |</span><br><span class="line">|  4 | David   | IT         |   6000 | 2018-11-30 |        600.0 |</span><br><span class="line">|  5 | Eve     | IT         |   6200 | 2017-07-19 |        620.0 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+--------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="6-11-分页查询"><a href="#6-11-分页查询" class="headerlink" title="6.11 分页查询"></a>6.11 分页查询</h3><p>​        分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件。</p><p>语法格式：<code>LIMIT [偏移量,] 行数</code></p><p>第一个“偏移量”参数指示MySQL从哪一行开始显示，是一个可选参数，如果不指定“位置偏移 量”，将会从表中的第一条记录开始（第一条记录的位置偏移量是0，第二条记录的位置偏移量是 1，以此类推）；第二个参数“行数”指示返回的记录条数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 前3条记录：</span></span><br><span class="line">mysql&gt; SELECT * FROM  employees LIMIT 0,3;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |</span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |</span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mysql&gt; <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">| id | name    | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">|  1 | Alice   | Sales      |   5000 | 2020-01-15 |</span><br><span class="line">|  2 | Bob     | HR         |   4000 | 2019-03-22 |</span><br><span class="line">|  3 | Charlie | Sales      |   5500 | 2021-06-10 |</span><br><span class="line">+<span class="comment">----+---------+------------+--------+------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询第二页的3条记录（第4条到第6条记录）</span></span><br><span class="line">mysql&gt; <span class="keyword">SELECT</span> <span class="keyword">id</span>, <span class="keyword">name</span>,department,salary,hire_date</span><br><span class="line">       <span class="keyword">FROM</span> employees</span><br><span class="line">       <span class="keyword">LIMIT</span> <span class="number">3</span> <span class="keyword">OFFSET</span> <span class="number">3</span>;</span><br><span class="line">+<span class="comment">----+-------+------------+--------+------------+</span></span><br><span class="line">| id | name  | department | salary | hire_date  |</span><br><span class="line">+<span class="comment">----+-------+------------+--------+------------+</span></span><br><span class="line">|  4 | David | IT         |   6000 | 2018-11-30 |</span><br><span class="line">|  5 | Eve   | IT         |   6200 | 2017-07-19 |</span><br><span class="line">|  6 | Frank | Sales      |   5300 | 2020-05-25 |</span><br><span class="line">+<span class="comment">----+-------+------------+--------+------------+</span></span><br></pre></td></tr></table></figure><h3 id="6-12-行关联"><a href="#6-12-行关联" class="headerlink" title="6.12 行关联"></a>6.12 行关联</h3><p><strong>环境准备：</strong></p><p><code>员工表</code></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407132040962.png" alt="img"></p><blockquote><p><strong>字段解释：</strong><br>    <strong>employee_id：员工ID</strong><br>    <strong>first_name：员工名称</strong><br>    <strong>last_name：员工姓氏</strong><br>    <strong>email：邮箱</strong><br>    <strong>phone_number：电话号码</strong><br>    <strong>hire_date：入职时间</strong><br>    <strong>job_id：职位ID</strong><br>    <strong>salary：工资</strong><br>    <strong>commission_pct：奖金百分比</strong><br>    <strong>manager_id：管理者ID</strong><br>    <strong>department_id：部门ID</strong></p></blockquote><p><code>部门表</code></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407132040542.png" alt="img"></p><blockquote><p><strong>字段解释：</strong><br>    <strong>department_id：部门ID</strong><br>    <strong>department_name：部门名称</strong><br>    <strong>manager_id：管理者ID</strong><br>    <strong>location_id：位置ID</strong></p></blockquote><p><code>位置表</code></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407132041774.png" alt="img"></p><blockquote><p><strong>字段解释：</strong><br>    <strong>location_id：位置ID</strong><br>    <strong>street_address：街道地址</strong><br>    <strong>postal_code：邮政编码</strong><br>    <strong>city：城市名称</strong><br>    <strong>state_province：州或省</strong><br>    <strong>country_id：国家ID</strong></p></blockquote><p><strong><code>测试：查看名为king的员工部门信息</code></strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 错误示范</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span>  last_name = <span class="string">"king"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_id,department_name</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> department_id = <span class="number">80</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 正确操作</span></span><br><span class="line"><span class="keyword">SELECT</span> employees.last_name,employees.department_id,departments.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees,departments</span><br><span class="line"><span class="keyword">WHERE</span> employees.last_name = <span class="string">"king"</span> <span class="keyword">AND</span> employees.department_id = departments.department_id;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意在多表联查时需要注意表与表之前必须具备一个连接条件，且在查询指定字段时多个表出现相同字段需要指定是从那个表中查询。</strong></p></blockquote><p>优化：由于在进行多表联查时，需要指定查询的字段出现在哪个表中，所以导致SQL可定性较差，故可以给表设定别名；但是一旦给表设定了别名，在查询字段时必须指定。否则无法正常执行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.last_name,t1.department_id,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1,departments t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.last_name = <span class="string">"king"</span> <span class="keyword">AND</span> t1.department_id = t2.department_id;</span><br></pre></td></tr></table></figure><p><code>测试：查询员工的员工id、姓氏、部门名称、城市</code><br>    字段名：<code>employee_id,last_name,department_name,city</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name,t3.city</span><br><span class="line"><span class="keyword">FROM</span> employees t1,departments t2,locations t3</span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id = t2.department_id <span class="keyword">AND</span> t2.location_id = t3.location_id;</span><br></pre></td></tr></table></figure><h4 id="6-12-1-多表查询分类"><a href="#6-12-1-多表查询分类" class="headerlink" title="6.12.1 多表查询分类"></a>6.12.1 多表查询分类</h4><h5 id="1-等值连接"><a href="#1-等值连接" class="headerlink" title="1. 等值连接"></a>1. 等值连接</h5><p>​        等值连接是指使用等值条件将两个或多个表的相关联字段连接在一起，从而获取符合条件的数据。</p><p><strong><code>示例：查询员工的员工id、姓氏、部门名称、城市</code></strong></p><p>​    字段名：<code>employees.employee_id,employees.last_name,departments.department_name,locations.city</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name,t3.city</span><br><span class="line"><span class="keyword">FROM</span> employees t1,departments t2,locations t3</span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id = t2.department_id <span class="keyword">AND</span> t2.location_id = t3.location_id;</span><br></pre></td></tr></table></figure><h5 id="2-非等值连接"><a href="#2-非等值连接" class="headerlink" title="2. 非等值连接"></a>2. 非等值连接</h5><p>​        非等值连接是指使用非等值条件（如 <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>!=</code> 等）将两个或多个表的相关联字段连接在一起，从而获取符合条件的数据。</p><p><strong>引入新表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc job_grades;  # 工资表等级表</span><br><span class="line">+<span class="comment">-------------+------------+------+-----+---------+-------+</span></span><br><span class="line">| Field       | Type       | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------------+------------+------+-----+---------+-------+</span></span><br><span class="line">| grade_level | varchar(3) | YES  |     | NULL    |       |  <span class="comment"># 工资等级</span></span><br><span class="line">| lowest_sal  | int(11)    | YES  |     | NULL    |       |  <span class="comment"># 最低工资</span></span><br><span class="line">| highest_sal | int(11)    | YES  |     | NULL    |       |  <span class="comment"># 最高工资</span></span><br><span class="line">+<span class="comment">-------------+------------+------+-----+---------+-------+</span></span><br></pre></td></tr></table></figure><p><strong><code>示例:查询每位员工的工资等级</code></strong></p><p>字段名：<code>employees.last_name,employees.salary,job_grades.grade_level</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT t1.last_name,t1.salary,t2.grade_level</span><br><span class="line">FROM employees t1,job_grades t2</span><br><span class="line">WHERE t1.salary BETWEEN t2.lowest_sal AND t2.highest_sal;</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line">SELECT t1.last_name,t1.salary,t2.grade_level</span><br><span class="line">FROM employees t1,job_grades t2</span><br><span class="line">WHERE t1.salary &gt;&#x3D; t2.lowest_sal AND t1.salary &lt;&#x3D; t2.highest_sal;</span><br></pre></td></tr></table></figure><h5 id="3-自连接"><a href="#3-自连接" class="headerlink" title="3. 自连接"></a>3. 自连接</h5><p>​        自连接是指在同一张表内进行连接查询，通常用于在表的不同行之间建立关系。这种<strong>连接可以使用表的别名</strong>来区分同一个表的不同实例。自连接在处理层次结构或关联关系的数据时非常有用。</p><p><strong>表内容</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407132301850.png" alt="img"></p><p>如上图所示：表中几乎每一位员工都有一个管理者id</p><p><strong><code>示例：查询所有员工的管理者姓名</code></strong></p><p>​    字段名：<code>employees_id,last_name,manager_id</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.employee_id,t2.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1,employees t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.manager_id = t2.employee_id;</span><br></pre></td></tr></table></figure><hr><h5 id="4-非自连接"><a href="#4-非自连接" class="headerlink" title="4. 非自连接"></a>4. 非自连接</h5><p>​    非自连接主要指的是通过连接两个或多个不同的表来获取所需的数据。这些表之间的连接不是通过表本身的字段，而是通过多个表的字段。</p><h5 id="5-内连接"><a href="#5-内连接" class="headerlink" title="5. 内连接"></a>5. 内连接</h5><p>​        内连接用于从多个表中获取同时存在于这些表中的数据。也就是说，只有当连接条件满足时，才会返回记录。内连接是关系数据库中最常用的一种连接方式。</p><p><strong><code>示例：查询员工的员工id、姓氏、部门名称、城市</code></strong></p><p>​    字段名：<code>employees.employee_id,employees.last_name,departments.department_name,locations.city</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name,t3.city</span><br><span class="line"><span class="keyword">FROM</span> employees t1,departments t2,locations t3</span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id = t2.department_id <span class="keyword">AND</span> t2.location_id = t3.location_id;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 SQL99语法</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t2.department_name,t3.city</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id  = t2.department_id </span><br><span class="line"><span class="keyword">JOIN</span> locations t3</span><br><span class="line"><span class="keyword">ON</span> t2.location_id = t3.location_id;</span><br></pre></td></tr></table></figure><hr><h5 id="6-外连接"><a href="#6-外连接" class="headerlink" title="6. 外连接"></a>6. 外连接</h5><p>外连接（Outer Join）用于从多个表中获取匹配的和不匹配的记录。外连接分为左外连接（Left Join）和右外连接（Right Join）。在使用外连接时，即使在一个表中没有匹配的记录，另一个表中的记录仍会包含在结果集中。</p><p><strong>左外连接</strong></p><p>​        两个表（员工表和部门表）在来连接过程中除了返回<code>满足连接条件</code>的行以外还返回<code>左表中不满足条件</code>的行</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407132343833.png" alt="img"></p><p>如上图所示：在<code>employees</code>表中，名为<code>Grant</code>这位员工没有部门，在进行内连接查询时，只能查询处<code>106</code>条记录。但是在某些场景下。需要查询处所有员工的部门情况。所以此时就需要外连接。</p><p><strong><code>示例：查询所有员工的姓氏、部门名称（包括没有部门的员工）</code></strong></p><p>字段名：<code>employees.last_name,deparments.deparment_name</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.first_name,<span class="number">1.</span>last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407140005866.png" alt="img"></p><blockquote><p>此时所有的员工的部门信息都查询出来了。共107条记录，包括部门为空值的员工</p></blockquote><hr><p><strong>右外连接</strong></p><p>​        两个表在来连接过程中除了返回<strong><code>满足连接条件的行</code></strong>以外还返回<strong><code>右表中不满足条件</code></strong>的行</p><p><strong><code>示例：查询所有没有员工的部门信息</code></strong></p><p>​    字段名：<code>employees.last_name,deparments.deparment_name</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.first_name,t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407140011967.png" alt="img"></p><hr><p><strong>满外连接</strong></p><p>​    两个表在来连接过程中除了返回满足连接条件的行以外还返回两张表中不满足条件的行</p><p><code>合并查询结果</code>利用UNION关键字，可以给出多条SELECT语句，并将它们的结果组合成单个结果集。合并时，<strong>两个表对应的列数和数据类型必须相同</strong>，并且相互对应。各个SELECT语句之间使用UNION或UNION ALL关键字分隔。</p><p><strong><code>UNION</code> 操作符</strong></p><p>1+106+106+16</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407140024016.png" alt="img"></p><p><strong><code>UNION</code> 操作符返回两个查询的结果集的并集，去除重复记录。</strong></p><p><strong>示例：</strong>经以上实验查询出来的结论发现。<code>employees</code>员工表中有106名员工具有部门。<code>departments</code>部门表中有16个部门没有员工。那么在<code>UNION ALL</code>进行满外连接查询时，最终的查询结果应该是<code>1(没有部门的员工数量)+106(有部门的员工数量)+16(没有员工的部门数量)=123条记录</code>。相关查询SQL语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查询存在部门的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t1.first_name,t1.salary,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1,departments t2 </span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id = t2.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看没有员工的部门</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看没有部门的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t1.first_name,t1.salary,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t2.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><hr><p><strong><code>UNION ALL</code>操作符</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407140027063.png" alt="img"></p><p><strong><code>UNION ALL</code>操作符返回两个查询的结果集的并集。对于两个结果集的重复部分，不去重。</strong></p><blockquote><p>注意：执行UNION ALL语句时所需要的资源比UNION语句少。如果明确知道合并数据后的结果数据不存在重复数据，或者不需要去除重复的数据，则尽量使用UNION ALL语句，以提高数据查询的效率。</p></blockquote><p><strong><code>扩展内容</code></strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407140033145.png" alt="img"></p><p>代码实现：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 中图：查询具有部门的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t1.salary,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 左上图：查询所有员工的部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t1.salary,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 右上图：查询所有部门的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id  = t2.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 左中图：查询没有部门的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t1.first_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t2.department_id <span class="keyword">IS</span> <span class="literal">null</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 右中图：查询所有没有员工的部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.last_name,t2.department_name,t2.department_id </span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 左下图：满外连接</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询没有部门的员工信息以及所有员工的部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t2.department_id <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="comment">#没有去重操作，效率高</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 右下图</span></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查询没有部门的员工信息以及没有员工的部门信息</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t2.<span class="string">`department_id`</span> <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.employee_id,t1.last_name,t2.department_name</span><br><span class="line"><span class="keyword">FROM</span> employees t1 <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> departments t2</span><br><span class="line"><span class="keyword">ON</span> t1.department_id = t2.department_id</span><br><span class="line"><span class="keyword">WHERE</span> t1.department_id <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h3 id="6-13-破解密码"><a href="#6-13-破解密码" class="headerlink" title="6.13 破解密码"></a>6.13 破解密码</h3><p>先将这个修改成简单密码注释掉</p><p><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1566298427407.png" alt="1566298427407"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root账户没了或者root密码丢失：</span><br><span class="line">关闭Mysql使用下面方式进入Mysql直接修改表权限                       </span><br><span class="line">  5.6/5.7版本：</span><br><span class="line">    # mysqld --skip-grant-tables --user=mysql &amp;    </span><br><span class="line">    </span><br><span class="line">    # mysql -uroot</span><br><span class="line">    mysql&gt; UPDATE mysql.user SET authentication_string=password('1') WHERE user='root' AND host='localhsot';</span><br><span class="line">    mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash">编辑配置文件将skip-grant-tables参数注释</span></span><br><span class="line"><span class="meta">#</span><span class="bash">重启mysql</span></span><br></pre></td></tr></table></figure><h1 id="Day03"><a href="#Day03" class="headerlink" title="Day03"></a>Day03</h1><h1 id="七、MySQL-索引"><a href="#七、MySQL-索引" class="headerlink" title="七、MySQL 索引"></a>七、MySQL 索引</h1><p>​        索引作为一种数据结构，其用途是用于提升检索数据的效率。<code>索引（Index）是帮助MySQL高效获取数据的数据结构。</code> </p><p>​        索引的本质：索引是数据结构。你可以简单理解为“排好序的快速查找数据结构”，满足特定查找算法。 </p><p>​        索引是在<code>存储引擎</code>中实现的 ，因此每种存储引擎的索引不一定完全相同，并且每种存储引擎不一定支持所有索引类型。同时，存储引擎可以定义每个表的 <code>最大索引数</code> 和<code>最大索引长度</code>。所有存储引擎支持每个表至少16个索引，总索引长度至少为256字节。有些存储引擎支持更多的索引数和更大的索引长度。</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​        索引是存储引擎用于快速找到数据记录的一种数据结构，就好比一本教课书的目录部分，通过目录中找到对应文章的页码，便可快速定位到需要的文章。MySQL中也是一样的道理，进行数据查找时，<strong>首先查看查询条件是否命中某条索引，符合则通过索引査找相关数据，如果不符合则需要全表扫描 ，即需要一条一条地查找记录，直到找到与条件符合的记录。<code>减少磁盘的IO次数，加快查询速度。</code></strong></p><h3 id="7-1-索引的优点"><a href="#7-1-索引的优点" class="headerlink" title="7.1 索引的优点"></a>7.1 索引的优点</h3><ul><li>提高数据检索的效率，降低 <code>数据库的IO成本</code>。</li><li>通过创建唯一索引，可以保证数据库表中每一行 <code>数据的唯一性</code>。</li><li>对于有依赖关系的子表和父表联合查询时， 可以提高查询速度。</li><li>在使用分组和排序子句进行数据查询时，可以显著 <code>减少查询中分组和排序的时间 ，降低了CPU的消耗</code>。</li></ul><h3 id="7-2-索引的缺点"><a href="#7-2-索引的缺点" class="headerlink" title="7.2 索引的缺点"></a>7.2 索引的缺点</h3><ul><li>创建索引和维护索引要耗费时间，并且随着数据量的增加，所耗费的时间也会增加。</li><li>索引需要占用磁盘空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间。</li><li>虽然索引大大提高了查询速度，同时却会降低更新表的速度。当对表中的数据进行增加、删除和修改的时候，索引也要动态地维护，这样就降低了数据的维护速度。</li></ul><h3 id="7-1-MySQL-索引的分类"><a href="#7-1-MySQL-索引的分类" class="headerlink" title="7.1 MySQL 索引的分类"></a>7.1 MySQL 索引的分类</h3><ul><li><p><code>普通索引（INDEX）</code>：用于加速查询，不需要唯一。可以在列上创建索引以加速查询性能，没有唯一性要求。只是用于提高查询效率。这类索引可以创建在<code>任何数据类型</code> 中，其值是否唯一和非空，要由字段本身的完整性约束条件决定。建立索引以后，可以通过索引进行查询。例如，在<code>name</code>上建立一个普通索引，查询记录时就可以根据该索引进行查询。</p><ul><li><pre><code class="sql"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees (    employee_id <span class="built_in">INT</span>,    <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>),    <span class="keyword">INDEX</span> idx_name (<span class="keyword">name</span>));<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">- &#96;唯一索引（UNIQUE）&#96;：在创建唯一性索引时，限制该**索引的值必须是唯一的**，但允许有空(NULL)值。在一张数据表里可以有多个唯一索引。</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;sql</span><br><span class="line">    CREATE TABLE employees (</span><br><span class="line">        employee_id INT,</span><br><span class="line">        name VARCHAR(20) UNIQUE</span><br><span class="line">    );</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p><code>主键索引（PRIMARY KEY）</code>：<strong>索引列值必须唯一，不能为NULL。</strong>一个表只能有一个主键索引；不仅确保列中的所有值都是唯一的，还不允许包含 NULL 值。每个表只能有一个主键索引，它主要用于唯一标识表中的每一行，并作为表的主标识符。</p><ul><li><pre><code class="sql"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees (    employee_id <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,    first_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>),    last_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>));<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- &#96;全文索引（FULL TEXT）&#96;：通过建立在文本列上的索引。允许对文本字段中的单词进行快速的搜索和匹配，通常用于处理大型文本数据，如文章内容、博客帖子和产品描述等。全文索引支持基于自然语言的查询，可以显著提高全文搜索的性能。</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;sql</span><br><span class="line">    CREATE TABLE articles (</span><br><span class="line">        id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">        title VARCHAR(200),</span><br><span class="line">        body TEXT,</span><br><span class="line">        FULLTEXT (title, body) -- 为 title 和 body 列创建全文索引</span><br><span class="line">    );</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="7-2-MySQL-不同类型索引用途和区别"><a href="#7-2-MySQL-不同类型索引用途和区别" class="headerlink" title="7.2 MySQL 不同类型索引用途和区别"></a>7.2 MySQL 不同类型索引用途和区别</h3><ul><li>普通索引常用于过滤数据。例如，以商品种类作为索引，检索种类为“手机”的商品。</li><li>唯一索引主要用于标识一列数据不允许重复的特性，相比主键索引不常用于检索的场景。</li><li>主键索引是行的唯一标识，因而其主要用途是检索特定数据。</li><li>全文索引效率低，常用于文本中内容的检索。</li></ul><h3 id="7-3-MySQL-使用索引"><a href="#7-3-MySQL-使用索引" class="headerlink" title="7.3 MySQL 使用索引"></a>7.3 MySQL 使用索引</h3><h4 id="7-3-1-创建索引"><a href="#7-3-1-创建索引" class="headerlink" title="7.3.1 创建索引"></a>7.3.1 创建索引</h4><p>​        创建索引方式：创建表事定义<code>CREATE TABLE</code>指定需要创建的索引列，使用<code>ALTER TABLE</code>语句在存在的表上创建索引；使用<code>CREATE INDEX</code>语句在已存在的表上添加索引。</p><h5 id="1-普通索引（INDEX）"><a href="#1-普通索引（INDEX）" class="headerlink" title="1. 普通索引（INDEX）"></a>1. 普通索引（INDEX）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 在创建表时指定</span><br><span class="line">create table test06(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthdy date, </span><br><span class="line">    sex char(1) not null, </span><br><span class="line">    index nameindex (name(50))</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 基于表结构创建</span><br><span class="line">create table test07(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthday date, </span><br><span class="line">    sex char(1) not null</span><br><span class="line">);</span><br><span class="line">#&gt;&gt;&gt; 创建索引</span><br><span class="line">create index nameindex on test07(name(50));</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 修改表结构创建</span><br><span class="line">create table test08(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthday date, </span><br><span class="line">    sex char(1) not null</span><br><span class="line">);</span><br><span class="line">#&gt;&gt;&gt; 添加普通索引</span><br><span class="line">ALTER TABLE test08 ADD INDEX nameIndex(name(50));</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 查看索引</span><br><span class="line">#&gt;&gt;&gt; 方式一</span><br><span class="line">show index from test06;</span><br><span class="line">#&gt;&gt;&gt; 方式二</span><br><span class="line">show create table test06;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407142223293.png" alt="img"></p><blockquote><p>提示：<code>Non_unique</code>唯一代表。该约束非唯一。 </p></blockquote><h5 id="2-唯一索引（UNIQUE）"><a href="#2-唯一索引（UNIQUE）" class="headerlink" title="2. 唯一索引（UNIQUE）"></a>2. 唯一索引（UNIQUE）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 在创建表时指定</span><br><span class="line">create table test09(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthday date, </span><br><span class="line">    sex char(1) not null, </span><br><span class="line">    unique index id_idex(id)</span><br><span class="line">);</span><br><span class="line">#&gt;&gt;&gt; 插入测试数据</span><br><span class="line">INSERT INTO emp01.test09(id,name,sex)</span><br><span class="line">VALUES (1,&quot;赵云&quot;,&quot;男&quot;);</span><br><span class="line">#&gt;&gt;&gt; 再次插入相同数据</span><br><span class="line">INSERT INTO emp01.test09(id,name,sex)</span><br><span class="line">VALUES (1,&quot;赵云&quot;,&quot;男&quot;);</span><br><span class="line">---此时会报：ERROR 1062 (23000): Duplicate entry &#39;1&#39; for key &#39;id_idex&#39;</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 基于表结构创建</span><br><span class="line">create table test10(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthday date, </span><br><span class="line">    sex char(1) not null</span><br><span class="line">);</span><br><span class="line">#&gt;&gt;&gt; 创建索引</span><br><span class="line">CREATE unique INDEX idIndex ON test10(id);</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407142326737.png" alt="img"></p><h5 id="3-主键索引（PRIMARY-KEY）"><a href="#3-主键索引（PRIMARY-KEY）" class="headerlink" title="3. 主键索引（PRIMARY KEY）"></a>3. 主键索引（PRIMARY KEY）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 创建表时时指定</span><br><span class="line">create table test11(</span><br><span class="line">    id int, </span><br><span class="line">    name varchar(100), </span><br><span class="line">    birthday date, </span><br><span class="line">    sex char(1), </span><br><span class="line">    primary key (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 修改表结构创建</span><br><span class="line">create table test12(</span><br><span class="line">    id int not null, </span><br><span class="line">    name varchar(100) not null, </span><br><span class="line">    birthday date,</span><br><span class="line">    sex char(1) not null</span><br><span class="line">);</span><br><span class="line">#&gt;&gt;&gt; 添加索引</span><br><span class="line">ALTER TABLE test12 ADD PRIMARY KEY (id);</span><br></pre></td></tr></table></figure><p><strong>主键索引不能使用基于表结构创建的方式创建。</strong></p><h4 id="7-3-2-删除索引"><a href="#7-3-2-删除索引" class="headerlink" title="7.3.2 删除索引"></a>7.3.2 删除索引</h4><h5 id="1-普通索引（INDEX）-1"><a href="#1-普通索引（INDEX）-1" class="headerlink" title="1. 普通索引（INDEX）"></a>1. 普通索引（INDEX）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 直接删除</span><br><span class="line">DROP INDEX nameIndex ON test06;</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 修改表结构删除</span><br><span class="line">ALTER TABLE test06 DROP INDEX nameIndex;</span><br></pre></td></tr></table></figure><h5 id="2-唯一索引（UNIQUE）-1"><a href="#2-唯一索引（UNIQUE）-1" class="headerlink" title="2. 唯一索引（UNIQUE）"></a>2. 唯一索引（UNIQUE）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 直接删除</span><br><span class="line">DROP INDEX idIndex ON test09;</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 修改表结构删除</span><br><span class="line">ALTER TABLE test09 DROP INDEX idIndex;</span><br></pre></td></tr></table></figure><h5 id="3-主键索引（PRIMARY-KEY）-1"><a href="#3-主键索引（PRIMARY-KEY）-1" class="headerlink" title="3. 主键索引（PRIMARY KEY）"></a>3. 主键索引（PRIMARY KEY）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE test11 DROP PRIMARY KEY;</span><br></pre></td></tr></table></figure><p><strong>主键不能采用直接删除的方式删除。</strong></p><h4 id="7-3-3-查看索引"><a href="#7-3-3-查看索引" class="headerlink" title="7.3.3 查看索引"></a>7.3.3 查看索引</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#&gt;&gt;&gt; 方式一</span><br><span class="line">SHOW INDEX FROM test06;</span><br><span class="line"></span><br><span class="line">#&gt;&gt;&gt; 方式二</span><br><span class="line">SHOW CREATE TABLE test06;</span><br></pre></td></tr></table></figure><h3 id="7-4-设置索引的原则"><a href="#7-4-设置索引的原则" class="headerlink" title="7.4 设置索引的原则"></a>7.4 设置索引的原则</h3><ul><li><strong>频繁查询的列</strong>：对经常在 <code>SELECT</code> 语句的 <code>WHERE</code> 子句、<code>JOIN</code> 子句、<code>ORDER BY</code> 子句和 <code>GROUP BY</code> 子句中出现的列创建索引。</li><li><strong>唯一性</strong>：对那些需要保持唯一值的列（如主键、唯一键）创建索引，以确保数据的完整性和一致性。</li><li><strong>低选择性</strong>：唯一性太差的字段不适合作为索引，例如性别。</li><li><strong>频繁增删改的字段不要建立索引</strong>：字段的变化<code>MySQL</code>是需要重新维护索引的，假设某个字段频繁修改，那就意味着需要频繁的重建索引，必然影响MySQL的性能。</li><li><strong>不要建立太多的索引</strong>：MySQL维护索引是需要空间和耗费性能的。如果索引过多，这无疑是增加了MySQL的负担。</li></ul><h3 id="7-5-索引失效的场景？怎么避免设置的索引失效？"><a href="#7-5-索引失效的场景？怎么避免设置的索引失效？" class="headerlink" title="7.5 索引失效的场景？怎么避免设置的索引失效？"></a>7.5 索引失效的场景？怎么避免设置的索引失效？</h3><blockquote><p><strong>index(key)每张表可以有很多列做index，必须的起名</strong></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">面试题:</span><br><span class="line">导致SQL执行慢的原因：</span><br><span class="line">1.硬件问题。如网络速度慢，内存不足，I/O吞吐量小，磁盘空间满了等。</span><br><span class="line">2.没有索引或者索引失效。</span><br><span class="line">3.数据过多（分库分表）。</span><br><span class="line">4.服务器调优及各个参数设置（调整my.cnf）。</span><br><span class="line">索引：当查询速度过慢可以通过建立优化查询速度，可以当作调优</span><br></pre></td></tr></table></figure><h1 id="八、权限管理"><a href="#八、权限管理" class="headerlink" title="八、权限管理"></a>八、权限管理</h1><h3 id="8-1-用户管理"><a href="#8-1-用户管理" class="headerlink" title="8.1 用户管理"></a>8.1 用户管理</h3><p>​    简介：用户管理涉及<code>用户创建</code>、<code>权限分配</code>、<code>修改和删除</code>，以及用户账户的其他管理任务。</p><h4 id="8-1-1-MySQL服务器登录方式"><a href="#8-1-1-MySQL服务器登录方式" class="headerlink" title="8.1.1 MySQL服务器登录方式"></a>8.1.1 MySQL服务器登录方式</h4><p><strong>1. 本地登录MySQL服务器方式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mysql -u&lt;用户名&gt; -p'&lt;用户密码&gt;'</span></span><br></pre></td></tr></table></figure><p><strong>2. 远程登录MySQL服务器方式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mysql –h &lt;hostname&gt;|&lt;hostIP&gt; –P &lt;port&gt; –u &lt;username&gt; –p  -D &lt;DatabaseName&gt; –e "&lt;SQL语句&gt;"</span></span><br></pre></td></tr></table></figure><p>​    下面详细介绍命令中的参数： </p><ul><li><code>-h参数</code>： 主机名或者主机IP，hostname为主机，hostIP为主机IP。</li><li><code>-P参数</code> ：MySQL服务的端口，通过该参数连接到指定的端口。MySQL服务的默认端口是3306， 不使用该参数时自动连接到3306端口，port为连接的端口号。 </li><li><code>-u参数</code> ：用户名，username为用户名。 </li><li><code>-p参数</code>：提示输入密码。 DatabaseName参数指明登录到哪一个数据库中。如果没有该参数，就会直接登录到MySQL数据库中，然后可以使用USE命令来选择数据库。 </li><li><code>-D参数</code>：指定数据库名称。</li><li><code>-e参数</code> ：后面可以直接加SQL语句。登录MySQL服务器以后即可执行这个SQL语句，然后退出MySQL服务器。</li></ul><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mysql -uroot -p'1' -hlocalhost -P3306 mysql -e "select host,user from user"</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407111610547.png" alt="image-20240711161023419"></p><p><strong>3. 修改用户主机地址</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 更新字段</span></span><br><span class="line">mysql&gt; update mysql.user set host = '%' where user = 'root';</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>4. 修改数据库端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改端口rpm安装方式修改</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line"></span><br><span class="line">在到[mysql]标签下面添加port=指定端口。重启服务</span><br></pre></td></tr></table></figure><hr><h3 id="8-2-创建用户"><a href="#8-2-创建用户" class="headerlink" title="8.2 创建用户"></a>8.2 创建用户</h3><h4 id="8-2-1-方式一：CREATE-USER"><a href="#8-2-1-方式一：CREATE-USER" class="headerlink" title="8.2.1 方式一：CREATE USER"></a>8.2.1 方式一：<code>CREATE USER</code></h4><p><code>CREATE USER</code>语句的基本语法形式如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER 用户名 [IDENTIFIED BY '密码'][,用户名 [IDENTIFIED BY '密码']];</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>用户名</code>参数表示新建用户的账户，由用户（User）和主机名（Host） 构成；</li><li><code>“[ ]”</code>表示可选，也就是说，可以指定用户登录时需要密码验证，也可以不指定密码验证，这样用户可以直接登录。不过，不指定密码的方式不安全，不推荐使用。如果指定密码值，这里需要使用<code>IDENTIFIED BY</code>指定明文密码值。 <code>CREATE USER</code>语句可以<code>同时创建多个用户</code>。</li></ul><p>示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建用户</span></span><br><span class="line">mysql&gt; create user xiaofei identified by '1';  # 默认host是 %</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看用户表</span></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112032712.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建用户</span></span><br><span class="line">mysql&gt; create user 'xiaohe'@'localhost' identified by '1';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看用户表</span></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112035009.png" alt="img"></p><blockquote><p>注意：创建用户时需注意用户的主机地址，常用选项如下：</p><ul><li><code>localhost</code>：只允许本地用户登录</li><li><code>%</code>：所有主机远程登录</li><li><code>192.168.246.%</code>：192.168.246.0网段的所有主机</li><li><code>192.168.246.252</code>： 指定主机</li></ul></blockquote><h4 id="8-2-2-方式二：GRANT命令"><a href="#8-2-2-方式二：GRANT命令" class="headerlink" title="8.2.2 方式二：GRANT命令"></a>8.2.2 方式二：<code>GRANT命令</code></h4><p>​        简介：<strong>在MySQL 5.7 中GRANT权限分配时，假设用户不存在，同时会创建一个新的用户，MySQL 8.0已废弃。</strong></p><p><code>GRANT</code>命令语法格式如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT 权限1,权限2,…权限n ON 数据库名称.表名称 TO 用户名@用户地址 [IDENTIFIED BY ‘密码口令’];</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建用户并赋予权限</span></span><br><span class="line">mysql&gt; grant select,update on mysql.* to maoxiansheng@'%' identified by '1';</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看用户表</span></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112050318.png" alt="img"></p><h3 id="8-3-权限简介"><a href="#8-3-权限简介" class="headerlink" title="8.3 权限简介"></a>8.3 权限简介</h3><p>查看MySQL 5.7 中所有权限：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW  PRIVILEGES;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112054994.png" alt="img"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">权限简介</span><br><span class="line"></span><br><span class="line">| 权限                   | 权限级别                 | 权限说明                    </span><br><span class="line">| :--------------------- | :--------------------- | :------------------------------------</span><br><span class="line">| CREATE                 | 数据库、表或索引          | 创建数据库、表或索引权限                 </span><br><span class="line">| DROP                   | 数据库或表               | 删除数据库或表权限                       </span><br><span class="line">| GRANT OPTION           | 数据库、表或保存的程序     | 赋予权限选项 #小心给予                 </span><br><span class="line">| ALTER                  | 表                     | 更改表，比如添加字段、索引等               </span><br><span class="line">| DELETE                 | 表                     | 删除数据权限                             </span><br><span class="line">| INDEX                  | 表                     | 索引权限                               </span><br><span class="line">| INSERT                 | 表                     | 插入权限                               </span><br><span class="line">| SELECT                 | 表                     | 查询权限                               </span><br><span class="line">| UPDATE                 | 表                     | 更新权限                               </span><br><span class="line">| LOCK TABLES            | 服务器管理              | 锁表权限                               </span><br><span class="line">| CREATE USER            | 服务器管理             | 创建用户权限                             </span><br><span class="line">| REPLICATION SLAVE      | 服务器管理             | 复制权限                                 </span><br><span class="line">| SHOW DATABASES         | 服务器管理             | 查看数据库权限</span><br></pre></td></tr></table></figure><ol><li><code>CREATE和DROP权限</code>，可以创建新的数据库和表，或删除（移掉）已有的数据库和表。如果将 MySQL数据库中的DROP权限授予某用户，用户就可以删除MySQL访问权限保存的数据库。 </li><li><code>SELECT、INSERT、UPDATE和DELETE权限</code>允许在一个数据库现有的表上实施操作。 </li><li><code>SELECT权限</code>只有在它们真正从一个表中检索行时才被用到。 </li><li><code>INDEX权限</code>允许创建或删除索引，INDEX适用于已有的表。如果具有某个表的CREATE权限，就可以在CREATE TABLE语句中包括索引定义。 </li><li><code>ALTER权限</code>可以使用ALTER TABLE来更改表的结构和重新命名表。 </li><li><code>CREATE ROUTINE权限</code>用来创建保存的 程序（函数和程序），ALTER ROUTINE权限用来更改和删除保存的程序， EXECUTE权限用来执行保存的程序。 </li><li><code>GRANT权限</code>允许授权给其他用户，可用于数据库、表和保存的程序。</li><li><code>FILE权限</code>使用户可以使用LOAD DATA INFILE和SELECT … INTO OUTFILE语句读或写服务器上的文件，任何被授予FILE权限的用户都能读或写MySQL服务器上的任何文件（说明用户可以读任何数据库目录下的文件，因为服务器可以访问这些文件）。</li></ol><h4 id="8-3-1-授予权限原则"><a href="#8-3-1-授予权限原则" class="headerlink" title="8.3.1 授予权限原则"></a>8.3.1 授予权限原则</h4><p>​    权限控制主要是出于安全因素，因此需要遵循以下几个原则： </p><ul><li>只授予能满足需要的<code>最小权限</code> ，防止用户干坏事。比如用户只是需要查询，那就只给select权限就可以了，不要给用户赋予update、insert或者delete权限。 </li><li>创建用户的时候<code>限制用户的登录主机</code> ，一般是<code>限制成指定IP或者内网IP段</code>。</li><li>为每个用户设置满足密码复杂度的密码 。</li><li>定期清理不需要的用户，回收权限或者删除用户。</li></ul><h3 id="8-4-查看权限"><a href="#8-4-查看权限" class="headerlink" title="8.4 查看权限"></a>8.4 查看权限</h3><h4 id="8-4-1-查看当前用户权限"><a href="#8-4-1-查看当前用户权限" class="headerlink" title="8.4.1 查看当前用户权限"></a>8.4.1 查看当前用户权限</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show  grants\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112101999.png" alt="img"></p><h4 id="8-4-2-查看其他用户权限"><a href="#8-4-2-查看其他用户权限" class="headerlink" title="8.4.2 查看其他用户权限"></a>8.4.2 查看其他用户权限</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants for maoxiansheng@'%'\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112104825.png" alt="img"></p><h3 id="8-5-添加权限"><a href="#8-5-添加权限" class="headerlink" title="8.5 添加权限"></a>8.5 添加权限</h3><p>示例一：<code>授予xiaohe用户study库下所有权限</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all PRIVILEGES on study.* to  xiaohe@'%' identified by '1';</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants for xiaohe@'%'\G;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112118437.png" alt="img"></p><p>示例二：<code>xiaofei用户所有库所有表权限，但不包括GRANT权限</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to xiaofei@'%' identified by '1';</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants for xiaofei@'%'\G;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112121999.png" alt="img"></p><p>示例三：<code>授予maoxiansheng用户mysql库user表查看、更新、删除、插入权限</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant select,update,insert,delete on mysql.user to maoxiansheng@'localhost' identified by '1';</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants for maoxiansheng@'localhost'\G;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112125658.png" alt="img"></p><h3 id="8-6-回收权限"><a href="#8-6-回收权限" class="headerlink" title="8.6 回收权限"></a>8.6 回收权限</h3><p>​    收回权限就是<code>取消已经赋予用户的某些权限</code>。<strong>收回用户不必要的权限可以在一定程度上保证系统的安全性。</strong>MySQL中使用 <code>REVOKE语句</code>取消用户的某些权限。使用REVOKE收回权限之后，用户账户的记录将从 db、host、tables_priv和columns_priv表中删除，但是用户账户记录仍然在user表中保存（删除user表中的账户记录使用DROP USER语句）。 </p><blockquote><p> <strong>在将用户账户从user表删除之前，应该收回相应用户的所有权限。</strong></p></blockquote><p><strong>回收权限语法格式：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> 权限<span class="number">1</span>,权限<span class="number">2</span>,…权限n <span class="keyword">ON</span> 数据库名称.表名称 <span class="keyword">FROM</span> 用户名@<span class="string">'用户地址'</span>;</span><br></pre></td></tr></table></figure><p>示例一：<code>回收xaiofei用户所有库、所有表中的所有权限</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke all privileges on *.* from xiaofei@'%';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants for xiaofei@'%'\G;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112132017.png" alt="img"></p><p>示例二：<code>回收maoxiansheng用户mysql库user表查看、更新、删除、插入权限</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke delete,insert,select,update on mysql.user from maoxiansheng@'localhost';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show grants for maoxiansheng@'localhost'\G;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112135068.png" alt="img"></p><h3 id="8-7-修改密码"><a href="#8-7-修改密码" class="headerlink" title="8.7 修改密码"></a>8.7 修改密码</h3><h4 id="8-7-1-修改当前用户密码"><a href="#8-7-1-修改当前用户密码" class="headerlink" title="8.7.1 修改当前用户密码"></a>8.7.1 修改当前用户密码</h4><p>方式一：<code>MySQL 5.7 可以使用</code></p><p><code>set password = password(&#39;当前用户新密码&#39;);</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set password = password('abc123');</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p>方式二：<code>ALTER USER</code></p><p>​        使用<code>ALTER USER命令</code>来修改当前用户密码用户可以使用ALTER命令来修改自身密码。</p><p><code>alter user user()  identified by &#39;当前用户新密码&#39;;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user user()  identified by 'abcd123';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>方式三：<code>SET</code></p><p>​        使用<code>SET语句</code>来修改当前用户密码使用root用户登录MySQL后，可以使用SET语句来修改密码。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set password='abc123';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="8-7-2-修改其他用户密码"><a href="#8-7-2-修改其他用户密码" class="headerlink" title="8.7.2 修改其他用户密码"></a>8.7.2 修改其他用户密码</h4><p>方式一：<code>ALERT语句</code></p><p>​         <strong>使用<code>ALTER语句修改普通用户的密码</code>可以使用ALTER USER语句来修改普通用户的密码。</strong></p><p><code>ALTER USER user [IDENTIFIED BY &#39;新密码&#39;] [,user[IDENTIFIED BY &#39;新密码&#39;]]…;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user xiaohe@'%' identified by 'abcd123';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>方式二：<code>SET命令</code></p><p>​        <strong>使用<code>SET命令来修改普通用户的密码</code>使用root用户登录到MySQL服务器后，可以使用SET语句来修改普通用户的密码。</strong></p><p><code>SET PASSWORD FOR &#39;username&#39;@&#39;hostname&#39;=&#39;new_password&#39;;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set password for 'xiaohe'@'%'='abc123';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="8-7-3-MySQL-5-7-密码管理（了解）"><a href="#8-7-3-MySQL-5-7-密码管理（了解）" class="headerlink" title="8.7.3 MySQL 5.7 密码管理（了解）"></a>8.7.3 MySQL 5.7 密码管理（了解）</h4><ol><li><strong>密码过期策略</strong></li></ol><ul><li>在MySQL中，数据库管理员可以<code>手动设置</code>账号密码过期，也可以建立一个<code>自动密码</code>过期策略。 </li><li>过期策略可以是<code>全局</code>的 ，也可以为<code>每个账号</code>设置单独的过期策略。</li></ul><p><strong>查看当前密码过期时间</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE 'default_password_lifetime';</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">| Variable_name             | Value |</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">| default_password_lifetime | 0     |</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure><p>方式一：<code>使用SQL语句更改该变量的值并持久化</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 设置全局，设置密码每隔90天过期</span></span><br><span class="line">mysql&gt; SET GLOBAL default_password_lifetime = 90;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW VARIABLES LIKE 'default_password_lifetime';</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">| Variable_name             | Value |</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">| default_password_lifetime | 90    |</span><br><span class="line">+<span class="comment">---------------------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>方式二：<code>配置文件my.cnf配置密码过期时间</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">default_password_lifetime = 90</span><br><span class="line"></span><br><span class="line">[root@mysql-server ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><p>方式三：<code>单独设置特定用户的密码过期时间</code></p><p>​    除了全局设置，你还可以为特定用户设置密码过期时间。使用 <code>ALTER USER</code> 语句可以实现这一点。例如：将 <code>xiaofei</code> 用户的密码过期时间设置为 180 天。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user 'xiaofei'@'%' password expire interval 180 day;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看xiaofei用户的密码过期时间</span></span><br><span class="line">mysql&gt; SELECT </span><br><span class="line">    User, </span><br><span class="line">    Host, </span><br><span class="line">    Password_last_changed, </span><br><span class="line">    DATE_ADD(Password_last_changed, INTERVAL @@default_password_lifetime DAY) AS Password_expiry_date </span><br><span class="line">FROM </span><br><span class="line">    mysql.user </span><br><span class="line">WHERE </span><br><span class="line">    User='xiaofei' </span><br><span class="line">    AND Host='%';</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112245735.png" alt="img"></p><blockquote><ul><li><code>Password_last_changed</code>：为上次密码修改的时间；</li><li><code>Password_expiry_date</code>：密码过期时间</li></ul></blockquote><p>方式四：<code>设置用户密码永不过期，默认</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL default_password_lifetime = 0;</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW VARIABLES LIKE 'default_password_lifetime';</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407112256297.png" alt="img"></p><h3 id="8-8-删除用户"><a href="#8-8-删除用户" class="headerlink" title="8.8 删除用户"></a>8.8 删除用户</h3><p>方式一：<code>使用DROP方式删除</code></p><p>使用<code>DROP USER语句</code>来删除用户时，必须拥有<code>DROP USER权限</code>。</p><p><code>DROP USER user[,user]…;</code></p><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user xiaohe;  # 默认Host为'%'</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; drop user maoxiansheng@'localhost';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| maoxiansheng  | %         |</span><br><span class="line">| root          | %         |</span><br><span class="line">| xiaofei       | %         |</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| xiaohe        | localhost |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>方式二：<code>使用DELETE方式删除</code></p><p><code>DELETE FROM mysql.user WHERE Host=’&lt;主机地址&gt;’ AND User=’&lt;用户名&gt;’;</code></p><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from mysql.user where host='%' and user='maoxiansheng';</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH  PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| user          | host      |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| root          | %         |</span><br><span class="line">| xiaofei       | %         |</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| xiaohe        | localhost |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>注意：不推荐通过<code>DELETE 方式</code>进行删除，系统会有残留信息保留。而<code>drop user命令会</code>删除用户以及对应的权限，执行命令后你会发现<code>mysql.user表</code>和<code>mysql.db表</code>的相应记录都消失了。</p></blockquote><h3 id="8-9-查看密码复杂度"><a href="#8-9-查看密码复杂度" class="headerlink" title="8.9 查看密码复杂度"></a>8.9 查看密码复杂度</h3><p>MySQL 默认启用了密码复杂度设置，插件名字叫做 validate_password，初始化之后默认是安装的，如果没有安装执行下面的命令会返回空或者没有值，这时需要安装该插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 安装插件</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> INSTALL PLUGIN validate_password SONAME <span class="string">'validate_password.so'</span>;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看密码复杂度</span></span><br><span class="line">mysql&gt; show variables like 'validate%';</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+<span class="comment">--------------------------------------+--------+</span></span><br></pre></td></tr></table></figure><blockquote><p>参数解释：</p><ul><li><p><code>validate_password_length</code>：密码最少长度，默认值是8最少是0</p></li><li><p><code>validate_password_dictionary_file</code>：用于配置密码的字典文件，字典文件中存在的密码不得使用。</p></li><li><p><code>validate_password_policy</code>： 代表的密码策略，默认是MEDIUM</p></li><li><p><code>validate_password_number_count</code>：最少数字字符数，默认1最小是0</p></li><li><p><code>validate_password_mixed_case_count</code> ：最少大写和小写字符数(同时有大写和小写)，默认为1最少是0</p></li><li><p><code>validate_password_special_char_count</code> ：最少特殊字符数，默认1最小是0</p></li><li><p>validate_password_length ：#密码最少长度，默认值是8最少是0</p></li><li><p>validate_password_dictionary_file：#用于配置密码的字典文件，字典文件中存在的密码不得使用。</p></li><li><p>validate_password_policy： #代表的密码策略，默认是MEDIUM</p></li><li><p>validate_password_number_count ：#最少数字字符数，默认1最小是0</p></li><li><p>validate_password_mixed_case_count ：#最少大写和小写字符数(同时有大写和小写)，默认为1最少是0</p></li><li><p>validate_password_special_char_count ：#最少特殊字符数，默认1最小是0</p></li><li><p>validate_password_length ：#密码最少长度，默认值是8最少是0</p></li><li><p>validate_password_dictionary_file：#用于配置密码的字典文件，字典文件中存在的密码不得使用。</p></li><li><p>validate_password_policy： #代表的密码策略，默认是MEDIUM</p></li><li><p>validate_password_number_count ：#最少数字字符数，默认1最小是0</p></li><li><p>validate_password_mixed_case_count ：#最少大写和小写字符数(同时有大写和小写)，默认为1最少是0</p></li><li><p>validate_password_special_char_count ：#最少特殊字符数，默认1最小是0</p></li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt;查看密码策略</span></span><br><span class="line">mysql&gt; select @@validate_password_policy;</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| @@validate_password_policy |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| MEDIUM                     |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ul><li><p><code>LOW策略</code>：对密码的要求最少，仅要求密码的最小长度。</p><ul><li><p><strong>validate_password_length</strong>: 需要设置密码的最小长度。</p></li><li><pre><code class="sql"><span class="comment">#&gt;&gt;&gt; 更换LOW级别策略</span>mysql&gt; SET GLOBAL validate_password_policy = 'LOW';<span class="comment">#&gt;&gt;&gt; 最小长度设置为8</span>mysql&gt;SET GLOBAL validate_password_length = 8; <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- &#96;MEDIUM&#96;策略在&#96;LOW&#96;的基础上增加了对字符类型的要求。</span><br><span class="line"></span><br><span class="line">  - **validate_password_length**: 需要设置密码的最小长度；</span><br><span class="line"></span><br><span class="line">  - **validate_password_mixed_case_count**: 至少包含的大小写字母的数量。</span><br><span class="line"></span><br><span class="line">  - **validate_password_number_count**: 至少包含的数字的数量。</span><br><span class="line"></span><br><span class="line">  - **validate_password_special_char_count**: 至少包含的特殊字符的数量。</span><br><span class="line"></span><br><span class="line">  - &#96;&#96;&#96;sql</span><br><span class="line">    #&gt;&gt;&gt; 更换MEDIUM级别策略</span><br><span class="line">    mysql&gt; SET GLOBAL validate_password_policy &#x3D; &#39;MEDIUM&#39;;</span><br><span class="line">    </span><br><span class="line">    #&gt;&gt;&gt; 最小长度设置为8</span><br><span class="line">    mysql&gt; SET GLOBAL validate_password_length &#x3D; 8;</span><br><span class="line">    </span><br><span class="line">    #&gt;&gt;&gt; 至少1个大小写字母</span><br><span class="line">    mysql&gt; SET GLOBAL validate_password_mixed_case_count &#x3D; 1;</span><br><span class="line">    </span><br><span class="line">    #&gt;&gt;&gt; 至少一个数字</span><br><span class="line">    mysql&gt; SET GLOBAL validate_password_number_count &#x3D; 1;</span><br><span class="line">    </span><br><span class="line">    #&gt;&gt;&gt; 至少1个特殊字符</span><br><span class="line">    mysql&gt; SET GLOBAL validate_password_special_char_count &#x3D; 1;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p><code>STRONG</code>策略是最严格的策略，包含了<code>MEDIUM</code>的所有要求，并且可以包括字典文件检查（可选）。</p><ul><li><p><strong>validate_password_length</strong>: 需要设置密码的最小长度。</p></li><li><p><strong>validate_password_mixed_case_count</strong>: 至少包含的大小写字母的数量。</p></li><li><p><strong>validate_password_number_count</strong>: 至少包含的数字的数量。</p></li><li><p><strong>validate_password_special_char_count</strong>: 至少包含的特殊字符的数量。</p></li><li><p><strong>validate_password_dictionary_file</strong>（可选）: 字典文件路径，用于检查密码是否包含常见的词汇。</p></li><li><pre><code class="sql"><span class="comment">#&gt;&gt;&gt; 更换STRONG级别策略</span>mysql&gt; SET GLOBAL validate_password_policy = 'MEDIUM';<span class="comment">#&gt;&gt;&gt; 最小长度设置为8</span>mysql&gt; SET GLOBAL validate_password_length = 8;<span class="comment">#&gt;&gt;&gt; 至少1个大小写字母</span>mysql&gt; SET GLOBAL validate_password_mixed_case_count = 1;<span class="comment">#&gt;&gt;&gt; 至少一个数字</span>mysql&gt; SET GLOBAL validate_password_number_count = 1;<span class="comment">#&gt;&gt;&gt; 至少1个特殊字符</span>mysql&gt; SET GLOBAL validate_password_special_char_count = 1; <span class="comment">#&gt;&gt;&gt; 设置字典文件路径</span>mysql&gt; SET GLOBAL validate_password_dictionary_file = '/opt/study.txt';<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**查看密码的长度**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;sql</span><br><span class="line"> mysql&gt; select @@validate_password_length; </span><br><span class="line">+----------------------------+</span><br><span class="line">| @@validate_password_length |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                          8 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><p>示例一：<code>LOW策略示例</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL validate_password_policy = 'LOW';</span><br><span class="line">mysql&gt; SET GLOBAL validate_password_length = 8;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 能够设置成功案例</span></span><br><span class="line">mysql&gt; CREATE USER 'user_low'@'localhost' IDENTIFIED BY 'abcdefgh';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 无法设置成功案例,因为密码太短</span></span><br><span class="line">mysql&gt; CREATE USER 'user_low_fail'@'localhost' IDENTIFIED BY 'abcd';</span><br></pre></td></tr></table></figure><p>示例二：<code>MEDIUM策略示例</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL validate_password_policy = 'MEDIUM';</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 最小长度设置为8</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_length = 8;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少1个大小写字母</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_mixed_case_count = 1;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少一个数字</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_number_count = 1;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少1个特殊字符</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_special_char_count = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 能够设置成功案例</span></span><br><span class="line">mysql&gt; CREATE USER 'user_medium'@'localhost' IDENTIFIED BY 'Abcdef1!'; </span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 无法设置成功案例,因为密码不符合复杂度要求</span></span><br><span class="line">mysql&gt; CREATE USER 'user_medium_fail'@'localhost' IDENTIFIED BY 'Abcdefgh';</span><br></pre></td></tr></table></figure><p>示例三：<code>STRONG策略示例</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL validate_password_policy = 'STRONG';</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 最小长度设置为12</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_length = 12;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少1个大小写字母</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_mixed_case_count = 1;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少一个数字</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_number_count = 1;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 至少1个特殊字符</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_special_char_count = 1;</span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 字典路径</span></span><br><span class="line">mysql&gt; SET GLOBAL validate_password_dictionary_file = '/opt/study.txt';</span><br></pre></td></tr></table></figure><h3 id="8-10-权限控制机制"><a href="#8-10-权限控制机制" class="headerlink" title="8.10 权限控制机制"></a>8.10 权限控制机制</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">四张表：user   db    tables_priv  columns_priv</span><br><span class="line">1.用户认证</span><br><span class="line">查看mysql.user表</span><br><span class="line">2.权限认证</span><br><span class="line">以select权限为例：</span><br><span class="line">1.先看 user表里的select_priv权限</span><br><span class="line"> Y:不会接着查看其他的表  拥有查看所有库所有表的权限</span><br><span class="line"> N:接着看db表</span><br><span class="line">2.db表:  #某个用户对一个数据库的权限。</span><br><span class="line"> Y:不会接着查看其他的表  拥有查看所有库所有表的权限</span><br><span class="line"> N:接着看tables_priv表</span><br><span class="line">3.tables_priv表：#针对表的权限</span><br><span class="line"> tables_priv:如果这个字段的值里包括select  拥有查看这张表所有字段的权限，不会再接着往下看了</span><br><span class="line"> tables_priv:如果这个字段的值里不包括select，接着查看下张表还需要有column_priv字段权限</span><br><span class="line">4.columns_priv:针对数据列的权限表</span><br><span class="line"> columns_priv:有select，则只对某一列有select权限</span><br><span class="line">             没有则对所有库所有表没有任何权限</span><br><span class="line"> 注：其他权限设置一样。</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 授权级别排列</span></span><br><span class="line"></span><br><span class="line">- mysql.user #全局授权</span><br><span class="line">- mysql.db #数据库级别授权</span><br><span class="line">- 其他     #表级，列级授权</span><br></pre></td></tr></table></figure><h1 id="九、日志管理"><a href="#九、日志管理" class="headerlink" title="九、日志管理"></a>九、<strong><code>日志管理</code></strong></h1><p>​        简介：所谓日志，就是一种将<code>行为动作记录到一个地方</code>，这个地方可以是文件，文本等可存储的载体。Mysql日志就是记录整个mysql从启动、运行、到结束的整个生命周期下的行为</p><p>官网链接：<a href="https://dev.mysql.com/doc/refman/5.7/en/server-logs.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/server-logs.html</a></p><h3 id="9-1-MySQL-5-7日志分类"><a href="#9-1-MySQL-5-7日志分类" class="headerlink" title="9.1 MySQL 5.7日志分类"></a>9.1 MySQL 5.7日志分类</h3><ul><li><code>错误日志</code>：默认开启无法关闭。错误日志包含mysqld启动和关闭时间的记录。它还包含诊断消息，如服务器启动和关闭期间以及服务器运行时发生的错误、警告和注释。</li><li><strong>通用查询日志</strong>：通用日志主要是记录所有关于服务器的活动，包括所有客户端的连接和所有执行的SQL语句,mysql的通用日志是关闭的，如果需要设置可以通过<code>general_log</code> 选项开启通用日志。通用查询日志记录了大量的信息，它可能会对数据库服务器的性能产生显著影响，特别在高负载的生产环境中。而且还会占用大量磁盘空间和磁盘 I/O 问题，所以一般调试的时候才会开启通用日志。</li><li><strong><code>二进制日志(bin log)</code></strong>：二进制日志（Binary Log）是一种特殊类型的日志文件，它记录了所有<code>修改数据库内容</code>的操作，比如 <strong>INSERT、UPDATE 和 DELETE</strong> 语句，以及数据定义语言（DDL）语句，如 CREATE TABLE、ALTER TABLE 等。MySQL 的二进制日志并不是由纯粹的0和1序列组成的简单文件。实际上，它是一种特殊的二进制格式文件，这种格式旨在高效地存储和记录数据库更改操作。这种专门为 MySQL 优化的格式，既保证了存储和传输的高效性，也便于使用相应的工具进行内容查看和分析。例如mysqlbinlog这个工具就可以查看二进制文件的内容。MySQL的二进制日志不像通用日志、慢查询日志一样耗费性能，二进制日志对性能的影响通常较小。一般在主从复制的架构中才需要开启二进制日志。</li><li><strong><code>中继日志(Relay log)</code></strong>：中继日志（Relay Log）是在主从复制环境中使用的一种特殊日志文件，可以理解为二进制日志换一个名字，在主从复制环境中，中继日志是存放在从服务器上的。在 MySQL 的主从复制环境中，中继日志（Relay Log）的作用是暂存从主服务器接收的二进制日志（Binary Log）事件，并在从服务器上执行这些事件以实现数据同步。一旦这些事件在从服务器上成功执行并且数据同步完成，相应的中继日志文件就不再需要了，因此会被自动删除。这是从服务器自动进行的，以确保不会因为长时间累积大量的中继日志而占用过多的磁盘空间。</li><li><strong><code>慢查询日志</code></strong>：慢查询日志记录了<code>执行时间超过特定阈值的所有查询</code>，可以根据这些信息监控和诊断数据库性能问题。一般情况下是需要调试时候才开启慢查询日志，如果长期开启可能会对数据库性能产生一定的影响，且在大型或高负载的环境中日志文件可能会快速增长，占用过多磁盘空间。</li><li><strong>重做日志（redo log）</strong>：重做日志（Redo Log）是InnoDB存储引擎特有的日志系统，用于保证事务的持久性和恢复能力。重做日志也是以二进制格式存储存储的，并且如果使用的引擎是innodb，默认是开启了重做日志。commit</li><li><strong>回滚日志（undo log）</strong>：undo log是mysql中比较重要的事务日志之一，顾名思义，undo log是一种用于撤销回退的日志，在事务没提交之前，MySQL会先记录更新前的数据到 undo log日志文件里面，当事务回滚时或者数据库崩溃时，可以利用 undo log来进行回退。</li></ul><blockquote><p>注意：<br>        日志功能会<code>降低MySQL数据库的性能</code>。例如，在查询非常频繁的MySQL数据库系统中，如果开启了通用查询日志和慢查询日志，MySQL数据库会花费很多时间记录日志。I<br>同时日志会 <code>占用大量的磁盘空间</code>。对于用户量非常大、操作非常频繁的数据库，日志文件需要的存储空间设置比数据库文件需要的存储空间还要大。所以不必要的日志文件尽量就不开启。嘿嘿！</p></blockquote><h4 id="9-1-1-错误日志"><a href="#9-1-1-错误日志" class="headerlink" title="9.1.1 错误日志"></a>9.1.1 错误日志</h4><p>​        可以使用<code>my.cnf文件中加入--log-error=[file_name]</code>来指定mysqld记录的错误日志文件。</p><p><strong>查看错误日志文件路径</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like 'log_error';</span><br><span class="line">+<span class="comment">---------------+---------------------+</span></span><br><span class="line">| Variable_name | Value               |</span><br><span class="line">+<span class="comment">---------------+---------------------+</span></span><br><span class="line">| log_error     | /var/log/mysqld.log |</span><br><span class="line">+<span class="comment">---------------+---------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="9-1-2-通用查询日志（了解）"><a href="#9-1-2-通用查询日志（了解）" class="headerlink" title="9.1.2 通用查询日志（了解）"></a>9.1.2 通用查询日志（了解）</h4><p>​        通用查询日志可以帮助我们了解操作发生的具体时间和操作的细节，对找出异常发生的原因极其关键。配置通用查询日志可以通过<code>my.cnf</code>加入一下配置参数打开：</p><ul><li><code>general_log</code>：设置是否开启通用日志，默认为关闭（0），1表示开启；</li><li><code>general_log_file</code>：设置通用日志的存放位置和文件名。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 查看通用查询日志</span></span><br><span class="line">mysql&gt; show variables like <span class="string">'%general%'</span>;</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| Variable_name    | Value                           |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| general_log      | OFF                             | <span class="comment"># 默认关闭</span></span><br><span class="line">| general_log_file | /var/lib/mysql/mysql-server.log | <span class="comment"># 日志存放处</span></span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 编辑MySQL配置文件</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">general_log=ON  <span class="comment"># ON表示开启 OFF表示关闭</span></span><br><span class="line">general_log_file=/var/<span class="built_in">log</span>/mysql/general.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 创建目录和日志文件</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># mkdir /var/log/mysql </span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># touch /var/log/mysql/general.log</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># chmod -R 755  /var/log/mysql</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># chown -R mysql.mysql /var/log/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启MySQL</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># systemctl restart mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看通用日志</span></span><br><span class="line">mysql&gt; show variables like <span class="string">'%general%'</span>;</span><br><span class="line">+------------------+----------------------------+</span><br><span class="line">| Variable_name    | Value                      |</span><br><span class="line">+------------------+----------------------------+</span><br><span class="line">| general_log      | ON                         |</span><br><span class="line">| general_log_file | /var/<span class="built_in">log</span>/mysql/general.log |</span><br><span class="line">+------------------+----------------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">注:如果发现general_log一直为off，可以尝试把general.log文件删除掉，然后重启MySQL让其自动生成general.log文件即可。</span><br><span class="line"></span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看通用查询日志文件</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># cat /var/log/mysql/general.log</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407121034669.png" alt="img"></p><p>重新刷新日志文件，生产环境中随着程序的运行，日志文件会越来越大。此时就需要重新生成文件或者刷新文件。</p><p><strong>方式一：重新生成文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mv /var/log/mysql/&#123;general.log,general.log.old&#125;</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># ll /var/log/mysql/general.log.old </span></span><br><span class="line">-rwxr-xr-x. 1 mysql mysql 512 7月  12 10:36 /var/<span class="built_in">log</span>/mysql/general.log.old</span><br><span class="line">[root@mysql-server mysql]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><blockquote><p>此方法效率较低，将文件名称修改后，会重新成功一个新的日志文件。在实际生产环境中需要考虑日志是否归档处理，如果不需要则直接删除就行。释放磁盘空间。</p></blockquote><p><strong>方式二：刷新文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]<span class="comment"># mysqladmin  -uroot -p'abc123' flush-logs</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>        <strong>第二种通过刷新的方式，会导致旧数据清空。如果旧数据需要保留还是建议归档或者提前备份。</strong></p></blockquote><h4 id="9-1-3-二进制日志"><a href="#9-1-3-二进制日志" class="headerlink" title="9.1.3 二进制日志"></a>9.1.3 二进制日志</h4><p>​        在MySQL 5.7中二进制(bin log)默认是<code>关闭状态</code>，MySQL 8.0默认<code>开启状态</code>，可以通过添加<code>my.cnf</code>配置参数开启二进制日志。binlog可以说是MySQL中比较重要的日志了，在日常开发及运维过程中，经常会遇到。 </p><p>​        <code>binlog</code>即<code>binary log</code>，二进制日志文件，也叫作<code>变更日志</code>（update log）。它记录了数据库所有执行的 <code>DDL</code> 和 <code>DML</code>等数据库更新事件的语句，但是不包含没有修改任何数据的语句（如数据查询语句select、show等）。 </p><p><code>binlog</code>主要应用场景： </p><ol><li>一是用于<code>数据恢复</code> </li><li>二是用于<code>数据复制</code></li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407121301866.png" alt="img"></p><h5 id="1-查看二进制日志是否开启"><a href="#1-查看二进制日志是否开启" class="headerlink" title="1. 查看二进制日志是否开启"></a><strong>1. 查看二进制日志是否开启</strong></h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@global.log_bin;</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| @@global.log_bin |</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">|                0 |  <span class="comment"># 0为未开启</span></span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%log_bin%'</span>;</span><br><span class="line">+<span class="comment">---------------------------------+-------+</span></span><br><span class="line">| Variable_name                   | Value |</span><br><span class="line">+<span class="comment">---------------------------------+-------+</span></span><br><span class="line">| log_bin                         | OFF   |</span><br><span class="line">| log_bin_basename                |       |</span><br><span class="line">| log_bin_index                   |       |</span><br><span class="line">| log_bin_trust_function_creators | OFF   |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF   |</span><br><span class="line">| sql_log_bin                     | ON    |</span><br><span class="line">+<span class="comment">---------------------------------+-------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="2-开启二进制日志"><a href="#2-开启二进制日志" class="headerlink" title="2. 开启二进制日志"></a><strong>2. 开启二进制日志</strong></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改MySQL配置文件</span></span><br><span class="line">[root@mysql-server mysql]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line"><span class="comment"># 开启二进制日志，binlog为二进制日志文件前缀</span></span><br><span class="line"><span class="built_in">log</span>-bin=/var/<span class="built_in">log</span>/mysql/binlog</span><br><span class="line"><span class="comment"># AB复制的时候使用，为了防止相互复制，会设置一个ID，来标识谁产生的日志</span></span><br><span class="line">server-id=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启MySQL服务</span></span><br><span class="line">[root@mysql-server mysql]<span class="comment"># systemctl restart mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看是否生成二进制日志文件</span></span><br><span class="line">[root@mysql-server mysql]<span class="comment"># ll /var/log/mysql/binlog.000001 </span></span><br><span class="line">-rw-r-----. 1 mysql mysql 154 7月  12 12:43 /var/<span class="built_in">log</span>/mysql/binlog.000001</span><br></pre></td></tr></table></figure><blockquote><p><strong>新建的文件夹需要更改为mysql属主和属组，且需要具有755权限</strong></p></blockquote><h5 id="3-查看二进制日志"><a href="#3-查看二进制日志" class="headerlink" title="3. 查看二进制日志"></a><strong>3. 查看二进制日志</strong></h5><p>​        当MySQL创建二进制日志文件时，先创建一个以<code>“mylog”</code>为名称、以<code>“.index”</code>为后缀的文件，再创建一 个以<code>“mylog”</code>为名称、以<code>“.000001”</code>为后缀的文件。 MySQL服务 <code>重新启动一次</code> ，以<code>“.000001”</code>为后缀的文件就会增加一个，并且后缀名按1递增。即日志文件的 个数与MySQL服务启动的次数相同；</p><p>​        如果日志长度超过了 <code>max_binlog_size</code> 的上限（默认是1GB），就会创建一个新的日志文件。 查看当前的二进制日志文件列表及大小。指令如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show binary logs;</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| Log_name      | File_size |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">| binlog.000001 |       154 |</span><br><span class="line">+<span class="comment">---------------+-----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>查看二进制日志</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@l66 mysql]# mysqlbinlog mylog.000001 -v</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407121254264.png" alt="img"></p><blockquote><ul><li><code>at 4</code>：事件开始位置</li><li><code>end_log_pos 123</code>：事件结束的位置</li><li><code>240712 12:43:46</code>：产生事件的时间戳</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server mysql]<span class="comment"># mysqlbinlog  -v --base64-output=decode-rows "/var/log/mysql/binlog.000001"</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407121312314.png" alt="img"></p><h5 id="4-二进制日志三种格式"><a href="#4-二进制日志三种格式" class="headerlink" title="4. 二进制日志三种格式"></a>4. 二进制日志三种格式</h5><p><strong>查看二进制日志格式</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like 'binlog_format';</span><br><span class="line">+<span class="comment">---------------+-------+</span></span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+<span class="comment">---------------+-------+</span></span><br><span class="line">| binlog_format | ROW   |  <span class="comment"># MySQL 默认格式</span></span><br><span class="line">+<span class="comment">---------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h6 id="4-1-Statement格式"><a href="#4-1-Statement格式" class="headerlink" title="4.1 Statement格式"></a>4.1 <code>Statement</code>格式</h6><p>​        <strong>STATEMENT 格式（语句模式，出现在 MySQL 5.1 之前）</strong>：在这种格式下，binlog 记录的是执行的 SQL 语句的文本。</p><ol><li><ol><li>优点：日志文件通常较小，复制效率较高。</li><li>缺点：在某些情况下，由于数据库环境的差异（如表结构、字符集等），在从服务器上重放这些 SQL 语句可能会导致不一致的结果。例如，获取当前时间的函数或存储过程等，可能会导致数据不一致。</li></ol></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">binlog_format</span> = STATEMENT</span><br></pre></td></tr></table></figure><h6 id="4-2-ROW格式"><a href="#4-2-ROW格式" class="headerlink" title="4.2 ROW格式"></a>4.2 <code>ROW</code>格式</h6><ol><li><p><strong>ROW 格式（行模式，诞生于 MySQL 5.1）</strong>：在这种格式下，binlog 记录的是每一行数据更改的具体内容。</p></li><li><ol><li>优点：能够精确地记录数据的变化，避免了 STATEMENT 格式中的环境依赖问题，提供了更强的一致性保证。</li><li>缺点：日志文件可能会比 STATEMENT 格式大，因为记录了每一行的详细变化。此外，ROW 格式的日志在进行大量数据更新时可能会导致更高的 I/O 开销。</li></ol></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">binlog_format</span> = ROW</span><br></pre></td></tr></table></figure><h6 id="4-3-MIXED格式"><a href="#4-3-MIXED格式" class="headerlink" title="4.3 MIXED格式"></a>4.3 <code>MIXED</code>格式</h6><ol><li><p><strong>MIXED 格式（混合模式）</strong>：在这种格式下，binlog 可以根据具体的 SQL 语句和操作自动选择使用 STATEMENT 或 ROW 格式。</p></li><li><ol><li>优点：结合了 STATEMENT 和 ROW 格式的优点，能够在保证一致性的同时尽可能地优化日志大小和复制性能。</li><li>缺点：由于混合使用了两种格式，可能需要更复杂的管理和监控。在某些特定情况下，MIXED 格式可能无法达到最优的性能或一致性。</li></ol></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">binlog_format</span> = MIXED</span><br></pre></td></tr></table></figure><h6 id="4-4-MySQL-5-7-运行时修改"><a href="#4-4-MySQL-5-7-运行时修改" class="headerlink" title="4.4 MySQL 5.7 运行时修改"></a>4.4 MySQL 5.7 运行时修改</h6><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL binlog_format = 'STATEMENT';</span><br></pre></td></tr></table></figure><blockquote><p>注意：修改二进制日志格式需要具有超级用户权限（<code>SUPER</code> 权限），并且只对新的会话生效，已有会话不受影响。</p></blockquote><h5 id="5-MySQL-5-7二进制日常管理事项"><a href="#5-MySQL-5-7二进制日常管理事项" class="headerlink" title="5. MySQL 5.7二进制日常管理事项"></a>5. MySQL 5.7二进制日常管理事项</h5><ul><li><p>每次重启MySQL实例，都会重新生成新的二进制文件</p></li><li><p>执行<code>flush logs;</code>会重新生成新的二进制日志文件</p></li><li><p><strong>执行<code>reset master;</code>会删除所有的<code>binlog</code>日志文件。危险操作</strong></p></li><li><p>可以通过<code>purge binary logs to &#39;binlog.000002&#39;</code>删除<code>binlog.000002</code>之前的二进制文件。</p></li><li><p>可以通过<code>set sql_log_bin=0</code>关闭当前会话的执行操作记录至二进制日志文件，需要具有 <code>SUPER</code> 权限。在复制环境中使用 <code>sql_log_bin = 0</code> 时要小心，以避免主从数据不一致。</p><ul><li><pre><code class="sql"><span class="comment">#&gt;&gt;&gt; 查看sql_log_bin状态信息</span>mysql&gt; SHOW VARIABLES LIKE 'SQL_LOG_BIN';+<span class="comment">---------------+-------+</span>| Variable_name | Value |+<span class="comment">---------------+-------+</span>| sql_log_bin   | ON    | <span class="comment"># 默认关闭</span>+<span class="comment">---------------+-------+</span>1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)&lt;!<span class="comment">--￼191--&gt;</span></code></pre></li></ul></li></ul><h5 id="2-查看慢查询日志参数"><a href="#2-查看慢查询日志参数" class="headerlink" title="2. 查看慢查询日志参数"></a>2. 查看慢查询日志参数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE '%slow_query%';</span><br><span class="line">+<span class="comment">---------------------+-------------------------------+</span></span><br><span class="line">| Variable_name       | Value                         |</span><br><span class="line">+<span class="comment">---------------------+-------------------------------+</span></span><br><span class="line">| slow_query_log      | ON                            |</span><br><span class="line">| slow_query_log_file | /var/log/mysql/slow_query.log |</span><br><span class="line">+<span class="comment">---------------------+-------------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="3-验证"><a href="#3-验证" class="headerlink" title="3.  验证"></a>3.  验证</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 测试SQL语句</span></span><br><span class="line">mysql&gt; select sleep(6);</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| sleep(6) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|        0 |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">6.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看慢查询日志文件</span></span><br><span class="line">[root@mysql-<span class="keyword">server</span> ~]<span class="comment"># cat  /var/log/mysql/slow_query.log</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407121344436.png" alt="img"></p><h4 id="9-1-5-中继日志"><a href="#9-1-5-中继日志" class="headerlink" title="9.1.5 中继日志"></a>9.1.5 中继日志</h4><p>​        中继日志（Relay Log）是从服务器（Slave）用于记录从主服务器（Master）接收到的二进制日志事件的日志文件。这些事件在从服务器上被重新执行以保持主从数据的一致性。中继日志的主要作用是存储从主服务器复制过来的二进制日志事件。在复制过程中，从服务器上的 I/O 线程从主服务器读取二进制日志事件，并将其写入中继日志文件。从服务器上的 SQL 线程读取中继日志，并执行其中的事件，从而更新从服务器上的数据。</p><p><strong>扩展</strong></p><p>UNIX Socket连接方式其实不是一个网络协议，所以只能在MySQL客户端和数据库实例在同一台服务器上的情况下使用。<strong>本地进程间通信的一种方式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过socket方式登录</span><br><span class="line">查看sock的存放路径</span><br><span class="line">[root@l66 ~]# cat /etc/my.cnf | grep sock</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">[root@l66 ~]# mysql -uroot -p'1!' -S /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h1 id="Day04"><a href="#Day04" class="headerlink" title="Day04"></a>Day04</h1><h1 id="十、数据备份与恢复"><a href="#十、数据备份与恢复" class="headerlink" title="十、数据备份与恢复"></a>十、数据备份与恢复</h1><h2 id="10-1-为什么要备份"><a href="#10-1-为什么要备份" class="headerlink" title="10.1 为什么要备份"></a>10.1 为什么要备份</h2><p>MySQL 备份在<code>保护数据完整性</code>、防止各种<code>不可预见的灾难</code>、<code>硬件故障</code>、<code>数据丢失</code>、<code>损坏</code>和<code>意外删除</code>方面发挥着关键作用。如果没有可靠的备份，数据丢失的后果可能会很严重。<strong>企业面临运营中断、财务损失、声誉受损甚至合规违规的风险。</strong>学习MySQL 备份的重要性以及它们如何降低这些风险将有助于组织保证数据一致性、业务连续性，并确保数据在需要时安全且可恢复。</p><ul><li><strong>主机故障</strong>：我们可能会因磁盘停滞或磁盘损坏而遇到多种问题。同样，在云服务中，我们的数据库实例可能会损坏并且无法访问。</li><li><strong>数据损坏</strong>：这可能发生在断电时，MySQL 无法正确写入并关闭文件，有时当 MySQL 再次启动时，由于数据损坏而无法启动，并且崩溃恢复过程无法修复它。</li><li><strong>备份</strong>：能够防止由于机械故障以及人为误操作带来的数据丢失，例如将数据库文件保存在了其它地方。</li><li><strong>冗余</strong>： 数据有多份冗余，但不等备份，只能防止机械故障带来的数据丢失，例如主备模式、数据库集群。</li></ul><h3 id="10-1-1-MySQL备份的专业名词"><a href="#10-1-1-MySQL备份的专业名词" class="headerlink" title="10.1.1 MySQL备份的专业名词"></a>10.1.1 MySQL备份的专业名词</h3><ul><li><strong>RTO</strong>：RTO（RecoveryTimeObjective，恢复时间目标）是故障发生到业务恢复能时间点的最大长度。与之相关的问题是：<strong>多久可以恢复？</strong></li><li><strong>RPO</strong>：RPO（RecoveryPointObjective，恢复点目标）是故障发生后业务系统可容忍的数据丢失量。与之相关的问题是：<strong>会丢失多少数据？</strong></li></ul><h2 id="10-2-MySQL数据备份需要重视的内容"><a href="#10-2-MySQL数据备份需要重视的内容" class="headerlink" title="10.2 MySQL数据备份需要重视的内容"></a>10.2 <strong>MySQL数据备份需要重视的内容</strong></h2><ol><li><strong>选择合适的备份方式</strong>：根据具体需求和数据量大小，选择适合的逻辑备份或物理备份方式。逻辑备份通常生成可读的文件，便于编辑和审查，而物理备份适用于大型数据库，恢复时间较短。</li><li><strong>备份数据文件和日志文件</strong>：在备份时，需要同时备份数据库的数据文件和日志文件，以确保数据的完整性。如果备份文件不完整，可能无法正确恢复数据。</li><li><strong>定期备份</strong>：为了确保数据的安全性，需要定期进行备份操作。备份的频率可以根据具体情况进行设置，通常建议每天备份一次。</li><li><strong>存储备份文件</strong>：备份文件应该存储在可靠的介质上，如<code>硬盘</code>；以防止数据丢失。此外，备份文件尽量存储在不同的地点，以避免因某一地点的灾害导致备份文件的损失。</li><li><strong>备份文件的安全性和完整性</strong>：备份文件需要受到<code>保护</code>，以防止<code>未经授权</code>的<code>访问</code>和<code>篡改</code>。同时，需要定期验证备份文件的<code>完整</code>和<code>可恢复性</code>，以确保在需要时能够成功恢复数据。</li><li><strong>备份的自动化和监控</strong>：可以使用自动化备份工具来定期执行备份操作，并监控备份过程，确保备份顺利完成。此外，还可以设置备份失败的告警通知，以便及时处理备份问题。</li><li><strong>备份策略的灵活性</strong>：备份策略应该具有一定的灵活性，以适应业务发展和数据增长的变化。需要定期评估备份策略的有效性，并根据实际情况进行调整和优化。</li></ol><h2 id="10-3-MySQL-备份类型"><a href="#10-3-MySQL-备份类型" class="headerlink" title="10.3 MySQL 备份类型"></a>10.3 MySQL 备份类型</h2><ul><li><strong>物理备份：</strong> <strong>备份数据文件，转储数据库物理文件到某一目录。 直接复制数据库文件，适用于大型数据库环境，不受存储引擎的限制，但不能恢复到不同的MySQL版本。</strong>备份文件相对较大(备份表空间,包含数据与索引)。物理备份恢复速度比较快，但占用空间比较大，MySQL中可以用<code>xtrabackup</code>工具来进行物理备份。 </li><li><strong>逻辑备份：</strong> 对数据库对象利用工具进行导出工作，汇总入备份文件内。逻辑备份恢复速度慢，需要重建索引,存储过程等。但占用空间小，更灵活。MySQL 中常用的逻辑备份工具为<code>mysqldump</code> 。逻辑备份就是 <code>备份sql语句</code> ，在恢复的时候执行备份的sql语句实现数据库数据的重现。</li></ul><hr><ol><li><p><strong>热备(hot backup)</strong>：在线备份，数据库处于运行状态，这种备份方法依赖于数据库的日志文件。对应用基本无影响(但是性能还是会有下降,所以尽量不要在主上做备份,在从库上做)</p><ul><li>优点：不中断服务。高可用性。</li><li>缺点：对性能有一定影响，备份的时间较长时，备份文件可能不一致。</li></ul></li><li><p><strong>冷备(cold backup)</strong>：需要完全停止数据库服务来进行备份。备份过程中数据库服务完全停止，没有任何运行的数据库操作。确保备份文件的一致性和完整性。<code>copy/tar/unzip</code></p><ul><li>优点：备份文件的一致性和完整性最高。不会影响数据库性能。</li><li>缺点：完全停机，服务不可用。不适用于需要高可用性的系统。</li></ul></li><li><p><strong>温备(warm backup)</strong>：针对myisam的备份(myisam不支持热备),备份时候实例只读不可写，数据库锁定表格（不可写入但可读）的状态下进行的。对应用影响很大。通常加一个读锁，备份时候实例只读不可写，数据库锁定表格（不可写入但可读）的状态下进行的</p></li></ol><blockquote><p>合适的备份策略取决于系统的可用性要求、备份窗口和数据一致性需求。在实际操作中，可能会结合使用多种备份策略以实现最佳的备份效果和数据保护。</p></blockquote><h2 id="10-4-MySQL-备份工具"><a href="#10-4-MySQL-备份工具" class="headerlink" title="10.4 MySQL 备份工具"></a>10.4 MySQL 备份工具</h2><ol><li><code>Percona XtraBackup</code> 是一个开源的 MySQL 数据库备份工具，它由 Percona 开发，支持 MySQL、MariaDB 和 Percona Server。XtraBackup 提供了热备份功能，可以在数据库运行过程中执行备份，不会中断数据库服务。<ol><li><strong>热备份</strong>：在不停止数据库服务的情况下执行备份，确保数据库在备份期间仍然可用。</li><li><strong>增量备份</strong>：只备份自上次完整备份以来发生变化的数据，节省存储空间和备份时间。</li><li><strong>快速恢复</strong>：可以快速恢复备份，减少数据库停机时间。</li><li><strong>数据压缩</strong>：支持压缩备份数据，节省存储空间。</li></ol></li><li><code>ibbackup</code> 是 InnoDB Hot Backup 的命令行工具，它是 MySQL 的商业备份工具，可以进行热备份。这意味着可以在不停止数据库的情况下进行备份。ibbackup 工具已经被 Percona XtraBackup 所取代，因为 XtraBackup 提供了更多功能并且是开源的。<ol><li><strong>热备份</strong>：支持对运行中的数据库进行备份，而不会中断数据库的正常运行。</li><li><strong>完全备份和增量备份</strong>：支持完整备份和增量备份。</li><li><strong>一致性备份</strong>：确保备份数据的一致性，即使在备份期间有数据写入操作。</li><li><strong>支持多种存储引擎</strong>：主要支持 InnoDB 引擎，但也可以备份 MyISAM 表。</li></ol></li><li><code>mysqldump</code> 是 MySQL 数据库管理系统自带的一个用于生成数据库备份的命令行工具。它可以将数据库内容导出为 SQL 语句或其他格式，方便数据库的备份和恢复。<ol><li><strong>备份数据库</strong>：将数据库导出为 SQL 文件或其他格式，方便备份。</li><li><strong>迁移数据库</strong>：将导出的数据库文件导入到另一个数据库实例，实现数据库迁移。</li><li><strong>生成数据定义语句</strong>：导出数据库表的结构（CREATE TABLE 语句）。</li><li><strong>生成数据操作语句</strong>：导出数据库表中的数据（INSERT 语句）。</li><li><strong>支持多种格式</strong>：支持 SQL、CSV 等格式的导出。</li><li><strong>选择性备份</strong>：可以指定备份整个数据库、某些表或特定的行。</li></ol></li><li><code>mysqlbackup</code> 是 MySQL Enterprise Backup 工具的一部分，专为企业用户提供，提供了热备份、增量备份、压缩、加密等高级备份和恢复功能。它支持 MySQL 的所有存储引擎，包括 InnoDB 和 MyISAM，并且能够在数据库运行期间执行备份，确保最小的停机时间。<ol><li><strong>热备份</strong>：支持在数据库运行期间进行备份，无需停机。</li><li><strong>增量备份</strong>：只备份自上次完整备份以来发生变化的数据，节省存储空间和备份时间。</li><li><strong>差异备份</strong>：只备份自上次增量或完整备份以来发生变化的数据。</li><li><strong>压缩备份</strong>：对备份数据进行压缩，节省存储空间。</li><li><strong>加密备份</strong>：对备份数据进行加密，确保数据安全。</li><li><strong>自动验证备份</strong>：在备份过程中和之后验证备份数据的完整性。</li></ol></li></ol><h2 id="10-5-物理备份的方式"><a href="#10-5-物理备份的方式" class="headerlink" title="10.5 物理备份的方式"></a>10.5 物理备份的方式</h2><h3 id="10-5-1-完全备份（完整备份）"><a href="#10-5-1-完全备份（完整备份）" class="headerlink" title="10.5.1 完全备份（完整备份）"></a>10.5.1 完全备份（完整备份）</h3><p>​        <strong>每次对数据进行完整的备份，即对整个数据库的备份、数据库结构和文件结构的备份，保存的是备份完成时刻的数据库，是差异备份与增量备份的基础。</strong></p><ul><li><strong>优点：</strong>备份与恢复操作简单方便，恢复时一次恢复到位，恢复速度快</li><li><strong>缺点：</strong>占用空间大，备份速度慢</li></ul><h3 id="10-5-2-增量备份"><a href="#10-5-2-增量备份" class="headerlink" title="10.5.2 增量备份"></a>10.5.2 增量备份</h3><p>​        <strong><code>每次备份上一次备份到现在产生的新数据</code>。只有那些在上次完全备份或者增量备份后被修改的文件才会被备份。以上次完整备份或上次的增量备份的时间为时间点，仅备份这之间的数据变化。</strong></p><ul><li><strong>特点：</strong>因而备份的数据量小，占用空间小，备份速度快。但恢复时，需要从上一次的完整备份起按备份时间顺序，逐个备份版本进行恢复，恢复时间长，如中间某次的备份数据损坏，将导致数据的丢失。</li></ul><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152140729.png" alt="1566269843796"></p><h3 id="10-5-3-差异备份"><a href="#10-5-3-差异备份" class="headerlink" title="10.5.3 差异备份"></a>10.5.3 差异备份</h3><p>​        只备份跟完整备份不一样的。备份那些自从第一次次完全备份之后被修改过的所有文件，备份的时间起点是从第一次次完整备份起，且以后每次备份都是和第一次完整备份进行比较（注意是第一次，不是上一次），备份自第一次完整备份以来所有的修改过的文件。备份数据量会越来越大。</p><ul><li><strong>特点：</strong>占用空间比增量备份大，比完整备份小，恢复时仅需要恢复第一个完整版本和最后一次的差异版本，恢复速度介于完整备份和增量备份之间。</li></ul><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152141039.png" alt="1566269915833"></p><blockquote><p><strong>简单的讲，完整备份就是不管三七二十一，每次都把指定的备份目录完整的复制一遍，不管目录下的文件有没有变化；增量备份就是每次将之前（第一次、第二次、直到前一次）做过备份之后有变化的文件进行备份；差异备份就是每次都将第一次完整备份以来有变化的文件进行备份。</strong></p></blockquote><h3 id="10-5-4-percona-xtrabackup-物理备份"><a href="#10-5-4-percona-xtrabackup-物理备份" class="headerlink" title="*10.5.4 percona-xtrabackup 物理备份 *"></a>*<em>10.5.4 percona-xtrabackup 物理备份 *</em></h3><p>​    <code>Xtrabackup</code>是开源免费的支持MySQL数据库<code>热备份</code>的软件，在 Xtrabackup 包中主要有 <code>Xtrabackup</code>和<code>innobackupex</code>两个工具。其中<code>Xtrabackup</code>只能备份<code>InnoDB</code>和 <code>XtraDB</code> 两种引擎;<code>innobackupex</code>则是封装了<code>Xtrabackup</code>，同时<strong>增加了备份MyISAM引擎的功能</strong>。<strong>它不暂停服务创建Innodb热备份。</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152143789.png" alt="1566914979584"></p><h5 id="1-安装xtrabackup"><a href="#1-安装xtrabackup" class="headerlink" title="1. 安装xtrabackup"></a>1. 安装xtrabackup</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 安装xtrabackup</span></span><br><span class="line">[root@mysql-server ~]# wget http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@mysql-server ~]# rpm -ivh percona-release-latest.noarch.rpm </span><br><span class="line"></span><br><span class="line">[root@mysql-server yum.repos.d]# vim percona-original-release.repo</span><br></pre></td></tr></table></figure><p><strong>修改如下内容：将原来的1改为0，关闭校验</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162312336.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server yum.repos.d]<span class="comment"># vim percona-prel-release.repo</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162313743.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server yum.repos.d]# yum -y install percona-xtrabackup-24.x86_64</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果安装不上报错：</span></span><br><span class="line">Transaction check error:</span><br><span class="line">  file /etc/my.cnf from install of Percona-Server-shared-56-5.6.46-rel86.2.1.el7.x86_64 conflicts with file from package mysql-community-server-5.7.28-1.el7.x86_64</span><br><span class="line">Error Summary  #说是冲突</span><br><span class="line">解决方式如下：</span><br><span class="line">1.先安装yum install mysql-community-libs-compat -y #安装包</span><br><span class="line">2.在安装yum -y install percona-xtrabackup-24.x86_64</span><br><span class="line"></span><br><span class="line">参考：https://www.cnblogs.com/EikiXu/p/10217931.html</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">1.先安装percona-xtrabackup</span><br><span class="line">2.在安装mysql</span><br><span class="line">或者先将mysql源back了，重新建立yum缓存。在安装percona-xtrabackup。</span><br></pre></td></tr></table></figure><p>以上安装方式如果失效，请用youngfit提供的方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">======第一种========</span><br><span class="line">[root@mysql-server ~]# vim /etc/yum.repos.d/Percona.repo </span><br><span class="line">[percona] </span><br><span class="line">name = CentOS $releasever - Percona </span><br><span class="line">baseurl=http://repo.percona.com/centos/$releasever/os/$basearch/ </span><br><span class="line">enabled = 1 </span><br><span class="line">gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-percona </span><br><span class="line">gpgcheck = 1</span><br><span class="line"></span><br><span class="line">[root@mysql-server yum.repos.d]# vim /etc/pki/rpm-gpg/RPM-GPG-KEY-percona</span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Version: GnuPG v1.4.9 (GNU/Linux)</span><br><span class="line"></span><br><span class="line">mQGiBEsm3aERBACyB1E9ixebIMRGtmD45c6c/wi2IVIa6O3G1f6cyHH4ump6ejOi</span><br><span class="line">AX63hhEs4MUCGO7KnON1hpjuNN7MQZtGTJC0iX97X2Mk+IwB1KmBYN9sS/OqhA5C</span><br><span class="line">itj2RAkug4PFHR9dy21v0flj66KjBS3GpuOadpcrZ/k0g7Zi6t7kDWV0hwCgxCa2</span><br><span class="line">f/ESC2MN3q3j9hfMTBhhDCsD/3+iOxtDAUlPMIH50MdK5yqagdj8V/sxaHJ5u/zw</span><br><span class="line">YQunRlhB9f9QUFfhfnjRn8wjeYasMARDctCde5nbx3Pc+nRIXoB4D1Z1ZxRzR/lb</span><br><span class="line">7S4i8KRr9xhommFnDv/egkx+7X1aFp1f2wN2DQ4ecGF4EAAVHwFz8H4eQgsbLsa6</span><br><span class="line">7DV3BACj1cBwCf8tckWsvFtldqCP4CiBB50Ku49MU2Nfwq7durfIiePF4IIYRDZgg</span><br><span class="line">kHKSfP3oUZBGJx00BujtTobERraaV7lIRIwETZao76MqGt9K1uIqw4NT/jAbi9ce</span><br><span class="line">rFaOmAkaujbcB11HYIyjtkAGq9mXxaVqCC3RPWGr+fqAx/akBLQ2UGVyY29uYSBN</span><br><span class="line">eVNRTCBEZXZlbG9wbWVudCBUZWFtIDxteXNxbC1kZXZAcGVyY29uYS5jb20+iGAE</span><br><span class="line">ExECACAFAksm3aECGwMGCwkIBwMCBBUCCAMEFgIDAQIeAQIXgAAKCRAcTL3NzS79</span><br><span class="line">Kpk/AKCQKSEgwX9r8jR+6tAnCVpzyUFOQwCfX+fw3OAoYeFZB3eu2oT8OBTiVYu5</span><br><span class="line">Ag0ESybdoRAIAKKUV8rbqlB8qwZdWlmrwQqg3o7OpoAJ53/QOIySDmqy5TmNEPLm</span><br><span class="line">lHkwGqEldqbFYoTbOCEEJi2yFLg9UJCSBM/sfPaqb2jGP7fc0nZBgUBnFuA9USX72</span><br><span class="line">O0PzVAF7rCnWaIz76iY+AMI6xKeRy91TxYo/yenF1nRSJ+rExwlPcHgI685GNuFG</span><br><span class="line">chAExMTgbnoPx1ka1Vqbe6iza+FnJq3f4p9luGbZdSParGdlKhGqvVUJ3FLeLTqt</span><br><span class="line">caOn5cN2ZsdakE07GzdSktVtdYPT5BNMKgOAxhXKy11IPLj2Z5C33iVYSXjpTelJ</span><br><span class="line">b2qHvcg9XDMhmYJyE3O4AWFh2no3Jf4ypIcABA0IAJO8ms9ov6bFldqTqA0UW2gWQ</span><br><span class="line">cKFN4Q6NPV6IW0rV61ONLUc0VFXvYDtwsRbUmUYkB/L/R9fHj4lRUDbGEQrLCoE+</span><br><span class="line">/HyYvr2rxP94PT6Bkjk/aiCCPAKZRj5CFUKRpShfDIiow9qxtqv7yVd514Qqmjb4</span><br><span class="line">eEihtcjltGAoS54+6C3lbjrHUQhLwPGqlAh8uZKzfSZq0C06kTxiEqsG6VDDYWy6</span><br><span class="line">L7qaMwOqWdQtdekKiCk8w/FoovsMYED2qlWEt0i52G+0CjoRFx2zNsN3v4dWiIhk</span><br><span class="line">ZSL00Mx+g3NA7pQ1Yo5Vhok034mP8L2fBLhhWaK3LG63jYvd0HLkUFhNG+xjkpeI</span><br><span class="line">SQQYEQIACQUCSybdoQIbDAAKCRAcTL3NzS79KlacAJ0aAkBQapIaHNvmAhtVjLPN</span><br><span class="line">wke4ZgCePe3sPPF49lBal7QaYPdjqapa1SQ=</span><br><span class="line">=qcCk</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br><span class="line"></span><br><span class="line">[root@mysql-server yum.repos.d]# yum -y install percona-xtrabackup</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152157491.png" alt="image-20201207135955516"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server yum.repos.d]# innobackupex --version</span><br><span class="line">xtrabackup: recognized server arguments: --datadir=/var/lib/mysql </span><br><span class="line">innobackupex version 2.4.29 Linux (x86_64) (revision id: 2e6c0951)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">======第二种========</span><br><span class="line">百度搜吧，飞哥这边就是用的这种方式</span><br><span class="line"></span><br><span class="line">访问以下链接：</span><br><span class="line">https://zhuanlan.zhihu.com/p/140414143</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152158166.png" alt="image-20201207142906812"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407152158490.png" alt="image-20201207142930658"></p><p>下载完成，把包上传至服务器</p><h5 id="2-完全备份流程"><a href="#2-完全备份流程" class="headerlink" title="2.完全备份流程:"></a>2.完全备份流程:</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 创建备份目录：</span></span><br><span class="line">[root@mysql-server ~]# mkdir /backup/full/  -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 备份之前，进入数据库，存入些数据</span></span><br><span class="line">[root@mysql-server ~]# mysql -uroot -p'1'</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database youngfit;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use youngfit;</span></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t1(id int);</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 进行完整备份</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1'  /backup/full/</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407182306320.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看完整备份文件</span></span><br><span class="line">[root@mysql-server ~]# ll /backup/full/</span><br><span class="line">drwxr-x--- 11 root root 304 7月  18 23:05 2024-07-18_23-05-47</span><br><span class="line">========================================================================</span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 完全备份恢复流程</span></span><br><span class="line">1. 停止数据库</span><br><span class="line">2. 清理环境</span><br><span class="line">3. 重演回滚－－&gt; 恢复数据</span><br><span class="line">4. 修改权限</span><br><span class="line">5. 启动数据库</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 1.关闭数据库：</span></span><br><span class="line">[root@mysql-server ~]# systemctl stop mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 删除所有数据</span></span><br><span class="line">[root@mysql-server ~]# rm -rf /var/lib/mysql/*</span><br><span class="line">[root@mysql-server ~]# rm -rf /var/log/mysqld.log</span><br><span class="line">[root@mysql-server ~]# rm -rf /var/log/mysql-slow/slow.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 2.重演恢复:</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --apply-log /xtrabackup/full/2024-07-16_23-16-31/</span><br></pre></td></tr></table></figure><ul><li><strong><code>innobackupex</code></strong>：<ul><li><code>Percona XtraBackup</code> 工具脚本，提供了更高级别的备份和恢复操作。<code>innobackupex</code> 脚本实际上是一个对 <code>xtrabackup</code> 工具的包装，使得它更易于使用。</li></ul></li><li><strong><code>--apply-log</code></strong>：<ul><li>这个选项用于准备备份目录，使其可以被恢复。这个过程也被称为“应用日志”。在备份过程中，XtraBackup 会复制数据文件和事务日志。为了确保数据一致性，必须在数据恢复之前应用这些日志。此步骤会合并所有未完成的事务，从而使数据文件处于一致状态。</li></ul></li><li><strong><code>/xtrabackup/full/2024-07-16_23-16-31/</code></strong>：<ul><li>指定包含备份数据的目录，该目录通常包含由 XtraBackup 生成的数据文件、日志文件和其他相关文件。</li></ul></li></ul><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162323638.png" alt="image-20240716232340566"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 3.确认数据库目录：</span></span><br><span class="line">恢复之前需要确认配置文件内有数据库目录指定，不然xtrabackup不知道恢复到哪里</span><br><span class="line">[root@mysql-server ~]# cat /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 4.恢复数据：</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --copy-back  /backup/full/2024-07-18_23-05-47/</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162324038.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 5.修改权限：</span></span><br><span class="line">[root@mysql-server ~]# chown mysql.mysql  /var/lib/mysql  -R</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动数据库:</span></span><br><span class="line">[root@mysql-server ~]# systemctl start mysqld</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">6.确认数据是否恢复</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">use</span> emp01;</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">| Tables_in_emp01 |</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">| emp             |</span><br><span class="line">| employees       |</span><br><span class="line">| t3              |</span><br><span class="line">| test            |</span><br><span class="line">| test01          |</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">===可以看到数据已恢复===</span><br></pre></td></tr></table></figure><h5 id="3-增量备份流程"><a href="#3-增量备份流程" class="headerlink" title="3. 增量备份流程"></a>3. 增量备份流程</h5><p>  <strong>原理：每次备份上一次备份到现在产生的新数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 1.在数据库上面创建一个测试的库</span></span><br><span class="line">mysql&gt; create database test01;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create table test01(id int);</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test01(1);</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test01;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162330840.png" alt="1566283686794"></p><p><strong>1. 完整备份:周一</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 学习环境删除备份目录</span></span><br><span class="line">[root@mysql-server ~]# rm -rf /backup/*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 第一次进行完整备份</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1'  /backup/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看备份数据</span></span><br><span class="line">[root@mysql-server ~]# ll /backup/2024-07-18_23-17-58/</span><br><span class="line">总用量 12344</span><br><span class="line">-rw-r----- 1 root root      487 7月  18 23:18 backup-my.cnf</span><br><span class="line">drwxr-x--- 2 root root       78 7月  18 23:17 emp01</span><br><span class="line">-rw-r----- 1 root root      453 7月  18 23:18 ib_buffer_pool</span><br><span class="line">. . . . . .</span><br></pre></td></tr></table></figure><p><strong>2、增量备份：周二　——　周三</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 在数据库中插入周二的数据:</span></span><br><span class="line">mysql&gt; use test01;</span><br><span class="line">mysql&gt; select * from test01;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> test01(<span class="keyword">id</span>) <span class="keyword">values</span>(<span class="number">2</span>); <span class="comment"># 模拟周二</span></span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test01;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 第一次增量备份</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># innobackupex  --user=root --password='1'  --incremental /backup/ --incremental-basedir=/backup/2024-07-18_23-17-58/</span></span><br><span class="line">--incremental-basedir:基于哪个备份文件进行增量</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看备份文件目录</span></span><br><span class="line">[root@mysql-server ~]<span class="comment"># ll /backup/</span></span><br><span class="line">总用量 4</span><br><span class="line">drwxr-x--- 11 root root  304 7月  18 23:18 2024-07-18_23-17-58</span><br><span class="line">drwxr-x--- 12 root root 4096 7月  18 23:23 2024-07-18_23-23-14 <span class="comment"># 相当于周二的增量备份</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 在数据库中插入周三的数据:</span></span><br><span class="line">mysql&gt; use test01;</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test01(id) values(3);   # 模拟周三</span><br><span class="line">Query OK, 1 row affected (0.00 sec) </span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test01;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    3 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 第二次增量备份(基于第二天增量备份实现)</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1' --incremental /backup/ --incremental-basedir=/backup/2024-07-18_23-23-14/      # 基于前一天的备份为目录</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看备份目录</span></span><br><span class="line">[root@mysql-server ~]# ll /backup/</span><br><span class="line">2024-07-18_23-17-58</span><br><span class="line">2024-07-18_23-23-14</span><br><span class="line">2024-07-18_23-28-43  # 相当于周三的增量备份</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看一下备份目录:</span></span><br><span class="line">[root@mysql-server ~]# ls /xtrabackup/</span><br><span class="line">2024-07-18_23-17-58  2024-07-18_23-23-14  2024-07-18_23-28-43</span><br><span class="line">    全备周一             增量周二               增量周三</span><br></pre></td></tr></table></figure><p><strong>数据恢复流程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">增量备份恢复流程</span><br><span class="line">1. 停止数据库</span><br><span class="line">2. 清理环境</span><br><span class="line">3. 依次重演回滚redo log－－&gt; 恢复数据</span><br><span class="line">4. 修改权限</span><br><span class="line">5. 启动数据库</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 关闭MySQL</span></span><br><span class="line">[root@mysql-server ~]# systemctl stop mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 清除脏数据</span></span><br><span class="line">[root@mysql-server ~]# rm -rf /var/lib/mysql/*  /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 依次重演回滚redo <span class="built_in">log</span>:（第一次回滚完整备份日志）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --apply-log --redo-only /xtrabackup/2024-07-16_23-31-20/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 回滚第一次增量备份日志（基于完整备份还原）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --apply-log --redo-only /xtrabackup/2024-07-16_23-31-20/  --incremental-dir=/xtrabackup/2024-07-16_23-35-21/</span><br><span class="line">--incremental-dir：增量目录</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 回滚第二次增量备份日志（基于完整备份还原）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --apply-log --redo-only /xtrabackup/2024-07-16_23-31-20/  --incremental-dir=/xtrabackup/2024-07-16_23-38-36/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 恢复数据:（基于MySQL完整备份）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --copy-back /xtrabackup/2024-07-16_23-31-20/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 修改权限（属主属组）</span></span><br><span class="line">[root@mysql-server ~]# chown -R mysql.mysql /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动MySQL服务</span></span><br><span class="line">[root@mysql-server ~]# systemctl start mysqld</span><br><span class="line">登陆上去看一下:</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407162352052.png" alt="img"></p><hr><h5 id="4、差异备份流程"><a href="#4、差异备份流程" class="headerlink" title="4、差异备份流程"></a>4、差异备份流程</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 清理备份的环境</span></span><br><span class="line">[root@mysql-server ~]# rm -rf /xtrabackup/*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 登陆数据库，准备环境</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> delete from test01.t1;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into test01.t1(id) values(1);  <span class="comment">#插入数据1，模拟周一</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看当前系统时间</span></span><br><span class="line">[root@mysql-server ~]# date</span><br><span class="line">2024年 07月 16日 星期二 23:54:54 CST</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 第一步：完整备份：周一</span></span><br><span class="line">[root@mysql-server ~]# innobackupex --user=root --password='1' /xtrabackup/</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 差异备份：周二</span></span><br><span class="line">语法: # innobackupex --user=root --password=888 --incremental /xtrabackup --incremental-basedir=/xtrabackup/完全备份目录（周二）</span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 3.修改当前系统时间：</span></span><br><span class="line">[root@mysql-server ~]# date 07172358</span><br><span class="line">2024年 07月 17日 星期三 23:58:00 CST</span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 4.在登陆MySQL服务器，插入测试数据</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert <span class="keyword">in</span> to test01.t1(id) values(2);  <span class="comment">#插入数据2，模拟周二</span></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from test01.t1;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 差异备份周二（基于周一完整备份实现）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1' --incremental /xtrabackup/ --incremental-basedir=/xtrabackup/2024-07-16_23-56-32/  #备份目录基于周一完整的备份</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看备份目录</span></span><br><span class="line">[root@mysql-server ~]# ll /xtrabackup/</span><br><span class="line">2024-07-16_23-56-32</span><br><span class="line">2024-07-18_00-02-09</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 5.再次登陆mysql,插入测试数据</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into test01.t1(id) values(3); <span class="comment">#插入数据，模拟周四</span></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from test01.test01;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 6.在次修改时间</span></span><br><span class="line">[root@mysql-server ~]# date 07192358</span><br><span class="line">2024年 07月 19日 星期五 23:58:00 CST</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 7.再次差异备份（基于周一完整备份）</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1' --incremental /xtrabackup/ --incremental-basedir=/xtrabackup/2024-07-16_23-56-32/  #还是基于周一的备份</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 8.延申到周三</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into test01.t1(id) values(4);</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from test01.t1;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 9.修改当前系统时间</span></span><br><span class="line">[root@mysql-server ~]# date 07202358</span><br><span class="line">2024年 07月 20日 星期六 23:58:00 CST</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 10.差异备份三</span></span><br><span class="line">[root@mysql-server ~]# innobackupex  --user=root --password='1' --incremental /xtrabackup/ --incremental-basedir=/xtrabackup/2024-07-16_23-56-32/  #还是基于周一的备份</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 11.查看一下备份目录</span></span><br><span class="line">[root@mysql-server ~]# ll /xtrabackup/</span><br><span class="line">drwxr-x--- 8 root root 233 7月  16 23:56 2024-07-16_23-56-32  周一</span><br><span class="line">drwxr-x--- 8 root root 259 7月  18 00:02 2024-07-18_00-02-09  周二</span><br><span class="line">drwxr-x--- 8 root root 259 7月  19 23:59 2024-07-19_23-58-59  周三</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">差异备份恢复流程</span><br><span class="line">1. 停止数据库</span><br><span class="line">2. 清理环境</span><br><span class="line">3. 重演回滚redo log（周一，某次差异）－－&gt; 恢复数据</span><br><span class="line">4. 修改权限</span><br><span class="line">5. 启动数据库</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 停止数据库</span></span><br><span class="line">[root@mysql-server ~]# systemctl stop mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 删除脏数据</span></span><br><span class="line">[root@mysql-server ~]# rm -rf /var/lib/mysql/* /var/log/mysqld.log </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 1.恢复全量的redo <span class="built_in">log</span></span></span><br><span class="line">语法: # innobackupex --apply-log --redo-only /xtrabackup/完全备份目录(周一)</span><br><span class="line">[root@mysql-server ~]# innobackupex  --apply-log --redo-only /xtrabackup/2024-07-16_23-56-32/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 2.恢复差异的redo <span class="built_in">log</span></span></span><br><span class="line">语法:# innobackupex --apply-log --redo-only /xtrabackup/完全备份目录（周一）--incremental-dir=/xtrabacku/某个差异备份</span><br><span class="line">这里我们恢复周三的差异备份</span><br><span class="line">[root@mysql-server ~]# innobackupex --apply-log --redo-only /xtrabackup/2024-07-16_23-56-32/  --incremental-dir=/xtrabackup/2024-07-20_23-58-20/    #我们恢复周三的差异备份</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 3.恢复数据</span></span><br><span class="line">语法:# innobackupex --copy-back /xtrabackup/完全备份目录（周一）</span><br><span class="line">[root@mysql-server ~]# innobackupex  --copy-back /xtrabackup/2024-07-16_23-56-32/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 修改权限（属主和属组）：</span></span><br><span class="line">[root@mysql-server ~]# chown -R mysql.mysql /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动MySQL服务</span></span><br><span class="line">[root@mysql-server ~]# systemctl start mysqld</span><br></pre></td></tr></table></figure><p>登陆mysql查看一下:</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407170019354.png" alt="img"></p><hr><h3 id="10-5-5-mysqldump逻辑备份-—-推荐优先使用"><a href="#10-5-5-mysqldump逻辑备份-—-推荐优先使用" class="headerlink" title="10.5.5 mysqldump逻辑备份   —- 推荐优先使用"></a>10.5.5 mysqldump逻辑备份   —- 推荐优先使用</h3><p>mysqldump 是 MySQL 自带的逻辑备份工具。可以保证数据的一致性和服务的可用性。</p><p>如何保证数据一致?在备份的时候进行锁表会自动锁表。锁住之后在备份。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本身为客户端工具:</span><br><span class="line">远程备份语法: # mysqldump  -h 服务器  -u用户名  -p密码   数据库名  &gt; 备份文件.sql</span><br><span class="line">本地备份语法: # mysqldump  -u用户名  -p密码   数据库名  &gt; 备份文件.sql</span><br></pre></td></tr></table></figure><h5 id="1-常用备份选项"><a href="#1-常用备份选项" class="headerlink" title="1.常用备份选项"></a><strong>1.常用备份选项</strong></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-A, --all-databases #备份所有库</span><br><span class="line"></span><br><span class="line">-B, --databases  #备份多个数据库</span><br><span class="line"></span><br><span class="line">-F, --flush-logs #备份之前刷新binlog日志</span><br><span class="line"></span><br><span class="line">--default-character-set #指定导出数据时采用何种字符集，如果数据表不是采用默认的latin1字符集的话，那么导出时必须指定该选项，否则再次导入数据后将产生乱码问题。</span><br><span class="line"></span><br><span class="line">--no-data，-d #不导出任何数据，只导出数据库表结构。</span><br><span class="line"></span><br><span class="line">--lock-tables #备份前，锁定所有数据库表</span><br><span class="line"></span><br><span class="line">--single-transaction #保证数据的一致性和服务的可用性</span><br><span class="line"></span><br><span class="line">-f, --force #即使在一个表导出期间得到一个SQL错误，继续。</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 mysqldump 备份数据库时避免锁表:</span></span><br><span class="line">对一个正在运行的数据库进行备份请慎重！！ 如果一定要在服务运行期间备份，可以选择添加 --single-transaction选项，</span><br><span class="line"></span><br><span class="line">类似执行： mysqldump --single-transaction -u root -p123456 dbname &gt; mysql.sql</span><br></pre></td></tr></table></figure><h5 id="2-备份表"><a href="#2-备份表" class="headerlink" title="2.备份表"></a>2.备份表</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 语法: <span class="comment"># mysqldump -u root -p1 数据库  表1 &gt; /db1.t1.bak</span></span></span><br><span class="line">[root@mysql-server ~]# mkdir /home/back  #创建备份目录</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' company employee5 &gt; /home/back/company.employee5.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 备份多个表：</span></span><br><span class="line">语法格式: mysqldump -u root -p1 数据库 表一 表二 &gt; /db1.t1_t2.bak</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' company new_t1 new_t2  &gt; /home/back/company.new_t1_t2.bak</span><br></pre></td></tr></table></figure><h5 id="3、备份库"><a href="#3、备份库" class="headerlink" title="3、备份库"></a>3、备份库</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 备份一个库：相当于将这个库里面的所有表全部备份。</span></span><br><span class="line">语法: # mysqldump -u root -p1 数据库1 &gt; /db1.bak</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' company &gt; /home/back/company.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 备份多个库：</span></span><br><span class="line">语法：mysqldump  -u root -p1 -B  数据库1 数据库2 数据库3 &gt; /db123.bak</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' -B company testdb &gt; /home/back/company_testdb.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 备份所有的库：</span></span><br><span class="line">语法：# mysqldump  -u root -p1 -A &gt; /alldb.bak</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' -A &gt; /home/back/allbase.bak</span><br></pre></td></tr></table></figure><p>到目录下面查看一下：</p><p><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1566293795577.png" alt="1566293795577"></p><h5 id="4、恢复数据库和表"><a href="#4、恢复数据库和表" class="headerlink" title="4、恢复数据库和表"></a>4、恢复数据库和表</h5><p>​        为保证数据一致性，应在恢复数据之前停止数据库对外的服务,停止binlog日志 因为binlog使用binlog日志恢复数据时也会产生binlog日志。</p><p><strong>为实验效果先将刚才备份的数据库和表删除了。登陆数据库：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# mysql -uroot -p1</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1566294122629.png" alt="1566294122629"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop database company;</span><br><span class="line">mysql&gt; exit;</span><br></pre></td></tr></table></figure><h5 id="5、恢复库"><a href="#5、恢复库" class="headerlink" title="5、恢复库"></a>5、恢复库</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 登陆mysql创建一个库</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database company;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 恢复数据</span></span><br><span class="line">[root@mysql-server ~]# mysql -uroot -p'1' company &lt; /home/back/company.bak</span><br></pre></td></tr></table></figure><h5 id="6、恢复表"><a href="#6、恢复表" class="headerlink" title="6、恢复表"></a>6、恢复表</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 登陆到刚才恢复的库中将其中的一个表删除掉</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use company</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;</span></span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_company |</span><br><span class="line">+-------------------+</span><br><span class="line">| employee5         |</span><br><span class="line">| new_t1            |</span><br><span class="line">| new_t2            |</span><br><span class="line">+-------------------+</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> drop table employee5;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 开始恢复:</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> sql_log_bin=0;   <span class="comment">#停止binlog日志</span></span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">source</span> /home/back/company.employee5.bak;  -------加路径和备份的文件 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 恢复方式二：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql -u root -p1  db1  &lt; db1.t1.bak</span></span><br><span class="line">                     库名    备份的文件路径</span><br></pre></td></tr></table></figure><h5 id="7、备份及恢复表结构"><a href="#7、备份及恢复表结构" class="headerlink" title="7、备份及恢复表结构"></a>7、备份及恢复表结构</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 1.备份表结构：</span></span><br><span class="line">语法：mysqldump  -uroot -p123456 -d 数据库 表名 &gt; dump.sql</span><br><span class="line">[root@mysql-server ~]# mysqldump -uroot -p'1' -d company employee5 &gt; /home/back/emp.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 恢复表结构：登陆数据库创建一个库</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database t1;</span></span><br><span class="line">语法：# mysql -u root -p1 -D 数据库  &lt; db1.t1.bak</span><br><span class="line">[root@mysql-server ~]# mysql -uroot -p'1' -D t1 &lt; /home/back/emp.bak</span><br></pre></td></tr></table></figure><p><strong>登陆数据查看：</strong></p><p><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1566295893236.png" alt="1566295893236"></p><h5 id="8、数据的导入导出-没有表结构。"><a href="#8、数据的导入导出-没有表结构。" class="headerlink" title="8、数据的导入导出,没有表结构。"></a>8、数据的导入导出,没有表结构。</h5><p>​        表的导出和导入只备份表内记录，不会备份表结构，需要通过mysqldump备份表结构，恢复时先恢复表结构，再导入数据。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">"secure_file_priv"</span>;  ----查询导入导出的目录。</span></span><br></pre></td></tr></table></figure><p><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1566299268619.png" alt="1566299268619"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">修改安全文件目录：</span><br><span class="line">1.创建一个目录：mkdir  路径目录</span><br><span class="line">[root@mysql-server ~]# mkdir /sql</span><br><span class="line">2.修改权限</span><br><span class="line">[root@mysql-server ~]# chown mysql.mysql /sql</span><br><span class="line">3.编辑配置文件：</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">在[mysqld]里追加</span><br><span class="line">secure_file_priv=/sql</span><br><span class="line">4.重新启动mysql.</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.导出数据</span><br><span class="line">登陆数据查看数据</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;    <span class="comment">#找到test库</span></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use <span class="built_in">test</span>   <span class="comment">#进入test库</span></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;  <span class="comment">#找到它t3表</span></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t3 into outfile <span class="string">'/sql/test.t3.bak'</span>;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2.数据的导入</span><br><span class="line">先将原来表里面的数据清除掉，只保留表结构</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> delete from t3;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> load data infile <span class="string">'/sql/test.t3.bak'</span> into table t3;</span></span><br><span class="line">如果将数据导入别的表，需要创建这个表并创建相应的表结构。</span><br></pre></td></tr></table></figure><h4 id="5、通过binlog恢复"><a href="#5、通过binlog恢复" class="headerlink" title="5、通过binlog恢复"></a>5、通过binlog恢复</h4><p>开启binlog日志：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# vim /etc/my.cnf</span><br><span class="line">log-bin=/var/log/sql-bin/mylog</span><br><span class="line">server-id=1</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172205457.png" alt="1566533393301"></p><p>创建目录并修改权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# mkdir /var/log/sql-bin</span><br><span class="line">[root@mysql-server ~]# chown mysql.mysql /var/log/sql-bin</span><br><span class="line">[root@mysql-server ~]# systemctl restart mysqld</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172205280.png" alt="1566533482923"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush logs; <span class="comment">#刷新binlog日志会截断产生新的日志文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table testdb.t3(id int);   <span class="comment">#创建一个表</span></span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172205413.png" alt="1566533650005"></p><p>根据位置恢复</p><p>找到要恢复的sql语句的起始位置、结束位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server sql-bin]# mysqlbinlog mylog.000002</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172205246.png" alt="1566533960687"></p><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-server ~]# mysql -uroot -p'1'</span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 将这个表删除</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> drop table testdb.t3;  </span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 恢复：</span></span><br><span class="line">[root@mysql-server ~]# cd /var/log/sql-bin/</span><br><span class="line">[root@mysql-server sql-bin]# mysqlbinlog --start-position 219 --stop-position 321 mylog.000002 | mysql -uroot -p'1'</span><br></pre></td></tr></table></figure><p>查看：</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172205992.png" alt="1566534248132"></p><h1 id="Day05"><a href="#Day05" class="headerlink" title="Day05"></a>Day05</h1><h1 id="十一、mysql优化"><a href="#十一、mysql优化" class="headerlink" title="十一、mysql优化"></a>十一、mysql优化</h1><ul><li><strong>选择合适的数据类型及字符集</strong>：使用合适的数据类型可以减少存储空间和提高查询速度。这个可不能小看，数据量到达一个量级，这个就能看出明显差异。</li><li><strong>避免使用SELECT *</strong>：仅选择必要的列，减少数据传输量。</li><li><strong>合理使用JOIN、避免子查询</strong>：避免过多的 JOIN 操作，尽量减少数据集的大小。</li><li><strong>使用UNION代替OR、优化ORDER BY和GROUP BY</strong>：确保 <code>ORDER BY</code> 和 <code>GROUP BY</code> 的列上有索引。</li><li><strong>避免使用%开头的LIKE查询</strong>：避免使用 <code>%</code> 开头的 <code>LIKE</code> 查询，因为不能使用索引。</li><li><strong>使用批量插入、优化INSERT操作</strong>：使用批量插入减少插入操作的开销。</li><li><strong>使用查询缓存</strong>：使用查询缓存，减少重复查询的开销。</li><li><strong>调整innodb_buffer_pool_size</strong>：<code>innodb_buffer_pool_size</code> 是 InnoDB 存储引擎最重要的配置参数之一，用于指定 InnoDB 缓冲池的大小。缓冲池用于缓存数据页、索引页和 InnoDB 表的其它信息。合理设置这个参数对数据库性能有很大影响。</li><li><strong>调整query_cache_size</strong>：<code>query_cache_size</code> 是用于指定查询缓存的大小。查询缓存可以缓存 SELECT 查询的结果，避免重复执行相同的查询，从而提高性能。</li><li><strong>调整thread_cache_size</strong>：增大线程缓存大小，减少线程创建开销。</li><li><strong>调整table_open_cache</strong>：增大表缓存大小，减少表打开的开销。</li><li><strong>调整tmp_table_size和max_heap_table_size</strong>：增大临时表和堆表的最大大小，减少磁盘 I/O。</li><li><strong>调整innodb_flush_log_at_trx_commit</strong>：根据需求调整日志刷新策略，权衡性能和数据安全性。</li><li><strong>调整innodb_log_file_size</strong>：增大日志文件大小，减少日志文件切换的开销。</li><li><strong>调整innodb_log_buffer_size</strong>：增大日志缓冲区大小，提高写入性能。</li><li><strong>调整innodb_io_capacity</strong>：根据磁盘 I/O 性能调整 InnoDB I/O 容量。</li><li><strong>调整max_connections</strong>：增大最大连接数，支持更多并发连接。</li><li><strong>调整sort_buffer_size</strong>：增大排序缓冲区大小，提高排序操作的性能。</li><li><strong>调整read_buffer_size</strong>：增大读缓冲区大小，提高顺序扫描性能。</li><li><strong>在常用查询条件和连接条件的列上建立索引</strong>：只要发现查询较慢，优先检查where条件后面，有没有被创建索引。</li><li><strong>避免在索引列上进行计算</strong></li><li><strong>避免重复索引</strong>：检查并删除重复的索引，减少维护开销。了解mysql底层的都知道，创建索引，就会增加一个页，重复索引无疑是给增加负担。</li><li><strong>更新频繁的列慎用索引</strong>：对于更新频繁的列，索引会增加写操作的开销，需要慎重使用。</li><li><strong>避免过多的列使用复合索引</strong>：复合索引的列数不要太多，列数过多会增加索引的维护开销，并且可能导致索引文件过大。对此可以拆分为较少复合索引和单个索引</li><li><strong>使用覆盖索引</strong>：如果查询的所有列都在索引中，那么可以避免回表，提高性能。</li><li><strong>避免使用SELECT DISTINCT</strong>：在没有必要的情况下避免使用 <code>SELECT DISTINCT</code>，因为它会导致额外的排序操作，增加查询的开销。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">引擎：</span><br><span class="line">查看引擎：</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show engines;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SHOW VARIABLES LIKE <span class="string">'%storage_engine%'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show create table t1;   ---查看建表信息</span></span><br><span class="line"></span><br><span class="line">临时指定引擎：</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table innodb1(id int)engine=innodb;</span></span><br><span class="line">修改默认引擎： </span><br><span class="line">/etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">default-storage-engine=INNODB  ----引擎</span><br><span class="line">修改已经存在的表的引擎：</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table t2 engine=myisam;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">优化：</span><br><span class="line"></span><br><span class="line">调优思路：</span><br><span class="line">    1.数据库设计与规划--以后再修该很麻烦，估计数据量，使用什么存储引擎</span><br><span class="line">    2.数据的应用--怎样取数据，sql语句的优化</span><br><span class="line">    3.mysql服务优化--内存的使用，磁盘的使用</span><br><span class="line">    4.操作系统的优化--内核</span><br><span class="line">    5.升级硬件设备</span><br><span class="line">    6.创建索引提升查询速度</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql常用命令：</span><br><span class="line">    mysql&gt; show warnings    查看最近一个sql语句产生的错误警告，看其他的需要看.err日志</span><br><span class="line">    mysql&gt; show processlist 显示系统中正在运行的所有进程。</span><br><span class="line">    mysql&gt; show errors   查看最近一个sql语句产生的错误信息</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">字符集设置</span><br><span class="line">    临时：</span><br><span class="line">        mysql&gt; create database db1 CHARACTER SET = utf8;</span><br><span class="line">        mysql&gt; create table t1(id int(10)) CHARACTER SET = utf8;      </span><br><span class="line">        </span><br><span class="line">          5.7/ 5.5版本设置：</span><br><span class="line">            [mysqld]</span><br><span class="line">            character_set_server = utf8</span><br><span class="line">===========================================================================================</span><br><span class="line">慢查询：  </span><br><span class="line">  查看是否设置成功：</span><br><span class="line">    mysql&gt; show variables like '%query%';</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当连接数的数值过小会经常出现ERROR 1040: Too many connections错误。</span><br><span class="line">这是是查询数据库当前设置的最大连接数</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'%max_connections%'</span>;</span></span><br><span class="line"></span><br><span class="line">强制限制mysql资源设置:</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/my.cnf</span></span><br><span class="line">max_connections = 1024  并发连接数，根据实际情况设置连接数。</span><br><span class="line">connect_timeout= 5   单位秒 ----超时时间，默认30秒</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">innodb引擎：       </span><br><span class="line">   innodb-buffer-pool-size   //缓存 InnoDB 数据和索引的内存缓冲区的大小</span><br><span class="line">innodb-buffer-pool-size=#   ----值     </span><br><span class="line">        这个值设得越高,访问表中数据需要得磁盘 I/O 越少。在一个专用的数据库服务器上,你可以设置这个参数达机器物理内存大小的 80%。</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/my.cnf</span></span><br><span class="line">innodb-buffer-pool-size=2G</span><br></pre></td></tr></table></figure><h1 id="十二、AB复制"><a href="#十二、AB复制" class="headerlink" title="十二、AB复制"></a>十二、AB复制</h1><h2 id="12-1-什么是主从复制"><a href="#12-1-什么是主从复制" class="headerlink" title="12.1 什么是主从复制?"></a>12.1 什么是主从复制?</h2><p>​    <strong>主从复制，是用来建立一个和主数据库完全一样的数据库环境，称为从数据库；主数据库一般是准实时的业务数据库。</strong></p><p>​    MySQL 主从复制（Master-Slave Replication）是一种数据复制技术，用于在多个数据库服务器之间的数据同步。在主从复制架构中，一个服务器被设置为主服务器（Master），充当数据源，其他服务器被设置为从服务器（Slave），用来复制主服务器的数据。</p><p><strong>主从复制的作用</strong></p><ol><li><strong>高可用性</strong>：通过将主数据库的数据复制到一个或多个从数据库，可以在<strong>主数据库故障时快速切换到从数据库</strong>，以实现系统的高可用性和容错能力，从而保证系统的持续可用性。 </li><li><strong>提高整体性能和吞吐量</strong>：通过将读请求分散到多个从服务器上进行处理，从而减轻了主服务器的负载压力，提高数据库系统的整体性能和吞吐量。主服务器主要负责写操作，而从服务器主要负责读操作，从而分担了主服务器的压力。</li><li><strong>数据备份和恢复</strong>：通过主从同步，可以将主服务器上的数据异步复制到从服务器上，从而实现数据备份和灾难恢复的需求。在应对意外数据丢失、灾难恢复或误操作时，可以使用从服务器作为数据的备份源来进行数据恢复。</li></ol><p>总结：</p><ul><li><strong>解决数据可靠性的问题需要用到主从同步；</strong></li><li><strong>解决 MySQL 服务高可用要用到主从同步；</strong></li><li><strong>应对高并发的时候，还是要用到主从同步。</strong></li></ul><h2 id="12-2-主从复制原理"><a href="#12-2-主从复制原理" class="headerlink" title="12.2 主从复制原理"></a>12.2 主从复制原理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">原理：</span><br><span class="line">实现整个主从复制，需要由slave服务器上的IO进程和Sql进程共同完成.</span><br><span class="line">要实现主从复制，首先必须打开Master端的binary log（bin-log）功能，因为整个MySQL复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所记录的各种操作。</span><br><span class="line">===========================================</span><br><span class="line">1. 在主库上把数据更改（DDL DML DCL）记录到二进制日志（Binary Log）中。</span><br><span class="line">2. 备库I/O线程将主库上的日志复制到自己的中继日志（Relay Log）中。</span><br><span class="line">3. 备库SQL线程读取中继日志中的事件，将其重放到备库数据库之上。</span><br><span class="line">===========================================</span><br><span class="line">master   负责写      -----A</span><br><span class="line">slave    relay-log  -----B</span><br><span class="line">I/O      负责通信读取binlog日志</span><br><span class="line">SQL      负责写数据</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172216952.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">步骤一：主库db的更新事件(update、insert、delete)被写到binlog</span><br><span class="line">步骤二：从库发起连接，连接到主库</span><br><span class="line">步骤三：此时主库创建一个binlog dump thread线程，把binlog的内容发送到从库</span><br><span class="line">步骤四：从库启动之后，创建一个I/O线程，读取主库传过来的binlog内容并写入到relay log.</span><br><span class="line">步骤五：还会创建一个SQL线程，从relay log里面读取内容，将更新内容写入到slave的db.</span><br></pre></td></tr></table></figure><h2 id="12-3-主从同步的模式"><a href="#12-3-主从同步的模式" class="headerlink" title="12.3 主从同步的模式"></a>12.3 主从同步的模式</h2><p>MySQL 中主要有以下三种主从复制的模式，分别是全同步复制、异步复制和半同步复制。</p><ol><li><p><strong>全同步复制</strong>：在全同步复制模式中，主服务器将数据修改操作记录到二进制日志，并等待全部从服务器确认已接收到并应用了这些日志后才继续执行后续操作。</p><ol><li>优点：数据一致性和可靠性，全部从服务器与主服务器保持同步。如果主服务器故障，应用到从服务器的数据不会丢失。</li><li>缺点：由于全同步复制需要等待从服务器的确认，因此相对于其他复制方式，延迟很大。严重影响主服务器的性能。</li></ol></li><li><p><strong>异步复制</strong>：MySQL 主从复制中最常见和默认的模式。在异步复制模式中，主服务器将数据修改操作记录到二进制日志（Binary Log）中，并将日志传输给从服务器。从服务器接收到二进制日志后，会异步地应用这些日志进行数据复制。</p></li><li><ol><li>优点：它的优点是及时响应给使用者，主服务器不会受到从服务器的影响而等待确认，可以提高主服务器的性能。</li><li>缺点：由于是异步复制，可能存在数据传输的延迟，且从服务器上的复制过程是不可靠的。如果主服务器故障，尚未应用到从服务器的数据可能会丢失。</li></ol></li><li><p><strong>半同步复制</strong>：半同步复制是 MySQL 主从复制中的一种增强模式。在半同步复制模式中，主服务器将数据修改操作记录到二进制日志，并等待至少一个从服务器确认已接收到并应用了这些日志后才继续执行后续操作。</p></li><li><ol><li>优点：可以提供更高的数据一致性和可靠性，确保至少一个从服务器与主服务器保持同步。如果主服务器故障，已经确认接收并应用到从服务器的数据不会丢失。</li><li>缺点：由于半同步复制需要等待从服务器的确认，因此相对于异步复制，会增加一定的延迟，可能会影响主服务器的性能。</li></ol></li></ol><p>如果对数据一致性和可靠性要求较高，可以考虑使用半同步复制或者全同步；如果对延迟和主服务器性能要求较高，可以继续使用异步复制，根据实际需求调整复制模式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">面试：</span><br><span class="line">1.主从复制延迟大比较慢原因：</span><br><span class="line">主服务器配置高，从服务器的配置低。</span><br><span class="line">并发量大导致主服务器读的慢。从服务器写的慢</span><br><span class="line">网络延迟比较高</span><br><span class="line">从服务器的读写速度慢</span><br><span class="line">2.从数据库的读的延迟问题了解吗？如何解决？</span><br><span class="line">解决方法：</span><br><span class="line">半同步复制—解决数据丢失的问题</span><br><span class="line">并行复制—-解决从库复制延迟的问题</span><br></pre></td></tr></table></figure><h2 id="12-4-M-S-架构GTID-基于事务ID复制"><a href="#12-4-M-S-架构GTID-基于事务ID复制" class="headerlink" title="12.4 M-S 架构GTID 基于事务ID复制"></a>12.4 M-S 架构GTID 基于事务ID复制</h2><h5 id="12-4-1-什么是GTID？"><a href="#12-4-1-什么是GTID？" class="headerlink" title="12.4.1 什么是GTID？"></a>12.4.1 什么是GTID？</h5><p>GTID 的全称是 Global Transaction Identifier，全局事务 ID，当一个事务提交时，就会生成一个 GTID，相当于事务的唯一标识。<br>GTID是用来代替传统复制的方法，GTID复制与普通复制模式的最大不同就是不需要指定二进制文件名和位置。</p><h5 id="12-4-2-GTID工作原理"><a href="#12-4-2-GTID工作原理" class="headerlink" title="12.4.2 GTID工作原理"></a>12.4.2 GTID工作原理</h5><ol><li>master更新数据时，会在事务前产生GTID，一同记录到binlog日志中。</li><li>slave端的i/o 线程将变更的binlog，写入到本地的relay log中。</li><li>sql线程从relay log中获取GTID，然后对比slave端的binlog是否有记录。</li><li>如果有记录，说明该GTID的事务已经执行，slave会忽略。</li><li>如果没有记录，slave就会从relay log中执行该GTID的事务，并记录到binlog。</li></ol><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172254813.png" alt="img"></p><p>流程：</p><ul><li>从库 B 指定主库 A，基于主备协议建立连接。</li><li>从库 B 把集合 y 发给主库 A。</li><li>主库 A 计算出集合 x 和集合 y 的差集，也就是集合 x 中存在，集合 y 中不存在的 GTID 集合。比如集合 x 是 1<del>100，集合 y 是 1</del>90，那么这个差集就是 91~100。这里会判断集合 x 是不是包含有集合 y 的所有 GTID，如果不是则说明主库 A 删除了从库 B 需要的 binlog，主库 A 直接返回错误。</li><li>主库 A 从自己的 binlog 文件里面，找到第一个不在集合 y 中的事务 GTID，也就是找到了 91。</li><li>主库 A 从 GTID = 91 的事务开始，往后读 binlog 文件，按顺序取 binlog，然后发给 B。</li><li>从库 B 的 I/O 线程读取 binlog 文件生成 relay log，SQL 线程解析 relay log，然后执行 SQL 语句。</li></ul><blockquote><p><strong>GTID 方案是通过主库来自动计算位点的，不需要人工去设置位点，对运维人员友好。</strong></p></blockquote><hr><h5 id="12-4-3-部署主从复制（一主一从）"><a href="#12-4-3-部署主从复制（一主一从）" class="headerlink" title="12.4.3 部署主从复制（一主一从）"></a>12.4.3 部署主从复制（一主一从）</h5><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172208619.png" alt="1566361672882"></p><ol><li><strong>MySQL-master和MySQL-slave所有主机都操作</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 准备环境两台机器，关闭防火墙和selinux。两台机器环境必须一致。时间也得一致</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">disable</span> --now firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">  vim /etc/hosts</span></span><br><span class="line">192.168.174.210  mysql-master</span><br><span class="line">192.168.174.211  mysql-slave</span><br><span class="line"></span><br><span class="line">[root@mysql-server ~]# scp /etc/hosts mysql-slave:/etc/hosts</span><br><span class="line">[root@mysql-server ~]# ping mysql-slave</span><br><span class="line">PING mysql-slave (192.168.174.211) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql-slave (192.168.174.211): icmp_seq=1 ttl=64 time=0.524 ms</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 两台机器安装mysql5.7</span></span><br><span class="line">[root@mysql-master ~]# wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">[root@mysql-master ~]# yum -y install mysql-community-server</span><br><span class="line">安装略...</span><br><span class="line">[root@mysql-master ~]# systemctl start mysqld</span><br><span class="line">[root@mysql-master ~]# systemctl enable mysqld</span><br><span class="line">[root@mysql-master ~]# netstat -lntp | grep 3306</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      11669/mysqld</span><br><span class="line">[root@mysql-slave ~]# netstat -lntp | grep 3306</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      11804/mysqld</span><br><span class="line">配置并修改密码</span><br><span class="line">略....</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>MySQL-master01配置操作</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; master操作：</span></span><br><span class="line">[root@mysql-master ~]# vim /etc/my.cnf   #在[mysqld]下添加如下内容</span><br><span class="line">server-id=1   #定义server id master必写 </span><br><span class="line">log-bin=mylog #开启binlog日志，master必写</span><br><span class="line">gtid_mode=ON    #开启gtid</span><br><span class="line">enforce_gtid_consistency=1   #强制gtid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 重启MySQL实例</span></span><br><span class="line">[root@mysql-master ~]# systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>参数解释：</p><ul><li><code>server-id</code>：指定了当前 MySQL 服务器的唯一标识符（Server ID）。每个 MySQL 服务器都必须有一个唯一的 Server ID。在主从复制中，Slave 服务器根据 Master 的 Server ID 来识别来自不同 Master 的数据变更。这个值在整个复制拓扑结构中必须是唯一的。</li><li><code>gtid_mode</code>：启用 GTID 模式。GTID 是用于在分布式数据库系统中唯一标识事务的全局事务标识符。它可以确保主从服务器之间数据一致性，简化配置和管理复制拓扑结构。</li><li><code>enforce_gtid_consistency</code>：开启强制 GTID 一致性。强制所有事务必须使用 GTID 标识，以确保主从服务器之间的数据一致性。如果某个事务没有 GTID 标识，MySQL 将不会执行该事务，并且会记录错误。</li></ul></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 主服务器创建账户：</span></span><br><span class="line">mysql&gt; grant replication  slave,reload,super on *.*  to 'slave'@'%' identified by '1';</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>注意：如果不成功删除以前的binlog日志</code></strong></p><ul><li><code>replication slave</code>：拥有此权限可以查看从服务器，从主服务器读取二进制日志。</li><li><code>super权限</code>：允许用户使用修改全局变量的SET语句以及CHANGE  MASTER语句</li><li><code>reload权限</code>：必须拥有reload权限，才可以执行flush  [tables | logs | privileges]</li></ul></blockquote><ol start="3"><li><strong>MySQL-slave01服务器配置</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 修改从服务器配置</span></span><br><span class="line">[root@mysql-slave ~]# vim /etc/my.cnf  #添加如下配置</span><br><span class="line">server-id=2</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency=1</span><br><span class="line">master-info-repository=TABLE</span><br><span class="line">relay-log-info-repository=TABLE</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 重启MySQL实例</span></span><br><span class="line">[root@mysql-slave ~]# systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>参数解释：</p><ul><li><strong><code>master-info-repository=TABLE</code></strong>：将主服务器信息存储在一个表中，而不是传统的文件中。配置 MySQL 将复制过程中的主服务器信息（如复制位置、主服务器的连接信息等）存储在一个表中（<code>mysql.slave_master_info</code> 表）。这种方式比存储在文件中更加可靠和可管理，尤其是在需要备份和恢复时。</li><li><strong><code>relay-log-info-repository=TABLE</code></strong>：将中继日志信息存储在一个表中，而不是传统的文件中。 配置 MySQL 将复制过程中的中继日志信息（如当前正在处理的中继日志位置等）存储在一个表中（<code>mysql.slave_relay_log_info</code> 表）。与存储在文件中相比，这种方式可以更容易地进行管理和恢复。</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-slave ~]<span class="comment"># mysql -uroot -p'1'   #登陆mysql</span></span><br><span class="line">mysql&gt; \e</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span></span><br><span class="line">master_host=<span class="string">'192.168.174.210'</span>,      <span class="comment"># 主ip 地址  最好用域名</span></span><br><span class="line">master_user=<span class="string">'slave'</span>,     <span class="comment"># 主服务上面创建的用户</span></span><br><span class="line">master_password=<span class="string">'1'</span>,  <span class="comment"># 授权密码</span></span><br><span class="line">master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Query OK, 0 rows affected, 2 warnings (0.02 sec)</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172323035.png" alt></p><blockquote><p>注意：如果使用的克隆机，slave服务器需要先执行<code>mysq&gt; stop slave;</code>，然后删除<code>/var/lib/mysql/auto.cnf</code>UUID文件，然后重启MySQL服务会胜场新的UUID，登录MySQL服务后在执行<code>start slave;</code></p></blockquote><ol start="4"><li><strong>MySQL-slave01主机配置</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> start slave;   <span class="comment">#启动slave角色</span></span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show slave status\G  <span class="comment">#查看状态，验证sql和IO是不是yes。</span></span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407172323578.png" alt="1566370807822"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.174.210</span><br><span class="line">                  Master_User: slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mylog.000001</span><br><span class="line">          Read_Master_Log_Pos: 597</span><br><span class="line">               Relay_Log_File: mysql-slave01-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 802</span><br><span class="line">        Relay_Master_Log_File: mylog.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 597</span><br><span class="line">              Relay_Log_Space: 1017</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: c5552e0d-3ecc-11ef-a940-0050562892cb</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: c5552e0d-3ecc-11ef-a940-0050562892cb:1-2</span><br><span class="line">            Executed_Gtid_Set: c5552e0d-3ecc-11ef-a940-0050562892cb:1-2</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>参数解释：</p><ul><li><strong><code>Slave_IO_State</code></strong>：从服务器 I/O 线程的当前状态。<ul><li><strong>值</strong>: “Waiting for master to send event” 表示从服务器正在等待主服务器发送新的事件。</li></ul></li><li><strong><code>Master_Host</code></strong>：主服务器的主机名或 IP 地址。<ul><li><strong>值</strong>: <code>192.168.174.210</code> 表示主服务器的 IP 地址。</li></ul></li><li><strong><code>Master_User</code></strong>：从服务器用于连接主服务器的用户名。<ul><li><strong>值</strong>: <code>slave</code> 表示用于复制连接的用户。</li></ul></li><li><strong><code>Master_Port</code></strong>：主服务器监听的端口。<ul><li><strong>值</strong>: <code>3306</code> 是 MySQL 的默认端口。</li></ul></li><li><strong><code>Connect_Retry</code></strong>：从服务器重新尝试连接主服务器的时间间隔（以秒为单位）。<ul><li><strong>值</strong>: <code>60</code> 表示每隔 60 秒重新尝试连接。</li></ul></li><li><strong><code>Master_Log_File</code></strong>：从服务器正在读取的主服务器的二进制日志文件。<ul><li><strong>值</strong>: <code>mylog.000001</code> 表示当前正在读取的二进制日志文件。</li></ul></li><li><strong><code>Read_Master_Log_Pos</code></strong>：从服务器在主服务器的二进制日志中的读取位置。<ul><li><strong>值</strong>: <code>597</code> 表示读取到的二进制日志位置。</li></ul></li><li><strong><code>Relay_Log_File</code></strong>：当前正在处理的中继日志文件。<ul><li><strong>值</strong>: <code>mysql-slave01-relay-bin.000002</code> 表示当前的中继日志文件。</li></ul></li><li><strong><code>Relay_Log_Pos</code></strong>：从服务器在中继日志中的当前处理位置。<ul><li><strong>值</strong>: <code>802</code> 表示处理到的中继日志位置。</li></ul></li><li><strong><code>Relay_Master_Log_File</code></strong>：从服务器当前正在处理的主服务器的二进制日志文件。<ul><li><strong>值</strong>: <code>mylog.000001</code> 表示主服务器的二进制日志文件。</li></ul></li><li><strong><code>Slave_IO_Running</code></strong>：从服务器的 I/O 线程状态。<ul><li><strong>值</strong>: <code>Yes</code> 表示 I/O 线程正在运行。</li></ul></li><li><strong><code>Slave_SQL_Running</code></strong>：从服务器的 SQL 线程状态。<ul><li><strong>值</strong>: <code>Yes</code> 表示 SQL 线程正在运行。</li></ul></li><li><strong><code>Last_Errno</code></strong>：SQL 线程遇到的最后一个错误的错误号。<ul><li><strong>值</strong>: <code>0</code> 表示没有错误。</li></ul></li><li><strong><code>Last_Error</code></strong>：SQL 线程遇到的最后一个错误的错误信息。<ul><li><strong>值</strong>: 空白，表示没有错误信息。</li></ul></li><li><strong><code>Exec_Master_Log_Pos</code></strong>：从服务器已执行的主服务器二进制日志的位置。<ul><li><strong>值</strong>: <code>597</code> 表示已执行的位置。</li></ul></li><li><strong><code>Relay_Log_Space</code></strong>：中继日志文件的总大小（以字节为单位）。<ul><li><strong>值</strong>: <code>1017</code> 表示中继日志的大小。</li></ul></li><li><strong><code>Until_Condition</code></strong>： 复制停止的条件。<ul><li><strong>值</strong>: <code>None</code> 表示没有设置停止条件。</li></ul></li><li><strong><code>Seconds_Behind_Master</code></strong>：从服务器落后主服务器的时间（以秒为单位）。<ul><li><strong>值</strong>: <code>0</code> 表示从服务器与主服务器同步。</li></ul></li><li><strong><code>Master_SSL_Allowed</code></strong>：是否允许使用 SSL 连接主服务器。<ul><li><strong>值</strong>: <code>No</code> 表示不使用 SSL。</li></ul></li><li><strong><code>Last_IO_Errno</code></strong>： I/O 线程遇到的最后一个错误的错误号。<ul><li><strong>值</strong>: <code>0</code> 表示没有错误。</li></ul></li><li><strong><code>Last_IO_Error</code></strong>： I/O 线程遇到的最后一个错误的错误信息。<ul><li><strong>值</strong>: 空白，表示没有错误信息。</li></ul></li><li><strong><code>Master_Server_Id</code></strong>：主服务器的 Server ID。<ul><li><strong>值</strong>: <code>1</code> 表示主服务器的唯一标识符。</li></ul></li><li><strong><code>Master_UUID</code></strong>： 主服务器的 UUID（唯一标识符）。<ul><li><strong>值</strong>: <code>c5552e0d-3ecc-11ef-a940-0050562892cb</code> 表示主服务器的 UUID。</li></ul></li><li><strong><code>Master_Info_File</code></strong>：存储主服务器信息的文件或表。<ul><li><strong>值</strong>: <code>mysql.slave_master_info</code> 表示使用表存储主服务器信息。</li></ul></li><li><strong><code>Retrieved_Gtid_Set</code></strong>：从主服务器检索到的 GTID 集合。<ul><li><strong>值</strong>: <code>c5552e0d-3ecc-11ef-a940-0050562892cb:1-2</code> 表示检索到的 GTID 集合。</li></ul></li><li><strong><code>Executed_Gtid_Set</code></strong>： 从服务器已执行的 GTID 集合。<ul><li><strong>值</strong>: <code>c5552e0d-3ecc-11ef-a940-0050562892cb:1-2</code> 表示已执行的 GTID 集合。</li></ul></li><li><strong><code>Auto_Position</code></strong>： 是否启用了自动位置（基于 GTID 的复制）。<ul><li><strong>值</strong>: <code>1</code> 表示启用了 GTID 自动位置。</li></ul></li><li><strong><code>SQL_Delay</code></strong>： SQL 线程的延迟时间。<ul><li><strong>值</strong>: <code>0</code> 表示没有延迟。</li></ul></li><li><strong><code>SQL_Remaining_Delay</code></strong>：SQL 线程的剩余延迟时间。<ul><li><strong>值</strong>: <code>NULL</code> 表示没有延迟。</li></ul></li><li><strong><code>Slave_SQL_Running_State</code></strong>：SQL 线程的当前状态。<ul><li><strong>值</strong>: “Slave has read all relay log; waiting for more updates” 表示从服务器已读取所有中继日志，正在等待更多更新。</li></ul></li><li><strong><code>Master_Retry_Count</code></strong>：主服务器重试连接次数。<ul><li><strong>值</strong>: <code>86400</code> 表示最大重试次数。</li></ul></li></ul></blockquote><ol start="5"><li><strong>MySQL-master01 写入数据测试</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-mater01 mysql]<span class="comment"># mysql -uroot -p'1' -e 'create database test12;'</span></span><br></pre></td></tr></table></figure><ol start="6"><li><strong>MySQL-slave01查看数据是否同步</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-slave01 ~]# mysql -uroot -p'1'  -e 'show databases;'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">| test10             |</span><br><span class="line">| test11             |</span><br><span class="line">| test12             |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p><strong>主从同步完成。</strong></p><blockquote><p> 注意: </p><p>​        在关闭和启动mysql服务的时候按顺序先启动master。可以测试，先将slave库停掉，再停止master库。启动先启动master库，再启动slave库，如果数据没发生改变，也就意味着binlog日志位置没有变化，主从理论上不会失效。</p></blockquote><p><strong>面试题</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql主从，master宕机，如何进行切换？</span><br><span class="line">主机故障或者宕机：</span><br><span class="line"></span><br><span class="line">1)在salve执行：</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> stop slave；</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> reset master；</span></span><br><span class="line">2)查看是否只读模式：show variables like 'read_only';</span><br><span class="line">只读模式需要修改my.cnf文件，注释read-only=1并重启mysql服务。</span><br><span class="line">或者不重启使用命令关闭只读，但下次重启后失效：set global read_only=off;</span><br><span class="line">3)查看show slave status \G;</span><br><span class="line">4)在程序中将原来主库IP地址改为现在的从库IP地址，测试应用连接是否正常</span><br></pre></td></tr></table></figure><h2 id="12-5-主从复制binlog日志方式"><a href="#12-5-主从复制binlog日志方式" class="headerlink" title="12.5 主从复制binlog日志方式"></a>12.5 主从复制binlog日志方式</h2><ol><li><strong>MySQL-master01和MySQL-slave01所有主机配置</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 添加本地解析</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">192.168.246.135    mysql-master</span><br><span class="line">192.168.246.136    mysql-slave</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 两台主机都安装MySQL服务</span></span><br><span class="line">略</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>开始配置主服务</strong></p><p>主服务器上，必须启用二进制日志记录并配置唯一的服务器ID。需要重启服务器。</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-master01 ~]# vim /etc/my.cnf</span><br><span class="line">log-bin=mysql</span><br><span class="line">server-id=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 重启MySQL</span></span><br><span class="line">[root@mysql-master01 ~]# systemctl restart mysqld</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>MySQL-master01创建主从同步用户</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.*  TO  &#39;repl&#39;@&#39;%&#39;  identified by &#39;1&#39;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>MySQL-master01查看二进制日志偏移量</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211428585.png" alt="img"></p><ol start="5"><li><strong>MySQL-slave01配置server-id</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 修改MySQL主配置文件</span></span><br><span class="line">[root@mysql-slave01 ~]# vim /etc/my.cnf</span><br><span class="line">server-id=2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 重启服务</span></span><br><span class="line">[root@mysql-slave ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 添加主从同步用户</span></span><br><span class="line">[root@mysql-slave ~]# mysql -uroot -p'1'</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> \e</span></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST='mysql-master01',   # MySQL-master01主机地址</span><br><span class="line">MASTER_USER='repl',           # 主动同步用户</span><br><span class="line">MASTER_PASSWORD='1',  # 密码</span><br><span class="line">MASTER_LOG_FILE='mysql.000001',  # 二进制文件名称</span><br><span class="line">MASTER_LOG_POS=581;           # 二进制日志文件偏移量</span><br><span class="line">    -&gt; ;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动从服务器</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> start slave;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看主从同步状态</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show slave status\G</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211437630.png" alt="img"></p><ol start="6"><li><strong>MySQL-master01创建测试数据</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database testdb;   <span class="comment">#创建一个库</span></span></span><br><span class="line">Query OK, 1 row affected (0.10 sec)</span><br></pre></td></tr></table></figure><p>故障排错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### UUID一致，导致主从复制I/O线程不是yes</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different <span class="keyword">for</span> replication to work</span></span><br><span class="line"></span><br><span class="line">致命错误：由于master和slave具有相同的mysql服务器uuid，导致I/O线程不进行；这些uuid必须不同才能使复制工作。</span><br><span class="line"></span><br><span class="line">问题提示主从使用了相同的server UUID，一个个的检查：</span><br><span class="line"></span><br><span class="line">检查主从server_id</span><br><span class="line"></span><br><span class="line">主库：</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash">  show variables like <span class="string">'server_id'</span>;</span></span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 1     |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">从库：</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash">  show variables like <span class="string">'server_id'</span>;</span></span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 2     |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">server_id不一样，排除。</span><br><span class="line"></span><br><span class="line">检查主从状态：</span><br><span class="line"></span><br><span class="line">主库：</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show master status;</span></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000001 |      154 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">从库：</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show master status;</span></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000001 |      306 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">File一样，排除。</span><br><span class="line"></span><br><span class="line">最后检查发现他们的auto.cnf中的server-uuid是一样的。。。</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vim /var/lib/mysql/auto.cnf</span><br><span class="line"></span><br><span class="line">[auto]</span><br><span class="line"></span><br><span class="line">server-uuid=4f37a731-9b79-11e8-8013-000c29f0700f</span><br><span class="line"></span><br><span class="line">修改uuid并重启服务</span><br></pre></td></tr></table></figure><h2 id="12-6-基于Gtid日志方式实现互为主从"><a href="#12-6-基于Gtid日志方式实现互为主从" class="headerlink" title="12.6 基于Gtid日志方式实现互为主从"></a>12.6 基于Gtid日志方式实现互为主从</h2><ol><li>MySQL-master01和MySQL-slave01操作</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 修改MySQL-slave01主机名</span></span><br><span class="line">[root@mysql-slave01 ~]<span class="comment"># hostnamectl  set-hostname mysql-master02</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 两台主机修改本地解析</span></span><br><span class="line">$ vim /etc/hosts</span><br><span class="line">192.168.174.210  mysql-master01</span><br><span class="line">192.168.174.211  mysql-master02</span><br></pre></td></tr></table></figure><ol start="2"><li>MySQL-master01 配置文件修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; MySQL配置文件修改</span></span><br><span class="line">[root@mysql-master01 ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">server-id=1   <span class="comment">#定义server id master必写 </span></span><br><span class="line"><span class="built_in">log</span>-bin=mylog <span class="comment">#开启binlog日志，master必写</span></span><br><span class="line">gtid_mode=ON    <span class="comment">#开启gtid</span></span><br><span class="line">enforce_gtid_consistency=1   <span class="comment">#强制gtid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启MySQL实例</span></span><br><span class="line">[root@mysql-master01 ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><ol start="3"><li>MySQL-master01 创建主从复制用户</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建同步用户</span></span><br><span class="line">mysql&gt; grant replication  slave,reload,super on *.*  to 'slave'@'%' identified by '1';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt;  flush privileges;</span><br></pre></td></tr></table></figure><ol start="4"><li>MySQL-master01备份数据（可选）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-master01 ~]<span class="comment"># mysqldump -p'1' --all-databases --single-transaction --master-data=2 --flush-logs &gt; `date +%F-%H`-mysql-all.sql</span></span><br><span class="line"></span><br><span class="line">[root@mysql-master01 ~]<span class="comment"># scp 2024-07-21-21-mysql-all.sql  mysql-master02:~</span></span><br></pre></td></tr></table></figure><ol start="5"><li><strong>MySQL-master02 配置文件修改</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; MySQL配置文件修改</span></span><br><span class="line">[root@mysql-master02 ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">server-id=2   <span class="comment">#定义server id master必写 </span></span><br><span class="line"><span class="built_in">log</span>-bin=mylog <span class="comment">#开启binlog日志，master必写</span></span><br><span class="line">gtid_mode=ON    <span class="comment">#开启gtid</span></span><br><span class="line">enforce_gtid_consistency=1   <span class="comment">#强制gtid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启MySQL实例</span></span><br><span class="line">[root@mysql-master02 ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><ol start="6"><li><strong>MySQL-master02配置同步用户</strong></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; \e</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span></span><br><span class="line">master_host=<span class="string">'192.168.174.210'</span>,      <span class="comment"># 主ip 地址  最好用域名</span></span><br><span class="line">master_user=<span class="string">'slave'</span>,     <span class="comment"># 主服务上面创建的用户</span></span><br><span class="line">master_password=<span class="string">'1'</span>,  <span class="comment"># 授权密码</span></span><br><span class="line">master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动slave</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看复制状态</span></span><br><span class="line">mysql&gt; show slave status;</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212152795.png" alt="img"></p><ol start="7"><li><strong>MySQL-master01 插入测试数据</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 测试</span></span><br><span class="line">mysql&gt; create database test20;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="8"><li><strong>MySQL-master02 查看是否同步</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">| test20             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>同步完成，一主一从搭建完成</p></blockquote><hr><ol><li><strong>MySQL-master02操作</strong></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 创建同步用户</span></span><br><span class="line">mysql&gt; grant replication  slave,reload,super on *.*  to 'slave'@'%' identified by '1';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 刷新权限</span></span><br><span class="line">mysql&gt;  flush privileges;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>MySQL-master01操作</strong></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; \e</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span></span><br><span class="line">master_host=<span class="string">'192.168.174.211'</span>,</span><br><span class="line">master_user=<span class="string">'slave'</span>,</span><br><span class="line">master_password=<span class="string">'1'</span>,</span><br><span class="line">master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动slave</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看slave状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212200417.png" alt="img"></p><ol start="3"><li><strong>MySQL-master02 插入测试数据</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database test30;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>MySQL-master01 查看是否同步</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| test30             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">10 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>MySQL-master01 插入测试数据</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database test31;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="6"><li><strong>MySQL-master02 查看是否同步数据</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| test30             |</span><br><span class="line">| test31             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">12 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>提示：如果MySQL-master01同步状态不佳，重启一下MySQL-master02的mysqld，再去master2上。启动和停止从属状态。<br>start slave;<br>stop slave;</p></blockquote><h2 id="12-7-基于GTID实现双主双从"><a href="#12-7-基于GTID实现双主双从" class="headerlink" title="12.7 基于GTID实现双主双从"></a>12.7 基于GTID实现双主双从</h2><p><strong><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/1.png" class></strong></p><ol><li>所有主机修改本地解析</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/hosts</span><br><span class="line">192.168.174.210 mysql-master01</span><br><span class="line">192.168.174.211 mysql-master02</span><br><span class="line">192.168.174.212 mysql-slave01</span><br><span class="line">192.168.174.213 mysql-slave02</span><br></pre></td></tr></table></figure><ol start="2"><li>MySQL-master01配置文件配置</li></ol><p>​        略</p><ol start="3"><li>MySQL-master01 创建同步用户</li></ol><p>​        略</p><ol start="4"><li>MySQL-master02 配置文件修改</li></ol><p>​        略</p><ol start="5"><li>MySQL-master02 创建同步用户</li></ol><p>​        略</p><ol start="6"><li>MySQL-master01和MySQL-master02实现互为主从</li></ol><p>​        略</p><ol start="7"><li>MySQL-slave01配置文件修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-slave01 ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">server-id=3</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency=1</span><br><span class="line">master-info-repository=TABLE</span><br><span class="line">relay-log-info-repository=TABLE</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启mysql实例</span></span><br><span class="line">[root@mysql-slave01 ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><ol start="8"><li>MySQL-slave02配置文件修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-slave01 ~]<span class="comment"># vim /etc/my.cnf</span></span><br><span class="line">server-id=4</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency=1</span><br><span class="line">master-info-repository=TABLE</span><br><span class="line">relay-log-info-repository=TABLE</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 重启mysql实例</span></span><br><span class="line">[root@mysql-slave01 ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><ol start="9"><li>MySQL-master01 备份所有数据</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -p<span class="string">'1'</span> --all-databases --single-transaction --master-data=2  --flush-logs &gt; `date +%F`-mysql-all.sql</span><br></pre></td></tr></table></figure><ol start="10"><li>MySQL-master01将备份数据传输至MySQL-slave01和MySQL-slave02</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-master01 ~]<span class="comment"># scp 2024-07-21-mysql-all.sql  mysql-slave01:~</span></span><br><span class="line"></span><br><span class="line">[root@mysql-master01 ~]<span class="comment"># scp 2024-07-21-mysql-all.sql  mysql-slave02:~</span></span><br></pre></td></tr></table></figure><ol start="11"><li>MySQL-slave导入数据</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-slave01 ~]<span class="comment"># mysql -p'1' &lt; 2024-07-21-mysql-all.sql </span></span><br><span class="line"></span><br><span class="line">[root@mysql-slave02 ~]<span class="comment"># mysql -p'1' &lt; 2024-07-21-mysql-all.sql</span></span><br></pre></td></tr></table></figure><ol start="12"><li>MySQL-slave01 配置同步用户信息</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 将MySQL-master01设为主节点</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host='mysql-master01',</span><br><span class="line">master_user='slave',</span><br><span class="line">master_password='1',</span><br><span class="line">master_auto_position=1 for channel 'mysql-master01';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将MySQL-master02设为主节点</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host='mysql-master02',</span><br><span class="line">master_user='slave',</span><br><span class="line">master_password='1',</span><br><span class="line">master_auto_position=1 for channel 'mysql-master02';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动slave</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看slave状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212234050.png" alt="img"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212234774.png" alt="img"></p><blockquote><p>提示：<code>FOR CHANNEL &#39;mysql-master01&#39;</code>：指定复制通道的名称。</p><p><code>&#39;mysql-master1&#39;</code>：通道名称。MySQL 支持多源复制（即一个从服务器可以从多个主服务器复制数据），每个通道可以用于不同的主服务器。此选项用于多源复制环境中，标识具体的复制通道。</p></blockquote><ol start="13"><li>MySQL-slave02 配置同步用户信息</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 将MySQL-master01设为主节点</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host='mysql-master01',</span><br><span class="line">master_user='slave',</span><br><span class="line">master_password='1',</span><br><span class="line">master_auto_position=1 for channel 'mysql-master01';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 将MySQL-master02设为主节点</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">master_host='mysql-master02',</span><br><span class="line">master_user='slave',</span><br><span class="line">master_password='1',</span><br><span class="line">master_auto_position=1 for channel 'mysql-master02';</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 启动slave</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 查看slave状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212239073.png" alt="img"></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407212239236.png" alt="img"></p><ol start="14"><li>MySQL-mater01插入测试数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database test32;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="15"><li>MySQL-master02 查看同步数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">| test30             |</span><br><span class="line">| test31             |</span><br><span class="line">| test32             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">13 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ol start="16"><li>MySQL-slave01 查看同步数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">| test30             |</span><br><span class="line">| test31             |</span><br><span class="line">| test32             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">12 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ol start="17"><li>MySQL-slave02 查看同步数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| emp01              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| study              |</span><br><span class="line">| sys                |</span><br><span class="line">| test30             |</span><br><span class="line">| test31             |</span><br><span class="line">| test32             |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">12 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h2 id="17-8-MySQL主从复制面试题"><a href="#17-8-MySQL主从复制面试题" class="headerlink" title="17.8 MySQL主从复制面试题"></a>17.8 MySQL主从复制面试题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 如何查看MySQL主从之间的数据延迟多大？</span><br><span class="line">答： 使用`SHOW SLAVE STATUS\G`查看`Seconds_Behind_Master`延迟时间。</span><br><span class="line"></span><br><span class="line">2. 如何解决主从数据没有一致的问题？</span><br><span class="line">答：首先，使用 SHOW SLAVE STATUS\G 命令检查从服务器的复制状态，关注以下关键字段：</span><br><span class="line">`Slave_IO_Running` 和 `Slave_SQL_Running：`都应为 Yes。`Last_IO_Error `和 `Last_SQL_Error`：应为空。`Seconds_Behind_Master：`应尽量接近于 0。如果主从数据延迟过大，推荐主机进行备份，从机导入数据。采用GTID模式（全局事务标识符）。可以使用 pt-table-checksum 和 pt-table-sync 工具查找主库和从库的不一致数据，并恢复。</span><br></pre></td></tr></table></figure><h1 id="十三、读写分离"><a href="#十三、读写分离" class="headerlink" title="十三、读写分离"></a>十三、读写分离</h1><h2 id="13-1-什么是读写分离"><a href="#13-1-什么是读写分离" class="headerlink" title="13.1 什么是读写分离"></a><strong>13.1 什么是读写分离</strong></h2><p>​    <strong>在数据库集群架构中，让主库负责处理写入操作，而从库只负责处理select查询，让两者分工明确达到提高数据库整体读写性能。</strong>当然，主数据库另外一个功能就是负责将数据变更同步到从库中，也就是写操作。</p><h2 id="13-2-读写分离的好处"><a href="#13-2-读写分离的好处" class="headerlink" title="13.2 读写分离的好处"></a>13.2 读写分离的好处</h2><ol><li>分摊服务器压力，提高机器的系统处理效率</li><li>在写入不变，大大分摊了读取，提高了系统性能。另外，当读取被分摊后，又间接提高了写入的性能。所以，总体性能提高了。</li><li>增加冗余，提高服务可用性，当一台数据库服务器宕机后可以调整另外一台从库以最快速度恢复服务</li></ol><h2 id="13-3-MySQL中间件"><a href="#13-3-MySQL中间件" class="headerlink" title="13.3 MySQL中间件"></a>13.3 MySQL中间件</h2><p>Mycat 是“一个开源的数据库系统”，但是由于真正的数据库需要存储引擎，而 Mycat 并没有存 储引擎，所以并不是完全意义的数据库系统。 那么 Mycat 是什么？<strong>Mycat 是数据库中间件，就是介于数据库与应用之间，进行数据处理与交互的中间服务；是实现对主从数据库的读写分离、读的负载均衡。</strong></p><p><strong>常见的数据库中间件:</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407222206699.png" alt="1566542554311"></p><h2 id="13-4-Mycat部署"><a href="#13-4-Mycat部署" class="headerlink" title="13.4 Mycat部署"></a>13.4 Mycat部署</h2><p>MyCAT 是使用 JAVA 语言进行编写开发，使用前需要先安装 JAVA 运行环境(JRE),由于 MyCAT 中使用了 JDK7 中的一些特性，所以要求必须在 JDK7 以上的版本上运行。</p><ol><li><strong>所有主机本地解析</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mycat ~]# vim /etc/hosts</span><br><span class="line">192.168.174.210  mysql-master01</span><br><span class="line">192.168.174.211  mysql-slave01</span><br><span class="line">192.168.174.215  mycat</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>架构</strong></li></ol><p>这里是在mysql主从复制实现的基础上，利用mycat做读写分离，架构图如下</p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407222206470.png" alt="image-20200820164322240"></p><p><strong><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/2.png" class></strong></p><ol start="3"><li><strong>安装jdk</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 解压安装包</span></span><br><span class="line">[root@mycat ~]# tar xzf jdk-8u221-linux-x64.tar.gz -C /usr/local/ &amp;&amp; cd /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 更改目录名称</span></span><br><span class="line">[root@mycat local]# mv jdk1.8.0_221/ java </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 设置全局环境变量</span></span><br><span class="line">[root@mycat local]# vim /etc/profile.d/jdk.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME  PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 重新加载</span></span><br><span class="line">[root@mycat local]# source /etc/profile.d/jdk.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 测试服务</span></span><br><span class="line">[root@mycat local]# java -version</span><br><span class="line">java version "1.8.0_211"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">[root@mycat local]# echo $PATH</span><br><span class="line">/usr/local/java/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>部署MyCat</strong></li></ol><p><img src="https://mmbiz.qpic.cn/mmbiz_png/MOHJlLCIdeMhUMIrHyFh7twcAQppt0hSSvpicaU51nib3iaiato5libwsFPgfmhibHqcx1x2lwaxncCwq8cIMcpw9jxg/640?wx_fmt=png&wxfrom=13&tp=wxpic" alt="图片"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 下载</span></span><br><span class="line">[root@mycat ~]# wget http://dl.mycat.io/1.6.5/Mycat-server-1.6.5-release-20180122220033-linux.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 解压</span></span><br><span class="line">[root@mycat ~]# tar xf Mycat-server-1.6.5-release-20180122220033-linux.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>配置mycat前端</strong><code>server.xml</code><br><strong><img src="/2024/07/23/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FMysql/3.png" class></strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyCAT 目前主要通过配置文件的方式来定义逻辑库和相关配置:</span><br><span class="line"></span><br><span class="line">[root@mycat conf]# vim  /usr/local/mycat/conf/server.xml</span><br></pre></td></tr></table></figure><blockquote><p>该文件定义用户以及系统相关变量，如端口等。其中用户信息是前端应用程序连接 mycat 的用户信息</p></blockquote><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211609013.png" alt="img"></p><p><strong>将此5行配置注释：Mycat提供两个账号，一个管理员，一个普通用户，将普通用户配置信息注释</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211610848.png" alt="img"></p><p><strong>配置MyCat超级管理员用户</strong></p><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211619119.png" alt="image-20240721161923051"></p><blockquote><p><code>name=&quot;root&quot;</code> : Mycat超级管理员用户名<br><code>name=&quot;password&quot;&gt;123456&lt;</code>：MyCat超级管理员密码。默认：123456<br><code>name=&quot;schemas&quot;&gt;maoxiansheng&lt;</code>：默认前端展示数据库 ,<strong>当用户访问时默认展示的库；但不代表后端数据库真正有这个数据库。</strong></p></blockquote><ol start="6"><li><p><strong>MyCat后端配置</strong><code>schema.xml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&gt;&gt;&gt; 备份数据文件</span></span><br><span class="line">[root@mycat conf]<span class="comment"># cp /usr/local/mycat/conf/schema.xml /root </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt;&gt;&gt; 修改后端配置文件</span></span><br><span class="line">[root@mycat ~]<span class="comment"># vim /usr/local/mycat/conf/schema.xml</span></span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407211703353.png" alt="image-20240721170303264"></p></li></ol><p><strong>两主两从从配置文件如下：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mycat</span>:schema <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"schema.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">"http://io.mycat/"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">"maoxiansheng"</span> <span class="attr">checkSQLschema</span>=<span class="string">"false"</span> <span class="attr">sqlMaxLimit</span>=<span class="string">"100"</span> <span class="attr">dataNode</span>=<span class="string">"dn1"</span> &gt;</span><span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"dn1"</span> <span class="attr">dataHost</span>=<span class="string">"localhost1"</span> <span class="attr">database</span>=<span class="string">"maoxiansheng"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">"localhost1"</span> <span class="attr">maxCon</span>=<span class="string">"1000"</span> <span class="attr">minCon</span>=<span class="string">"10"</span> <span class="attr">balance</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">writeType</span>=<span class="string">"0"</span> <span class="attr">dbType</span>=<span class="string">"mysql"</span> <span class="attr">dbDriver</span>=<span class="string">"native"</span> <span class="attr">switchType</span>=<span class="string">"1"</span>  <span class="attr">slaveThreshold</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"mysql-master01"</span> <span class="attr">url</span>=<span class="string">"192.168.174.210:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"mysql-slave01"</span> <span class="attr">url</span>=<span class="string">"192.168.174.212:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"mysql-slave02"</span> <span class="attr">url</span>=<span class="string">"192.168.174.213:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span> /&gt;</span>                       <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"mysql-master02"</span> <span class="attr">url</span>=<span class="string">"192.168.174.211:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"mysql-slave01"</span> <span class="attr">url</span>=<span class="string">"192.168.174.212:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"mysql-slave02"</span> <span class="attr">url</span>=<span class="string">"192.168.174.213:3306"</span> <span class="attr">user</span>=<span class="string">"mycatproxy"</span> <span class="attr">password</span>=<span class="string">"1"</span> /&gt;</span>                       <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以下是配置文件中的每个部分的配置块儿</p><p><strong>逻辑库和分表设置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;schema name&#x3D;&quot;maoxiansheng&quot;           &#x2F;&#x2F; 逻辑库名称,与server.xml的一致</span><br><span class="line">        checkSQLschema&#x3D;&quot;false&quot;    &#x2F;&#x2F; 不检查sql</span><br><span class="line">        sqlMaxLimit&#x3D;&quot;100&quot;         &#x2F;&#x2F; 最大连接数</span><br><span class="line">        dataNode&#x3D;&quot;dn1&quot;&gt;        &#x2F;&#x2F;  数据节点名称       </span><br><span class="line">&lt;&#x2F;schema&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>name=&quot;maoxiansheng&quot;</code>：定义了 MyCAT 中的逻辑库名为 <code>maoxiansheng</code>。</p><p><code>checkSQLschema=&quot;false&quot;</code>：禁用 SQL 语句中的 schema 校验。关闭后端MySQL库的校验，不需要。</p><p><code>sqlMaxLimit=&quot;100&quot;</code>：限制单次查询返回的最大行数为 100。俗称最大连接数。</p><p><code>dataNode=&quot;dn1&quot;</code>：指定该逻辑库的数据节点为 <code>dn1</code>。</p></blockquote><p><strong>数据节点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;dataNode name&#x3D;&quot;dn1&quot;             &#x2F;&#x2F; 此数据节点的名称</span><br><span class="line">          dataHost&#x3D;&quot;localhost1&quot;     &#x2F;&#x2F; 主机组虚拟的</span><br><span class="line">          database&#x3D;&quot;maoxiansheng&quot; &#x2F;&gt;  &#x2F;&#x2F; 真实的数据库名称</span><br></pre></td></tr></table></figure><blockquote><p><code>name=&quot;dn1&quot;</code>：定义数据节点的名称为 <code>dn1</code>。和前端的数据架构中的<code>dataNode=&quot;dn1&quot;</code>进行关联。</p><p><code>dataHost=&quot;localhost1&quot;</code>：指定虚拟数据节点组为 <code>localhost1</code>。</p><p><code>database=&quot;maoxiansheng&quot;</code>：指定在 <code>localhost1</code> 主机上的实际数据库名为 <code>maoxiansheng</code>。</p></blockquote><p><strong>主机组</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dataHost name&#x3D;&quot;localhost1&quot;                       &#x2F;&#x2F; 主机组</span><br><span class="line">          maxCon&#x3D;&quot;1000&quot; minCon&#x3D;&quot;10&quot;               &#x2F;&#x2F; 连接</span><br><span class="line">          balance&#x3D;&quot;1&quot;                             &#x2F;&#x2F; 负载均衡</span><br><span class="line">          writeType&#x3D;&quot;0&quot;                           &#x2F;&#x2F; 写模式配置</span><br><span class="line">          dbType&#x3D;&quot;mysql&quot; dbDriver&#x3D;&quot;native&quot;        &#x2F;&#x2F; 数据库配置</span><br><span class="line">          switchType&#x3D;&quot;1&quot;  slaveThreshold&#x3D;&quot;100&quot;&gt;</span><br><span class="line">&lt;!--这里可以配置关于这个主机组的成员信息，和针对这些主机的健康检查语句--&gt;</span><br><span class="line">&lt;&#x2F;dataHost&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>name=&quot;localhost1&quot;</code>：定义数据主机的名称为 <code>localhost1</code>。需要和<code>dataNode中的dataHost名称保持一致，与之关联。</code></p><p><code>maxCon=&quot;1000&quot;</code>：指定该后端数据主机的最大连接数为 1000。</p><p><code>minCon=&quot;10&quot;</code>：指定该数据主机的最小连接数为 10。</p><p><code>balance=&quot;0&quot;</code>：负载均衡策略，<code>0</code> 表示不启用。</p><p><code>writeType=&quot;0&quot;</code>：写操作的类型，<code>0</code> 表示主库写入。</p><p><code>dbType=&quot;mysql&quot;</code>：数据库类型为 MySQL。</p><p><code>dbDriver=&quot;native&quot;</code>：使用 MySQL 原生驱动。</p><p><code>switchType=&quot;1&quot;</code>：主从切换策略（切换类型），<code>1</code> 表示自动切换。根据延迟时间自动切换。</p><p><code>slaveThreshold=&quot;100&quot;</code>：从库的负载阈值100毫秒，超过这个时间范围则自动切换。</p></blockquote><p><code>balance 属性</code>负载均衡类型,目前的取值有 3 种:</p><ol><li><strong>balance=”0”：</strong> 不开启读写分离机制,所有读操作都发送到当前可用的 writeHost 上。</li><li><strong>balance=”1”</strong>：全部的 readHost 与  writeHost 参与 select 语句的负载均衡,简单的说,当双主双从模式(M1-&gt;S1,M2-&gt;S2,并且 M1 与 M2 互为主备),正常情况下,M2,S1,S2 都参与 select 语句的负载均衡。</li><li><strong>balance=”2”：</strong> 所有读操作都随机的在 writeHost、readhost 上分发。</li><li><strong>balance=”3”：</strong> 所有读请求随机的分发到 wiriterHost 对应的 readhost 执行,writerHost 不负担读压力, 注意 balance=3 只在 1.4 及其以后版本有,1.3 没有。</li></ol><p><code>writeType 属性</code>负载均衡类型</p><ol><li><strong>writeType=”0”：</strong> 所有写操作发送到配置的第一个 writeHost,第一个挂了切换到还生存的第二个writeHost,重新启动后已切换后的为准.</li><li><strong>writeType=”1”：</strong>所有写操作都随机的发送到配置的 writeHost,版本1.5 以后废弃不推荐。</li></ol><p><strong>健康检查</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;heartbeat&gt;select user()&lt;&#x2F;heartbeat&gt;#对后端数据进行检测，执行一个sql语句，user()内部函数</span><br></pre></td></tr></table></figure><p><strong>读写配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;writeHost host&#x3D;&quot;hostM1&quot; url&#x3D;&quot;192.168.246.135:3306&quot; user&#x3D;&quot;mycat&quot; password&#x3D;&quot;ldq@12345!&quot;&gt;</span><br><span class="line">                        &lt;!-- can have multi read hosts --&gt;</span><br><span class="line">&lt;readHost host&#x3D;&quot;hostS2&quot; url&#x3D;&quot;192.168.246.136:3306&quot; user&#x3D;&quot;mycat&quot; password&#x3D;&quot;ldq@12345!&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;writeHost&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>&lt;writeHost&gt;</code></p><p><code>host=&quot;mysql-master01&quot;</code>：定义主库的名称为 <code>mysql-master01</code>。</p><p><code>url=&quot;192.168.174.210:3306&quot;</code>：主库的连接地址。</p><p><code>user=&quot;mycat&quot;</code>：用于连接主库的用户名。</p><p><code>password=&quot;1&quot;</code>：用于连接主库的密码。</p><hr><p><code>&lt;readHost&gt;</code></p><p><code>host=&quot;mysql-slave01&quot;</code>：定义从库的名称为 <code>mysql-slave01</code>。</p><p><code>url=&quot;192.168.174.211:3306&quot;</code>：从库的连接地址。</p><p><code>user=&quot;mycat&quot;</code>：用于连接从库的用户名。</p><p><code>password=&quot;1&quot;</code>：用于连接从库的密码。</p></blockquote><ol start="7"><li><strong>在真实的MySQL-master01 数据库上给用户授权</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to &#39;mycatproxy&#39;@&#39;%&#39; identified by &#39;1&#39;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><ol start="8"><li><strong>在mycat的机器上面测试mycatproxy用户登录：</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 安装mysql的客户端：</span></span><br><span class="line">[root@mycat ~]# yum install -y mysql</span><br><span class="line">[root@mycat ~]# mysql -umycatproxy -p'1' -h mysql-master</span><br></pre></td></tr></table></figure><ol start="9"><li><strong>启动Mycat</strong>：启动之前需要调整JVM</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; jvm调优</span></span><br><span class="line">[root@mycat mycat]# cd conf/</span><br><span class="line">[root@mycat conf]# vim wrapper.conf  #在设置JVM哪里添加如下内容</span><br><span class="line">wrapper.startup.timeout=300 //超时时间300秒 </span><br><span class="line">wrapper.ping.timeout=120</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 启动mycat</span></span><br><span class="line">[root@mycat conf]# /usr/local/mycat/bin/mycat start     #需要稍微等待一会</span><br><span class="line">Starting Mycat-server...</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看mycat是否启动</span></span><br><span class="line">[root@mycat ~]# jps   </span><br><span class="line">13377 WrapperSimpleApp</span><br><span class="line">13431 Jps</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 查看mycat端口</span></span><br><span class="line">[root@mycat ~]# netstat -lntp | grep java</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407230043071.png" alt="1566551127109"></p><ol start="10"><li>MySQL-master01 创建测试数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database maoxiansheng;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="11"><li>测试mycat<code>（mysql-master01节点测试）</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">&gt;&gt;&gt; 将master当做mycat的客户端</span></span><br><span class="line">[root@mysql-master01 ~]# mysql -uroot -p123456 -P 8066 -h mycat</span><br></pre></td></tr></table></figure><p><img src="https://hjmimage.oss-cn-zhangjiakou.aliyuncs.com/202407230046635.png" alt="img"></p><ol start="12"><li><strong>连接mycat输入测试语句</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use maoxiansheng;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">Empty <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> t1(<span class="keyword">id</span> <span class="built_in">int</span>);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t1(id) values(1);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from t1;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ol start="13"><li>MySQL-slave01 查看数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from maoxiansheng.t1;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| id   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">|    1 |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><blockquote><p>测试成功</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果在show table报错：</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;</span></span><br><span class="line">ERROR 3009 (HY000): java.lang.IllegalArgumentException: Invalid DataSource:0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">解决方式：</span><br><span class="line">登录master服务将mycat的登录修改为%</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> update user <span class="built_in">set</span> Host = <span class="string">'%'</span> <span class="built_in">where</span> User = <span class="string">'mycat'</span> and Host = <span class="string">'localhost'</span>;</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line">或者在授权用户mycat权限为*.*</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="MySQL" scheme="https://l66stbz.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>WEB服务器</title>
    <link href="https://l66stbz.github.io/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://l66stbz.github.io/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-07-05T13:00:00.000Z</published>
    <updated>2024-07-05T11:57:08.225Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WEB服务器"><a href="#WEB服务器" class="headerlink" title="WEB服务器"></a>WEB服务器</h1><h3 id="WEB服务简介"><a href="#WEB服务简介" class="headerlink" title="WEB服务简介"></a>WEB服务简介</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 目前最主流的三个Web服务器是Apache、Nginx、 IIS。</span></span><br><span class="line">Apache</span><br><span class="line">开源</span><br><span class="line">支持各种操作系统</span><br><span class="line">具有高度可定制性。成熟稳定，用户庞大和文档资源丰富。</span><br><span class="line">nginx</span><br><span class="line">高性能高并发</span><br><span class="line">低内存消耗和高可扩展性</span><br><span class="line">配置简洁、灵活，易于学习和使用。</span><br><span class="line">本身只能处理静态文件服务，要处理动态内容需要配合其他工具。</span><br><span class="line">iis</span><br><span class="line">支持多种 Web 技术和开发语言</span><br><span class="line">在 Windows 平台上具有良好的性能和稳定性</span><br><span class="line">==================================================================================================</span><br><span class="line">- Web服务器一般指网站服务器，可以向浏览器等Web客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。</span><br><span class="line">- WEB服务器也称为WWW(WORLD WIDE WEB)服务器，主要功能是提供网上信息浏览服务。</span><br><span class="line">- 服务器是一种被动程序只有当Internet上运行其他计算机中的浏览器发出的请求时，服务器才会响应</span><br></pre></td></tr></table></figure><h3 id="WEB-服务协议-CA中心"><a href="#WEB-服务协议-CA中心" class="headerlink" title="WEB 服务协议    CA中心"></a>WEB 服务协议    CA中心</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> WEB 服务应用层使用HTTP协议(超文本传输协议)。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> HTML（标准通用标记语言下的一个应用）文档格式。--index.html</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 浏览器统一资源定位器（URL）。 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 为了解决HTTP协议的这一缺陷，需要使用另一种协议：安全套接字层超文本传输协议HTTPS。为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WWW 采用的是浏览器/服务器结构</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web服务器只能解析静态页面。 动态页面:只要和数据库进行连接的都属于动态页面，比如java写的代码，PHP的代码，python的代码。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web服务器:apache (参考服务器配置、优化。静态并发量最高2000) nginx(tengine) IIS  #端口全部为80!https为443端口</span><br></pre></td></tr></table></figure><h3 id="Web-中间件"><a href="#Web-中间件" class="headerlink" title="Web 中间件"></a>Web 中间件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">常见的web中间件也叫web容器:</span><br><span class="line">php的中间件: php-fpm(php端口9000)</span><br><span class="line">java的中间件: (tomcat端口8080。并发量到150就不行了)、jboss、Weblogic</span><br><span class="line">python: uwsgi(默认端口5000)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前端页面:静态元素: .html .img js css swf 配合:apache、nginx。</span><br><span class="line">后端页面:动态元素:根据不同的开发语言: .php .jsp  配合：java、php、python</span><br><span class="line">SQL</span><br><span class="line">数据库-mysql、mariadb</span><br></pre></td></tr></table></figure><h2 id="Apache-服务的搭建与配置"><a href="#Apache-服务的搭建与配置" class="headerlink" title="Apache 服务的搭建与配置"></a>Apache 服务的搭建与配置</h2><h3 id="Apache-介绍-httpd服务"><a href="#Apache-介绍-httpd服务" class="headerlink" title="Apache 介绍   httpd服务"></a>Apache 介绍   httpd服务</h3><p>Apache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，Apache是世界使用排名第一的Web服务器软件。它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的Web服务器端软件之一。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apache的主程序名叫httpd。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">多实例: 在同一台服务器上启动多个相同apache进程。只要端口不一样就可以。</span><br></pre></td></tr></table></figure><h3 id="apache安装"><a href="#apache安装" class="headerlink" title="apache安装"></a>apache安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld</span><br><span class="line">[root@localhost ~]# setenforce 0</span><br><span class="line">[root@localhost ~]# yum install -y httpd</span><br><span class="line">[root@localhost ~]# systemctl start httpd</span><br><span class="line">[root@localhost ~]# systemctl status httpd</span><br><span class="line">[root@localhost ~]# netstat -lntp | grep 80 #查看apache端口</span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      2776/httpd</span><br><span class="line"><span class="meta">#</span><span class="bash">端口80.可以改</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.html:默认主页名称</span><br><span class="line">默认发布网站的目录:/var/www/html</span><br></pre></td></tr></table></figure><h4 id="apache目录介绍"><a href="#apache目录介绍" class="headerlink" title="apache目录介绍"></a>apache目录介绍</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apache的工作目录(基准目录)</span><br><span class="line">conf   存储配置文件</span><br><span class="line">conf.d 存储配置子文件</span><br><span class="line">logs   存储日志 </span><br><span class="line">modules 存储模块</span><br><span class="line">run    存储Pid文件,存放的pid号码。是主进程号</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">认识主配置文件:    192.168.200.10:80/</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/httpd/conf/httpd.conf </span></span><br><span class="line">ServerRoot "/etc/httpd"             #工作目录</span><br><span class="line">Listen 80                           #监听端口，端口改了不能用两个原因：1、selinux防火墙没关2、端口被占用</span><br><span class="line">Listen 192.168.2.8:80 指定监听的本地网卡 可以修改</span><br><span class="line">User apache        # 子进程的用户，有可能被人改称www账户</span><br><span class="line">Group apache   # 子进程的组</span><br><span class="line">ServerAdmin root@localhost  # 设置管理员邮件地址</span><br><span class="line">DocumentRoot "/var/www/html"        # 发布网站的默认目录，想改改这里。</span><br><span class="line">IncludeOptional conf.d/*.conf       # 包含conf.d目录下的*.conf文件</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置DocumentRoot指定目录的属性</span></span><br><span class="line">&lt;Directory "/var/www/html"&gt;   # 网站容器开始标识</span><br><span class="line">Options Indexes FollowSymLinks   # 找不到index.html主页时，以目录的方式呈现，并允许链接到网站根目录以外(有一种找不到网页我不信的感觉，要看看里边)</span><br><span class="line">AllowOverride None               # 对目录设置特殊属性:none不使用.htaccess控制,all允许</span><br><span class="line">Require all granted                 # granted表示运行所有访问，denied表示拒绝所有访问</span><br><span class="line">&lt;/Directory&gt;    # 容器结束</span><br><span class="line">DirectoryIndex index.html      # 定义主页文件，当访问到网站目录时如果有定义的主页文件，网站会自动访问</span><br></pre></td></tr></table></figure><p>作业：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">【注意】    【注意】    【注意】    【注意】    【注意】    【注意】    【注意】    【注意】    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;http&#x2F;conf&#x2F;http.conf文件内，以下选项的作用是什么（修改后有什么影响）？</span><br><span class="line"></span><br><span class="line">1、ServerRoot &#x2F;etc&#x2F;httpd  --修改为--&gt;ServerRoot &#x2F;alan</span><br><span class="line">2、Listen80--修改为--&gt;Listen   666</span><br><span class="line">3、Userapache--修改为--&gt;User alan</span><br><span class="line">4、DocumentRoot &#x2F;var&#x2F;www&#x2F;html--修改为--&gt;DocumentRoot &#x2F;html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5、&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&quot;&gt;</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line">--修改为--&gt;</span><br><span class="line">&lt;Directory &quot;&#x2F;html&quot;&gt;</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all denied</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line"></span><br><span class="line">【注意】    【注意】    【注意】    【注意】    【注意】    【注意】    【注意】    【注意】</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">httpd（apache）服务重点记忆内容：</span><br><span class="line">1、主配置文件：/etc/httpd/conf/httpd.conf</span><br><span class="line">2、字配置文件目录：/etc/httpd/conf.d/*.conf</span><br><span class="line">3、配置文件中影响页面的配置：</span><br><span class="line">DocumentRoot /var/www/html  ----》默认页面存放位置（目录）</span><br><span class="line">DirectoryIndex index.html   ----》默认页面文件名</span><br><span class="line">Listen 80----》默认页面服务端口</span><br></pre></td></tr></table></figure><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><h5 id="1-准备测试页面"><a href="#1-准备测试页面" class="headerlink" title="1.准备测试页面"></a>1.准备测试页面</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo test1 &gt; /var/www/html/index.html #编写测试文件</span><br></pre></td></tr></table></figure><h5 id="2-访问控制测试"><a href="#2-访问控制测试" class="headerlink" title="2.访问控制测试"></a>2.访问控制测试</h5><p><strong>可以直接编辑apache主配置文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.默认允许所有主机访问</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl restart httpd</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2.只拒绝一部分客户端访问:</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" class></strong></p><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl restart httpd</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@test ~]# curl -I http://192.168.153.144  #用另外一台机器测试访问成功</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Thu, 06 Aug 2020 20:40:37 GMT</span><br><span class="line">Server: Apache/2.4.6 (CentOS)</span><br><span class="line">Last-Modified: Thu, 06 Aug 2020 20:12:02 GMT</span><br><span class="line">ETag: "6-5ac3b1a02ac4f"</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Content-Length: 6</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，它支持文件的上传和下载，是综合传输工具，习惯称url为下载工具。</span><br><span class="line">-o：指定下载路径</span><br><span class="line">-I:查看服务器的响应信息</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3.拒绝所有人</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl restart httpd</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@test ~]# curl -I http://192.168.153.144</span><br><span class="line">HTTP/1.1 403 Forbidden</span><br><span class="line">Date: Thu, 06 Aug 2020 20:38:00 GMT</span><br><span class="line">Server: Apache/2.4.6 (CentOS)</span><br><span class="line">Content-Type: text/html; charset=iso-8859-1</span><br></pre></td></tr></table></figure><h5 id="3-修改默认网站发布目录"><a href="#3-修改默认网站发布目录" class="headerlink" title="3.修改默认网站发布目录"></a>3.修改默认网站发布目录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">119  DocumentRoot "/www"            # 修改网站根目录为/www</span><br><span class="line">131  &lt;Directory "/www"&gt;               # 把这个也对应的修改为/www</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# mkdir /www    ##创建定义的网站发布目录</span><br><span class="line">[root@localhost ~]# echo "这是新修改的网站家目录/www" &gt; /www/index.html #创建测试页面</span><br><span class="line">[root@localhost ~]# systemctl restart httpd      #重启服务</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png" class></strong></p><h3 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">虚拟主机:多个网站在一台服务器上。web服务器都可以实现。</span><br><span class="line">三种:基于域名 基于端口 基于Ip(基于什么，什么就不同，剩下两个就相同)</span><br></pre></td></tr></table></figure><h4 id="基于域名"><a href="#基于域名" class="headerlink" title="基于域名"></a>基于域名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.基于域名(域名不同，端口和IP相同)</span><br><span class="line">[root@localhost ~]# cd /etc/httpd/conf.d/</span><br><span class="line">[root@localhost conf.d]# vim test.conf   #创建配置文件</span><br><span class="line">&lt;VirtualHost *:80&gt;   #指定虚拟主机端口，*代表监听本机所有ip，也可以指定ip</span><br><span class="line">DocumentRoot /soso     #指定发布网站目录，自己定义</span><br><span class="line">ServerName www.soso666.com  #指定域名，可以自己定义</span><br><span class="line">&lt;Directory "/soso/"&gt;</span><br><span class="line">  AllowOverride None    #设置目录的特性，如地址重写</span><br><span class="line">  Require all granted   #允许所有人访问</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">DocumentRoot /soho</span><br><span class="line">ServerName test.soso666.com</span><br><span class="line">&lt;Directory "/soho/"&gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@localhost ~]# mkdir /soso #创建发布目录</span><br><span class="line">[root@localhost ~]# mkdir /soho</span><br><span class="line">[root@localhost ~]# echo qianfen &gt; /soso/index.html #创建测试页面</span><br><span class="line">[root@localhost ~]# echo qfedu &gt; /soho/index.html</span><br><span class="line">[root@localhost ~]# systemctl restart httpd</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改/etc/hosts文件(访问的机器添加)。    #本地DNS    外网DNS配置文件在/etc/resolv.conf中,当主机去访问页面时,主机会先去本机DNS中寻找页面，找不到时才会再去外网DNS配置文件中寻找，有时候我们想要加快一些网页的访问速度时，也可以在本地DNS中添加，添加之后访问速度会稍有提升。</span><br><span class="line">绑定IP与域名的关系。（如下图）</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png" class></strong></p><p>测试访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># curl  www.soso666.com</span><br><span class="line"># curl  test.soso666.com</span><br><span class="line">这里不建议用自己Windows的浏览器访问测试，因为还需要修改Windows的hosts文件会比较麻烦，建议用另一台虚拟机执行上述操作测试访问。</span><br></pre></td></tr></table></figure><h4 id="基于端口"><a href="#基于端口" class="headerlink" title="基于端口"></a>基于端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/httpd/conf/httpd.conf  ---添加</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">2.基于端口(端口不同，域名和IP相同)</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf.d/test.conf</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  DocumentRoot /soso</span><br><span class="line">  ServerName www.soso666.com</span><br><span class="line">&lt;Directory "/soso/"&gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:81&gt;   #修改端口</span><br><span class="line">  DocumentRoot /soho</span><br><span class="line">  ServerName test.soso666.com</span><br><span class="line">&lt;Directory "/soho/"&gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@localhost ~]# systemctl restart httpd</span><br><span class="line">注意：解析并没有变</span><br><span class="line"><span class="meta">#</span><span class="bash">该处中的第二台虚拟主机的域名并未修改为和第一台虚拟主机一致，也是可以的，修改为一样是为了方便更好的做对照。</span></span><br></pre></td></tr></table></figure><p>访问：<a href="http://www.soso666.com" target="_blank" rel="noopener">www.soso666.com</a></p><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png" class></strong></p><p>访问: test.soso666.com:81</p><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png" class></strong></p><h4 id="基于IP"><a href="#基于IP" class="headerlink" title="基于IP"></a>基于IP</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">3.基于IP(IP不同，域名和端口相同)</span><br><span class="line">[root@localhost ~]# ifconfig ens33:0 192.168.153.123  #添加一个临时ip</span><br><span class="line">或[root@localhost ~]# ip a a 192.168.153.123/24 dev ens33   #建议使用下面的，上面的方法将要淘汰</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf.d/test.conf</span><br><span class="line">&lt;VirtualHost 192.168.153.144:80&gt;   #指定ip</span><br><span class="line">  DocumentRoot /soso</span><br><span class="line">  ServerName www.soso666.com</span><br><span class="line">&lt;Directory "/soso/"&gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost 192.168.153.123:80&gt;   #指定ip</span><br><span class="line">  DocumentRoot /soho</span><br><span class="line">  ServerName test.soso666.com</span><br><span class="line">&lt;Directory "/soho/"&gt;</span><br><span class="line">  AllowOverride None</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@localhost ~]# systemctl restart httpd</span><br><span class="line"><span class="meta">#</span><span class="bash">该处中的第二台虚拟主机的域名并未修改为和第一台虚拟主机一致，也是可以的，修改为一样是为了方便更好的做对照。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">取消添加的ip地址(或者直接重启也可,临时IP重启后会自动消失，就像挂载一样)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ifconfig ens33:0 192.168.153.123 down</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ip a d 192.168.153.123/24 dev ens33</span></span><br></pre></td></tr></table></figure><p>可以配置本地解析，也可以不配本地解析，配了的话可以用域名访问，不配就访问不同IP来查看两种结果。</p><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/12.png" class></strong></p><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png" class></strong></p><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">进程和线程的区别：</span><br><span class="line">线程：线程来源于进程</span><br><span class="line">线程模式需要事先开启进程</span><br><span class="line">线程模式并发量高</span><br><span class="line">进程：进程稳定性高，线程稳定性低</span><br><span class="line">进程独占内存</span><br><span class="line">线程共享进程内存，一个进程可有有多个线程</span><br><span class="line"></span><br><span class="line">线程被称作轻量级进程，在进程中包含线程。进程有独立的内存空间，不同进程间不能直接共享其他进程资源，同一个进程内的线程共享进程内存空间；相比进程，线程切换对系统开销更小一些；进程是资源分配的最小单位，线程是程序执行的最小单位。</span><br></pre></td></tr></table></figure><h3 id="Apache的工作模式—面试"><a href="#Apache的工作模式—面试" class="headerlink" title="Apache的工作模式—面试"></a>Apache的工作模式—面试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apche2.2工作模式？介绍下特点，说明什么情况下采取不同的工作模式？</span><br><span class="line">apche 工作模式，分别是prefork，worker，event</span><br><span class="line">prefork--进程模式 是一种进程，进程去请求处理，容易消耗内存但是稳定，某个进程出现问题不会影响其他请求，要求稳定时使用。</span><br><span class="line">==============================================</span><br><span class="line">worker--线程模式 使用多个子进程，每个子进程有多个线程，使用线程去处理请求，消耗内存小稳定不好，在访问量多的时候使用。</span><br><span class="line">event--event工作模式中，会有一些专门的线程用来管理这些 keep-alive 类型的线程；当有真实请求过来的时候，将请求传递给服务器的线程，执行完毕后，又允许它释放；这样，一个线程就能处理几个请求了，实现了异步非阻塞，这增强了在高并发场景下的请求处理。event模式执行进程完毕后，允许释放，但work模式不允许释放</span><br></pre></td></tr></table></figure><h2 id="Nginx-服务的搭建与配置"><a href="#Nginx-服务的搭建与配置" class="headerlink" title="Nginx 服务的搭建与配置"></a>Nginx 服务的搭建与配置</h2><h3 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h3><p><strong>Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器</strong>，由俄罗斯的程序设计师Igor Sysoev所开发，其特点是占有内存少，并发能力强。事实上nginx的并发能力确实在同类型的网页服务器中表现较好。</p><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">获取Nginx</span><br><span class="line">Nginx的官方主页： http://nginx.org</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙关闭selinux</span><br><span class="line">[root@localhost ~]# systemctl stop firewalld  #关闭防火墙</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld #开机关闭防火墙</span><br><span class="line">[root@localhost ~]# setenforce 0  #临时关闭selinux</span><br><span class="line">[root@localhost ~]# getenforce   #查看selinux状态</span><br><span class="line"></span><br><span class="line">Nginx安装:</span><br><span class="line">Yum方式：</span><br><span class="line">[root@localhost ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@localhost yum.repos.d]# vi nginx.repo  #编写nginx的yum源</span><br><span class="line">[nginx]</span><br><span class="line">name=nginx</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[root@localhost ~]# yum install -y nginx  #安装nginx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl start nginx  #启动</span><br><span class="line">[root@localhost ~]# systemctl restart nginx #重启</span><br><span class="line">[root@localhost ~]# systemctl enable nginx  #开机启动</span><br><span class="line">[root@localhost ~]# systemctl stop nginx  #关闭</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.查看nginx状态</span><br><span class="line">[root@localhost ~]# ps aux | grep nginx </span><br><span class="line">root       3927  0.0  0.0  46384   968 ?        Ss   18:46   0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">nginx      3928  0.0  0.1  46792  1932 ?        S    18:46   0:00 nginx: worker process</span><br><span class="line">root       3932  0.0  0.0 112660   968 pts/1    R+   18:47   0:00 grep --color=auto nginx</span><br><span class="line">2.查看nginx端口</span><br><span class="line">[root@localhost ~]# netstat -lntp | grep 80</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3927/nginx: master</span><br><span class="line"><span class="meta">#</span><span class="bash">注意：nginx默认端口为80</span></span><br><span class="line">3.测试主页是否可以访问：</span><br><span class="line">[root@localhost ~]# curl -I http://127.0.0.1</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.16.1</span><br><span class="line">Date: Sat, 16 Nov 2019 10:49:48 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 635</span><br><span class="line">Last-Modified: Fri, 11 Oct 2019 06:45:33 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: "5da0250d-27b"</span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/05/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/14.png" class></strong></p><h3 id="Nginx配置文件"><a href="#Nginx配置文件" class="headerlink" title="Nginx配置文件"></a>Nginx配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">nginx主配置文件</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">nginx虚拟主机配置文件</span><br><span class="line">[root@localhost ~]# vi /etc/nginx/conf.d/default.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;   #监听的端口</span><br><span class="line">    server_name  localhost;  #设置域名或主机名</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main; #日志存放路径</span><br><span class="line"></span><br><span class="line">    location / &#123;                        #请求级别:匹配请求路径</span><br><span class="line">        root   /usr/share/nginx/html;   #默认网站发布目录</span><br><span class="line">        index  index.html index.htm;    #默认打开的网站主页</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">注：有几个server块就有几个虚拟主机，nginx也可以像以上Apache一样，三种虚拟主机，基于IP,基于域名,基于端口。其server_name 后面可以设置域名，也可以写IP。</span></span><br></pre></td></tr></table></figure><h3 id="常见的组合方式"><a href="#常见的组合方式" class="headerlink" title="常见的组合方式"></a>常见的组合方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LNMP (Linux + Nginx + MySQL/Mariadb + PHP)  #php-fpm进程，这个组合是公司用的最多的组合</span><br><span class="line">LAMP (Linux + Apache + MySQL/Mariadb + PHP) </span><br><span class="line">Nginx + Tomcat   #java项目常用的组合。取代apache</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://l66stbz.github.io/tags/Nginx/"/>
    
      <category term="Apache" scheme="https://l66stbz.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>文件服务器</title>
    <link href="https://l66stbz.github.io/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://l66stbz.github.io/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-07-04T13:00:00.000Z</published>
    <updated>2024-07-04T11:55:05.916Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件服务器"><a href="#文件服务器" class="headerlink" title="文件服务器"></a>文件服务器</h1><h2 id="1-构建NFS远程共享存储"><a href="#1-构建NFS远程共享存储" class="headerlink" title="1.构建NFS远程共享存储"></a>1.构建NFS远程共享存储</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">文件系统级别共享（是NAS存储） ---------  已经做好了格式化，可以直接用。 速度慢比如：nfs，samba</span><br><span class="line">=====================================================</span><br><span class="line">因为NFS有很多功能，不同的功能需要使用不同的端口。因此NFS无法固定端口。而RPC会记录NFS端口的信息，这样就能够通过RPC实现服务端和客户端的RPC来沟通端口信息。</span><br><span class="line"></span><br><span class="line">那RPC和NFS之间又是如何之间相互通讯的？</span><br><span class="line"></span><br><span class="line">首先当NFS启动后，就会随机的使用一些端口，然后NFS就会向RPC去注册这些端口。RPC就会记录下这些端口。并且RPC会开启111端口，等待客户端RPC的请求，如果客户端有请求，那服务端的RPC就会将记录的NFS端口信息告知客户端。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NFS </span><br><span class="line">NFS：Network File System 网络文件系统，NFS 和其他文件系统一样，是在 Linux 内核中实现的，因此 NFS 很难做到与 Windows 兼容。NFS 共享出的文件系统会被客户端识别为一个文件系统，客户端可以直接挂载并使用。是Unix系统之间共享文件的一种协议</span><br><span class="line">NFS 文件系统仅支持基于 IP 的用户访问控制，NFS 的客户端主要为Linux。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实验环境准备两台机器</span><br><span class="line">支持多节点同时挂载以及并发写入</span><br><span class="line">服务端：nfs-server 192.168.100.60</span><br><span class="line">客户端：web1 192.168.100.70</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">centos7（服务端和客户端都关闭防火墙和selinux内核防火墙）</span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash">setenforce 0</span></span><br></pre></td></tr></table></figure><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">NFS-server操作</span><br><span class="line">[root@nfs-server ~]# setenforce 0</span><br><span class="line">[root@nfs-server ~]# systemctl stop firewalld</span><br><span class="line">分区格式化挂载</span><br><span class="line">[root@nfs-server ~]# fdisk /dev/sdb</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x2dbf8bc5 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：1</span><br><span class="line">起始 扇区 (2048-41943039，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+20G</span><br><span class="line">值超出范围。</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+10G     </span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 10 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：W</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br><span class="line">[root@localhost ~]# lsblk </span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb               8:16   0   20G  0 disk </span><br><span class="line">└─sdb1            8:17   0   10G  0 part </span><br><span class="line">sr0              11:0    1  4.4G  0 rom  </span><br><span class="line">[root@nfs-server ~]# mkfs.xfs /dev/sdb1 </span><br><span class="line">meta-data=/dev/sdb1              isize=512    agcount=4, agsize=655360 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=2621440, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal log           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">[root@nfs-server ~]# mount /dev/sdb1 /XFS/</span><br><span class="line">[root@nfs-server ~]# df -Th</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  475M     0  475M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     487M  7.7M  479M    2% /run</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  1.6G   16G   10% /</span><br><span class="line">/dev/sda1               xfs      1014M  138M  877M   14% /boot</span><br><span class="line">tmpfs                   tmpfs      98M     0   98M    0% /run/user/0</span><br><span class="line">/dev/sdb1               xfs        10G   33M   10G    1% /XFS</span><br><span class="line">[root@nfs-server ~]# yum -y install rpcbind  #安装rpc协议的包</span><br><span class="line">[root@nfs-server ~]# yum -y install nfs-utils #安装nfs服务,提供文件系统</span><br><span class="line">启动服务</span><br><span class="line">[root@nfs-server ~]# systemctl start nfs</span><br><span class="line">[root@nfs-server ~]# systemctl start rpcbind</span><br><span class="line">[root@nfs-server ~]# mkdir /XFS   #创建存储目录</span><br><span class="line">[root@nfs-server ~]# echo "nfs-test" &gt;&gt; /XFS/index.html  #制作test文件</span><br><span class="line">[root@nfs-server ~]# vim /etc/exports   #编辑共享文件</span><br><span class="line">/XFS        192.168.100.0/24(rw,no_root_squash,sync)</span><br><span class="line"></span><br><span class="line">可选参数注释：</span><br><span class="line">ro：只读</span><br><span class="line">rw：读写</span><br><span class="line">*:表示共享给所有网段。</span><br><span class="line">sync：所有数据在请求时写入共享</span><br><span class="line">root_squash： 对于使用分享目录的使用者如果是root用户，那么这个使用者的权限将被压缩成为匿名使用者，只读权限。</span><br><span class="line">no_root_squash：使用分享目录的使用者，如果是 root 的话，那么对于这个分享的目录来说，他就具有 root 的权限。</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs-server ~]# systemctl restart nfs-server #重启服务。</span><br><span class="line">[root@nfs-server ~]# systemctl enable nfs-server #制作开机启</span><br><span class="line">[root@nfs-server ~]# exportfs -v   #确认 NFS 服务器启动</span><br><span class="line">/XFS            192.168.100.0/24(sync,wdelay,hide,no_subtree_check,sec=sys,rw,secure,no_root_squash,no_all_squash)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">web1  客户端操作</span><br><span class="line">[root@web1 ~]# setenforce 0</span><br><span class="line">[root@web1 ~]# systemctl stop firewalld</span><br><span class="line">[root@web1 ~]# yum -y install rpcbind</span><br><span class="line">[root@web1 ~]# yum -y install nfs-utils</span><br><span class="line">启动服务</span><br><span class="line">[root@web1 ~]# systemctl start nfs</span><br><span class="line">[root@web1 ~]# systemctl start rpcbind</span><br><span class="line">[root@web1 ~]# mkdir /nfs #创建挂载点</span><br><span class="line">[root@web1 ~]# mount -t nfs 192.168.100.60:/XFS /nfs  #挂载</span><br><span class="line">[root@web1 ~]# df -Th</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  475M     0  475M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     487M  7.8M  479M    2% /run</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  1.6G   16G   10% /</span><br><span class="line">/dev/sda1               xfs      1014M  138M  877M   14% /boot</span><br><span class="line">tmpfs                   tmpfs      98M     0   98M    0% /run/user/0</span><br><span class="line">192.168.100.60:/XFS     nfs4       10G   33M   10G    1% /nfs</span><br><span class="line"></span><br><span class="line">[root@web1 ~]# ls /nfs</span><br><span class="line">index.html</span><br><span class="line">[root@web1 ~]# umount /nfs  #取消挂载</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">制作开机挂载</span><br><span class="line">[root@web1 ~]# vim /etc/fstab</span><br><span class="line">192.168.100.60:/XFS    /nfs          nfs     defaults        0 0</span><br><span class="line">[root@web1 ~]# mount -a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web1 ~]# reboot</span><br><span class="line">[root@web1 ~]# df -Th</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  475M     0  475M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     487M  7.7M  479M    2% /run</span><br><span class="line">tmpfs                   tmpfs     487M     0  487M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  1.6G   16G   10% /</span><br><span class="line">/dev/sda1               xfs      1014M  138M  877M   14% /boot</span><br><span class="line">192.168.100.60:/XFS     nfs4       10G   33M   10G    1% /nfs</span><br><span class="line">tmpfs                   tmpfs      98M     0   98M    0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="2、Ftp-介绍"><a href="#2、Ftp-介绍" class="headerlink" title="2、Ftp 介绍"></a>2、Ftp 介绍</h2><ul><li><p>文件传输协议（File Transfer Protocol，FTP），基于该协议FTP客户端与服务端可以实现共享文件、上传文件、下载文件。 FTP 基于TCP协议生成一个虚拟的连接，用户可以通过客户端向FTP服务器端上传、下载、删除文件，FTP服务器端可以同时提供给多人共享使用。</p></li><li><p>FTP服务是Client/Server（简称C/S）模式，基于FTP协议实现FTP文件对外共享及传输的软件称之为FTP服务器源端，客户端程序基于FTP协议，则称之为FTP客户端，FTP客户端可以向FTP服务器上传、下载文件。</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FTP Server</span><br><span class="line">作用：提供文件共享服务,实现上传下载</span><br><span class="line">端口：</span><br><span class="line">21号，建立tcp连接  默认端口</span><br><span class="line">20号：传输数据</span><br></pre></td></tr></table></figure><h3 id="一、FTP基础"><a href="#一、FTP基础" class="headerlink" title="一、FTP基础"></a>一、FTP基础</h3><p>下载后使用，不能直接在ftp内打开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">软件包:        vsftpd</span><br><span class="line">FTP端口:         控制端口 command 21/tcp </span><br><span class="line">配置文件:          /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><h4 id="1-ftp主动模式"><a href="#1-ftp主动模式" class="headerlink" title="1.ftp主动模式"></a>1.ftp主动模式</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ftp主动模式：客户端开启一个端口N（&gt;1023）向服务端的21端口，建立连接，同时开启一个N+1，告诉服务端，我监听的是N+1端口，服务端接到请求之后，用自己的20端口连接到客户端的N+1端口，进行传输。</span><br><span class="line"></span><br><span class="line">21端口建立连接</span><br><span class="line">20端口传输数据</span><br><span class="line">N+1就是另一个&gt;1023的端口</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" class></strong></p><h4 id="2-ftp被动模式"><a href="#2-ftp被动模式" class="headerlink" title="2.ftp被动模式"></a>2.ftp被动模式</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp被动模式：客户端同时开启两个端口（1024，1025），一个端口（1024）跟服务端的21端口建立连接，并请求，大哥，我连上了，你再开一个端口呗。服务端接到请求之后，随机会开启一个端口（1027）并告诉客户端我开启的是1027端口，客户端用另一个端口（1025）(图中用的是1026)与服务端的（1027）(图中用的是1025)端口进行连接，传输数据。</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" class></strong></p><h4 id="3-Vsftp-服务器简介"><a href="#3-Vsftp-服务器简介" class="headerlink" title="3.Vsftp 服务器简介"></a>3.Vsftp 服务器简介</h4><ul><li>非常安全的FTP服务进程（Very Secure FTP daemon，Vsftpd），Vsftpd在Unix/Linux发行版中最主流的FTP服务器程序，优点小巧轻快，安全易用、稳定高效、满足企业跨部门、多用户的使用（1000用户）等。</li></ul><h3 id="二、vsftpd配置"><a href="#二、vsftpd配置" class="headerlink" title="二、vsftpd配置"></a>二、vsftpd配置</h3><h4 id="1-ftp配置匿名用户登录"><a href="#1-ftp配置匿名用户登录" class="headerlink" title="1.ftp配置匿名用户登录"></a>1.ftp配置匿名用户登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FTP Server（服务端）</span><br><span class="line">实验环境--准备两台机器</span><br><span class="line">关闭防火墙和selinux</span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash">setenforce 0</span></span><br><span class="line">=========================================</span><br><span class="line">ftp-server 192.168.100.60</span><br><span class="line">client 192.168.100.70</span><br><span class="line">==========================================</span><br><span class="line">[root@ftp-server ~]# yum install -y vsftpd</span><br><span class="line">[root@ftp-server ~]# systemctl start vsftpd   #  启动vsftpd</span><br><span class="line">[root@ftp-server ~]# id ftp</span><br><span class="line">uid=14(ftp) gid=50(ftp) 组=50(ftp)</span><br><span class="line">[root@ftp-server ~]# grep ftp /etc/passwd</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line"><span class="meta">#</span><span class="bash">可以发现系统自己创建了一个名为ftp的系统用户(uid&lt;1000),当别的机器连接后其实就是在以ftp用户的身份来进行操作的。并且可以看到该用户的shell信息为不可登陆shell。说明该用户并不能是用我们系统终端内的命令。</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FTP默认共享目录：/var/ftp</span><br><span class="line">[root@ftp-server ~]# touch /var/ftp/pub/test.txt  #创建文件到共享目录</span><br><span class="line">[root@ftp-server ~]# systemctl enable vsftpd</span><br><span class="line">[root@ftp-server ~]# cd /var/ftp/</span><br><span class="line">[root@ftp-server ftp]# ls</span><br><span class="line">pub</span><br><span class="line">[root@ftp-server ftp]# chown ftp.ftp pub/ -R  #修改根目录的属主与属组，或者chmod修改O权限也可</span><br><span class="line">或[root@ftp-server ftp]# chmod 777 /var/ftp/pub/ -R</span><br><span class="line">[root@ftp-server ftp]# ll </span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x. 2 ftp ftp 22 Aug  3 03:15 pub</span><br></pre></td></tr></table></figure><ul><li><p>重点：改变根目录的属主，如果不改变的话，只能访问，其他权限不能生效。因为我们是以ftp用户的身份访问的，而pub默认的属主属组是root。ftp对于该目录的身份为其他人。</p></li><li><p>注意：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 修改完配置之后需要重启完服务才能生效</span><br><span class="line">- 还需要从新从客户端登陆，否则修改后的配置看不到效果。</span><br></pre></td></tr></table></figure></li></ul><p>编辑配置文件    #  /var/ftp目录本身权限不能超过755</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-server ~]# vi /etc/vsftpd/vsftpd.conf ----找到29行将下面的注释取消</span><br><span class="line">34 anon_other_write_enable=YES</span><br><span class="line">anon_umask=000  #匿名用户上传下载目录权限掩码</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-server ~]# systemctl restart vsftpd</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">FTP Clinet（客户端）</span><br><span class="line">关闭防火墙和selinux</span><br><span class="line">[root@client ~]# yum -y install lftp #安装客户端</span><br><span class="line">get命令（下载，首先要开启下载功能）</span><br><span class="line">[root@client ~]# lftp 192.168.100.60</span><br><span class="line">lftp 192.168.100.60:~&gt; ls</span><br><span class="line">drwxr-xr-x    2 0        0               6 Oct 30  2018 pub</span><br><span class="line">lftp 192.168.100.60:/&gt; cd pub/</span><br><span class="line">lftp 192.168.100.60:/pub&gt; ls</span><br><span class="line">-rw-r--r--    1 14       50              0 Aug 02 19:14 test.txt</span><br><span class="line">lftp 192.168.100.60:/pub&gt; get test.txt   #下载</span><br><span class="line">lftp 192.168.100.60:/pub&gt; exit</span><br><span class="line">[root@client ~]# ls  #会下载到当前目录</span><br><span class="line">anaconda-ks.cfg  test.txt</span><br><span class="line"></span><br><span class="line">[root@client ~]# lftp 192.168.100.60</span><br><span class="line">lftp 192.168.100.60:/pub&gt; mkdir dir  #也可以创建目录</span><br><span class="line">mkdir ok, `dir' created</span><br><span class="line"></span><br><span class="line">put命令（上传命令，上传之前请在服务端进行配置，将上传功能打开）</span><br><span class="line">[root@client ~]# touch upload.txt  #创建测试文件</span><br><span class="line">[root@client ~]# mkdir /test/  #创建测试目录</span><br><span class="line">[root@client ~]# touch /test/test1.txt #在测试目录下面创建测试文件</span><br><span class="line">[root@client ~]# lftp 192.168.100.60</span><br><span class="line">lftp 192.168.100.60:~&gt; cd pub/</span><br><span class="line">lftp 192.168.100.60:/pub&gt; put /root/upload.txt  #上传文件</span><br><span class="line">lftp 192.168.100.60:/pub&gt; ls</span><br><span class="line">-rw-------    1 14       50              0 Nov 16 12:14 upload.txt</span><br><span class="line">drwx------    2 14       50              6 Aug 02 19:17 dir</span><br><span class="line">lftp 192.168.100.60:/pub&gt; mirror -R /test/  #上传目录以及目录中的子文件</span><br><span class="line">Total: 1 directory, 1 file, 0 symlinks</span><br><span class="line">New: 1 file, 0 symlinks</span><br><span class="line">lftp 192.168.100.60:/pub&gt; ls</span><br><span class="line">drwx------    2 14       50             23 Nov 16 12:18 test</span><br><span class="line">-rw-------    1 14       50              0 Nov 16 12:14 upload.txt</span><br><span class="line"></span><br><span class="line">mirror 下载目录</span><br><span class="line"><span class="meta">#</span><span class="bash">注意:进去ftp后使用的ls <span class="built_in">cd</span>命令不是我们centos的命令，而是lftp服务的命令，只是恰好名字一样。ftp用户是无权使用我们系统中的命令。</span></span><br></pre></td></tr></table></figure><h4 id="2-ftp配置本地用户登录"><a href="#2-ftp配置本地用户登录" class="headerlink" title="2.ftp配置本地用户登录"></a>2.ftp配置本地用户登录</h4><h5 id="2-1服务端操作"><a href="#2-1服务端操作" class="headerlink" title="2.1服务端操作"></a>2.1服务端操作</h5><p><strong>创建 zhangsan、lisi  密码都设置为 “123456”</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-server ~]# useradd zhangsan </span><br><span class="line">[root@ftp-server ~]# useradd lisi</span><br><span class="line">[root@ftp-server ~]# echo '123456' | passwd --stdin  zhangsan  #设置密码</span><br><span class="line">Changing password for user zhangsan.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@ftp-server ~]# echo '123456' | passwd --stdin  lisi </span><br><span class="line">Changing password for user lisi.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><p><strong>配置本地用户ftp配置文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-server ~]# vim /etc/vsftpd/vsftpd.conf  ---添加注释并修改 </span><br><span class="line">anonymous_enable=NO           #将允许匿名登录关闭</span><br><span class="line"><span class="meta">#</span><span class="bash">anon_umask=022                <span class="comment">#匿名用户所上传文件的权限掩码 </span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">anon_upload_enable=YES        <span class="comment">#允许匿名用户上传文件</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">anon_mkdir_write_enable=YES   <span class="comment">#允许匿名用户创建目录</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">anon_other_write_enable=YES    <span class="comment">#是否允许匿名用户有其他写入权（改名，删除，覆盖）</span></span></span><br><span class="line">新添加</span><br><span class="line">local_root=/home/zhangsan       # 设置本地用户的FTP根目录，一般为用户的家目录</span><br><span class="line">local_max_rate=0                # 限制最大传输速率（字节/秒）0为无限制</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png" class></strong></p><p><strong>重启vsftpd</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-server ~]# systemctl restart vsftpd</span><br></pre></td></tr></table></figure><h5 id="2-2客户端操作"><a href="#2-2客户端操作" class="headerlink" title="2.2客户端操作"></a>2.2客户端操作</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ftp-client ~]# lftp 192.168.153.137 -u zhangsan</span><br><span class="line">Password: </span><br><span class="line">lftp zhangsan@192.168.153.137:~&gt; ls</span><br><span class="line">lftp zhangsan@192.168.153.137:~&gt; mkdir aaa</span><br><span class="line">mkdir ok, `aaa' created</span><br><span class="line">lftp zhangsan@192.168.153.137:~&gt; ls</span><br><span class="line">drwxr-xr-x    2 1000     1000            6 Aug 02 20:55 aaa</span><br><span class="line">lftp zhangsan@192.168.153.137:~&gt; put /root/test.txt </span><br><span class="line">lftp zhangsan@192.168.153.137:~&gt; ls</span><br><span class="line">drwxr-xr-x    2 1000     1000            6 Aug 02 20:55 aaa</span><br><span class="line">-rw-r--r--    1 1000     1000            0 Aug 02 20:59 test.txt</span><br><span class="line"></span><br><span class="line">服务器端查看</span><br><span class="line">[root@ftp-server ~]# cd /home/zhangsan/</span><br><span class="line">[root@ftp-server zhangsan]# ls</span><br><span class="line">aaa  test.txt</span><br><span class="line">[root@ftp-server zhangsan]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x. 2 zhangsan zhangsan 6 Aug  3 04:55 aaa</span><br><span class="line">-rw-r--r--. 1 zhangsan zhangsan 0 Aug  3 04:59 test.txt</span><br></pre></td></tr></table></figure><h2 id="3-系统优化检测常用命令"><a href="#3-系统优化检测常用命令" class="headerlink" title="3.系统优化检测常用命令"></a>3.系统优化检测常用命令</h2><p>*<em>知识点： *</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（简介：系统优化其本质是系统在提供服务的同时，承受压力过大需进行参数调优）</span><br></pre></td></tr></table></figure><h3 id="1、查看平均负载"><a href="#1、查看平均负载" class="headerlink" title="1、查看平均负载"></a>1、查看平均负载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">系统负载System Load：系统CPU繁忙程度的度量，即有多少进程在等待被CPU调度,平均负载（Load Average）：一段时间内系统的平均负载，这个一段时间一般取1分钟、5分钟、15分钟</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# uptime</span><br><span class="line">20:42:26 up  6:12,  2 users,  load average: 0.00, 0.01, 0.05</span><br><span class="line">1分钟平均负载，5分钟平均负载，15分钟平均负载分别是0.00,0.01,0.05</span><br></pre></td></tr></table></figure><h3 id="2、释放buffer和cache"><a href="#2、释放buffer和cache" class="headerlink" title="2、释放buffer和cache"></a>2、释放buffer和cache</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# echo 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><h3 id="3、带宽使用情况"><a href="#3、带宽使用情况" class="headerlink" title="3、带宽使用情况"></a>3、带宽使用情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# yum install -y iftop.x86_64</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一行：界面上面显示的是类似刻度尺的刻度范围，为显示流量图形的长条作标尺用的。</span><br><span class="line">中间部分：中间的&lt;= =&gt;这两个左右箭头，表示的是流量的方向。=&gt;代表发送，&lt;=代表接收。</span><br><span class="line">TX：发送流量(transmit)</span><br><span class="line">RX：接收流量(receive)</span><br><span class="line">TOTAL：总流量</span><br><span class="line">Cum：运行iftop到目前时间的总流量</span><br><span class="line">peak：流量峰值</span><br><span class="line">rates：分别表示过去 2s 10s 40s 的平均流量</span><br></pre></td></tr></table></figure><h3 id="4、网络接口统计报告"><a href="#4、网络接口统计报告" class="headerlink" title="4、网络接口统计报告"></a>4、网络接口统计报告</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# yum install -y nethogs.x86_64</span><br><span class="line">[root@linux-server ~]# nethogs</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/04/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 实例1：监视ens33网络带宽 </span><br><span class="line"><span class="meta">#</span><span class="bash"> nethogs ens33 </span></span><br><span class="line">实例2：同时监视ens33和ens34接口 </span><br><span class="line"><span class="meta">#</span><span class="bash"> nethogs ens33 ens34</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="NFS" scheme="https://l66stbz.github.io/tags/NFS/"/>
    
      <category term="FTP" scheme="https://l66stbz.github.io/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>Linux存储管理(lvm,swap,raid)</title>
    <link href="https://l66stbz.github.io/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/"/>
    <id>https://l66stbz.github.io/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/</id>
    <published>2024-07-03T13:00:00.000Z</published>
    <updated>2024-07-04T11:49:47.689Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h1><h2 id="一-存储管理"><a href="#一-存储管理" class="headerlink" title="一 .存储管理"></a>一 .存储管理</h2><p>主要知识点:  基本分区、逻辑卷LVM、EXT3/4/XFS文件系统、RAID</p><h3 id="1-1-初识硬盘"><a href="#1-1-初识硬盘" class="headerlink" title="1.1 初识硬盘"></a>1.1 初识硬盘</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">机械 HDD</span><br><span class="line">固态 SSD</span><br></pre></td></tr></table></figure><p><strong>与传统硬盘相比，SSD固态电子盘具有以下优点：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一，SSD不需要机械结构，完全的半导体化，不存在数据查找时间、延迟时间和磁盘寻道时间，数据存取速度快。</span><br><span class="line">第二，SSD全部采用闪存芯片，经久耐用，防震抗摔，即使发生与硬物碰撞，数据丢失的可能性也能够降到最小。　　</span><br><span class="line">第三，得益于无机械部件及闪存芯片，SSD没有任何噪音，功耗低。　</span><br><span class="line">第四，质量轻，比常规1.8英寸硬盘重量轻20-30克，使得便携设备搭载多块SSD成为可能。同时因其完全半导体化</span><br><span class="line">无结构限制，可根据实际情况设计成各种不同接口、形状的特殊电子硬盘。</span><br></pre></td></tr></table></figure><p><strong>硬盘设备命名</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">物理硬盘：    /dev/sd[a-z]</span><br><span class="line">KVM虚拟化:</span><br><span class="line">/dev/vd[a-z]（半虚拟化驱动）</span><br><span class="line">/dev/sd[a-z]（全虚拟化驱动）</span><br></pre></td></tr></table></figure><p><strong>HP服务器硬盘</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dev/cciss/c0d0p1    //c0第一个控制器, d0第一块磁盘, p1分区1</span><br><span class="line">/dev/cciss/c0d0p2    //c0第一个控制器, d0第一块磁盘, p2分区2</span><br></pre></td></tr></table></figure><p><strong>从存储连接方式</strong>（注意：后期还会学到不同的存储方式）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本地存储 例如DellR730本地磁盘</span><br><span class="line">外部存储 scsi线 sata线 sas线</span><br><span class="line">网络存储 以太网络(iscsi, glusterFS,ceph) 分布式</span><br></pre></td></tr></table></figure><h3 id="1-2-从磁盘分区方式区分"><a href="#1-2-从磁盘分区方式区分" class="headerlink" title="1.2 从磁盘分区方式区分"></a>1.2 从磁盘分区方式区分</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MBR (MSDOS根据分区表来分区的，又叫做主引导扇区) &lt;2TB </span><br><span class="line">分区工具：fdisk  </span><br><span class="line">一共可以分14个分区（4个主分区，扩展分区，逻辑分区） 例如: 3主 + 1扩展（n逻辑）</span><br><span class="line">MBR 小于2TB的可以。</span><br><span class="line">一块硬盘最多分4个主分区。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GPT 无限制</span><br><span class="line">分区工具：gdisk(parted---rhel6)</span><br><span class="line">一共可以分128个主分区</span><br><span class="line">GPT大于小于2TB都可以。</span><br><span class="line"><span class="meta">#</span><span class="bash">注意：从MBR转到GPT，或从GPT转换到MBR会导致数据全部丢失！无法恢复！</span></span><br></pre></td></tr></table></figure><h2 id="二-基本分区"><a href="#二-基本分区" class="headerlink" title="二.基本分区"></a>二.基本分区</h2><p>首先需要给虚拟机添加一块新的硬盘，在VMware的虚拟机设置中即可添加，在添加前要先将虚拟机关机。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /dev/sd*</span><br><span class="line">brw-rw----. 1 root disk 8,  0 Nov  7 23:15 /dev/sda</span><br><span class="line">brw-rw----. 1 root disk 8,  1 Nov  7 23:15 /dev/sda1</span><br><span class="line">brw-rw----. 1 root disk 8,  2 Nov  7 23:15 /dev/sda2</span><br><span class="line">brw-rw----. 1 root disk 8, 16 Nov  7 23:15 /dev/sdb</span><br><span class="line">brw-rw----. 1 root disk 8, 32 Nov  7 23:15 /dev/sdc</span><br><span class="line">[root@localhost ~]# lsblk  #查看磁盘设备</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb               8:16   0   10G  0 disk </span><br><span class="line">sdc               8:32   0    8G  0 disk</span><br></pre></td></tr></table></figure><h3 id="2-1-fdisk"><a href="#2-1-fdisk" class="headerlink" title="2.1 fdisk"></a>2.1 fdisk</h3><p>MBR   14个分区（4个主分区，扩展分区，逻辑分区）</p><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/1.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# fdisk -l /dev/sdb #查看磁盘分区信息</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/2.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> lsblk 查看分区结果</span></span><br><span class="line">【如果分区后无法发现分区结果，请&#123;刷新分区表&#125;后再次查看】</span><br><span class="line"><span class="meta">#</span><span class="bash"> partprobe /dev/sdb</span></span><br></pre></td></tr></table></figure><p>为什么起始扇区一定要默认呢？</p><p>因为如果间隔起始的话，会导致前后两端的数据无法连接，会导致资源的浪费。</p><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/3.png" class></strong></p><h3 id="2-2-gdisk"><a href="#2-2-gdisk" class="headerlink" title="2.2 gdisk"></a>2.2 gdisk</h3><p>GPT  128个主分区</p><h4 id="2-2-1-创建分区"><a href="#2-2-1-创建分区" class="headerlink" title="2.2.1 创建分区"></a>2.2.1 创建分区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# yum -y install gdisk  #安装分区工具</span><br><span class="line">[root@qfedu.com ~]# gdisk -l /dev/sdb</span><br><span class="line">[root@qfedu.com ~]# gdisk /dev/sdb</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/4.png" class></strong></p><h4 id="2-2-2-创建文件系统（格式化）centos7默认使用xfs"><a href="#2-2-2-创建文件系统（格式化）centos7默认使用xfs" class="headerlink" title="2.2.2 创建文件系统（格式化）centos7默认使用xfs"></a>2.2.2 创建文件系统（格式化）centos7默认使用xfs</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# mkfs.ext4 /dev/sdb1   #格式化成ext4格式的文件系统</span><br><span class="line">[root@qfedu.com ~]# mkfs.xfs /dev/sdc2   #格式化成xfs格式的文件系统(/采用的就是这种)</span><br></pre></td></tr></table></figure><p>操作完成后可以通过blkid命令查看文件系统类型，从而得知是否操作成功。直接回车可以看到所有的硬盘分区UUID和文件系统类型，后面加路径可以只查看指定的分区信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# blkid </span><br><span class="line">/dev/sdb1: UUID="e215e902-de80-4f9c-bae7-97ac00711653" TYPE="xfs" </span><br><span class="line">/dev/sda1: UUID="1cd22a94-6aa7-4a09-9c88-0de73436eec1" TYPE="xfs" </span><br><span class="line">/dev/sda2: UUID="lGZ1F3-RJoN-P1dh-jbYG-x8Da-YZrR-fgFZcW" TYPE="LVM2_member" </span><br><span class="line">/dev/sr0: UUID="2020-11-04-11-36-43-00" LABEL="CentOS 7 x86_64" TYPE="iso9660" PTTYPE="dos" </span><br><span class="line">/dev/mapper/centos-root: UUID="6c9250c6-060f-4bc5-9d5c-0059a85113a4" TYPE="xfs" </span><br><span class="line">/dev/mapper/centos-swap: UUID="6fd8ee45-7416-42ca-8422-8ddcf81e5e91" TYPE="swap" </span><br><span class="line">[root@localhost ~]# blkid /dev/sdb1 </span><br><span class="line">/dev/sdb1: UUID="e215e902-de80-4f9c-bae7-97ac00711653" TYPE="xfs"</span><br></pre></td></tr></table></figure><h4 id="2-2-3-挂载mount使用"><a href="#2-2-3-挂载mount使用" class="headerlink" title="2.2.3 挂载mount使用"></a>2.2.3 挂载mount使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# mkdir /mnt/disk1   #创建挂载目录</span><br><span class="line">[root@qfedu.com ~]# mkdir /mnt/disks   #创建挂载目录</span><br><span class="line">[root@qfedu.com ~]# mount -o rw /dev/sdb1 /mnt/disk1/  #-o 指定读写权限（ro只读，rx读写）</span><br><span class="line">mount参数:</span><br><span class="line">-o 指定读写权限</span><br><span class="line">-a 需要定义(/etc/fstab)执行-a才会自动挂载</span><br><span class="line">[root@qfedu.com ~]# mount /dev/sdc2 /mnt/disks/</span><br></pre></td></tr></table></figure><p><strong>查看磁盘挂载与磁盘使用空间</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# df -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root xfs        17G  1.2G   16G   7% /</span><br><span class="line">devtmpfs                devtmpfs  982M     0  982M   0% /dev</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M   0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     993M  8.7M  984M   1% /run</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs      1014M  125M  890M  13% /boot</span><br><span class="line">tmpfs                   tmpfs     199M     0  199M   0% /run/user/0</span><br><span class="line">/dev/sdb1               ext4      283M  2.1M  262M   1% /mnt/disk1</span><br><span class="line">/dev/sdc2               xfs       197M   11M  187M   6% /mnt/disks</span><br><span class="line">参数解释：</span><br><span class="line">-T  打印文件系统类型</span><br><span class="line">-h 人性化显示，磁盘空间大小</span><br><span class="line">文件系统会占用一些空间</span><br></pre></td></tr></table></figure><p><strong>取消挂载</strong></p><p>后跟挂载设备和挂载点都可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# umount /mnt/disks/</span><br><span class="line">[root@qfedu.com ~]# umount -l /mnt/disk1/ #强行卸载，即使目录有资源被进程占用，也可以卸载</span><br></pre></td></tr></table></figure><h2 id="三-fstab开机自动挂载"><a href="#三-fstab开机自动挂载" class="headerlink" title="三.fstab开机自动挂载"></a>三.fstab开机自动挂载</h2><h3 id="3-1-etc-fstab文件实现开机的时候自动挂载"><a href="#3-1-etc-fstab文件实现开机的时候自动挂载" class="headerlink" title="3.1 /etc/fstab文件实现开机的时候自动挂载"></a>3.1 /etc/fstab文件实现开机的时候自动挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# blkid /dev/sdb1  #查看uuid和文件系统类型</span><br><span class="line">/dev/sdb1: UUID="d1916638-bd0a-4474-8051-f788116a3a92" TYPE="ext4"</span><br><span class="line">[root@qfedu.com ~]# vim /etc/fstab</span><br><span class="line">参数解释：</span><br><span class="line">第1列:挂载设备</span><br><span class="line">(1)/dev/sda5  </span><br><span class="line">(2)UUID=设备的uuid(设备ID号)   rhel6/7的默认写法   同一台机器内唯一的一个设备标识</span><br><span class="line">第2列:挂载点</span><br><span class="line">第3列:文件系统类型</span><br><span class="line">第4列:文件系统属性</span><br><span class="line">第5列:是否对文件系统进行磁带备份：0 不备份</span><br><span class="line">第6列:是否检查文件系统：0 不检查</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/5.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# vim /etc/fstab</span><br><span class="line">/dev/sdc2       /mnt/disks      xfs     defaults        0 0</span><br><span class="line">[root@qfedu.com ~]# reboot  #重启之后df -Th可以看到已经自动挂载成功</span><br></pre></td></tr></table></figure><h3 id="3-2-etc-rc-d-rc-local开机自动挂载"><a href="#3-2-etc-rc-d-rc-local开机自动挂载" class="headerlink" title="3.2 /etc/rc.d/rc.local开机自动挂载"></a>3.2 /etc/rc.d/rc.local开机自动挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个配置文件会在用户登陆之前读取，这个文件中写入了什么命令，在每次系统启动时都会执行一次。也就是说，如果有任何需要在系统启动时运行的工作，则只需写入 /etc/rc.d/rc.local 配置文件即可。写入/etc/rc.local 配置文件也可以，两者之间是软链接的关系。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# vim /etc/rc.d/rc.local #将挂载命令直接写到文件中</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/6.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# chmod a+x /etc/rc.d/rc.local #所有用户添加执行权限</span><br><span class="line">[root@qfedu.com ~]# reboot  #重启之后df -Th可以看到已经自动挂载成功</span><br></pre></td></tr></table></figure><p>注：用户家目录下的.bashrc文件中也可以，但root以外的用户要确保其有使用mount命令的权限，以及文件的执行权限。</p><h2 id="四-文件系统"><a href="#四-文件系统" class="headerlink" title="四.文件系统"></a>四.文件系统</h2><h3 id="4-1、文件系统分类"><a href="#4-1、文件系统分类" class="headerlink" title="4.1、文件系统分类"></a>4.1、文件系统分类</h3><h5 id="4-1-1分类"><a href="#4-1-1分类" class="headerlink" title="4.1.1分类"></a>4.1.1分类</h5><p>问题：为什么有这么多文件系统？一个不够用吗？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">分类：</span><br><span class="line">本地文件系统，不能在网络上用。</span><br><span class="line">ntfs  xfs  ext2，ext3，ext4</span><br><span class="line">网络文件系统，也可以在本地用。(比如网吧)</span><br><span class="line">nfs   glusterfs   hdfs   ceph</span><br></pre></td></tr></table></figure><h5 id="4-1-2概念"><a href="#4-1-2概念" class="headerlink" title="4.1.2概念"></a>4.1.2概念</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作用：</span><br><span class="line">管理文件的一套系统。</span><br><span class="line">文件的编辑，拷贝，粘贴，移动。</span><br><span class="line">inode ：inoed块、i节点--索引节点。专门存储inode信息。里面是文件的属性信息-也叫元信息，文件名,权限，访问时间</span><br></pre></td></tr></table></figure><p>存取不分割，放进去什么样，拿出来什么样。存储分割</p><h6 id="理解inode"><a href="#理解inode" class="headerlink" title="理解inode"></a>理解inode</h6><blockquote><p>理解inode，要从文件储存说起。</p><p>文件储存在硬盘上，硬盘的最小存储单位叫做”扇区”（Sector）。每个扇区储存512字节（相当于0.5KB）。</p><p>操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个”块”（block）。这种由多个扇区组成的”块”，是文件存取的最小单位。”块”的大小，最常见的是4KB，即连续八个 sector组成一个 block。</p><p>文件数据都储存在”块”中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为”索引节点”。索引节点编号；它是文件或目录在磁盘里的唯一标识，linux读取文件首先要读取到这个索引节点。</p><p>每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。</p></blockquote><p><strong>inode的内容</strong></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">文件的字节数</span><br><span class="line">文件拥有者的User ID</span><br><span class="line">文件的Group ID</span><br><span class="line">文件的读、写、执行权限</span><br><span class="line">文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。</span><br><span class="line">链接数，即有多少文件名指向这个inode</span><br><span class="line">文件数据block的位置</span><br></pre></td></tr></table></figure></blockquote><p>查看inode信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@qfedu.com ~]# stat /etc/hosts</span><br><span class="line">  File: ‘/etc/hosts’</span><br><span class="line">  Size: 158             Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd00h/64768d    Inode: 16778306    Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Access: 2020-07-28 19:11:48.781000069 +0800</span><br><span class="line">Modify: 2013-06-07 22:31:32.000000000 +0800</span><br><span class="line">Change: 2020-07-18 15:37:52.353025437 +0800</span><br><span class="line"> Birth: -</span><br><span class="line"> </span><br><span class="line">[root@qfedu.com ~]# ls -i /etc/hosts  #-i：查看inode号</span><br><span class="line">16778306 /etc/hosts</span><br></pre></td></tr></table></figure><h5 id="4-1-3-EXT"><a href="#4-1-3-EXT" class="headerlink" title="4.1.3.EXT"></a>4.1.3.EXT</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXT 家族支持度最广：</span><br><span class="line">但创建文件系统（格式化）慢！</span><br><span class="line">修复慢！</span><br><span class="line">文件系统存储容量有限！</span><br></pre></td></tr></table></figure><h5 id="4-1-4-XFS"><a href="#4-1-4-XFS" class="headerlink" title="4.1.4.XFS"></a>4.1.4.XFS</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">XFS 同样是一种日志式文件系統：</span><br><span class="line">高容量，支持大存储</span><br><span class="line">高性能，创建/修复文件系统快</span><br><span class="line">格式化快</span><br><span class="line">inode 与 block 都是系統需要用到時，才动态配置产生</span><br></pre></td></tr></table></figure><h2 id="五、逻辑卷LVM–（Logical-Volume-Manager（逻辑卷管理）的简写）"><a href="#五、逻辑卷LVM–（Logical-Volume-Manager（逻辑卷管理）的简写）" class="headerlink" title="五、逻辑卷LVM–（Logical Volume Manager（逻辑卷管理）的简写）"></a>五、逻辑卷LVM–（Logical Volume Manager（逻辑卷管理）的简写）</h2><h3 id="5-1-LVM管理"><a href="#5-1-LVM管理" class="headerlink" title="5.1 LVM管理"></a>5.1 LVM管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvm概念：LVM是Linux环境中对磁盘分区进行管理的一种机制，是建立在硬盘和分区之上、文件系统之下的一个逻辑层，可提高磁盘分区管理的灵活性。</span><br><span class="line">卷：卷在Windows系统当中其实也就是我们平常所谓的C盘D盘等等。那么到底什么是卷呢？只要经历过分区和格式化的就可以叫卷。</span><br></pre></td></tr></table></figure><h4 id="5-1-1-lvm的特点"><a href="#5-1-1-lvm的特点" class="headerlink" title="5.1.1 lvm的特点"></a>5.1.1 lvm的特点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">传统分区的缺点:</span></span><br><span class="line">传统的文件系统是基于分区的，一个文件系统对应一个分区。这种方式比较直观，但不易改变。当一个分区空间已满时，无法对其扩充，只能采用重新分区／建立文件系统，非常麻烦；或把分区中的数据移到另一个更大的分区中。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">当采用LVM时：</span></span><br><span class="line">1.将硬盘的多个分区由LVM统一为卷组管理，可以方便的加入或移走分区以扩大或减小卷组的可用容量，充分利用硬盘空间；</span><br><span class="line">2.文件系统建立在LVM上，可以跨分区，方便使用；</span><br><span class="line">3.当系统空间不足而加入新的硬盘时，不必把用户的数据从原硬盘迁移到新硬盘，而只须把新的分区加入卷组并扩充逻辑卷即可。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">使用LVM主要是方便管理、增加了系统的扩展性。可以跨分区，多个硬盘组合。</span></span><br></pre></td></tr></table></figure><h4 id="5-1-2-lvm"><a href="#5-1-2-lvm" class="headerlink" title="5.1.2 lvm"></a>5.1.2 lvm</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.lvm的制作</span><br><span class="line">2.lvm的使用</span><br><span class="line">3.lvm扩容-------在线扩容。可以在有数据的情况下去扩容。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">基本分区(MBR|GPT) ----&gt; Filesystem（制作文件系统类型） ----&gt; mount（挂载）</span><br><span class="line">逻辑卷LVM ----&gt; Filesystem（制作文件系统类型） ----&gt; mount（挂载）</span><br></pre></td></tr></table></figure><h3 id="5-2-lvm的制作"><a href="#5-2-lvm的制作" class="headerlink" title="5.2.lvm的制作"></a>5.2.lvm的制作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第一步，拥有基本分区</span><br><span class="line">做成物理卷： pv ------- sdb1、sdb2 打pv的标记。</span><br><span class="line">加入卷组：  vg-------- 卷组里面包含：sdb1  sdb2,建立在PV之上。</span><br><span class="line">逻辑卷   lv  -------  逻辑卷是从卷组里面拿空间出来做成的逻辑卷,在起个名,建立在VG之上</span><br><span class="line">制作文件系统------mkfs.xfs    lvm路径</span><br><span class="line">挂载 ------mount   使用lvm   #扩容逻辑卷时不需要挂载</span><br><span class="line"><span class="meta">#</span><span class="bash">制作lvm的时候可以是一整块硬盘也可以是硬盘分好的区并且是还没有用的。必须是没有做文件系统的</span></span><br></pre></td></tr></table></figure><p><strong><img src="/2024/07/03/%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/7.png" class></strong></p><h3 id="5-3-案例"><a href="#5-3-案例" class="headerlink" title="5.3 案例"></a>5.3 案例</h3><h4 id="5-3-1-创建LVM"><a href="#5-3-1-创建LVM" class="headerlink" title="5.3.1.创建LVM"></a>5.3.1.创建LVM</h4><p><strong>首先准备添加3块磁盘：可以是/dev/sdb这种没有分区的也可以是/dev/sdb1这种已经分区了的</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：如果没有pv命令安装 #yum install -y lvm2</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# ll /dev/sd*   #或者直接lsblk直接查看</span><br><span class="line">brw-rw----. 1 root disk 8,  0 Nov  9 12:59 /dev/sda</span><br><span class="line">brw-rw----. 1 root disk 8,  1 Nov  9 12:59 /dev/sda1</span><br><span class="line">brw-rw----. 1 root disk 8,  2 Nov  9 12:59 /dev/sda2</span><br><span class="line">brw-rw----. 1 root disk 8, 16 Nov  9 12:59 /dev/sdb</span><br><span class="line">brw-rw----. 1 root disk 8, 32 Nov  9 12:59 /dev/sdc</span><br><span class="line">brw-rw----. 1 root disk 8, 48 Nov  9 14:04 /dev/sdd</span><br></pre></td></tr></table></figure><h5 id="5-3-1-1-创建pv"><a href="#5-3-1-1-创建pv" class="headerlink" title="5.3.1.1.创建pv"></a>5.3.1.1.创建pv</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# pvcreate /dev/sdb #创建pv</span><br><span class="line">  Physical volume "/dev/sdb" successfully created.</span><br><span class="line">[root@linux-server ~]# pvs  #查看pv</span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree </span><br><span class="line">  /dev/sdb          lvm2 ---   10.00g 10.00g</span><br><span class="line">[root@linux-server ~]# pvscan  #查看pv</span><br><span class="line">  PV /dev/sda2   VG centos          lvm2 [&lt;19.00 GiB / 0    free]</span><br><span class="line">  PV /dev/sdb                       lvm2 [10.00 GiB]</span><br><span class="line">  Total: 2 [&lt;29.00 GiB] / in use: 1 [&lt;19.00 GiB] / in no VG: 1 [10.00 GiB]</span><br></pre></td></tr></table></figure><h5 id="5-3-1-2-创建vg"><a href="#5-3-1-2-创建vg" class="headerlink" title="5.3.1.2.创建vg"></a>5.3.1.2.创建vg</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# vgcreate vg1 /dev/sdb   #创建vg</span><br><span class="line">  Volume group "vg1" successfully created</span><br><span class="line">参数解释：</span><br><span class="line">-s 16M 指的是在分区的时候指定vg的大小。</span><br><span class="line">[root@linux-server ~]# vgs    #查看vg</span><br><span class="line">  VG     #PV #LV #SN Attr   VSize   VFree  </span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g      0 </span><br><span class="line">  vg1      1   0   0 wz--n- &lt;10.00g &lt;10.00g</span><br><span class="line">[root@linux-server ~]# vgscan</span><br><span class="line">  Reading volume groups from cache.</span><br><span class="line">  Found volume group "centos" using metadata type lvm2</span><br><span class="line">  Found volume group "vg1" using metadata type lvm2</span><br><span class="line">[root@linux-server ~]# vgdisplay #查看vg</span><br><span class="line">--- Volume group ---</span><br><span class="line">  VG Name               vg1</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  2</span><br><span class="line">  VG Access             read/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                1</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;10.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              2559</span><br><span class="line">  Alloc PE / Size       0 / 0 MiB</span><br><span class="line">  Free  PE / Size       2559 / &lt;10.00 GiB</span><br><span class="line">  VG UUID               bVvQxe-4M2A-mMuk-b3gJ-4Maj-0xDy-5QZDOp</span><br></pre></td></tr></table></figure><h5 id="5-3-1-3-创建lv"><a href="#5-3-1-3-创建lv" class="headerlink" title="5.3.1.3.创建lv"></a>5.3.1.3.创建lv</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# lvcreate -L 150M -n lv1 vg1  #创建lv</span><br><span class="line">  Rounding up size to full physical extent 152.00 MiB</span><br><span class="line">  Logical volume "lv1" created.</span><br><span class="line">[root@linux-server ~]# lvcreate -l 20 -n lv2 vg1  #采用PE方式在创建一个lv</span><br><span class="line">  Logical volume "lv2" created.</span><br><span class="line">参数解释：</span><br><span class="line">-L 指定lv的大小(常规单位M,G)</span><br><span class="line">-n 给创建的lv起一个名字</span><br><span class="line">-l 20 指定PE </span><br><span class="line">[root@linux-server ~]# lvs   #查看lv</span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos -wi-ao----   2.00g                                                    </span><br><span class="line">  lv1  vg1    -wi-a----- 152.00m                                                    </span><br><span class="line">  lv2  vg1    -wi-a-----  80.00m</span><br></pre></td></tr></table></figure><h5 id="5-3-1-4-制作文件系统并挂载"><a href="#5-3-1-4-制作文件系统并挂载" class="headerlink" title="5.3.1.4.制作文件系统并挂载"></a>5.3.1.4.制作文件系统并挂载</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# mkfs.xfs /dev/vg1/lv1    #xfs格式文件系统</span><br><span class="line">[root@linux-server ~]# mkfs.ext4 /dev/vg1/lv2   #ext4格式文件系统</span><br><span class="line">[root@linux-server ~]# mkdir /mnt/lv&#123;1..2&#125;</span><br><span class="line">[root@linux-server ~]# mount /dev/vg1/lv1 /mnt/lv1</span><br><span class="line">[root@linux-server ~]# mount /dev/vg1/lv2 /mnt/lv2</span><br><span class="line">[root@linux-server ~]# df -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-lv1     xfs       149M  7.8M  141M   6% /mnt/lv1</span><br><span class="line">/dev/mapper/vg1-lv2     ext4       74M  1.6M   67M   3% /mnt/lv2</span><br><span class="line"><span class="meta">#</span><span class="bash">注：在lv1中写入文件666.txt，查看666.txt可以看到其内容。挂载后的lv1目录有自己分区，不属于/。取消挂载后里边的666.txt将消失，因为他属于lv1目录的分区。取消挂载后的lv1目录属于/下。</span></span><br></pre></td></tr></table></figure><h4 id="5-3-2-LVM逻辑卷扩容"><a href="#5-3-2-LVM逻辑卷扩容" class="headerlink" title="5.3.2.LVM逻辑卷扩容"></a>5.3.2.LVM逻辑卷扩容</h4><h5 id="5-3-2-1-VG管理"><a href="#5-3-2-1-VG管理" class="headerlink" title="5.3.2.1.VG管理"></a>5.3.2.1.VG管理</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">注意：如果lv所在的vg有空间直接扩容lv就ok了！大致流程为：lvextend扩容--&gt;声明文件系统(要与扩容之前的文件系统一致，可以通过lbkid命令查看文件类型)  切记扩容lv在声明过文件系统后无需再次挂载！</span></span><br></pre></td></tr></table></figure><h5 id="5-3-2-2-扩大VG-vgextend（lv所在vg无空间）"><a href="#5-3-2-2-扩大VG-vgextend（lv所在vg无空间）" class="headerlink" title="5.3.2.2.扩大VG vgextend（lv所在vg无空间）"></a>5.3.2.2.扩大VG vgextend（lv所在vg无空间）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.创建pv</span><br><span class="line">[root@linux-server ~]# pvcreate /dev/sdc </span><br><span class="line">  Physical volume "/dev/sdc" successfully created.</span><br><span class="line">2.直接vgextend扩容</span><br><span class="line">[root@linux-server ~]# vgextend vg1 /dev/sdc       #vg1卷组名字，将/dev/sdc扩展到vg1中</span><br><span class="line">  Volume group "vg1" successfully extended</span><br><span class="line">[root@linux-server ~]# vgs</span><br><span class="line">  VG     #PV #LV #SN Attr   VSize   VFree </span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g     0 </span><br><span class="line">  vg1      2   2   0 wz--n-  19.99g 18.23g</span><br></pre></td></tr></table></figure><h5 id="5-3-2-3-实战lv扩容"><a href="#5-3-2-3-实战lv扩容" class="headerlink" title="5.3.2.3.实战lv扩容"></a>5.3.2.3.实战lv扩容</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# vgs  #查看vg</span><br><span class="line">  VG     #PV #LV #SN Attr   VSize   VFree </span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g     0 </span><br><span class="line">  vg1      1   2   0 wz--n- &lt;19.99g &lt;9.77g</span><br><span class="line">[root@linux-server ~]# lvextend -L 850M /dev/vg1/lv1  #扩展到850M</span><br><span class="line">[root@linux-server ~]# lvextend -L +850M /dev/vg1/lv1 #在原有基础上加850M</span><br><span class="line">[root@linux-server ~]# lvs</span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos -wi-ao----   2.00g                                                    </span><br><span class="line">  lv1  vg1    -wi-ao----   1.66g                                                    </span><br><span class="line">  lv2  vg1    -wi-ao----  80.00m </span><br><span class="line">[root@linux-server ~]# lvextend -l +15 /dev/vg1/lv1 #在原有基础上加15个PE(在想直接用完剩下所有内存的时候用PE比较方便，用-L的话不能准确知道剩下多少空间)</span><br><span class="line">[root@linux-server ~]# lvs</span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos -wi-ao----   2.00g                                                    </span><br><span class="line">  lv1  vg1    -wi-ao----  &lt;1.68g                                                    </span><br><span class="line">  lv2  vg1    -wi-ao----  80.00m</span><br></pre></td></tr></table></figure><h5 id="5-3-2-4-FS-file-system-文件系统扩容（声明文件系统，声明后无需挂载）"><a href="#5-3-2-4-FS-file-system-文件系统扩容（声明文件系统，声明后无需挂载）" class="headerlink" title="5.3.2.4.FS(file system)文件系统扩容（声明文件系统，声明后无需挂载）"></a>5.3.2.4.FS(file system)文件系统扩容（声明文件系统，声明后无需挂载）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# df -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-lv1     xfs       149M  7.8M  141M   6% /mnt/lv1</span><br><span class="line">/dev/mapper/vg1-lv2     ext4       74M  1.6M   67M   3% /mnt/lv2</span><br><span class="line">[root@linux-server ~]# xfs_growfs /dev/vg1/lv1  #xfs扩容(声明文件系统，与之前一致)</span><br><span class="line">[root@linux-server ~]# resize2fs /dev/vg1/lv2   #ext4扩容(声明文件系统，与之前一致)</span><br><span class="line">[root@linux-server ~]# df -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-lv1     xfs       1.7G  9.1M  1.7G   1% /mnt/lv1</span><br><span class="line">/dev/mapper/vg1-lv2     ext4       74M  1.6M   67M   3% /mnt/lv2</span><br></pre></td></tr></table></figure><h2 id="六-交换分区"><a href="#六-交换分区" class="headerlink" title="六.交换分区"></a>六.交换分区</h2><p><strong>交换分区管理 Swap—也叫虚拟内存</strong></p><p><strong>作用： ‘提升‘ 内存的容量，防止OOM（Out Of Memory）</strong></p><h3 id="6-1-引入"><a href="#6-1-引入" class="headerlink" title="6.1 引入"></a>6.1 引入</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">现象是当内存不够的时候内核会随机杀死进程，它认为占用内存多的进程。（内核会先删除占用内存多的进程）.</span><br><span class="line"></span><br><span class="line">如何制作交换分区？</span><br><span class="line"><span class="meta">#</span><span class="bash">我们可以将硬盘空间拿来当作内存来用</span></span><br><span class="line">什么时候用到交换分区？</span><br><span class="line"><span class="meta">#</span><span class="bash">当物理内存不够用的时候使用swap分区，防止物理内存耗尽</span></span><br></pre></td></tr></table></figure><p><strong>扩展知识</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">swap分区大小设置规则</span><br><span class="line">在Linux系统，我们可以参照Redhat公司为RHEL5、RHEL6推荐的SWAP空间的大小划分原则，在你没有其他特别需求时，可以作为很好的参考依据。</span><br><span class="line">内存小于4GB时，推荐不少于2GB的swap空间；</span><br><span class="line">内存4GB~16GB，推荐不少于4GB的swap空间；</span><br><span class="line">内存16GB~64GB，推荐不少于8GB的swap空间；</span><br><span class="line">内存64GB~256GB，推荐不少于16GB的swap空间。</span><br></pre></td></tr></table></figure><p><strong>查看当前的交换分区</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# free -m </span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1984         155        1679           8         149        1656</span><br><span class="line">Swap:          2047           0        2047</span><br><span class="line">[root@linux-server ~]# swapon -s  #查看交换分区信息</span><br></pre></td></tr></table></figure><h3 id="6-2-增加交换分区-可以是基本分区，LVM，File"><a href="#6-2-增加交换分区-可以是基本分区，LVM，File" class="headerlink" title="6.2 增加交换分区 可以是基本分区，LVM，File"></a>6.2 增加交换分区 可以是基本分区，LVM，File</h3><h4 id="6-2-1-基本分区增加交换分区-需分区"><a href="#6-2-1-基本分区增加交换分区-需分区" class="headerlink" title="6.2.1 基本分区增加交换分区(需分区)"></a>6.2.1 基本分区增加交换分区(需分区)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# fdisk /dev/sdd  #分一个主分区出来</span><br><span class="line">[root@linux-server ~]# partprobe /dev/sdd #刷新分区表</span><br><span class="line">[root@linux-server ~]# ll /dev/sdd*</span><br><span class="line">brw-rw----. 1 root disk 8, 16 Nov  9 14:11 /dev/sdd</span><br><span class="line">brw-rw----. 1 root disk 8, 17 Nov  9 14:11 /dev/sdd1</span><br></pre></td></tr></table></figure><p><strong>初始化</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# mkswap /dev/sdd1  #初始化</span><br><span class="line">Setting up swapspace version 1, size = 5242876 KiB</span><br><span class="line">no label, UUID=d2fd3bc0-10c0-4aeb-98ea-6b640d29b783</span><br></pre></td></tr></table></figure><p><strong>挂载</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# blkid /dev/sdd1  #查看UUID</span><br><span class="line">/dev/sdd1: UUID="d2fd3bc0-10c0-4aeb-98ea-6b640d29b783" TYPE="swap" </span><br><span class="line">[root@linux-server ~]# vim /etc/fstab  #制作开机挂载</span><br><span class="line">/dev/sdd1       swap    swap    defaults        0 0</span><br><span class="line">[root@linux-server ~]# swapon -a #激活swap分区(读取/etc/fstab)</span><br><span class="line">[root@linux-server ~]# swapon -s</span><br><span class="line">Filename                                Type            Size    Used    Priority</span><br><span class="line">/dev/dm-1                               partition       2097148 0       -1</span><br><span class="line">/dev/sdd1                               partition       5242876 0       -2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">swapoff /dev/sdd1  <span class="comment">#关闭swap分区</span></span></span><br></pre></td></tr></table></figure><h4 id="6-2-2-file制作增加交换分区"><a href="#6-2-2-file制作增加交换分区" class="headerlink" title="6.2.2 file制作增加交换分区"></a>6.2.2 file制作增加交换分区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# dd if=/dev/zero of=/swap2.img bs=1M count=512</span><br><span class="line">解释：dd 读入  从空设备里面拿空块 到交换分区                块多大  一共多少兆</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> 参数指定了 dd 命令的输入文件。在这里，/dev/zero 是一个特殊的设备文件，它提供无限的零（null）字节流。这意味着 dd 将从 /dev/zero 中读取无限的零字节作为输入数据。如果你想将 /dev/zero 替换为其他文件，理论上是可以的，但需要考虑替换文件的内容和大小，以确保满足你的需求。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">/swap2.img 是指将输出写入到一个根下名为 swap2.img 的文件中。如果路径中没有指定目录，则会将文件创建在当前工作目录下,命名无限制</span></span><br><span class="line">[root@linux-server ~]# mkswap /swap2.img  #初始化</span><br><span class="line">[root@linux-server ~]# vim /etc/fstab</span><br><span class="line">/swap2.img      swap    swap    defaults        0 0</span><br><span class="line">[root@linux-server ~]# chmod 600 /swap2.img #交换分区权限需要设置为600，默认644权限不安全。但是不设置600权限也照样可以实现</span><br><span class="line">[root@linux-server ~]# swapon -a</span><br><span class="line">[root@linux-server ~]# swapon -s</span><br><span class="line">Filename                                Type            Size    Used    Priority</span><br><span class="line">/dev/dm-1                               partition       2097148 0       -1</span><br><span class="line">/dev/sdd1                               partition       5242876 0       -2</span><br><span class="line">/swap2.img                              file    524284  0       -3</span><br></pre></td></tr></table></figure><h4 id="6-2-3-lvm增加和扩容交换分区-通过lvm进行增加扩容交换分区可以不分区"><a href="#6-2-3-lvm增加和扩容交换分区-通过lvm进行增加扩容交换分区可以不分区" class="headerlink" title="6.2.3 lvm增加和扩容交换分区(通过lvm进行增加扩容交换分区可以不分区)"></a>6.2.3 lvm增加和扩容交换分区(通过lvm进行增加扩容交换分区可以不分区)</h4><h5 id="6-2-3-1-lvm增加交换分区"><a href="#6-2-3-1-lvm增加交换分区" class="headerlink" title="6.2.3.1 lvm增加交换分区"></a>6.2.3.1 lvm增加交换分区</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk /dev/sde </span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：N</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): P</span><br><span class="line">分区号 (2-4，默认 2)：2</span><br><span class="line">起始 扇区 (27265024-41943039，默认为 27265024)：</span><br><span class="line">将使用默认值 27265024</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (27265024-41943039，默认为 41943039)：+3G  </span><br><span class="line">分区 2 已设置为 Linux 类型，大小设为 3 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：W</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# pvcreate /dev/sde2</span><br><span class="line">  Physical volume "/dev/sde2" successfully created.</span><br><span class="line">[root@localhost ~]# vgs</span><br><span class="line">  VG     #PV #LV #SN Attr   VSize  VFree   </span><br><span class="line">  VG1      2   1   0 wz--n-  1.99g       0 </span><br><span class="line">  VG2      1   1   0 wz--n- &lt;2.00g       0 </span><br><span class="line">  centos   2   2   0 wz--n- 31.99g 1020.00m</span><br><span class="line">[root@localhost ~]# vgcreate VG3 /dev/sde2 </span><br><span class="line">  Volume group "VG3" successfully created</span><br><span class="line">[root@localhost ~]# vgdisplay VG3</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               VG3</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  1</span><br><span class="line">  VG Access             read/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                0</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;3.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              767</span><br><span class="line">  Alloc PE / Size       0 / 0   </span><br><span class="line">  Free  PE / Size       767 / &lt;3.00 GiB</span><br><span class="line">  VG UUID               sU3LsS-h8aU-xzSe-uGWx-TFmU-hWPA-b0G50Z</span><br><span class="line">[root@localhost ~]# lvcreate -n LV3 -l 767 VG3</span><br><span class="line">  Logical volume "LV3" created.</span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  LV1  VG1    -wi-a-----   1.99g                                                    </span><br><span class="line">  LV2  VG2    -wi-a-----  &lt;2.00g                                                    </span><br><span class="line">  LV3  VG3    -wi-a-----  &lt;3.00g                                                    </span><br><span class="line">  root centos -wi-ao---- &lt;29.00g                                                    </span><br><span class="line">  swap centos -wi-ao----   2.00g                                                        </span><br><span class="line">[root@localhost ~]# mkswap /dev/VG3/LV3 </span><br><span class="line">正在设置交换空间版本 1，大小 = 3141628 KiB</span><br><span class="line">无标签，UUID=971f0251-22dd-4636-8dab-b38aaa04faa2</span><br><span class="line">[root@localhost ~]# free -m</span><br><span class="line">[root@localhost ~]# vi /etc/fstab </span><br><span class="line">/dev/VG3/LV3  swap                    swap    defaults        0 0</span><br><span class="line">[root@localhost ~]# swapon -a</span><br><span class="line">[root@localhost ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            972         195         632           7         143         633</span><br><span class="line">Swap:          5115           0        5115</span><br></pre></td></tr></table></figure><h5 id="6-2-3-1-lvm扩容交换分区"><a href="#6-2-3-1-lvm扩容交换分区" class="headerlink" title="6.2.3.1 lvm扩容交换分区"></a>6.2.3.1 lvm扩容交换分区</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            972         187         181           7         602         635</span><br><span class="line">Swap:          4607           0        4607</span><br><span class="line">[root@localhost ~]# fdisk /dev/sdd</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x05584ff8 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：1</span><br><span class="line">起始 扇区 (2048-10485759，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-10485759，默认为 10485759)：+3G</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 3 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br><span class="line">[root@localhost ~]# lsblk </span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb               8:16   0    6G  0 disk </span><br><span class="line">└─sdb1            8:17   0    1G  0 part </span><br><span class="line">sdc               8:32   0    5G  0 disk </span><br><span class="line">└─sdc1            8:33   0    2G  0 part [SWAP]</span><br><span class="line">sdd               8:48   0    5G  0 disk </span><br><span class="line">└─sdd1            8:49   0    3G  0 part </span><br><span class="line">sr0              11:0    1  4.4G  0 rom  </span><br><span class="line">[root@localhost ~]# pvcreate /dev/sdd1 </span><br><span class="line">  Physical volume "/dev/sdd1" successfully created.</span><br><span class="line">[root@localhost ~]# vgextend centos /dev/sdd1</span><br><span class="line">  Volume group "centos" successfully extended</span><br><span class="line">[root@localhost ~]# vgs</span><br><span class="line">  VG     #PV #LV #SN Attr   VSize  VFree </span><br><span class="line">  centos   2   2   0 wz--n- 21.99g &lt;3.00g</span><br><span class="line">[root@localhost ~]# vgdisplay centos</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             read/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               21.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              5630</span><br><span class="line">  Alloc PE / Size       4863 / &lt;19.00 GiB</span><br><span class="line">  Free  PE / Size       767 / &lt;3.00 GiB</span><br><span class="line">  VG UUID               Hq2Jqj-nGM7-9hNZ-q5ET-76Ua-1yfL-AckFzL</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# lvextend -l +767 /dev/centos/swap </span><br><span class="line">  Size of logical volume centos/swap changed from 2.00 GiB (512 extents) to &lt;5.00 GiB (1279 extents).</span><br><span class="line">  Logical volume centos/swap successfully resized.</span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos -wi-ao----  &lt;5.00g                                                    </span><br><span class="line">[root@localhost ~]# mkswap /dev/centos/swap </span><br><span class="line">mkswap: error: /dev/centos/swap is mounted; will not make swapspace  #需要把swap关掉</span><br><span class="line">[root@localhost ~]# swapoff -a</span><br><span class="line">[root@localhost ~]# mkswap /dev/centos/swap  #声明</span><br><span class="line">mkswap: /dev/centos/swap: warning: wiping old swap signature.</span><br><span class="line">正在设置交换空间版本 1，大小 = 5238780 KiB</span><br><span class="line">无标签，UUID=3a297574-beea-4dc0-b072-49ad4ccdd944</span><br><span class="line">[root@localhost ~]# swapon -a</span><br><span class="line">swapon: /ldq：不安全的权限 0644，建议使用 0600。</span><br><span class="line">[root@localhost ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            972         196         655           7         120         642</span><br><span class="line">Swap:          7675           0        7675</span><br></pre></td></tr></table></figure><h2 id="七-mount详解"><a href="#七-mount详解" class="headerlink" title="七.mount详解"></a>七.mount详解</h2><p>*<em>常用挂载选项详解 *</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">挂载设备文件名、UUID</span><br></pre></td></tr></table></figure><p><strong>常见的挂载选项</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-o         指定文件系统属性</span><br><span class="line">rw       读写 </span><br><span class="line">ro       只读 </span><br><span class="line">noexec   不允许执行二进制文件</span><br><span class="line">exec   允许执行二进制文件 </span><br><span class="line">auto   mount -a 开机自动挂载 </span><br><span class="line">remount   在线重新挂载</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# mount  #查看已经挂载上的系统的属性</span><br></pre></td></tr></table></figure><p><strong>案例1：exec/noexec</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# mount /dev/vg1/lv1 /mnt/lv1/#挂载默认是有执行权限的</span><br><span class="line">[root@linux-server ~]# mount -o noexec /dev/vg1/lv2 /mnt/lv2  #不允许执行二进制文件</span><br><span class="line">[root@linux-server ~]# cat /mnt/lv1/hello.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "hello"</span><br><span class="line">[root@linux-server ~]# cat /mnt/lv2/hello2.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "hello"</span><br><span class="line">[root@linux-server ~]# chmod +x /mnt/lv1/hello.sh </span><br><span class="line">[root@linux-server ~]# chmod +x /mnt/lv2/hello2.sh</span><br><span class="line">[root@linux-server ~]# /mnt/lv1/hello.sh</span><br><span class="line">hello</span><br><span class="line">[root@linux-server ~]# /mnt/lv2/hello2.sh</span><br><span class="line">-bash: /mnt/lv2/hello2.sh: Permission denied</span><br></pre></td></tr></table></figure><p><strong>取消挂载</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# df -Th</span><br><span class="line">Filesystem              Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-lv1     xfs       1.7G   34M  1.7G   2% /mnt/lv1</span><br><span class="line">/dev/mapper/vg1-lv2     ext4       74M  1.6M   67M   3% /mnt/lv2</span><br><span class="line">[root@linux-server ~]# umount /mnt/lv2/</span><br></pre></td></tr></table></figure><h2 id="八-raid–磁盘阵列"><a href="#八-raid–磁盘阵列" class="headerlink" title="八.raid–磁盘阵列"></a>八.raid–磁盘阵列</h2><h3 id="1、RAID介绍"><a href="#1、RAID介绍" class="headerlink" title="1、RAID介绍"></a>1、RAID介绍</h3><p>主观备份叫备份  被动备份叫冗余</p><p>RAID （ Redundant Array of Independent Disks ）即独立磁盘冗余阵列，通常简称为磁盘阵列。简单地说， RAID 是由多个独立的高性能磁盘驱动器组成的磁盘子系统，从而提供比单个磁盘更高的存储性能和数据冗余的技术。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">注意</span></span><br><span class="line">所有服务器在安装操作系统之前必须先做raid【常识】</span><br></pre></td></tr></table></figure><h6 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为什么要做raid？ #为了保证数据完整性，防止数据丢失</span><br></pre></td></tr></table></figure><p><strong>最常用的raid级别:0、1、5、6、10:是 1和0 的组合</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">raid0 ---数据条带卷</span><br><span class="line">最少需要两块磁盘，分别往每一块磁盘上写一部分数据</span><br><span class="line">优点:</span><br><span class="line">1.读写速度快， </span><br><span class="line">2.磁盘利用率：100%</span><br><span class="line">缺点:不提供数据冗余，无数据检验，不能保证数据的正确性，存在单点故障。</span><br><span class="line"></span><br><span class="line">应用场景：</span><br><span class="line">1）对数据完整性要求不高的场景，如：日志存储，个人娱乐</span><br><span class="line">2）要求读写效率高，安全性能要求不高，如图像工作站 </span><br><span class="line"><span class="meta">#</span><span class="bash">范例：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">两块盘A和B   存数据123456   一块存123 一块存456</span></span><br><span class="line">============================================================================</span><br><span class="line">两个盘存相同数据</span><br><span class="line">raid1 又叫镜像raid，通过磁盘数据镜像实现数据冗余，在成对的独立磁盘上产生互为备份的数据。</span><br><span class="line">一般需要两块磁盘，每块磁盘上都会存储一份完整数据。其数据安全性就会较高，但是磁盘空间利用率是比较低的。</span><br><span class="line"></span><br><span class="line">优点:提供数据冗余，数据双倍存储安全性高支持容错。读速度快</span><br><span class="line">缺点:写速度不变，无数据校验。磁盘利用率不高</span><br><span class="line">磁盘利用率：50%</span><br><span class="line"></span><br><span class="line">应用场景：</span><br><span class="line">存放重要数据，如数据存储领域</span><br><span class="line"><span class="meta">#</span><span class="bash">范例：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">两块盘A和B   存数据123456   一块存123456 令一块也存123456</span></span><br><span class="line">===========================================================</span><br><span class="line">raid5：RAID5应该是目前最常见的 RAID 等级，它的校验数据分布在阵列中的所有磁盘上。RAID5的磁盘上同时存储数据和校验数据。当一个数据盘损坏时，系统可以根据其他数据块和对应的校验数据来重建损坏的数据。　</span><br><span class="line"></span><br><span class="line">raid5最少需要3块磁盘。</span><br><span class="line">优点:</span><br><span class="line">1.可以找回丢失的数据---数据可以通过校验计算得出，</span><br><span class="line">2.冗余磁盘--&gt;（需要4快磁盘将其中一块做热备）当某一块磁盘坏掉后，冗余磁盘会自动替换上去</span><br><span class="line">3.有校验机制</span><br><span class="line">4.读写速度高</span><br><span class="line">5.磁盘利用率高</span><br><span class="line">缺点：</span><br><span class="line">1.磁盘越多安全性能越差</span><br><span class="line"></span><br><span class="line">应用场景：安全性高，如金融、数据库、存储等。</span><br><span class="line"><span class="meta">#</span><span class="bash">范例：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">三块盘A、B和C   存数据123456   A存123 B存456 C存校验码 当A或B当中一块坏掉，可以通过另一块中的数据和校验码算出坏掉那块中的数据。</span></span><br><span class="line">==================================================</span><br><span class="line">raid6：RAID6 等级是在 RAID5 的基础上为了进一步增强数据保护而设计的一种 RAID 方式。</span><br><span class="line">最少需要四块磁盘，两块存校验位。RAID6引入双重校验的概念，它可以保护阵列中同时出现两个磁盘失效时，阵列仍能够继续工作，不会发生数据丢失。</span><br><span class="line">优点：</span><br><span class="line">1.容错：允许两块磁盘同时坏掉。读写快。</span><br><span class="line">2.良好的随机读性能</span><br><span class="line">3.有校验机制</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">1.写入速度差</span><br><span class="line">2.成本高</span><br><span class="line"></span><br><span class="line">应用场景：对数据安全级别要求比较高的企业</span><br><span class="line"><span class="meta">#</span><span class="bash">范例：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">四块盘A、B、C和D   存数据123456   一块存123 一块存456 另外两块存校验码 两块数据盘同时丢也可以继续工作</span></span><br><span class="line">===============================================</span><br><span class="line">RAID10：先做镜像再作条带--也叫混合raid</span><br><span class="line">优点：</span><br><span class="line">1.较高的IO性能</span><br><span class="line">2.有数据冗余</span><br><span class="line">3.无单点故障</span><br><span class="line">4.安全性能高</span><br><span class="line">缺点：成本稍高</span><br><span class="line">应用场景：</span><br><span class="line">特别适用于既有大量数据需要存取，同时又对数据安全性要求严格的领域，如银行、金融、商业超市、仓储库房、各种档案管理等。</span><br><span class="line"><span class="meta">#</span><span class="bash">范例：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">四块盘A、B、C和D   存数据123456   A和B为一组，C和D为一组，一组存123，一组存456，组内两块存相同数据和raid1一样，这样只要不是同时坏掉两块为同一组的硬盘就不会出问题。</span></span><br><span class="line">=======================================================</span><br></pre></td></tr></table></figure><h5 id="购买磁盘后需要操作"><a href="#购买磁盘后需要操作" class="headerlink" title="购买磁盘后需要操作"></a>购买磁盘后需要操作</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.有磁盘,2.制作raid5,3.开始分区,4.刷新分区表,5，制作文件系统,6.挂载。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="LVM" scheme="https://l66stbz.github.io/tags/LVM/"/>
    
      <category term="Swap" scheme="https://l66stbz.github.io/tags/Swap/"/>
    
      <category term="Raid" scheme="https://l66stbz.github.io/tags/Raid/"/>
    
  </entry>
  
  <entry>
    <title>作业小合集</title>
    <link href="https://l66stbz.github.io/2024/06/29/%E4%BD%9C%E4%B8%9A%E5%B0%8F%E5%90%88%E9%9B%86/"/>
    <id>https://l66stbz.github.io/2024/06/29/%E4%BD%9C%E4%B8%9A%E5%B0%8F%E5%90%88%E9%9B%86/</id>
    <published>2024-06-29T13:00:00.000Z</published>
    <updated>2024-07-01T01:19:15.431Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="【用户和组作业】"><a href="#【用户和组作业】" class="headerlink" title="【用户和组作业】"></a>【用户和组作业】</h2><p>1、创建用户user01        </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd  user01</span><br></pre></td></tr></table></figure><p>2、创建组QF2403、hr、qf,要求QF2403组的GID是2208</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# groupadd QF2403 -g 2208</span><br><span class="line">[root@c-6 ~]# groupadd hr</span><br><span class="line">[root@c-6 ~]# groupadd qf</span><br></pre></td></tr></table></figure><p>3、创建用户user02，要求该用户主组为QF2403，附属组为hr，UID=2208，shell信息是/bin/bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd user02 -g QF2403 -G hr -u 2208 -s /bin/bash</span><br></pre></td></tr></table></figure><h2 id="【文件权限作业】"><a href="#【文件权限作业】" class="headerlink" title="【文件权限作业】"></a>【文件权限作业】</h2><p>提示：【针对与文件而言，如果要执行该文件，不仅需要该文件的X权限，而且同时需要该文件的r权限，否则执行权限不生效】</p><p>【针对与目录而言，如果要在该目录内创建文件或者删除文件，则需要该目录的W权限，而且同时需要该目录的执行权限，否则W权限不生效】</p><p>1、使用root用户在/home下创建目录A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/A</span><br></pre></td></tr></table></figure><p>2、修改A目录的属组为QF2403</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown .QF2403 /home/A</span><br></pre></td></tr></table></figure><p>3、创建A目录下的B目录并在A目录与B目录下都创建文件T-1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/A/B</span><br><span class="line">[root@c-6 ~]# touch /home/A/T-1</span><br><span class="line">[root@c-6 ~]# touch /home/A/B/T-1</span><br></pre></td></tr></table></figure><p>4、修改A目录下的所有文件属组都为QF2403</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown  .QF2403 /home/A -R</span><br></pre></td></tr></table></figure><p>5、修改目录A的权限为700</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chmod 700 /home/A</span><br></pre></td></tr></table></figure><p>6、修改B下的T-1文件权限为所有人都可以执行该文件 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chmod a+x /home/A/B/T-1</span><br></pre></td></tr></table></figure><p>7、在/home下创建一个目录“D-1”，要求该目录的UGO限是000，目录的拥有者是root，所属组root。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/D-1</span><br><span class="line">[root@c-6 ~]# chown root.root /home/D-1/</span><br><span class="line">[root@c-6 ~]# chmod 000 /home/D-1/</span><br></pre></td></tr></table></figure><p>8、请使用root用户来创建用户alan、tom，并合理修改D-1目录的权限，使alan用户可以在D-1目录内创建文件，但是tom用户没有任何权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd  alan</span><br><span class="line">[root@c-6 ~]# useradd  tom</span><br><span class="line">[root@c-6 ~]# chown .alan /home/D-1/</span><br><span class="line">[root@c-6 ~]# chmod 030 /home/D-1/</span><br></pre></td></tr></table></figure><p>9、在8题的基础上继续修改权限，要求alan组成员可以在D-1目录内创建普通文件，但是只有普通文件对应的拥有者才能在该普通文件内写入内容，其他用户对没有有任何权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chmod o+t /home/D-1/</span><br></pre></td></tr></table></figure><h2 id="【文件管理与用户管理作业】"><a href="#【文件管理与用户管理作业】" class="headerlink" title="【文件管理与用户管理作业】"></a>【文件管理与用户管理作业】</h2><p>目的：修改一些重要文件前一定要先备份，文件结尾用.bak .back<br>1.将/etc/sysconfig/network-scripts/ifcfg-ens33 复制到/tmp下并且重新命名为ifcfg-ens33.bak</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cp /etc/sysconfig/network-scripts/ifcfg-ens33 /tmp/ifcfg-ens33.bak</span><br></pre></td></tr></table></figure><p>2 在/etc/yum.repos.d/ 下创建 yumlist的文件夹。并且在此文件夹下创建 yum.repo文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /etc/yum.repos.d/yumlist</span><br><span class="line">[root@c-6 ~]# touch /etc/yum.repos.d/yumlist/yum.repo</span><br></pre></td></tr></table></figure><p>3 进入 yum.repo文件 编辑文件内容 hello world</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vi /etc/yum.repos.d/yumlist/yum.repo</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>4  将 hello world 复制10行后保存文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">yy#</span><span class="bash">复制</span></span><br><span class="line"><span class="meta">10p#</span><span class="bash">复制10行</span></span><br></pre></td></tr></table></figure><p>5 将hello全部替换为 welcome</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">s/hello/welcome/</span></span><br></pre></td></tr></table></figure><p>6 快捷键删除第二行到页尾的文件内容，操作后不要保存，请直接退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dG</span><br></pre></td></tr></table></figure><p>7 将yum.repo文件 移动到/tmp下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mv /etc/yum.repos.d/yumlist/yum.repo  /tmp/</span><br></pre></td></tr></table></figure><p>8 在/tmp/yum.repo里显示行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set nu</span><br></pre></td></tr></table></figure><p>9./etc/passwd   第二段是干什么的？以什么分割？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第二段是用户密码，以冒号分割</span><br></pre></td></tr></table></figure><p>10.给服务器添加3个账号 xiaozhang  xiaoli  xiaowang</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd xiaozhang</span><br><span class="line">[root@c-6 ~]# useradd xiaoli</span><br><span class="line">[root@c-6 ~]# useradd xiaowang</span><br></pre></td></tr></table></figure><p>11.修改普通用户xiaowang 和root的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# passwd xiaowang</span><br><span class="line">[root@c-6 ~]# passwd</span><br></pre></td></tr></table></figure><p>12.创建用户jack和tom属于hr，wc组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd jack -G hr,wc</span><br><span class="line">[root@c-6 ~]# useradd tom -G hr,wc</span><br></pre></td></tr></table></figure><p>13.创建用户tony，属于hr，不属于wc组，并且将3个人的密码修改为 qianfeng</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd tony -G hr</span><br><span class="line">[root@c-6 ~]# passwd jack</span><br><span class="line">[root@c-6 ~]# passwd tom</span><br><span class="line">[root@c-6 ~]# passwd tony</span><br></pre></td></tr></table></figure><p>14.将/etc/passwd前10行  内容写到 /tmp/passwd下。 然后将4-6行的 root换成haha</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一种：</span><br><span class="line">[root@c-6 ~]# vi /etc/passwd</span><br><span class="line">1,10 w /tmp/passwd</span><br><span class="line">第二种：</span><br><span class="line">[root@c-6 ~]# tail -10 /etc/passwd|xargs -i echo "&#123;&#125;" &gt;/tmp/passwd</span><br></pre></td></tr></table></figure><h2 id="【简述思考题】"><a href="#【简述思考题】" class="headerlink" title="【简述思考题】"></a>【简述思考题】</h2><p>1、通过搜索百度思考如何更换163的yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先先将/etc/yum.repos.d/目录下的所有文件移走备份以防丢失，然后通过wget命令从163源镜像下载.repo文件到/etc/yum.pos.d/目录下即可，随后yum repolist即可查看到。</span><br></pre></td></tr></table></figure><p>2、通过搜索百度思考如何将指定仓库（例如epel源）的rpm包全部下载到当前机器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">（1）使用 reposync 命令下载仓库</span><br><span class="line">reposync 是一个用于下载 YUM 仓库中 RPM 包的工具。首先，确保你的系统上安装了 yum-utils 包，因为 reposync 命令通常包含在其中。</span><br><span class="line"></span><br><span class="line">sudo yum install yum-utils</span><br><span class="line">然后，使用 reposync 命令下载 epel 源的所有 RPM 包：</span><br><span class="line"></span><br><span class="line">sudo reposync --repoid=epel --download_path=/path/to/save/packages</span><br><span class="line">--repoid=epel 指定要下载的仓库，这里是 epel 源。</span><br><span class="line">--download_path=/path/to/save/packages 指定下载后 RPM 包保存的路径。请将 /path/to/save/packages 替换为你希望保存 RPM 包的实际路径。</span><br><span class="line">如果你不指定 --download_path，reposync 将默认下载到当前工作目录。</span><br><span class="line"></span><br><span class="line">（2）使用 yumdownloader 命令下载特定包</span><br><span class="line">如果你只需要下载仓库中的特定包，可以使用 yumdownloader 命令。同样地，首先确保安装了 yum-utils 包。</span><br><span class="line"></span><br><span class="line">sudo yum install yum-utils</span><br><span class="line">然后，使用 yumdownloader 下载特定包：</span><br><span class="line"></span><br><span class="line">sudo yumdownloader --destdir=/path/to/save/packages packagename</span><br><span class="line">--destdir=/path/to/save/packages 指定下载后包保存的路径。</span><br><span class="line">packagename 是你要下载的 RPM 包的名称。你可以多次使用 yumdownloader 下载多个包。</span><br><span class="line">类似地，如果不指定 --destdir，yumdownloader 将默认下载到当前工作目录。</span><br></pre></td></tr></table></figure><p>3、创建一个以当前时间日期.txt命名的文件（例如：20241231-20:30:00.txt）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# date +"%Y%m%d-%H:%M:%S"|xargs -i  touch &#123;&#125;.txt</span><br></pre></td></tr></table></figure><p>4、用指定命令表示，基本权限UGO中rwx对于目录以及普通文件的影响。（例如：普通文件r权限影响cat命令的使用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">文件：</span><br><span class="line">r：cat head tail vi/vim  grep less more sort  bash、sh、.和source执行</span><br><span class="line">w：echo vi/vim（不能修改保存） cat+重定向写入</span><br><span class="line">x：影响绝对路径执行脚本，不影响bash、sh、.和source执行（同时有rx才可绝对路径执行，而bash、sh、.和source只需有r权限可以执行） </span><br><span class="line">目录：</span><br><span class="line">r：ls </span><br><span class="line">w：mkdir touch echo写入创建文件 cat写入创建文件 vi/vim写入保存新文件</span><br><span class="line">x：cd   ls（会报错但是可以查看）  cat（查看目录内的文件）  mkdir touch （同时需要w x）</span><br></pre></td></tr></table></figure><p>5、思考都有什么情况会导致创建用户失败？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、权限问题，当前用户没有足够的权限，将无法成功创建新用户账号；</span><br><span class="line">2、用户名已存在，新的用户名将无效；</span><br><span class="line">3、无法访问/etc/passwd文件，访问权限不正确，可能导致无法创建新用户；</span><br><span class="line">4、用户配额限制，系统限制了可以创建的用户数量；</span><br><span class="line">5、资源不足，导致无法创建新用户。</span><br></pre></td></tr></table></figure><p>6、请描述下linux系统下源代码编译安装软件的大致步骤。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、安装配置编译环境，并下载对应的源码包</span><br><span class="line">2、编辑并安装</span><br><span class="line">3、启动对应服务（绝对路径）</span><br></pre></td></tr></table></figure><p>7、简述yum、rpm、源码安装的优缺点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">rpm：</span><br><span class="line">优点:</span><br><span class="line">下载安装包后，可以离线手动安装</span><br><span class="line">缺点:</span><br><span class="line">很多安装包有依赖性，装一个包就带连带着装其他包，大包套小包</span><br><span class="line">相比rpm安装来讲yum的安装更人性化，一般推荐yum联网安装</span><br><span class="line"></span><br><span class="line">yum：</span><br><span class="line">优点:</span><br><span class="line">yum最大的优势在于可以联网去下载所需要的rpm包，然后自动安装，安装东西方便快捷</span><br><span class="line">如果要安装的rpm包有依赖关系，yum会帮您解决掉这些依赖关系并依次安装所有rpm包</span><br><span class="line">缺点:</span><br><span class="line">1，yum安装的版本会比较低，一般不是最新版本</span><br><span class="line">2，yum安装过程人为无法干预，不能按需安装，源里面有什么就安装什么，</span><br><span class="line">3，不能自定义软件的模块和功能，不能自定义软件部署的路径，对后期的维护成本会增加</span><br><span class="line">4，需要维护yum源的网络库，找到合适的repo库，否则找不到安装软件</span><br><span class="line">5，大部分生产环境要求服务器的环境配置要一致，统一环境如果需要升级某个程序版本，一个脚本几条命令就可以解决。如果是yum安装，机房和机房之间，国家和国家之间，yum的库不能保持一致，会很麻烦的问题</span><br><span class="line"></span><br><span class="line">源码安装：</span><br><span class="line">优点:</span><br><span class="line">编译安装过程，可以设定参数，按照需求进行安装，安装的版本可以选择，灵活性比较大</span><br><span class="line">可以自定义部署的路径，进行统一的管理，减轻后期的维护工作量</span><br><span class="line">缺点:</span><br><span class="line">1，编译，安装，配置，部署比较复杂</span><br><span class="line">2，不能自动解决软件包之间的依赖关系</span><br><span class="line">3，由于安装包过新，或版本过低，或是其他问题，导致依赖的包没有，就要解决包的依赖问题可能装一个小东西，就要解决一堆包的依赖问题，花很多时间解决包的依赖问题</span><br><span class="line">4，不敢随便升级系统，升级系统可能会导致以前手动装的东西，不能用</span><br></pre></td></tr></table></figure><p>8、写出6个以上可以查看文件内容的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi/vim head tail cat less more sort</span><br></pre></td></tr></table></figure><p>9、通过百度了解Linux系统开机过程？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）硬件初始化</span><br><span class="line">（2）引导加载程序</span><br><span class="line">（3）内核初始化</span><br><span class="line">（4）启动systemd</span><br><span class="line">（5）用户空间启动</span><br></pre></td></tr></table></figure><p>10、通过百度了解怎么禁止远程root用户登录？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、执行备份</span><br><span class="line">使用cp命令来复制/etc/ssh/sshd_config文件复制一份并命名为sshd_config_bak。</span><br><span class="line">cp -p /etc/ssh/sshd config /etc/ssh/sshd config ba</span><br><span class="line">2、先新建一个普通用户并设置高强度密码，防止设备上只存在root用户可用时,无法远程访问</span><br><span class="line">useradd ldq</span><br><span class="line">passwd ldq</span><br><span class="line">3、编辑/etc/ssh/sshd_config文件</span><br><span class="line">编辑/etc/ssh/sshd_config文件，将PermitRootLogin的值修改为no并去掉注释：</span><br><span class="line">将PermitRootLogin设置为no，会禁止root用户通过SSH登录到系统。</span><br><span class="line">4、重启SSH服务</span><br><span class="line">在禁止root用户远程登录之前，确保至少有一个其他用户可以正常远程登录。这样可以确保在禁止root用户登录后，仍然可以通过其他用户账户来管理系统，以避免因为禁止root登录而导致无法远程访问系统的情况发生。</span><br></pre></td></tr></table></figure><h2 id="【命令实操题】"><a href="#【命令实操题】" class="headerlink" title="【命令实操题】"></a>【命令实操题】</h2><p>1.创建用户tom,jack,zhuzhuxia;zhuzhuxia用户的附加组为tom</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd tom</span><br><span class="line">[root@c-6 ~]# useradd jack</span><br><span class="line">[root@c-6 ~]# useradd zhuzhuxia -G tom</span><br><span class="line">[root@c-6 ~]# id zhuzhuxia</span><br><span class="line">uid=2212(zhuzhuxia) gid=2212(zhuzhuxia) 组=2212(zhuzhuxia),2210(tom)</span><br></pre></td></tr></table></figure><p>2.切换到用户tom,在/tmp目录下创建文件tom.txt (观察文件的归属和权限)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# su - tom</span><br><span class="line">[tom@c-6 ~]$ touch /tmp/tom.txt</span><br><span class="line">[tom@c-6 ~]$ ll /tmp/tom.txt</span><br><span class="line">-rw-rw-r--. 1 tom  tom     0 6月  29 09:30 tom.txt</span><br></pre></td></tr></table></figure><p>3.将tom创建的文件权限修改为rw-r—–</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[tom@c-6 ~]$ chmod 640 /tmp/tom.txt </span><br><span class="line">[tom@c-6 ~]$ ll /tmp/tom.txt </span><br><span class="line">-rw-r-----. 1 tom tom 0 6月  29 09:30 /tmp/tom.txt</span><br></pre></td></tr></table></figure><p>4.向tom创建的文件中写入内容”Tihs is tom file ,dont touch”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[tom@c-6 ~]$ echo "Tihs is tom file ,dont touch" &gt;/tmp/tom.txt </span><br><span class="line">[tom@c-6 ~]$ cat /tmp/tom.txt </span><br><span class="line">Tihs is tom file ,dont touch</span><br></pre></td></tr></table></figure><p>5.请问: jack,zhuzhuxia能不能查看文件的内容?</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jack不可以查看，tom是其他人，其他人无任何权限。zhuzhuxia可以查看，因为zhuzhuxia是tom组的成员，tom组具有查看权限。</span><br></pre></td></tr></table></figure><p>6.创建一个目录/opt/test目录，要求该目录的属组为it组，任何用户在该目录下创建文件继承该目录的属组？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /opt/test</span><br><span class="line">[root@c-6 ~]# groupadd it</span><br><span class="line">[root@c-6 ~]# chown .it /opt/test/</span><br><span class="line">[root@c-6 ~]# chmod g+s /opt/test/</span><br></pre></td></tr></table></figure><p>7.使用root用户创建目录/prov,修改属主为tom,属组为tom,权限为750</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown tom.tom /prov</span><br><span class="line">[root@c-6 ~]# chmod 750 /prov</span><br></pre></td></tr></table></figure><p>8.列出/home/下面的所有文件包括隐藏文件？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# ll -a /home/</span><br></pre></td></tr></table></figure><p>9.查看自己的ip地址，并解释ip地址的作用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# ip a</span><br></pre></td></tr></table></figure><p>确定一台主机在网络当中的位置<br>10.chown是用来做什么的？chmod是用来做什么的？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown：修改文件的属主（拥有者）和属组</span><br><span class="line">chmod：修改文件的UGO权限</span><br></pre></td></tr></table></figure><p>11.使用输入重定向的方式对alan.txt文件增加诗词《登鹳雀楼》。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# echo "《登鹳雀楼》" &gt;alan.txt</span><br></pre></td></tr></table></figure><p>12.执行命令’ cat  /etc/passwd   /opt/QF2206 ‘并将正确输出写到OK.txt,错误输出写到NO.txt文件中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cat /etc/passwd /opt/QF2206 1&gt;OK.txt 2&gt;NO.txt</span><br></pre></td></tr></table></figure><h2 id="计划任务【作业】"><a href="#计划任务【作业】" class="headerlink" title="计划任务【作业】"></a>计划任务【作业】</h2><p>1.计划每星期天早8点服务器定时重启，如何实现？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vi 1.sh</span><br><span class="line">/usr/sbin/reboot</span><br><span class="line">[root@c-6 ~]# crontab -e</span><br><span class="line">50      16      *       *       *       /root/2-1.sh</span><br></pre></td></tr></table></figure><p>2.某系统管理员需要每天做一定的重复工作，编制一个解决方案：<br>(1).从下午 4：50 删除/abc 目录下的全部子目录和全部文件；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vi 2-1.sh</span><br><span class="line">/usr/bin/rm -rf /abc/*</span><br><span class="line">[root@c-6 ~]# crontab -e</span><br><span class="line">50      16      *       *       *       /root/2-1.sh</span><br></pre></td></tr></table></figure><p>(2).每逢周一下午 5：50 将/data目录下的所有目录和文件归档并压缩为文件backup.tar.gz;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vi 2-2.sh</span><br><span class="line">/usr/bin/tar cvf backup.tar.gz ..data</span><br><span class="line">[root@c-6 ~]# crontab -e</span><br><span class="line">50      17      *       *       1       /root/2-2.sh</span><br></pre></td></tr></table></figure><p>(3).在早上 8：00 开机后启动crontab。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vi 3.sh</span><br><span class="line">/usr/bin/systemctl start crond</span><br><span class="line">[root@c-6 ~]# crontab -e</span><br><span class="line">0       8       *       *       *       /root/3.sh</span><br></pre></td></tr></table></figure><h2 id="【作业1】："><a href="#【作业1】：" class="headerlink" title="【作业1】："></a>【作业1】：</h2><p>1、alias<br>创建别名QF，使QF具有跟rm -rf一样的效果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# alias QF='rm -rf'</span><br></pre></td></tr></table></figure><p>2、history<br>该命令可以显示最多个历史命令？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000条 /etc/profile 46行可以修改</span><br></pre></td></tr></table></figure><p>3、mkdir<br>    a、在/root内创建目录dir-1、dir-2 ….dir-100</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /root/dir-&#123;1..100&#125;</span><br></pre></td></tr></table></figure><p>b、接下来在dir-1目录内创建A目录，在A目录内创建B目录（要求使用连级创建）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /root/dir-1/A/B -p</span><br></pre></td></tr></table></figure><p>4、touch<br>    a、在/root/dir-1/A/B内创建文件file-1 到 file-10，这10个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# touch /root/file-&#123;1..10&#125;</span><br></pre></td></tr></table></figure><p>b、在file-1文件内使用echo追加重定向的方式写入内容“Hi Linux”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# echo "Hi Linux" &gt;&gt; /root/file-1</span><br></pre></td></tr></table></figure><p>5、cp<br>    a、复制目录/root/dir-1到/opt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cp -rvf /root/dir-1 /opt/</span><br></pre></td></tr></table></figure><p>​    b、复制目录/root/dir-100到/opt并改名为QF2208</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cp -rvf dir-100 /opt/QF2208</span><br></pre></td></tr></table></figure><p>6、mv<br>    a、将/opt下的dir-1目录改名为TEST</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mv /opt/dir-1 /opt/TEST</span><br></pre></td></tr></table></figure><p>​    b、移动/opt下的QF2208目录到/root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mv /opt/TEST/ /root/</span><br></pre></td></tr></table></figure><p>7、rm<br>    删除/root下所有以dir开头的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# rm -rf /root/dir*</span><br></pre></td></tr></table></figure><p>8、cat<br>    以显示行号的方式查看/opt/TEST/A/B/file-1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cat -n /opt/TEST/A/B/file-1</span><br></pre></td></tr></table></figure><h2 id="【作业2】："><a href="#【作业2】：" class="headerlink" title="【作业2】："></a>【作业2】：</h2><p>This is my summer vacation. I intend to finish the operation.<br>Then, take a look at China’s famous novel.<br>Look at some day.<br>Of course, also want to play with the computer, watch TV.<br>Early every morning to get up and running to run, do other sports.<br>But it is conducive to our body!<br>But one thing should not be forgotten.<br>must help parents do the housework!<br>My holiday arrangements like?<br>something good?<br>give suggestions?</p><h3 id="一、使用Linux中的vim文件编辑器完成下题（先将上方内容粘贴你创建的文件内并保存。）："><a href="#一、使用Linux中的vim文件编辑器完成下题（先将上方内容粘贴你创建的文件内并保存。）：" class="headerlink" title="一、使用Linux中的vim文件编辑器完成下题（先将上方内容粘贴你创建的文件内并保存。）："></a>一、使用Linux中的vim文件编辑器完成下题（先将上方内容粘贴你创建的文件内并保存。）：</h3><p>​    1、将文章中的第五行内容复制并粘贴到最后一行下方。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yy  p</span><br></pre></td></tr></table></figure><p>​    2、删除第三行下方的所有内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dG</span><br></pre></td></tr></table></figure><p>​    3、替换文章中所有的to为TO</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">s/to/TO/</span></span><br></pre></td></tr></table></figure><p>​    4、将第一行内容另存到/opt下名为cp.txt    </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 w /opt/cp.txt</span><br></pre></td></tr></table></figure><p>​    5、强制退出不保存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q！</span><br></pre></td></tr></table></figure><h3 id="二、用户和组"><a href="#二、用户和组" class="headerlink" title="二、用户和组"></a>二、用户和组</h3><p>​    1、创建用户user01    </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd user01</span><br></pre></td></tr></table></figure><p>​    2、创建组QF2208、hr、qf,要求QF2208组的GID是2208</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# groupadd QF2208</span><br><span class="line">[root@c-6 ~]# groupadd hr</span><br><span class="line">[root@c-6 ~]# groupadd qf</span><br><span class="line">[root@c-6 ~]# groupmod -g 2208  QF2208</span><br></pre></td></tr></table></figure><p>3、创建用户user02，要求该用户主组为QF2208，附属组为hr，UID=2208，shell信息是/bin/bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd user02 -g QF2208 -G hr -u 2208 -s /bin/bash</span><br></pre></td></tr></table></figure><h2 id="【作业3】："><a href="#【作业3】：" class="headerlink" title="【作业3】："></a>【作业3】：</h2><p>1、使用root用户在/home下创建目录A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/A</span><br></pre></td></tr></table></figure><p>2、修改A目录的属组为QF2208</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown .QF2208 /home/A/</span><br></pre></td></tr></table></figure><p>3、创建A目录下的B目录并在A目录与B目录下都创建文件T-1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/A/B</span><br><span class="line">[root@c-6 ~]# touch /home/A/T-1</span><br><span class="line">[root@c-6 ~]# touch /home/A/B/T-1</span><br></pre></td></tr></table></figure><p>4、修改A目录下的所有文件属组都为QF2208</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown -R .QF2208 /home/A/</span><br></pre></td></tr></table></figure><p>5、修改目录A的权限为700</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chmod 700 /home/A</span><br></pre></td></tr></table></figure><p>6、修改B下的T-1文件权限为所有人都可以执行该文件 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chmod a+x /home/A/B/T-1</span><br><span class="line">[root@c-6 ~]# chmod a+r /home/A/B/T-1</span><br></pre></td></tr></table></figure><p>注：【针对与文件而言，如果要执行该文件，不仅需要该文件的X权限，而且同时需要该文件的r权限，否则执行权限不生效】</p><p>【针对与目录而言，如果要在该目录内创建文件或者删除文件，则需要该目录的W权限，而且同时需要该目录的执行权限，否则W权限不生效】</p><p>7、在/home下创建一个目录“D-1”，要求该目录的UGO限是000，目录的拥有者是root，所属组root。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# mkdir /home/D-1</span><br><span class="line">[root@c-6 ~]# chmod 000 /home/D-1</span><br><span class="line">[root@c-6 ~]# chown root.root /home/D-1/</span><br></pre></td></tr></table></figure><p>8、请使用root用户来创建用户alan、tom，并合理修改D-1目录的权限，使alan用户可以在D-1目录内创建文件，但是tom用户没有任何权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# useradd alan </span><br><span class="line">[root@c-6 ~]# useradd tom</span><br><span class="line">[root@c-6 ~]# chown alan /home/D-1/</span><br><span class="line">[root@c-6 ~]# chmod 300 /home/D-1/</span><br></pre></td></tr></table></figure><p>9、在8题的基础上继续修改权限，要求alan组成员可以在D-1目录内创建普通文件，但是只有普通文件对应的拥有者才能在该普通文件内写入内容，其他用户对没有有任何权限。（g+s o+t）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# chown .alan /home/D-1/</span><br><span class="line">[root@c-6 ~]# chmod 330 /home/D-1/</span><br><span class="line">[root@c-6 ~]# chmod o+t /home/D-1/</span><br></pre></td></tr></table></figure><p>10、使用输入重定向的方式对alan.txt文件增加诗词《静夜思》。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cat &gt; /root/alan.txt &lt;&lt;EOF</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">《静夜思》</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">EOF</span></span><br></pre></td></tr></table></figure><p>12.执行命令’ cat  /etc/passwd  /opt/QF2206’并将正确输出写到/OK.txt,错误输出写到NO.txt文件中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cat /etc/passwd /opt/QF2206 1&gt;/root/OK.txt 2&gt;/root/NO.txt</span><br></pre></td></tr></table></figure><h2 id="【作业4】："><a href="#【作业4】：" class="headerlink" title="【作业4】："></a>【作业4】：</h2><p>1、根据一下信息进行推导：<br>load average: 1.68, 0.64, 0.26<br>当前服务器CPU是压力递增还是压力递减？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器CPU是压力递增</span><br></pre></td></tr></table></figure><p>2、搜索系统中文件大小再500M以上文件名以e结尾的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find /   -name "*e"  -size +500M</span><br><span class="line">/proc/kcore</span><br></pre></td></tr></table></figure><p>3、查看文件/etc/passwd 将包含/bin/bash的行保存到/root/ABC.txt文件中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# cat /etc/passwd |grep "/bin/bash" |xargs -i echo &#123;&#125;  &gt;/root/ABC.tx</span><br></pre></td></tr></table></figure><p>4、【扩展】<br>搜索系统中所有以conf结尾的文件并将小于1M的文件打包压缩为gz格式，保存到/opt/abc.tar.gz文件中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find / -name "*conf" -size -1M |xargs tar -czvf  ../opt/abc.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件查找、打包压缩和链接文件</title>
    <link href="https://l66stbz.github.io/2024/06/28/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9%E5%92%8C%E9%93%BE%E6%8E%A5%E6%96%87%E4%BB%B6/"/>
    <id>https://l66stbz.github.io/2024/06/28/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9%E5%92%8C%E9%93%BE%E6%8E%A5%E6%96%87%E4%BB%B6/</id>
    <published>2024-06-28T13:00:00.000Z</published>
    <updated>2024-07-01T13:32:54.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件查找与打包压缩"><a href="#文件查找与打包压缩" class="headerlink" title="文件查找与打包压缩"></a>文件查找与打包压缩</h1><h2 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h2><h3 id="grep-文件内容（数据信息）过滤"><a href="#grep-文件内容（数据信息）过滤" class="headerlink" title="grep:  文件内容（数据信息）过滤"></a>grep:  文件内容（数据信息）过滤</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# grep 'root' /etc/passwd  #从/etc/passwd文件中过滤root字段，查找的是文件内容</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="which、type-a-和whereis"><a href="#which、type-a-和whereis" class="headerlink" title="which、type -a 和whereis"></a>which、type -a 和whereis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]#which ls                #查看命令的别名和存放路径，</span><br><span class="line">alias ls='ls --color=auto'</span><br><span class="line">        /usr/bin/ls</span><br><span class="line">[root@c-6 ~]# type -a ls#效果与which一致</span><br><span class="line">ls 是 `ls --color=auto' 的别名</span><br><span class="line">ls 是 /usr/bin/ls</span><br><span class="line">  </span><br><span class="line">[root@c-6 ~]# whereis ls            #查看命令以及其相关文件</span><br><span class="line">ls: /usr/bin/ls /usr/share/man/man1/ls.1.gz</span><br></pre></td></tr></table></figure><h3 id="find详解-文件查找，针对文件名"><a href="#find详解-文件查找，针对文件名" class="headerlink" title="find详解:   文件查找，针对文件名"></a>find详解:   文件查找，针对文件名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="meta">#</span><span class="bash">find 路径 条件 跟条件相关的操作符   [-<span class="built_in">exec</span> 动作]</span></span><br><span class="line">路径:</span><br><span class="line">1.默认不写路径时查找的是当前路径.</span><br><span class="line">2.加路径。</span><br><span class="line">条件：</span><br><span class="line">1.指定的名称  -name</span><br><span class="line">2.文件类型  -type</span><br><span class="line">3.权限</span><br><span class="line">4.时间</span><br></pre></td></tr></table></figure><h5 id="按文件名"><a href="#按文件名" class="headerlink" title="按文件名"></a>按文件名</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find / -name "ldq"  #从根开始查找名为ldq的文件</span><br><span class="line">/root/ldq</span><br><span class="line">/var/spool/mail/ldq</span><br><span class="line">/home/ldq</span><br><span class="line">[root@c-6 ~]# find /mnt -name "centos"   #查找mnt下的名为centos的文件</span><br><span class="line">/mnt/centos</span><br><span class="line">[root@c-6 ~]# find /mnt -iname "centos"   #-iname不区分大小写</span><br><span class="line">/mnt/centos</span><br><span class="line">/mnt/Centos</span><br><span class="line">[root@c-6 ~]# find /root -name "*.txt"   #*通配符，查找root下所有以.txt结尾的文件</span><br><span class="line">/root/2024-06-26 09:25:17.txt</span><br><span class="line">/root/20240626-09:26:31.txt</span><br></pre></td></tr></table></figure><h5 id="按文件大小-size"><a href="#按文件大小-size" class="headerlink" title="按文件大小    -size"></a>按文件大小    -size</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find / -size +5M#大于50M</span><br><span class="line">[root@c-6 ~]# find /etc -size 5M#约等于5M</span><br><span class="line">[root@c-6 ~]# find /etc -size -5M      #小于5M</span><br><span class="line">[root@c-6 ~]# find / -size +3M -a -size -5M  #查找/下面大于3M而且小于5M的文件</span><br><span class="line">-a：add</span><br><span class="line">[root@c-6 ~]# find / -size -1M -o -size +80M #查找/下面小于1M或者大于80M的文件</span><br><span class="line">-o：or</span><br><span class="line">[root@c-6 ~]# find / -size -3M -a -name "*.txt" #查找/ 下面小于3M而且名字结尾是.txt的文件</span><br></pre></td></tr></table></figure><h5 id="按时间查找"><a href="#按时间查找" class="headerlink" title="按时间查找"></a>按时间查找</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">按时间找(atime,mtime,ctime)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 天</span></span><br><span class="line">-atime=  access访问时间</span><br><span class="line">-mtime = modify改变时间  内容修改时间会改变</span><br><span class="line">-ctime =change修改时间   属性修改时间会改变</span><br><span class="line"></span><br><span class="line">-amin  #分钟</span><br><span class="line">-mmin</span><br><span class="line">-cmin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find /opt -mtime +5#修改时间5天之前</span><br><span class="line">[root@c-6 ~]# find /opt -atime +1     #访问时间1天之前</span><br><span class="line">[root@c-6 ~]# find . -mtime -2#当前目录下修改时间2天之内</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]# find . -amin +1         #当前目录下访问时间在1分钟之前</span><br><span class="line">[root@c-6 ~]# find /opt -amin -4      #访问时间在4分钟之内</span><br><span class="line">[root@c-6 ~]# find /opt -mmin -2      #修改时间在2分钟之内</span><br></pre></td></tr></table></figure><h5 id="按文件类型"><a href="#按文件类型" class="headerlink" title="按文件类型"></a>按文件类型</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find /dev -type f#f普通文件</span><br><span class="line">[root@c-6 ~]# find / -type f -size -1M -o -name "*.txt"</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]# find /dev -type d#d目录</span><br><span class="line">[root@c-6 ~]# find /etc/ -type d -name "*.conf.d"</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]# find /etc -type l#l链接</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]# find /dev -type b#b块设备</span><br><span class="line">[root@c-6 ~]# find /dev/ -type b -name "sd*"</span><br></pre></td></tr></table></figure><h5 id="按文件权限"><a href="#按文件权限" class="headerlink" title="按文件权限"></a>按文件权限</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find . -perm 644            #.是当前目录    精确查找644</span><br></pre></td></tr></table></figure><h5 id="找到后处理的动作"><a href="#找到后处理的动作" class="headerlink" title="找到后处理的动作"></a>找到后处理的动作</h5><h6 id="find使用exec"><a href="#find使用exec" class="headerlink" title="find使用exec"></a>find使用exec</h6><p>find    目录   选项   参数     -exec      动作  ;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find /etc -name "ifcfg*" -exec cp -rf &#123;&#125; /tmp \; #exec命令对之前查找出来的文件做进一步操作-----  查找带ifcfg开头的文件复制到tmp下</span><br><span class="line">[root@c-6 ~]# touch /home/test&#123;1..20&#125;.txt</span><br><span class="line">[root@c-6 ~]# find /home/ -name test* -exec rm -rf &#123;&#125; \; #｛｝为前面查找到的内容,\; 格式</span><br></pre></td></tr></table></figure><h6 id="find使用xargs"><a href="#find使用xargs" class="headerlink" title="find使用xargs"></a>find使用xargs</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# find /etc -name "ifcfg*" | xargs -i &#123;&#125;   /tmp  #利用管道将etc下查找到的以ifcfg开头的文件复制到tmp目录下</span><br><span class="line">[root@c-6 ~]# touch /home/test&#123;1..20&#125;.txt</span><br><span class="line">[root@c-6 ~]# # find /home/ -name "test*" | xargs -i cp &#123;&#125; /tmp/ #找到之后删除处理xargs 参数传递</span><br></pre></td></tr></table></figure><p>两种方法最终实现的效果是一样的，但是他们中间的实现过程是不一样的，假如用find命令将要查找出来的文件有100个，需要将他们移动到指定位置。使用管道的话直接查出来100个文件，然后一次性将100个文件全部移动到指定位置。如果使用exec的话，是查到一个移动一个，所以最终他会一共移动100次。这就是两者之间的区别。</p><h1 id="打包压缩"><a href="#打包压缩" class="headerlink" title="打包压缩"></a>打包压缩</h1><p>打包压缩一起：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar cvzf file.tar.gz 源文件</span><br><span class="line">tar cvjf file.tar.bz2 源文件</span><br></pre></td></tr></table></figure><p>解压+解包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf 压缩文件 [-C 解压路径]</span><br><span class="line">tar xvjf 压缩文件 [-C 解压路径]</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# tar cvzf  /opt/no.tar.gz  /root/NO.txt </span><br><span class="line">tar: 从成员名中删除开头的“/”</span><br><span class="line">/root/NO.txt</span><br><span class="line">[root@c-6 ~]# ls /opt/</span><br><span class="line">lftp-4.4.8-14.el7_9.x86_64.rpm  no.tar.gz  QF2208  test</span><br><span class="line">[root@c-6 ~]# tar xvzf /opt/no.tar.gz  -C /opt/</span><br><span class="line">root/NO.txt</span><br><span class="line">[root@c-6 ~]# ls /opt/root/</span><br><span class="line">NO.txt</span><br></pre></td></tr></table></figure><p>可以发现在打包压缩的时候提示了“tar: 从成员名中删除开头的/”这样一句话，但是后续可以看到还是打包压缩成功了。但是我们会发现我们原本只想打包的NO.txt文件，又多打包了他的上一级目录，虽说里边没有别的文件，但是结果并不是我们想要的。要想解决这种情况，我们需要在打包压缩时，源文件的路径表示时使用相对路径即可。如果使用的绝对路径的话就会出现如上情况。</p><h3 id="按时间创建目录或者文件"><a href="#按时间创建目录或者文件" class="headerlink" title="按时间创建目录或者文件"></a>按时间创建目录或者文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir `date +%F`-upload</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> touch file-`date +%F`.txt</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# tar czf /tmp/`date +%F-%T`-etc.tar.gz /etc/  #将etc目录打包放到/tmp目录下，并以当前时间开头命名</span><br></pre></td></tr></table></figure><h1 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查找系统内所有.gz结尾的文件并备份到/tmp/backup目录下</span><br><span class="line">[root@c-6 ~]# find / -name "*.gz"|xargs -i cp -rvf &#123;&#125; /tmp/backup</span><br><span class="line">查找10天以内被修改过的.txt结尾的文件</span><br><span class="line">[root@c-6 ~]# find / -mtime +10 -name "*.txt"</span><br></pre></td></tr></table></figure><h1 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一般情况下，文件名和inode号码是"一一对应"关系，每个inode号码对应一个文件名。但是，Unix/Linux系统允许，多个文件名指向同一个inode号码。</span><br><span class="line">这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件；但是，删除一个文件名，不影响另一个文件名的访问。这种情况就被称为"硬链接"（hard link）。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">创建硬链接语法：ln   源文件  链接文件</span><br><span class="line">[root@c-6 ~]# echo 222 &gt; /file2</span><br><span class="line">[root@c-6 ~]# ll -i /file2                 #-i：显示inode编号或者stat命令</span><br><span class="line">34045994 -rw-r--r-- 1 root root 4 Dec 29 20:52 file2</span><br><span class="line">[root@c-6 ~]# ln /file2 /file2-h1</span><br><span class="line">[root@c-6 ~]# ll -i /file2 /file2-h1       #查看inode号</span><br><span class="line">34045994 -rw-r--r-- 2 root root 4 7月  30 22:25 /file2</span><br><span class="line">34045994 -rw-r--r-- 2 root root 4 7月  30 22:25 /file2-h1</span><br><span class="line">[root@c-6 ~]# rm -rf /file2        #删除源文件</span><br><span class="line">[root@c-6 ~]# ll -i /file2-h1      #查看链接文件</span><br><span class="line">34045994 -rw-r--r--. 3 root root 4 Nov  9 15:01 /file2-h1</span><br><span class="line">[root@c-6 ~]# cat /file2-h1        #删除后仍可以看到内容</span><br><span class="line">222</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注：硬链接 </span><br><span class="line">1. 不能跨文件系统</span><br><span class="line">2. 不支持目录做硬链接</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">除了硬链接以外，还有一种特殊情况</span><br><span class="line">文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。因此，无论打开哪一个文件，最终读取的都是文件B。这时，文件A就称为文件B的"软链接"（soft link）或者"符号链接（symbolic link）。</span><br><span class="line">这意味着，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错："No such file or directory"。这是软链接与硬链接最大的不同：文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode"链接数"不会因此发生变化。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">语法：ln -s  源文件  链接文件</span><br><span class="line">[root@qfedu.com ~]# echo 111 &gt; /file1</span><br><span class="line">[root@qfedu.com ~]# ll -i /file1 </span><br><span class="line">545310 -rw-r--r-- 1 root root 4 7月  30 22:06 /file1</span><br><span class="line">[root@qfedu.com ~]# ln -s /file1 /file11#将文件file1软链接到file11</span><br><span class="line">[root@qfedu.com ~]# ll /file11 </span><br><span class="line">lrwxrwxrwx 1 root root 6 Dec 20 17:58 /file11 -&gt; /file1</span><br><span class="line">[root@qfedu.com ~]# ll -i /file11 /file1    #查看inode号</span><br><span class="line">545310 -rw-r--r-- 1 root root 4 7月  30 22:06 /file1</span><br><span class="line">545343 lrwxrwxrwx 1 root root 6 7月  30 22:06 /file11 -&gt; /file1</span><br><span class="line">[root@qfedu.com ~]# cat /file1 </span><br><span class="line">111</span><br><span class="line">[root@qfedu.com ~]# cat /file11 </span><br><span class="line">111</span><br><span class="line">[root@qfedu.com ~]# rm -rf /file11 #取消软连接。</span><br><span class="line">[root@qfedu.com ~]# cat /file1     #源文件不受影响</span><br><span class="line">111</span><br><span class="line">[root@qfedu.com ~]# ln -s /file1 /file11</span><br><span class="line">[root@qfedu.com ~]# rm -rf /file1  #删除源文件</span><br><span class="line">[root@qfedu.com ~]# ll /file11 </span><br><span class="line">lrwxrwxrwx 1 root root 6 Dec 20 17:58  /file11 -&gt; /file1   #已失效</span><br><span class="line"><span class="meta">#</span><span class="bash">给目录设置软链接必须是绝对路劲</span></span><br><span class="line">[root@qfedu.com ~]# ln -s /root/aaa/ /usr/bbb</span><br><span class="line">[root@qfedu.com ~]# ll /usr/bbb</span><br><span class="line">lrwxrwxrwx 1 root root 10 Dec 29 21:08 /usr/bbb -&gt; /root/aaa/</span><br><span class="line">[root@qfedu.com ~]# rm -rf /usr/bbb  #取消链接</span><br><span class="line">注意:删除目录链接时目录后面加“/”是删除目录内所有内容，不加是删除链接</span><br></pre></td></tr></table></figure><p><strong>面试：软链接和硬链接的区别：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 软链接可以跨文件系统，硬链接不可以；</span><br><span class="line">- 软链接可以对目录进行连接，硬链接不可以；</span><br><span class="line">- 删除源文件之后，软链接失效，硬链接无影响；</span><br><span class="line">- 两种链接都可以通过命令 ln 来创建；</span><br><span class="line">- ln 默认创建的是硬链接；</span><br><span class="line">- 使用 -s 参数可以创建软链接。</span><br><span class="line">- 硬链接两者之间iNode号相同，软链接两者之间iNode号不同。</span><br><span class="line">- 软链接删除目录链接时目录后面加“/”是删除目录内所有内容，不加是删除链接。</span><br><span class="line">- 给目录设置软链接必须是绝对路劲</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux计划任务和日志</title>
    <link href="https://l66stbz.github.io/2024/06/27/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%92%8C%E6%97%A5%E5%BF%97/"/>
    <id>https://l66stbz.github.io/2024/06/27/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%92%8C%E6%97%A5%E5%BF%97/</id>
    <published>2024-06-27T13:00:00.000Z</published>
    <updated>2024-06-27T13:05:06.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h1><p>计划任务分为一次性和循环性的计划任务</p><h2 id="一次调度执行—–at"><a href="#一次调度执行—–at" class="headerlink" title="一次调度执行—–at"></a>一次调度执行—–at</h2><p>作用:  计划任务主要是做一些周期性的任务，目前最主要的用途是定期备份数据 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法格式</span><br><span class="line">at &lt;时间规格&gt;</span><br><span class="line">  now +5min</span><br><span class="line">  teatime tomorrow (teatime is 16:00)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例1: </span><br><span class="line">[root@linux-server ~ ]# yum -y install at</span><br><span class="line">[root@linux-server ~]# systemctl status atd    #查看启动状态</span><br><span class="line">[root@linux-server ~ ]# systemctl start atd#首先要启动服务</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# at now +1min    #一分钟后开始执行</span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> useradd uuuu  </span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> &lt;EOT&gt;     <span class="comment">#Ctrl+D退出</span></span></span><br><span class="line">job 1 at Sat Mar 21 22:34:00 2015</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# id uuuu   #查看是否执行成功</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">例2: </span><br><span class="line">[root@linux-server ~]# vim at.jobs </span><br><span class="line">useradd u99 </span><br><span class="line">useradd u00 </span><br><span class="line">touch /a.txt</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# at 20:33 &lt; at.jobs  #执行该文件内的计划</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">例3:</span><br><span class="line">1. 准备sudo用户</span><br><span class="line">   [root@linux-server ~]# id jack</span><br><span class="line">   uid=1007(jack) gid=1012(jack) groups=1012(jack)</span><br><span class="line">   [root@linux-server ~]# useradd jack   #如果不存在创建</span><br><span class="line">   [root@linux-server ~]# visudo</span><br><span class="line">     91 ## Allow root to run any commands anywhere</span><br><span class="line">     92 root    ALL=(ALL)       ALL</span><br><span class="line">     93 jack    ALL=(ALL)       NOPASSWD: ALL  #添加内容</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# su - jack</span><br><span class="line"></span><br><span class="line">2. 以sudo 用户jack创建at任务</span><br><span class="line">   [jack@linux-server ~]$ vim jack.at</span><br><span class="line">   sudo useradd u200</span><br><span class="line">   sudo useradd u300</span><br><span class="line">   sudo touch /home/jack.txt</span><br><span class="line">   [jack@linux-server ~]$ at 20:38 &lt; jack.at</span><br></pre></td></tr></table></figure><p>注：visudo文件中切记NOPASSWD必须要写，否则会报错。如下图。这是因为执行计划时是在后台的一个新建终端中执行的，且我们不能查看和切换到这个终端。因为其他用户在执行脚本时会需要输入密码，而我们又不能切换到该终端输入密码，所以计划最终将会无法执行。</p><p><strong><img src="/2024/06/27/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%92%8C%E6%97%A5%E5%BF%97/1.png" class></strong></p><h4 id="查看一次性计划任务"><a href="#查看一次性计划任务" class="headerlink" title="查看一次性计划任务"></a>查看一次性计划任务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> atq</span></span><br><span class="line">2Tue Aug  9 14:29:00 2022 a root</span><br></pre></td></tr></table></figure><h4 id="删除一次性计划任务"><a href="#删除一次性计划任务" class="headerlink" title="删除一次性计划任务"></a>删除一次性计划任务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> atrm  序号</span></span><br><span class="line">例如：</span><br><span class="line"><span class="meta">#</span><span class="bash"> atrm  7</span></span><br></pre></td></tr></table></figure><h2 id="循环调度执行cron-用户级"><a href="#循环调度执行cron-用户级" class="headerlink" title="循环调度执行cron  用户级"></a>循环调度执行cron  用户级</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">安装软件</span><br><span class="line">    [root@qfedu.com ~]#  yum -y install crontabs  #如果软件不存在安装(默认已安装且启动)</span><br><span class="line">服务相关操作</span><br><span class="line">systemctl 相关指令  服务名（具体命令如下，下面以crond服务为例，后边的.service可省略）</span><br><span class="line"></span><br><span class="line">    systemctl start crond.service  #开启crond服务</span><br><span class="line">    systemctl restart crond.service  #重启crond服务</span><br><span class="line">    systemctl status crond.service  #查看crond服务的状态</span><br><span class="line">    systemctl enable crond.service  #使crond服务开机自启</span><br><span class="line">    systemctl disable crond.service  #关闭crond服务的开机自启</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# systemctl status crond.service  #查看服务状态，该服务默认是随系统启动的</span><br><span class="line">[root@linux-server ~]# ps -ef(或aux) | grep crond </span><br><span class="line">root        755      1  0 20:18 ?        00:00:00 /usr/sbin/crond -n</span><br><span class="line"><span class="meta">#</span><span class="bash">crond进程每分钟会处理一次计划任务</span></span><br><span class="line"></span><br><span class="line">各用户计划任务文件存储位置：</span><br><span class="line">[root@linux-server ~]# cd /var/spool/cron/</span><br><span class="line"></span><br><span class="line">管理方式： </span><br><span class="line">crontab -l //列出当前用户的所有计划任务</span><br><span class="line">crontab -r //删除当前用户所有的计划任务</span><br><span class="line">crontab -e //编辑当前用户的计划任务</span><br><span class="line">crontab -u username //去管理其他用户的计划任务，只有root可以使用</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法格式 :</span><br><span class="line">Minutes   Hours    Day-of-Month    Month    Day-of-Week    Command </span><br><span class="line"> 分钟     小时        日 月   周   执行的命令，最好是命令的绝对路径</span><br><span class="line"> 0-59  0-23    1-31          1-12    0-7</span><br><span class="line"></span><br><span class="line">时间：</span><br><span class="line">*：每</span><br><span class="line">*/5 每隔分钟#/会先执行一遍再算隔多久再执行，一般不用于周</span><br><span class="line">，：不同的时间段      #下方实例中有用到</span><br><span class="line">- ： 表示范围        #下方实例有用到</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# vim /home/soso.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">touch /opt/a.txt</span><br><span class="line">[root@c-6 ~]# chmod a+x /home/soso.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# crontab -e#给用户设置多个计划任务</span><br><span class="line"><span class="meta">#</span><span class="bash">每天6:00执行</span></span><br><span class="line">0 6 * * *  /home/soso.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">每天8:40执行</span></span><br><span class="line">40 8 * * * /home/soso.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">每周六凌晨4:00执行</span></span><br><span class="line">0 4 * * 6  /home/soso.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">每周一到周五9:30</span></span><br><span class="line">30 9 * * 1-5  /home/soso.sh</span><br><span class="line"></span><br><span class="line"><span class="meta"> #</span><span class="bash">每月1,5,8号的2:00整执行</span></span><br><span class="line">00 02 1,5,8 * * /home/soso.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# crontab -l      #列出当前用户所有计划任务</span><br></pre></td></tr></table></figure><p>给其他用户设置计划任务(不指定-u则默认为当前用户)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# crontab -u jack -e  #使用jack用户创建</span><br><span class="line">[root@c-6 ~]# crontab -u jack -l  #查看jack用户的计划任务</span><br><span class="line">[root@c-6 ~]# crontab -r  #删除当前用户的计划任务</span><br><span class="line">[root@c-6 ~]# crontab -u jack -r #删除jack用户的计划任务</span><br></pre></td></tr></table></figure><p>/etc/crontab中是系统的计划任务，由system用户执行的。同时有计划任务格式与解释可参考。如下：</p><p><strong><img src="/2024/06/27/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%92%8C%E6%97%A5%E5%BF%97/2.png" class></strong></p><h1 id="日志轮转-切割"><a href="#日志轮转-切割" class="headerlink" title="日志轮转(切割)"></a>日志轮转(切割)</h1><h2 id="日志有什么用？"><a href="#日志有什么用？" class="headerlink" title="日志有什么用？"></a>日志有什么用？</h2><p>Linux系统日志对管理员来说，是了解系统运行的主要途径，因此需要对 Linux 日志系统有个详细的了解。Linux 系统内核和许多程序会产生各种错误信息、告警信息和其他的提示信息，这些各种信息都应该记录到日志文件中，完成这个过程的程序就是 rsyslog，rsyslog 可以根据日志的类别和优先级将日志保存到不同的文件中。</p><h2 id="日志管理基础"><a href="#日志管理基础" class="headerlink" title="日志管理基础"></a>日志管理基础</h2><p>rsyslog 负责日志数据分流管理 【服务】<br>logrotate  负责日志切割 【命令】</p><h2 id="日志系统rsyslog"><a href="#日志系统rsyslog" class="headerlink" title="日志系统rsyslog"></a>日志系统rsyslog</h2><h3 id="处理日志的进程"><a href="#处理日志的进程" class="headerlink" title="处理日志的进程"></a>处理日志的进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsyslogd：绝大部分日志记录，和系统操作有关，安全，认证sshd,su，计划任务at,cron... httpd/nginx/mysql: 可以自己的方式记录日志</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# ps aux |grep rsyslogd</span><br><span class="line">root        752  0.0  0.2 216440  5548 ?        Ssl  20:18   0:00 /usr/sbin/rsyslogd -n</span><br><span class="line"></span><br><span class="line">日志配置主文件:</span><br><span class="line">/etc/rsyslog.conf</span><br></pre></td></tr></table></figure><h3 id="常见的日志文件-系统、进程、应用程序"><a href="#常见的日志文件-系统、进程、应用程序" class="headerlink" title="常见的日志文件(系统、进程、应用程序)"></a>常见的日志文件(系统、进程、应用程序)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/messages        #动态查看日志文件的尾部，系统主日志文件</span><br><span class="line">tail -f /var/log/secure            #记录认证、安全的日志</span><br><span class="line">tail /var/log/maillog            #跟邮件postfix相关</span><br><span class="line">tail /var/log/cron                #crond、at进程产生的日志</span><br><span class="line">tail /var/log/yum.log                       #yum的日志</span><br><span class="line">/var/log/boot.log                           #系统启动过程日志记录存放</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]#w   #当前登录的用户 /var/log/wtmp</span><br><span class="line">[root@c-6 ~]#last   #最近登录的用户 /var/log/btmp</span><br><span class="line">第一列，用户名；</span><br><span class="line">第二列，终端位置，/pts/0 (伪终端)意味着从诸如ssh或者telnet的远程链接的用户，tty(teletypewriter)意味着直接连接到计算机或者本地链接的用户；</span><br><span class="line">第三列，登录的ip或者内核。</span><br><span class="line">第四列，开始时间；</span><br><span class="line">第五列，结束时间(still login in 还未退出 down 直到正常关机 crash 直到强制关机)；</span><br><span class="line">[root@c-6 ~]#lastlog   #所有用户的登录情况 /var/log/lastlog</span><br></pre></td></tr></table></figure><h3 id="日志优先级"><a href="#日志优先级" class="headerlink" title="日志优先级"></a>日志优先级</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">日志级别分为以下几种：</span><br><span class="line">yum.log</span><br><span class="line">0 debug             #有调试信息的，日志信息最多</span><br><span class="line">1 info              #一般信息的日志，最常用</span><br><span class="line">2 notice            #最具有重要性的普通条件的信息</span><br><span class="line">3 warning           #警告级别</span><br><span class="line">4 err               #错误级别，阻止某个功能或者模块不能正常工作的信息</span><br><span class="line">5 crit              #严重级别，阻止整个系统或者整个软件不能工作的信息</span><br><span class="line">6 alert             #需要立刻修改的信息</span><br><span class="line">7 emerg             #内核崩溃等严重信息</span><br><span class="line">none                #什么都不记录</span><br></pre></td></tr></table></figure><h2 id="logrotate日志轮转"><a href="#logrotate日志轮转" class="headerlink" title="logrotate日志轮转"></a>logrotate日志轮转</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">什么是日志轮转？ 自动切日志</span><br><span class="line">注：可以针对任何日志文件（rsyslog 日志、Nginx访问或错误日志...）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一、logrotate (轮转，日志切割) </span><br><span class="line">1. 如果没有日志轮转，日志文件会越来越大</span><br><span class="line">2. 将丢弃系统中最旧的日志文件，以节省空间 </span><br><span class="line">3. logrotate本身不是系统守护进程，它是通过计划任务crond每天执行</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">logrotate 配置文件：</span><br><span class="line">主配置文件：/etc/logrotate.conf (决定每个日志文件如何轮转)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">配置日志轮转</span><br><span class="line">[root@linux-server ~]# vim /etc/logrotate.conf</span><br><span class="line">weekly     #轮转的周期，一周轮转，单位有年,月,日 </span><br><span class="line">rotate 4#保留4份 </span><br><span class="line">create#轮转后创建新文件 </span><br><span class="line">dateext             #使用日期作为后缀 </span><br><span class="line"><span class="meta">#</span><span class="bash">compress<span class="comment">#日志轮替时,旧的日志进行压缩 </span></span></span><br><span class="line">include /etc/logrotate.d   #包含该目录下的配置文件,会引用该目录下面配置的文件</span><br><span class="line"></span><br><span class="line">/var/log/wtmp &#123;          #对该日志文件设置轮转的方法    </span><br><span class="line"> monthly                #一月轮转一次  </span><br><span class="line"> minsize 1M            #最小达到1M才轮转,否则就算时间到了也不轮转</span><br><span class="line"> create 0664 root utmp        #轮转后创建新文件，并设置权限   </span><br><span class="line"> rotate 2                #保留2份 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/var/log/btmp &#123;    </span><br><span class="line"> missingok              #丢失不提示    </span><br><span class="line"> monthly                </span><br><span class="line"> create 0600 root utmp        </span><br><span class="line"> rotate 1                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性说明："><a href="#属性说明：" class="headerlink" title="属性说明："></a>属性说明：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">配置说明</span><br><span class="line">daily轮转周期，每天轮转</span><br><span class="line">weekly轮转周期，一周轮转</span><br><span class="line">monthly轮转周期，每月轮转</span><br><span class="line">yearly轮转周期，一年轮转</span><br><span class="line">rotate 数字保留的日志文件的个数，0 指没有备份</span><br><span class="line">create轮转后创建新文件，旧文件改名</span><br><span class="line">dateext以时间作为文件扩展名（date 时间、extend 扩展）</span><br><span class="line">compress日志轮替时，压缩旧的日志</span><br><span class="line">include /etc/logrotate.d包含该目录下的子配置文件</span><br><span class="line">maxsize 1M达到1M才轮转（date跟max是或的关系）</span><br><span class="line">minsize 30k最小达到30k轮转（date跟min同时满足才轮转）</span><br><span class="line">size 大小日志只有大于指定大小才进行日志轮替，而不是按照时间轮替</span><br><span class="line">create 0600 root utmp</span><br><span class="line">create mode owner group轮转后创建新日志，并设置权限。权限、属主、属组</span><br><span class="line">missingok丢失不提示</span><br><span class="line">notifempty空文件不轮转</span><br><span class="line">missingok如果日志不存在，则忽略该日志的警告信息</span><br><span class="line">mail address当日志轮替时，输出内容通过邮件发送到指定的邮件地址</span><br><span class="line">sharedscripts在此关键字之后的脚本只执行一次</span><br><span class="line">prerotate/endscript在日志轮替之前执行脚本命令，endscript 标识 prerotate 脚本结束</span><br><span class="line">postrotate/endscript在日志轮替之后执行脚本命令，endscrip i标识 postrotate 脚本结束</span><br></pre></td></tr></table></figure><p>范例1：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">轮转文件/var/log/yum.log</span><br><span class="line">[root@c-6 ~]# vi /etc/logrotate.d/yum </span><br><span class="line">/var/log/yum.log &#123;</span><br><span class="line">    dateext</span><br><span class="line">    daily</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    maxsize 3k</span><br><span class="line">    rotate 2</span><br><span class="line">    create 0600 root root</span><br><span class="line">&#125;</span><br><span class="line">测试：</span><br><span class="line">[root@c-6 ~]# /usr/sbin/logrotate   -f  /etc/logrotate.conf  #手动轮转，-f为强制，无视轮转规则</span><br><span class="line">[root@c-6 ~]# ls /var/log/yum*</span><br><span class="line">/var/log/yum.log  /var/log/yum.log-20240627</span><br><span class="line">[root@c-6 ~]# grep yum /var/lib/logrotate/logrotate.status #查看记录所有日志文件最近轮转的时间</span><br><span class="line">"/var/log/yum.log" 2024-6-27-20:20:36</span><br><span class="line">注：一天是可以进行多次切割的，带dateext属性第一次切割是可以成功的，但是第二次开始的切割就不能成功切割了，加上-f强制也不行的，这是因为有一个保护机制，他是不能覆盖的。要想继续切割就把dateext属性给去掉，这样就可以了，因为不再以今天的日期命名，所以也就不会存在覆盖了。</span><br></pre></td></tr></table></figure><h1 id="ssh远程管理服务"><a href="#ssh远程管理服务" class="headerlink" title="ssh远程管理服务"></a>ssh远程管理服务</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssh-server  提供服务</span><br><span class="line">openssh-clients   客户端</span><br><span class="line">sshd服务的端口号----22</span><br><span class="line"></span><br><span class="line">这里如何理解谁是服务端谁是客户端呢？可以这样想，A机器要远程连接B机器，A机器可以在B机器上看视频玩游戏，并且占用的是B机器的内存。相当于是B机器为A机器提供了看视频玩游戏的服务，A机器享受到了B机器的服务，所以B机器是服务端，A机器为客户端。</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@c-6 ~]# yum install -y openssh*   #此处只装上述两个包即可，无需装这么多</span><br><span class="line">1.服务器端启动服务：</span><br><span class="line">systemctl  start  sshd</span><br><span class="line">2.关闭防火墙和selinux</span><br></pre></td></tr></table></figure><h3 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">远程登录：</span><br><span class="line">[root@c-6 ~]# ssh root@192.168.100.70</span><br><span class="line">参数解释：</span><br><span class="line">root 用户默认不写为root，也可以使用其他用户</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">无密码登陆（ssh密钥认证）</span><br><span class="line">1.产生公钥和私钥：  生成一对密钥：公钥+私钥</span><br><span class="line">[root@c-6 ~]# ssh-keygen  #一直回车</span><br><span class="line">2.查看钥匙的目录：</span><br><span class="line">[root@c-6 ~]# cd /root/.ssh/</span><br><span class="line">id_rsa  ---私钥---解密</span><br><span class="line">id_rsa.pub  ---公钥---加密</span><br><span class="line">known_hosts  ----确认过公钥指纹的可信服务器列表的文件</span><br><span class="line">authorized_keys ---授权文件，是传输过公钥到对方服务后会自动重命名生成的</span><br><span class="line">3.拷贝公钥给对方机器：</span><br><span class="line">[root@c-6 ~]# ssh-copy-id 对方机器ip地址</span><br><span class="line">ip地址：指的是对方服务器</span><br><span class="line">4.远程连接的时候就不用输入密码了</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">修改端口号：</span><br><span class="line">修改配置文件：</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/ssh/sshd_config</span></span><br><span class="line">17行 #Port 22   #将注释去掉，修改端口号可以修改为自定义的。</span><br><span class="line">[root@c-6 ~]# systemctl restart sshd    #修改配置文件后重启服务</span><br><span class="line"></span><br><span class="line">远程登录</span><br><span class="line">-p：port端口，指定端口，如果端口修改了需要指定</span><br><span class="line">案例：</span><br><span class="line">[root@c-6 ~]# ssh root@192.168.100.70 -p 2222</span><br></pre></td></tr></table></figure><h3 id="远程拷贝"><a href="#远程拷贝" class="headerlink" title="远程拷贝"></a>远程拷贝</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">远程拷贝：</span><br><span class="line"><span class="meta">#</span><span class="bash"> scp  -P 端口号 /a.txt    ip：/路径</span></span><br><span class="line">                源文件      目标地址</span><br><span class="line"></span><br><span class="line">[root@c-6 ~]# scp -r -P 22 /root/ldq 192.168.100.70:/root/</span><br><span class="line">谁是远程加谁ip</span><br><span class="line">远程拷贝目标机器改了端口加-(大)P </span><br><span class="line">目录加 -r</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="crond" scheme="https://l66stbz.github.io/tags/crond/"/>
    
      <category term="rsyslog" scheme="https://l66stbz.github.io/tags/rsyslog/"/>
    
      <category term="logrotate" scheme="https://l66stbz.github.io/tags/logrotate/"/>
    
  </entry>
  
  <entry>
    <title>Linux进程管理</title>
    <link href="https://l66stbz.github.io/2024/06/26/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>https://l66stbz.github.io/2024/06/26/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2024-06-26T09:24:37.000Z</published>
    <updated>2024-06-27T12:57:59.201Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是进程？-是程序在内存中的表现形式"><a href="#什么是进程？-是程序在内存中的表现形式" class="headerlink" title="什么是进程？   是程序在内存中的表现形式"></a>什么是进程？   是程序在内存中的表现形式</h2><p>进程是已启动的可执行程序的运行实例，是程序运行的过程， 动态的，有生命周期及运行状态。</p><h2 id="进程和线程的区别"><a href="#进程和线程的区别" class="headerlink" title="进程和线程的区别"></a>进程和线程的区别</h2><p>线程被称作轻量级进程，在进程中包含线程。进程有独立的内存空间，不同进 程间不能直接共享其他进程资源，同一个进程内的线程共享进程内存空间；相 比进程，线程切换对系统开销更小一些；进程是资源分配的最小单位，线程是 程序执行的最小单位。</p><h2 id="静态查看进程"><a href="#静态查看进程" class="headerlink" title="静态查看进程"></a>静态查看进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps aux</span><br><span class="line">参数解释：</span><br><span class="line">ps :process nsapashot</span><br><span class="line">a 只能查看系统里面运行的所有终端进程</span><br><span class="line">u 显示进程拥有者</span><br><span class="line">x 显示系统内所有进程</span><br><span class="line">f 显示进程之间的父子关系</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# ps aux </span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">============================================================================</span><br><span class="line">USER: #运行进程的用户</span><br><span class="line">PID：   #进程ID</span><br><span class="line"><span class="meta">%</span><span class="bash">CPU:   <span class="comment">#CPU占用率</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash">MEM:   <span class="comment">#内存占用率</span></span></span><br><span class="line">VSZ    进程占用的虚拟内存大小</span><br><span class="line">RSS     占用的物理内存大小</span><br><span class="line">?    表示没有占用终端</span><br><span class="line">STAT：  #进程状态  ---了解</span><br><span class="line">R 运行</span><br><span class="line">S 可中断睡眠 Sleep</span><br><span class="line">D不可中断睡眠</span><br><span class="line">T 停止的进程 </span><br><span class="line">Z 僵尸进程</span><br><span class="line">X    死掉的进程</span><br><span class="line">START:#进程的启动时间</span><br><span class="line">TIME：#进程占用CPU的总时间</span><br><span class="line">COMMAND： #进程文件，进程名</span><br><span class="line"><span class="meta">#</span><span class="bash">   僵尸进程表示进程已经退出，但它的父进程还没有回收子进程占用的资源。短暂的僵尸状态通常不必理会，但进程长时间处于僵尸状态，就应该注意了，可能有应用程序没有正常处理子进程的退出。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">   S 可中断睡眠 Sleep----类似于挂起，等待接收socket链接或者是一些信号从而重新被唤起</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   D不可中断睡眠 --不可中断状态，表示进程正在跟硬件交互，为了保护进程数据和硬件的一致性，系统不允许其他进程或中断打断这个进程。 进程长时间处于不可中断状态，通常表示系统有 I/O 性能问题。</span></span><br><span class="line">进程状态--了解</span><br><span class="line">Sl以线程的方式运行</span><br><span class="line">Ss  s进程的领导者，父进程</span><br><span class="line">R++表示是前台的进程组</span><br><span class="line">S&lt; &lt;优先级较高的进程 </span><br><span class="line">SN  N优先级较低的进程</span><br></pre></td></tr></table></figure><p>进程PID在1000以内的服务大多都是开机自动启动的(不完全是)！</p><h2 id="查看单个进程的PID"><a href="#查看单个进程的PID" class="headerlink" title="查看单个进程的PID"></a>查看单个进程的PID</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# yum install -y httpd  #安装apache软件</span><br><span class="line">[root@linux-server ~]# systemctl start httpd #启动</span><br><span class="line">[root@linux-server ~]# cat /var/run/httpd/httpd.pid</span><br><span class="line">1043</span><br></pre></td></tr></table></figure><h2 id="查看指定PID"><a href="#查看指定PID" class="headerlink" title="查看指定PID"></a>查看指定PID</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# ps aux | grep sshd</span><br><span class="line">root       1043  0.0  0.2 105996  4120 ?        Ss   01:32   0:00 /usr/sbin/sshd -D</span><br><span class="line">grep：过滤</span><br></pre></td></tr></table></figure><h2 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# yum install lsof  #安装软件包</span><br><span class="line">[root@linux-server ~]# lsof -i:80   #端口号，这能查看带端口的进程</span><br><span class="line">COMMAND   PID   USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">httpd   64249   root    4u  IPv6 1373628      0t0  TCP *:http (LISTEN)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查网络进程和正在监听的端口</span></span><br><span class="line">[root@linux-server ~]# netstat -lntp    (该命令对应的包名：net-tools)</span><br><span class="line">参数详解：</span><br><span class="line">-a  显示全部的进程</span><br><span class="line">-u  显示udp</span><br><span class="line">-n  以数字的新式显示协议名称</span><br><span class="line">-t   tcp</span><br><span class="line">-p：显示进程的名称和pid</span><br><span class="line">-l :只显示正在被监听的端口</span><br></pre></td></tr></table></figure><h2 id="动态查看进程"><a href="#动态查看进程" class="headerlink" title="动态查看进程"></a>动态查看进程</h2><p>top</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# top  #动态显示信息，三秒刷新一次。</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/06/26/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/1.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">第一行，任务队列信息，同 uptime 命令的执行结果</span><br><span class="line">系统时间：16:23:40</span><br><span class="line">运行时间：up 1:57 </span><br><span class="line">当前登录用户： 3 user</span><br><span class="line">在工作中必须监控的东西 load average(平均负载)等待cpu处理的队列长度 也是个数。</span><br><span class="line">1分钟   第一个数字</span><br><span class="line">5分钟   第二个数字</span><br><span class="line">15分钟  第三个数字</span><br><span class="line">计算cpu负载：load average的三个值: 0.10, 0.16, 0.12，分别除cpu的个数，得出的值，如果值大于1那么那时候的负载高。</span><br><span class="line">第二行，Tasks — 任务（进程）</span><br><span class="line">总进程:150 total, 运行:1 running, 休眠:149 sleeping, 停止: 0 stopped, 僵尸进程: 0 zombie</span><br><span class="line">第三行，cpu状态信息</span><br><span class="line">us ：用户空间占用CPU的百分比</span><br><span class="line">sy ：内核空间占用CPU的百分比</span><br><span class="line">ni ：nice值</span><br><span class="line">id： cpu空闲率</span><br><span class="line">wa：cpu等待,等待输入/输出的进程占用的 CPU 百分比。如果使用率过高，表示硬盘该换了</span><br><span class="line">hi：硬中断占用CPU的百分比</span><br><span class="line">si：软中断占用CPU的百分比</span><br><span class="line">第四行，内存状态</span><br><span class="line">第五行，swap交换分区信息</span><br></pre></td></tr></table></figure><h3 id="top操作"><a href="#top操作" class="headerlink" title="top操作"></a>top操作</h3><p><strong><img src="/2024/06/26/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/2.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# top</span><br><span class="line">h|? 帮助</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 往下翻页</span></span><br><span class="line">&lt; 往上翻页</span><br><span class="line">M 按内存排序</span><br><span class="line">P 按cpu排序</span><br><span class="line">q 退出   </span><br><span class="line">z 彩色显示</span><br><span class="line">W 保存</span><br><span class="line">=============================</span><br><span class="line">PID   进程ID</span><br><span class="line">USER 运行进程的用户</span><br><span class="line">PR   优先级   最终优先级=初始优先级（20）+nice值   #如PID为4的PR=20+(-20)=0</span><br><span class="line">NI   nice值</span><br><span class="line">VIRT 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</span><br><span class="line">RES  进程使用的、未被换出的物理内存大小，单位kb。</span><br><span class="line">SHR  共享内存大小，单位kb</span><br><span class="line">S    进程状态</span><br><span class="line"><span class="meta">%</span><span class="bash">CPU   CPU占用率</span></span><br><span class="line"><span class="meta">%</span><span class="bash">MEM   内存占用率</span></span><br><span class="line">TIME+进程占用CPU的总时间</span><br><span class="line">COMMAND  进程文件，进程名</span><br></pre></td></tr></table></figure><h3 id="进程优先级-nice"><a href="#进程优先级-nice" class="headerlink" title="进程优先级 nice"></a>进程优先级 nice</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nice 值越高：表示优先级越低，例如+19，该进程容易将CPU 使用量让给其他进程。</span><br><span class="line">nice 值越低：表示优先级越高，例如-20，该进程更不倾向于让出CPU。</span><br></pre></td></tr></table></figure><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kill,pkill</span><br><span class="line">语法： kill 信号 PID   #信号也是进程间通信的一种方式，如果杀的是子进程，子进程死后父进程会再诞生出一个子进程，与之前杀掉的PID不同</span><br><span class="line">  pkill 信号 进程名(服务名) #pkill可以指定进程名，一次会把该进程的父进程子进程都干掉</span><br><span class="line">[root@linux-server ~]# kill -l   #查看所有信号</span><br><span class="line">-1   HUP  重新加载进程或者重新加载配置文件,PID不变，一般用于修改了配置文件后不关闭重启服务使其生效</span><br><span class="line">-9   KILL 强制杀死  #不管你在不在处理手中工作，直接杀死</span><br><span class="line">-15  TERM 正常杀死(这个信号可以默认不写)#正常杀死就是他不会立即被杀死，他会先把自己手中工作处理完</span><br><span class="line">-18  CONT 激活进程</span><br><span class="line">-19  STOP 挂起（暂停）进程</span><br></pre></td></tr></table></figure><h2 id="作业控制"><a href="#作业控制" class="headerlink" title="作业控制"></a>作业控制</h2><h3 id="作业控制之jobs"><a href="#作业控制之jobs" class="headerlink" title="作业控制之jobs:"></a>作业控制之jobs:</h3><p>作业控制指的是控制正在运行的进程的行为。比如，用户可以挂起一个进程或者放到后台去运行，等一会儿再继续执行该进程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server~]# sleep 7000 &amp;   #&amp;:让命令或者程序后台运行</span><br><span class="line">[1] 5441</span><br><span class="line">[root@linux-server ~]# sleep 8000    #ctrl+z 把程序放到后台(这方法会让程序在后台暂停)</span><br><span class="line">^Z</span><br><span class="line">[2]+  Stopped                 sleep 8000</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# jobs  #查看后台的工作号</span><br><span class="line">[1]-  Running                 sleep 7000 &amp;</span><br><span class="line">[2]+  Stopped                 sleep 8000</span><br><span class="line">[root@linux-server ~]# bg %2  #让暂停的程序在后台运行，%是用来修饰job number，2就是job number。(程序的工作号)</span><br><span class="line">[2]+ sleep 8000 &amp;</span><br><span class="line">[root@linux-server ~]# jobs </span><br><span class="line">[1]-  Running                 sleep 7000 &amp;</span><br><span class="line">[2]+  Running                 sleep 8000 &amp;</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# fg %1  #将后台的程序调到前台</span><br><span class="line">sleep 7000</span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# jobs </span><br><span class="line">[2]+  Running                 sleep 8000 &amp;</span><br><span class="line">[root@linux-server ~]# kill -9 %2  #通过kill杀死进程</span><br><span class="line">[root@linux-server ~]# jobs </span><br><span class="line">[2]+  Killed                  sleep 8000</span><br><span class="line">[root@linux-server ~]# jobs #再次查看没有了</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注：<span class="built_in">bg</span>、<span class="built_in">fg</span>命令后可以省略%,直接加后台程序编号即可。但是<span class="built_in">kill</span> -9后面的后台程序编号前必须要加%，否则不生效，会杀不死。</span></span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="1-查看当前CPU负载"><a href="#1-查看当前CPU负载" class="headerlink" title="1.查看当前CPU负载"></a>1.查看当前CPU负载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# uptime </span><br><span class="line"> 17:35:01 up 16:02,  3 users,  load average: 0.00, 0.02, 0.05</span><br></pre></td></tr></table></figure><p>脚本中会常用到该命令，其实也就是top命令返回结果的第一行。但是top命令是动态的，他并不能在脚本中使用。</p><h3 id="2-查看内存使用"><a href="#2-查看内存使用" class="headerlink" title="2.查看内存使用"></a>2.查看内存使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# free -m </span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1984         154        1508           8         321        1632</span><br><span class="line">Swap:          2047           0        2047</span><br><span class="line"></span><br><span class="line">-m:单位M</span><br><span class="line"></span><br><span class="line">echo 3 &gt; /proc/sys/vm/drop_caches           </span><br><span class="line"><span class="meta">#</span><span class="bash">临时清理内存，有点类似于Windows的加速球，但是在工作当中应当谨慎使用，尤其是在公司的服务器配置不是很高时。</span></span><br></pre></td></tr></table></figure><h3 id="3-查看系统的版本和内核"><a href="#3-查看系统的版本和内核" class="headerlink" title="3.查看系统的版本和内核"></a>3.查看系统的版本和内核</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-server ~]# cat /etc/redhat-release  #查看版本</span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br><span class="line">[root@linux-server ~]# uname -a #看查正在运行的内核版本</span><br><span class="line">Linux linux-server 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@linux-server ~]# uname -r  #查看内核版本</span><br><span class="line">3.10.0-693.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="4-修改主机名"><a href="#4-修改主机名" class="headerlink" title="4.修改主机名"></a>4.修改主机名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">方法一</span><br><span class="line">[root@linux-server ~]# hostnamectl set-hostname  xxxx   #主机名，修改完之后断开与终端连接，然后在重新连接即可。或者直接bash回车即可。但是此方法修改主机名会有许多限制，如不支持大写、特殊字符和中文，名字长度有所限制等等。</span><br><span class="line">方法二</span><br><span class="line">[root@linux-server ~]# vim /etc/hostname</span><br><span class="line"><span class="meta">#</span><span class="bash">直接在该文件中输入你想要的主机名，该方法修改主机名没有限制</span></span><br><span class="line"></span><br><span class="line">查看主机名</span><br><span class="line">[root@linux-server ~]# hostname</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>软件安装及管理</title>
    <link href="https://l66stbz.github.io/2024/06/24/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/"/>
    <id>https://l66stbz.github.io/2024/06/24/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/</id>
    <published>2024-06-24T01:56:37.000Z</published>
    <updated>2024-06-26T09:19:01.867Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="软件包安装流程及相关问题"><a href="#软件包安装流程及相关问题" class="headerlink" title="软件包安装流程及相关问题"></a>软件包安装流程及相关问题</h2><p>软件包安装流程如图：</p><p><strong><img src="/2024/06/24/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/1.png" class></strong></p><p>当执行安装包命令后，会先去寻找仓库地址，仓库地址存放在/etc/yum.repos.d/*.repo中，至于为什么默认存放在这里，这是因为是在/etc/yum.conf主配置文件中声明了。其实也可以直接将repo文件中的内容直接放到主配置文件中，也可以正常寻找和运行。但为了方便日后方便寻找修改和管理，所以都放在/etc/yum.repos.d/下，repo的文件名是可以自定义的。找到仓库地址后，会向yum仓库发送获取元数据信息的请求，从而下载元数据缓存信息表到本机，元数据缓存信息表中存放的是所有仓库中的包的一个清单，有所有包在仓库中的一个存放位置。然后就该下载安装包了，下载完成后进行安装，安装完成后安装包会自动删除。</p><p>一些小questions：</p><p>1、/etc/yum.repos.d/目录内没有.repo文件，会导致什么问题？</p><p>找不到仓库。</p><p>2、执行yum命令的情况下，元数据缓存文件的作用是什么？</p><p>确定仓库中有哪些包以及包的位置，分析所要安装包的依赖关系。</p><p>3、yum clean all执行没问题，yum makecache报错是什么原因？</p><p>仓库配置文件有问题，说明没有配置或者配置错误。</p><p>4、yum repolist执行发现仓库名称都正常显示，但是对应包的数量都是0是什么原因？</p><p>可能仓库配置文件的URL写错了，从而无法正常获取到我们所需要仓库的包。</p><h2 id="yum方式管理软件"><a href="#yum方式管理软件" class="headerlink" title="yum方式管理软件"></a>yum方式管理软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum分类:本地yum和远程yum</span><br><span class="line">本地yum:</span><br><span class="line">file:&#x2F;&#x2F;</span><br><span class="line">远程yum:</span><br><span class="line">http:&#x2F;&#x2F;</span><br><span class="line">ftp:&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">以上都被称为URL,统一资源定位符</span><br></pre></td></tr></table></figure><h3 id="yum常见操作"><a href="#yum常见操作" class="headerlink" title="yum常见操作"></a>yum常见操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">清理yum缓存:（元数据建立）</span><br><span class="line">yum clean all</span><br><span class="line"><span class="meta">#</span><span class="bash">一般在仓库配置文件有所变动之后使用，因为之前的缓存文件已经不能满足现在的需求</span></span><br><span class="line"></span><br><span class="line">缓存软件包信息:    </span><br><span class="line">提高搜索/安装软件的速度</span><br><span class="line">yum makecache</span><br><span class="line"><span class="meta">#</span><span class="bash">一般不常用，因为在第一次安装软件包时会自动下载缓存信息表</span></span><br><span class="line"></span><br><span class="line">查询yum源信息:   </span><br><span class="line">yum repolist</span><br><span class="line">    </span><br><span class="line">查看命令属于哪个软件</span><br><span class="line">yum provides 命令    </span><br><span class="line"><span class="meta">#</span><span class="bash">可以查看并没有安装的命令属于哪一个包，从而根据自己需求进行安装软件包</span></span><br><span class="line"></span><br><span class="line">安装软件:</span><br><span class="line">yum -y install 软件名称 </span><br><span class="line"><span class="meta">#</span><span class="bash">加了-y后不再需要确认即可直接安装</span></span><br><span class="line">重装软件：</span><br><span class="line">yum -y reinstall 软件名       </span><br><span class="line"><span class="meta">#</span><span class="bash">既然是重装，肯定要先卸载再安装，一般在误删了相关文件不知情导致不能正常使用时使用</span></span><br><span class="line"></span><br><span class="line">卸载软件:</span><br><span class="line">yum erase  软件名 </span><br><span class="line">yum remove 软件名</span><br></pre></td></tr></table></figure><p><strong>更换网络yum源–aliyun</strong>（此处以aliyun为例）</p><p>为什么要更换网络yum源呢？</p><p>因为官方的yum源仓库地址是国外的网址，要进行翻墙后才能正常访问下载，即使不翻墙也能访问到，那访问和下载速度也是非常的慢的，非常不利于我们的使用。国内很多公司和大学会有自己的镜像源仓库，我们可以把yum源换成国内的，这样访问和下载速度会快许多。下面以aliyun为例。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">安装主yum源</span><br><span class="line">[root@linux-server ~]# cd /etc/yum.repo.d</span><br><span class="line">[root@linux-server yum.repos.d]# mkdir back</span><br><span class="line">[root@linux-server yum.repos.d]# mv *.repo back  #将之前的仓库配置文件备份</span><br><span class="line">[root@linux-server yum.repos.d]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #下载aliyun的yum源</span><br><span class="line">或者</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">完成后可以通过yum repolist命令查看是否成功！</span><br></pre></td></tr></table></figure><p>老版本的主yum源尽量不要跟新版本的扩展源放在一起，因为老版本的源会去寻找新版本的依赖，可能会导致不能够正常使用。</p><h2 id="制作本地yum源和仓库"><a href="#制作本地yum源和仓库" class="headerlink" title="制作本地yum源和仓库"></a>制作本地yum源和仓库</h2><p>为什么要制作本地yum源呢？因为在工作当中，很多公司的电脑其实他都是不连接网络的，所以这时候就需要制作本地yum源仓库了，那么一个存放了许多软件包的目录就是仓库了嘛。非也。一个目录并不是因为存了包之后就是仓库了，而是需要经过createrepo创建以后才能成为仓库，成为仓库中会多一个repodata文件。而镜像文件是比较特殊的，默认就是仓库文件，他里边已经有了repodata文件。</p><h3 id="通过镜像制作本地yum源"><a href="#通过镜像制作本地yum源" class="headerlink" title="通过镜像制作本地yum源"></a>通过镜像制作本地yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">首先需要挂载镜像</span><br><span class="line">[root@linux-server ~]# mkdir /mnt/centos7u4</span><br><span class="line">将本地镜像上传到虚拟机中的/root目录中 </span><br><span class="line"></span><br><span class="line">语法： mount   挂载设备     挂载点 </span><br><span class="line"></span><br><span class="line">[root@linux-server ~]# mount CentOS-7-x86_64-DVD-1708.iso /mnt/centos7u4/</span><br><span class="line">[root@linux-server ~]# mv /etc/yum.repos.d/* /etc/yum.repos.d/back  #备份</span><br><span class="line">[root@linux-server ~]# cd /etc/yum.repos.d/   #yum源配置文件存放目录</span><br><span class="line">[root@linux-server yum.repos.d]# vim CentOS.Base.repo  #在编写yum配置文件是必须是.repo</span><br><span class="line">[centos7u4]  #yum源区别名称，用来区分其他的yum源</span><br><span class="line">name=centos7u4  #yum源描述   yum源名字</span><br><span class="line">baseurl=file:///mnt/centos7u4  #指定本地yum源的路径</span><br><span class="line">enabled=1  #是否使用此yum源（1为打开，0为关闭）</span><br><span class="line">gpgcheck=0 #检查软件</span><br></pre></td></tr></table></figure><p>完成后可以通过yum repolist命令查看是否成功！</p><h2 id="通过开启yum下载缓存功能制作自己的yum源"><a href="#通过开启yum下载缓存功能制作自己的yum源" class="headerlink" title="通过开启yum下载缓存功能制作自己的yum源"></a>通过开启yum下载缓存功能制作自己的yum源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">制作自己的yum源：</span><br><span class="line">打开Yum缓存功能:安装完软件之后,软件不会被删除(默认安装完之后，不会保留安装包)</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/yum.conf  修改下面参数的值为1,软件会被保存到cachedir指定的目录下</span></span><br><span class="line">keepcache=1</span><br><span class="line">[root@linux-server ~]# yum install -y httpd </span><br><span class="line">[root@linux-server ~]# mkdir /yum_cache</span><br><span class="line">[root@linux-server ~]# find /var/cache/yum/   -name "*.rpm" | xargs -i mv &#123;&#125;  /yum_cache/   #此时/yum_cache下已经有包了，但还没有声明仓库</span><br><span class="line">[root@linux-server ~]# ls /yum_cache/</span><br><span class="line">apr-1.4.8-7.el7.x86_64.rpm</span><br><span class="line">apr-util-1.5.2-6.el7.x86_64.rpm</span><br><span class="line">httpd-2.4.6-97.el7.centos.5.x86_64.rpm</span><br><span class="line">httpd-tools-2.4.6-97.el7.centos.5.x86_64.rpm</span><br><span class="line">mailcap-2.1.41-2.el7.noarch.rpm</span><br><span class="line">[root@linux-server ~]# yum install -y createrepo  #创建repo文件工具</span><br><span class="line">[root@linux-server ~]# createrepo /yum_cache/         //此目录就可以作为yum源了。</span><br><span class="line">[root@linux-server ~]# vim /etc/yum.repos.d/myyum.repo</span><br><span class="line">[myyum]</span><br><span class="line">name=myyum</span><br><span class="line">baseurl=file:///yum_cache/</span><br><span class="line">enabled=1   #默认是开启的  </span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@linux-server ~]# yum repolist</span><br></pre></td></tr></table></figure><p>总的来说就是以下流程：</p><p>1.修改主配置文件中内容，打开Yum缓存功能</p><p>2.创建文件夹，将来作为仓库使用</p><p>3.在安装包之后，找到包的存放位置并放到要作为仓库的文件夹中</p><p>4.声明存放包的文件夹为仓库</p><p>5.配置yum配置文件，之后即可使用</p><h2 id="源码包管理"><a href="#源码包管理" class="headerlink" title="源码包管理"></a>源码包管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个软件要在Linux上执行，必须是二进制文件，因此当我们拿到软件源码后，需要将它编译成二进制文件才能在Linux上运行。</span><br><span class="line">源码包的编译用到了linux系统里的编译器，通常源码包都是用C语言开发的，这也是因为C语言为linux上最标准的程序语言。Linux上的C语言编译器叫做gcc，利用它就可以把C语言变成可执行的二进制文件。</span><br><span class="line">源码安装的优点，编译安装过程，可以设定参数按照需求增加功能，进行安装，并且可以指定安装的版本，可以指定安装路径，灵活性比较大。</span><br></pre></td></tr></table></figure><p>获得源码包途径 官方网站，可以获得最新的软件包 </p><p>mysql: <a href="http://www.mysql.com/" target="_blank" rel="noopener">http://www.mysql.com/</a>   </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.27.tar.gz</span><br></pre></td></tr></table></figure><p>Nginx: <a href="http://www.nginx.org" target="_blank" rel="noopener">www.nginx.org</a>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">安装源码包 </span><br><span class="line">准备工作(去Nginx官网下载Nginx软件的源码包) </span><br><span class="line">1.编译环境如编译器gcc、make </span><br><span class="line"><span class="meta">#</span><span class="bash"> yum -y install gcc make zlib-devel pcre pcre-devel openssl-devel  <span class="comment">#编译环境的准备</span></span></span><br><span class="line">gcc是编译工具，编译单个文件</span><br><span class="line">make工具可以看成是一个智能的批处理工具，通过调用makefile文件中用户指定的命令来进行编译和链接的。（将这种高级语言写的代码编译成二进制语言）</span><br><span class="line">pcre支持正则表达式</span><br><span class="line">zlib-devel，有些应用依赖于这个库才能正常运行，因此需要安装zlib-devel</span><br><span class="line">openssl-devel 某些库文件等跟开发相关的东西。</span><br><span class="line">2.准备软件 nginx-1.16.0.tar.gz </span><br><span class="line">3.部署安装Nginx软件服务</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">实战：                                                                            </span><br><span class="line">[root@linux-server ~]# wget http://nginx.org/download/nginx-1.16.1.tar.gz</span><br><span class="line">[root@linux-server ~]# tar xzf nginx-1.16.1.tar.gz</span><br><span class="line">[root@linux-server ~]# cd nginx-1.16.1</span><br><span class="line">[root@linux-server nginx-1.16.1]# ./configure --user=www --group=www --prefix=/usr/local/nginx  #--user指定用户 --prefix指定安装路径 --group指定组</span><br><span class="line">[root@linux-server nginx-1.16.1]# make  #编译文件</span><br><span class="line">[root@linux-server nginx-1.16.1]# make install  #安装文件</span><br><span class="line">[root@linux-server ~]# useradd www   #创建nginx用户</span><br><span class="line">[root@linux-server ~]# /usr/local/nginx/sbin/nginx  #启动nginx</span><br><span class="line">[root@linux-server ~]# systemctl stop firewalld  #关闭防火墙</span><br><span class="line">[root@linux-server ~]# setenforce 0             #关闭selinux防火墙</span><br><span class="line">[root@linux-server nginx-1.16.1]# /usr/local/nginx/sbin/nginx -s stop #停止nginx</span><br></pre></td></tr></table></figure><p>输入IP访问</p><p><strong><img src="/2024/06/24/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AE%A1%E7%90%86/3.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1、关闭防火墙</span><br><span class="line"></span><br><span class="line">2、创建启动mysql服务的系统用户，mysql</span><br><span class="line">useradd -r mysql -M -s /bin/nologin</span><br><span class="line"></span><br><span class="line">3、下载编译工具</span><br><span class="line">yum -y install ncurses ncurses-devel openssl-devel bison gcc gcc-c++ make cmake</span><br><span class="line"></span><br><span class="line">4、创建存放mysql服务的目录</span><br><span class="line">mkdir -p /usr/local/mysql/&#123;data,mysql,log&#125;（data：数据存放；mysql：服务存放；log：日志信息）</span><br><span class="line"></span><br><span class="line">5、获取mysql的源码包并解压</span><br><span class="line"></span><br><span class="line">6、cd进mysql的源码包内执行使用cmake进行对mysql安装设置</span><br><span class="line">指定端口，配置文件，安装位置，字符集，配置文件，数据信息等设置</span><br><span class="line"></span><br><span class="line">7、编译及安装</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">8、修改/etc/my.cnf的配置文件</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql     #指定安装目录</span><br><span class="line">datadir=/usr/local/mysql/data  #指定数据存放目录</span><br><span class="line">innodb_buffer_pool_size = 4G #给mysql分内存</span><br><span class="line"></span><br><span class="line">9、初始化</span><br><span class="line">给mysql安装目录及子文件修改拥有者和所属组</span><br><span class="line">初始化：./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br><span class="line">`--initialize`：表示进行数据库初始化操作。</span><br><span class="line">`--user=mysql`：指定使用 "mysql" 用户运行 MySQL 服务。</span><br><span class="line">`--basedir=/usr/local/mysql`：指定 MySQL 的安装目录。</span><br><span class="line">`--datadir=/usr/local/mysql/data`：指定 MySQL 数据库文件的存储目录。</span><br><span class="line">得到十二位密码</span><br><span class="line"></span><br><span class="line">10、启动mysqld服务</span><br><span class="line">/usr/local/mysql/bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line">`bin/mysqld_safe`:这是启动MySQL服务器的一个包装脚本。 mysqld_safe 脚本会尝试安全地启动 mysqld 服务器。它会检查并设置一些环境变量，并尝试在 mysald 崩溃时重新启动它。这个脚本通常位于MySQL的安装目录的 bin 子目录下。</span><br><span class="line">`-user=mysql`:这是一个命令行选项，用于指定运行MySQL服务器进程的系统用户。在这个例子中，它指定2mysq! 用户。出于安全考虑，通常建议以非root用户身份运行MySQL服务器。</span><br><span class="line">`&amp;`:这是一个Unix/linux shell的特性，用于将命令放到后台执行。这意味着当你运行这个命令时，你不需要等待MVSQL服务器完全启动就可以继续在shel中执行其他命令，服务器将在后台启动，并继续运行，即使你关闭了启动它的shell会话。</span><br><span class="line"></span><br><span class="line">11、登录mysql</span><br><span class="line">bin/mysql -uroot -p'十二位密码'</span><br><span class="line">12、修改密码</span><br><span class="line">ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';</span><br><span class="line">13、停止mysqld服务</span><br><span class="line">/usr/local/mysql/bin/mysqladmin -uroot -p'密码' shutdown</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本相关问题总结</title>
    <link href="https://l66stbz.github.io/2024/05/25/shell%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://l66stbz.github.io/2024/05/25/shell%E8%84%9A%E6%9C%AC%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2024-05-25T01:56:37.000Z</published>
    <updated>2024-07-30T12:03:34.620Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-变量的运算"><a href="#1-变量的运算" class="headerlink" title="1.变量的运算"></a>1.变量的运算</h4><p>方法一：expr</p><p>(直接命令行操作即可)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#加减乘除</span></span></span><br><span class="line">[root@localhost ~]# num1=10</span><br><span class="line">[root@localhost ~]# num2=16</span><br><span class="line">[root@localhost ~]# expr $num1 + num2</span><br><span class="line">25</span><br><span class="line">[root@localhost ~]# expr $num2 - num1</span><br><span class="line">6</span><br><span class="line">[root@localhost ~]# expr $num1 \* num2</span><br><span class="line">160</span><br><span class="line">[root@localhost ~]# expr $num2 \ num1 #默认不显示小数，取整</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>方法二：$(())</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">符号加(())</span></span><br><span class="line">[root@localhost ~]# num1=10</span><br><span class="line">[root@localhost ~]# num2=16</span><br><span class="line">[root@localhost ~]# echo $(($num1+$num2)) #加</span><br><span class="line">26</span><br><span class="line">[root@localhost ~]# echo $(($num1-$num2)) #减</span><br><span class="line">-6</span><br><span class="line">[root@localhost ~]# echo $(($num1*$num2)) #乘</span><br><span class="line">160</span><br><span class="line">[root@localhost ~]# echo $(($num2/$num1)) #除，默认取整数，不显示小数</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>方法三：$[ ]</p><p>$符号加[ ]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# num1=10</span><br><span class="line">[root@localhost ~]# num2=16</span><br><span class="line">[root@localhost ~]# echo $[num1 + num2] #加</span><br><span class="line">26</span><br><span class="line">[root@localhost ~]# echo $[num1 - num2] #减</span><br><span class="line">-6</span><br><span class="line">[root@localhost ~]# echo $[num1 * num2] #乘</span><br><span class="line">160</span><br><span class="line">[root@localhost ~]# echo $[num2 / num1] #除，同上</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>方法四：let<br>let不直接输出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# num1=10</span><br><span class="line">[root@localhost ~]# num2=16</span><br><span class="line">[root@localhost ~]# let sum=$num1+$num2;echo $sum #加</span><br><span class="line">26</span><br><span class="line">[root@localhost ~]# let sum=$num1-$num2;echo $sum #减</span><br><span class="line">-6</span><br><span class="line">[root@localhost ~]# let sum=$num1*$num2;echo $sum #乘</span><br><span class="line">160</span><br><span class="line">[root@localhost ~]# let sum=$num2/$num1;echo $sum #除</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>扩展：小数运算bc</p><p>scale=n;定义小数精度，此外可以直接运行bc命令进行输入计算</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# num1=1.8</span><br><span class="line">[root@localhost ~]# num2=2.2</span><br><span class="line">[root@localhost ~]# echo "scale=3;$num1+$num2" | bc</span><br><span class="line">4.0</span><br><span class="line">[root@localhost ~]# echo "scale=2;$num2-$num1" | bc</span><br><span class="line">.4</span><br><span class="line">[root@localhost ~]# echo "scale=2;$num2/$num1" | bc</span><br><span class="line">1.22</span><br><span class="line">[root@localhost ~]# echo "scale=2;$num2*$num1" | bc</span><br><span class="line">3.96</span><br></pre></td></tr></table></figure><p>扩展：小数运算awk</p><p>awk -v 带入外部变量，’{ print num1 + num2 }’即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]# num1=2.1</span><br><span class="line">[root@localhost project]# num2=1.5</span><br><span class="line">[root@localhost project]# echo | awk -v num1=$num1 -v num2=$num2 "&#123;print num1 + num2 &#125;"</span><br><span class="line">3.6</span><br><span class="line">[root@localhost project]# echo | awk -v num1=$num1 -v num2=$num2 "&#123;print num1 - num2 &#125;"</span><br><span class="line">0.6</span><br><span class="line">[root@localhost project]# echo | awk -v num1=$num1 -v num2=$num2 "&#123;print num1 * num2 &#125;"</span><br><span class="line">3.15</span><br><span class="line">[root@localhost project]# echo | awk -v num1=$num1 -v num2=$num2 "&#123;print num1 / num2 &#125;"</span><br><span class="line">1.4</span><br></pre></td></tr></table></figure><h4 id="2-cat命令写入内容到文件注意事项"><a href="#2-cat命令写入内容到文件注意事项" class="headerlink" title="2.cat命令写入内容到文件注意事项"></a>2.cat命令写入内容到文件注意事项</h4><p>cat 命令不仅可以将文件内容从标准输出显示到屏幕，同时还可以将由终端输入的内容，写入到文件中！</p><p>然而，我们会发现，有时候使用cat命令写入的内容和我们从终端输入的内容有所出入，比如有些字符串被特殊处理了，并没有正确写入文件！这可能将导致我们的后续指令无法正常执行！</p><p>cat命令不处理特殊字符：EOF标志使用单引号引用，<br>如果字符串中有变量，则不会改变写入文件的内容，如下并不替换为变量的值。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# cat test.sh </span><br><span class="line">a=10</span><br><span class="line">cat &gt;/root/1.txt &lt;&lt;'EOF'</span><br><span class="line"><span class="meta">BJJJKHK$</span><span class="bash">a</span></span><br><span class="line"><span class="meta">$</span><span class="bash">fsdfrrg</span></span><br><span class="line">EOF</span><br><span class="line">[root@zabbix-agent-node2 ~]# cat 1.txt </span><br><span class="line"><span class="meta">BJJJKHK$</span><span class="bash">a</span></span><br><span class="line"><span class="meta">$</span><span class="bash">fsdfrrg</span></span><br></pre></td></tr></table></figure><p>cat 命令处理特殊字符：EOF不使用单引号<br>如果字符串中有变量，则会替换为变量的值或者置空，如下可以看到变量a输出了他的值，而变量$fsdfrrg处却是空白</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# cat test.sh </span><br><span class="line">a=10</span><br><span class="line">cat &gt;/root/1.txt &lt;&lt;EOF</span><br><span class="line"><span class="meta">BJJJKHK$</span><span class="bash">a</span></span><br><span class="line"><span class="meta">$</span><span class="bash">fsdfrrg</span></span><br><span class="line">EOF</span><br><span class="line">[root@zabbix-agent-node2 ~]# cat 1.txt</span><br><span class="line">BJJJKHK10</span><br></pre></td></tr></table></figure><h4 id="3-case-in简要说明与使用"><a href="#3-case-in简要说明与使用" class="headerlink" title="3.case in简要说明与使用"></a>3.case in简要说明与使用</h4><p><strong>case 结构条件句语法</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">case “字符串变量” in</span><br><span class="line"></span><br><span class="line">值 1）指令....</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">值 2）指令...</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*）指令...</span><br><span class="line"></span><br><span class="line">esac</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">case expression in</span><br><span class="line">    pattern1)</span><br><span class="line">        statement1</span><br><span class="line">        ;;</span><br><span class="line">    pattern2)</span><br><span class="line">        statement2</span><br><span class="line">        ;;</span><br><span class="line">    pattern3)</span><br><span class="line">        statement3</span><br><span class="line">        ;;</span><br><span class="line">    ……</span><br><span class="line">    *)</span><br><span class="line">        statementn</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>case、in 和 esac 都是 Shell 关键字，expression 表示表达式，pattern 表示匹配模式。</p><p>expression 既可以是一个变量、一个数字、一个字符串，还可以是一个数学计算表达式，或者是命令的执行结果，只要能够得到 expression 的值就可以。<br>pattern 可以是一个数字、一个字符串，甚至是一个简单的正则表达式。</p><p>case 会将 expression  的值与 pattern1、pattern2、pattern3 逐个进行匹配：</p><p>如果 expression 和某个模式（比如 pattern2）匹配成功，就会执行这模式（比如 pattern2）后面对应的所有语句（该语句可以有一条，也可以有多条），直到遇见双分号;;才停止；然后整个 case 语句就执行完了，程序会跳出整个 case 语句，执行 esac 后面的其它语句。<br>如果 expression 没有匹配到任何一个模式，那么就执行<em>)后面的语句（*表示其它所有值），直到遇见双分号;;或者esac才结束。`</em>)<code>相当于多个 if 分支语句中最后的 else 部分。可以没有</code><em>)`部分。如果 expression 没有匹配到任何一个模式，那么就不执行任何操作。<br>除最后一个分支外（这个分支可以是普通分支，也可以是</em>)分支），其它的每个分支都必须以;;结尾，;;代表一个分支的结束，不写的话会有语法错误。最后一个分支可以写;;，也可以不写，因为无论如何，执行到 esac 都会结束整个 case in 语句。</p><p>下面的代码是 case in 最常见的用法，即 expression 部分是一个变量，pattern 部分是一个数字或者表达式。</p><p>范例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">read -p "请输入:" num</span><br><span class="line">case $num in</span><br><span class="line">[a-zA-Z])echo "你输入的是[a-zA-Z]"</span><br><span class="line">;;</span><br><span class="line">[,.?])echo "你输入的是[,.?]"</span><br><span class="line">;;</span><br><span class="line">[0-9])echo "你输入的是$num"</span><br><span class="line">;;</span><br><span class="line">*)echo "no match!!!"</span><br><span class="line">exit</span><br><span class="line">clear</span><br><span class="line">esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="4-amp-gt-与2-gt"><a href="#4-amp-gt-与2-gt" class="headerlink" title="4.&amp;&gt;与2&gt;"></a>4.&amp;&gt;与2&gt;</h4><p>&amp;是后台的意思<br>&gt;是重定向<br>2是标准错误<br>&amp;&gt;代表后台重定向<br>2&gt;代表标准错误重定向</p><p>2&gt;/dev/null与 &amp;&gt;/dev/null</p><p>前者表示将输出错误结果丢进垃圾桶，后者表示无论输出结果是正常还是错误都丢进垃圾桶</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://l66stbz.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>自动化脚本</title>
    <link href="https://l66stbz.github.io/2024/05/24/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    <id>https://l66stbz.github.io/2024/05/24/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/</id>
    <published>2024-05-24T01:56:37.000Z</published>
    <updated>2024-07-30T12:04:39.199Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>编写综合性功能脚本一键部署基于【LVS】【Nginx】【Keepalived】的刚可用集群脚本，该脚本要求可以针对管理员需求选择使用那一个负载均衡器（反向代理服务）一键部署高可用集群架构（后端真实服务器建议选用nginx）。书写脚本时，注意加入yum源、以及对于那个服务的可用性判断。<br>以下仅供参考 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">【一级菜单】</span></span><br><span class="line">main_menu()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***  keepalived 自 动 化 脚 本 主 菜 单  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- nginx的安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- keepalived的安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- lvs的安装配置\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【4】- 安装检测脚本 \t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【5】- 退  出 \t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【二级菜单】</span></span><br><span class="line"></span><br><span class="line">menu_1()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***   nginx的安装配置  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- 反向代理服务器端\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- 真实服务器端\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- 返回主菜单\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">menu_2()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***  keepalived 的安装配置  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- master端\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- slave端\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- 返回主菜单\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">menu_3()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***  lvs的安装配置  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- DR模式\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- NAT模式\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- 返回主菜单\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【三级菜单】</span></span><br><span class="line"></span><br><span class="line">menu_3_1()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***   lvs_dr的安装配置  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- lvs_dr_master安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- lvs_dr_slave安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- lvs_dr_rs安装配置\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【4】- 返回主菜单\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">menu_3_2()&#123;</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e -n "\e[40;37m \t\t \e[0m" ; echo -e -n "\e[47;34m ***   lvs_nat的安装配置  ***\e[0m" ; echo -e "\e[40;37m \t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【1】- lvs_nat_master安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【2】- lvs_nat_slave安装配置\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【3】- lvs_nat_rs安装配置\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t【4】- 返回主菜单\t\t\t\t \e[0m"</span><br><span class="line">echo -e "\e[40;37m \t\t\t\t\t\t\t\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：安装配置keepalived主节点】</span></span><br><span class="line">install_ka_master()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的VIP：" a</span><br><span class="line">yum -y install keepalived</span><br><span class="line">mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">        cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">   script "/etc/keepalived/check_nginx_status.sh"</span><br><span class="line">   interval 5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $a/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_nginx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：安装配置keepalived从节点】</span></span><br><span class="line">install_ka_slave()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的VIP：" a</span><br><span class="line">        yum -y install keepalived</span><br><span class="line">        mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">         cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP    #设置为backup</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt        #设置到back上面，不抢占资源(VIP)</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50   #辅助改为50</span><br><span class="line">    advert_int 1#检测间隔1s</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $a/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">        systemctl start keepalived</span><br><span class="line">        systemctl enable keepalived</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：加入检测脚本服务】</span></span><br><span class="line">check_ka()&#123;</span><br><span class="line"> cat &gt; /etc/keepalived/check_nginx_status.sh  &lt;&lt;'EOF'</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash        </span></span><br><span class="line">/usr/bin/curl -I http://localhost &amp;&gt;/dev/null</span><br><span class="line">if [ $? -ne 0 ];then    </span><br><span class="line"><span class="meta">#</span><span class="bash">/etc/init.d/keepalived stop</span></span><br><span class="line">systemctl stop keepalived</span><br><span class="line">fi</span><br><span class="line">EOF</span><br><span class="line">chmod 777 /etc/keepalived/check_nginx_status.sh</span><br><span class="line">systemctl restart keepalived nginx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：安装和配置nginx_proxy】</span></span><br><span class="line">install_nginx_proxy()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">cat &gt; /etc/yum.repos.d/nginx.repo  &lt;&lt;'EOF'</span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line">yum -y install nginx</span><br><span class="line">read -p "请输入你的server1的IP："  b</span><br><span class="line">read -p "请输入你的server2的IP："  c</span><br><span class="line">mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak</span><br><span class="line">cat &gt; /etc/nginx/conf.d/default.conf  &lt;&lt;EOF</span><br><span class="line">upstream index &#123;</span><br><span class="line">        server $b:80 weight=1 max_fails=2 fail_timeout=2;</span><br><span class="line">        server $c:80 weight=2 max_fails=2 fail_timeout=2;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cat &gt;&gt; /etc/nginx/conf.d/default.conf  &lt;&lt;'EOF'       </span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name     localhost;</span><br><span class="line">        access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">         proxy_pass http://index;</span><br><span class="line">         proxy_redirect default;</span><br><span class="line">         proxy_set_header Host $http_host;</span><br><span class="line">         proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl restart nginx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：安装和配置nginx_server】</span></span><br><span class="line">install_nginx_server()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">cat &gt; /etc/yum.repos.d/nginx.repo  &lt;&lt;'EOF'</span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line">yum -y install nginx</span><br><span class="line">systemctl restart nginx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：LVS_Director + KeepAlived master】</span></span><br><span class="line">install_lvs_dr_master()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的VIP：" d</span><br><span class="line">read -p "请输入你的server1的IP：" e</span><br><span class="line">read -p "请输入你的server2的IP：" f</span><br><span class="line">yum -y install ipvsadm keepalived</span><br><span class="line">mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">        cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lvs-keepalived-master    #辅助改为lvs-backup</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33                #VIP绑定接口</span><br><span class="line">    virtual_router_id 80         #VRID 同一组集群，主备一致          </span><br><span class="line">    priority 100            #本节点优先级，辅助改为50</span><br><span class="line">    advert_int 1            #检查间隔，默认为1s</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $d/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server $d 80 &#123;    #LVS配置</span><br><span class="line">delay_loop 3  #启动3个进程</span><br><span class="line">lb_algo rr     #LVS调度算法</span><br><span class="line">lb_kind DR     #LVS集群模式（路由模式）</span><br><span class="line">nat_mask 255.255.255.0</span><br><span class="line">protocol TCP      #健康检查使用的协议</span><br><span class="line">real_server $e 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure   #当该节点失败时，把权重设置为0，而不是从IPVS中删除</span><br><span class="line">TCP_CHECK &#123;          #健康检查</span><br><span class="line">connect_port 80   #检查的端口</span><br><span class="line">connect_timeout 3  #连接超时的时间</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server $f 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure</span><br><span class="line">TCP_CHECK &#123;</span><br><span class="line">connect_timeout 3</span><br><span class="line">connect_port 80</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：LVS_Director + KeepAlived slave】</span></span><br><span class="line">install_lvs_dr_slave()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的VIP：" g</span><br><span class="line">read -p "请输入你的server1的IP：" h</span><br><span class="line">read -p "请输入你的server2的IP：" i</span><br><span class="line">yum -y install ipvsadm keepalived</span><br><span class="line">mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">        cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lvs-keepalived-slave</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt                    #不抢占资源</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $g/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">virtual_server $g 80 &#123;</span><br><span class="line">delay_loop 3</span><br><span class="line">lb_algo rr</span><br><span class="line">lb_kind DR</span><br><span class="line">nat_mask 255.255.255.0</span><br><span class="line">protocol TCP</span><br><span class="line">real_server $h 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure</span><br><span class="line">TCP_CHECK &#123;</span><br><span class="line">connect_port 80</span><br><span class="line">connect_timeout 3</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server $i 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure</span><br><span class="line">TCP_CHECK &#123;</span><br><span class="line">connect_timeout 3</span><br><span class="line">connect_port 80</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：LVS_Director + KeepAlived rs】</span></span><br><span class="line">install_lvs_dr_rs()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你的proxy的VIP：" j</span><br><span class="line">yum -y install nginx</span><br><span class="line">ip addr add dev lo $j/32</span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore #忽略arp广播</span><br><span class="line">echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce #匹配精确ip地址回包</span><br><span class="line">systemctl restart nginx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：LVS_NAT + Keepalived master】</span></span><br><span class="line">install_lvs_nat_master()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的外网VIP：" j</span><br><span class="line">read -p "请输入你的server1的IP：" k</span><br><span class="line">read -p "请输入你的server2的IP：" l</span><br><span class="line">read -p "请输入你要设置的内网VIP：" m</span><br><span class="line">yum -y install ipvsadm keepalived</span><br><span class="line">mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">        cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id lvs-keepalived-master</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens37#桥接网卡名称</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">      $j/24#注意自己的网段</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server $j 80 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    protocol TCP</span><br><span class="line">real_server $k 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">        connect_port 80</span><br><span class="line">        connect_timeout 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server $l 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">    connect_timeout 3</span><br><span class="line">    connect_port 80</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33#NAT模式网卡名称</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 2222</span><br><span class="line">        &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $m/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">        cat &gt;&gt; /etc/sysctl.conf  &lt;&lt;EOF</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：LVS_NAT + Keepalived slave】</span></span><br><span class="line">install_lvs_nat_slave()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入你要设置的外网VIP：" j</span><br><span class="line">read -p "请输入你的server1的IP：" k</span><br><span class="line">read -p "请输入你的server2的IP：" l</span><br><span class="line">read -p "请输入你要设置的内网VIP：" m</span><br><span class="line">yum -y install ipvsadm keepalived</span><br><span class="line">mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">        cat &gt; /etc/keepalived/keepalived.conf  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id lvs-keepalived-slave</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens37</span><br><span class="line">    nopreempt</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">      $j/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server $j 80 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    protocol TCP</span><br><span class="line">real_server $k 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">        connect_port 80</span><br><span class="line">        connect_timeout 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server $l 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">    connect_timeout 3</span><br><span class="line">    connect_port 80</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 2222</span><br><span class="line">        &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $m/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">        cat &gt;&gt; /etc/sysctl.conf  &lt;&lt;EOF</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">【函数：_LVS_NAT + Keepalived rs】</span></span><br><span class="line">install_lvs_nat_rs()&#123;</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">read -p "请输入proxy内网VIP：" j</span><br><span class="line">yum -y install nginx net-tools</span><br><span class="line">route add default gw $j  dev ens33</span><br><span class="line">systemctl restart nginx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########################【开始】################################</span></span></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">       main_menu </span><br><span class="line">        read -p "请输入你的选择：【 1 / 2 / 3 / 4 / 5】 " num</span><br><span class="line">        clear</span><br><span class="line"></span><br><span class="line">if [ $num -eq 1 ]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">echo -e "\e[45;37m \t\t\t【 下 方 是 二 级 菜 单 】\t\t\t \e[0m"</span><br><span class="line">menu_1</span><br><span class="line">read -p "请输入你的选择：【 1 / 2 / 3 】 " num_1</span><br><span class="line">clear</span><br><span class="line">case $num_1 in</span><br><span class="line">1)</span><br><span class="line">install_nginx_proxy</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">install_nginx_server</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">clear</span><br><span class="line">break</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elif [ $num -eq 2 ]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">echo -e "\e[45;37m \t\t\t【 下 方 是 二 级 菜 单 】\t\t\t \e[0m"</span><br><span class="line">menu_2</span><br><span class="line">read -p "请输入你的选择：【 1 / 2 / 3 】 " num_2</span><br><span class="line">clear</span><br><span class="line">case $num_2 in</span><br><span class="line">1)</span><br><span class="line">install_ka_master</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">install_ka_slave</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">clear</span><br><span class="line">break</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elif [ $num -eq 3 ]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">echo -e "\e[45;37m \t\t\t【 下 方 是 二 级 菜 单 】\t\t\t \e[0m"</span><br><span class="line">menu_3</span><br><span class="line">read -p "请输入你的选择：【 1 / 2 / 3 】 " num_3</span><br><span class="line">clear</span><br><span class="line">if [ $num_3 -eq 1 ]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">echo -e "\e[45;37m \t\t\t【 下 方 是 三 级 菜 单 】\t\t\t \e[0m"</span><br><span class="line">menu_3_1</span><br><span class="line">read -p "请输入你的选择：【 1 / 2 / 3 / 4 】 " num_31</span><br><span class="line">clear</span><br><span class="line">case $num_31 in</span><br><span class="line">1)</span><br><span class="line">install_lvs_dr_master</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">install_lvs_dr_slave</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">install_lvs_dr_rs</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">clear</span><br><span class="line">break</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">elif [ $num_3 -eq 2 ]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">echo -e "\e[45;37m \t\t\t【 下 方 是 三 级 菜 单 】\t\t\t \e[0m"</span><br><span class="line">menu_3_2</span><br><span class="line">read -p "请输入你的选择：【 1 / 2 / 3 / 4 】 " num_32</span><br><span class="line">clear</span><br><span class="line">case $num_32 in</span><br><span class="line">1)</span><br><span class="line">install_lvs_nat_master</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">install_lvs_nat_slave</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">install_lvs_nat_rs</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">clear</span><br><span class="line">break</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">elif [ $num_3 -eq 3 ]</span><br><span class="line">then</span><br><span class="line">clear</span><br><span class="line">break</span><br><span class="line">else </span><br><span class="line">clear </span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elif [ $num -eq 4 ]</span><br><span class="line">then</span><br><span class="line">check_ka</span><br><span class="line"></span><br><span class="line">elif [ $num -eq 5 ]</span><br><span class="line">then</span><br><span class="line">exit 0</span><br><span class="line">else </span><br><span class="line">clear </span><br><span class="line">echo -e "\e[41;34m \t\t请按照提示输入正确的选项：【 例 如 数 字：1 】\t\t \e[0m"</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>​                </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Keepalived" scheme="https://l66stbz.github.io/tags/Keepalived/"/>
    
      <category term="Nginx" scheme="https://l66stbz.github.io/tags/Nginx/"/>
    
      <category term="Shell" scheme="https://l66stbz.github.io/tags/Shell/"/>
    
      <category term="LVS" scheme="https://l66stbz.github.io/tags/LVS/"/>
    
  </entry>
  
  <entry>
    <title>基础测试脚本题</title>
    <link href="https://l66stbz.github.io/2024/05/23/%E5%9F%BA%E7%A1%80%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC%E9%A2%98/"/>
    <id>https://l66stbz.github.io/2024/05/23/%E5%9F%BA%E7%A1%80%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC%E9%A2%98/</id>
    <published>2024-05-23T01:56:37.000Z</published>
    <updated>2024-06-22T08:02:52.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【脚本题（书写时注意格式）】<br>1、创建一个脚本，该脚本可以根据你输入的日期计算出你还有多少天过生日。<br>提示部分：<br>#!/bin/bash<br>read -p “请输入你生日，格式如07-28：” num<br>year=<code>date +%Y</code><br>#先算出生日是今年的第几天<br>A=<code>date -d ${year}-${num} +%j</code><br>#再算出今天是今年的第几天<br>B=<code>date +%j</code><br>请继续书写脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">read -p "请输入你生日，格式如07-28：" num</span><br><span class="line">year=`date +%Y`</span><br><span class="line">A=`date -d $&#123;year&#125;-$&#123;num&#125; +%j`#算出生日是今年的第几天</span><br><span class="line">B=`date +%j`   #算出今天是今年的第几天</span><br><span class="line">if [ $A -ge $B ]</span><br><span class="line">then</span><br><span class="line">        echo "$A-$B"|bc</span><br><span class="line">else</span><br><span class="line">        echo "$A-$B+365"|bc</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>2、创建一个脚本，执行脚本后让用户输入一个数字，程序可以判断用户输入的是正整数还是负整数或者是0。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">read -p "请输入一个数字：" num</span><br><span class="line">if [ $num -eq 0 ]</span><br><span class="line">then</span><br><span class="line">        echo "你输入的是0"</span><br><span class="line">elif [ $num -gt 0 ]</span><br><span class="line">then</span><br><span class="line">        echo "你输入的是正整数"</span><br><span class="line">else</span><br><span class="line">        echo "你输入的是负整数"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>3、写一个脚本，可以计算出从1到用户输入的数字之和，同时需要判断用户输入的是否是正整数。<br>（例如：用户如数的是5，则计算1+2+3+4+5=15）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">read -p "请输入一个数：" num</span><br><span class="line">sum=0</span><br><span class="line">i=0</span><br><span class="line">if [ $num -gt 0 ]</span><br><span class="line">then</span><br><span class="line">        for i in `seq 1 $num`</span><br><span class="line">        do</span><br><span class="line">                let sum=$sum+i</span><br><span class="line">                let i++</span><br><span class="line">        done</span><br><span class="line">        echo $sum</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://l66stbz.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>小组讨论问题</title>
    <link href="https://l66stbz.github.io/2024/05/22/%E5%B0%8F%E7%BB%84%E8%AE%A8%E8%AE%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://l66stbz.github.io/2024/05/22/%E5%B0%8F%E7%BB%84%E8%AE%A8%E8%AE%BA%E9%97%AE%E9%A2%98/</id>
    <published>2024-05-22T01:56:37.000Z</published>
    <updated>2024-06-22T08:10:21.285Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1、zabbix-server服务启动失败的问题可能性有哪些？简述拍错步骤。<br>selinux和firewalld防火墙没关。<br>数据库、服务没启动、<br>zabbix-server服务端配置文件<br>2、如果zabbix仪表盘提示无法连接到agen机器，无法获取数据信息，问题可能性有哪些？简述拍错步骤。</p><p>agent节点防火墙<br>agent节点的配置文件zabbix_agentd.conf检查一下，重启一下zabbix-agent服务。</p><p>3、防火墙firewalld与防火墙selinux没有关闭的情况下，项目验证环节为什么很多服务无法正常进行验证。</p><p>防火墙设置了严格的规则，限制了某些服务的网络通信。某些服务所需端口可能被防火墙阻止，导致无法正常通信。<br>SELinux可能会对某些服务的运行产生限制，如限制服务对文件或目录的访问权限，或者限制了服务的网络通信。</p><p>4、简述常见的WEB服务器，他们各自的特点是什么？</p><p>Apache<br>开源<br>支持各种操作系统<br>具有高度可定制性。成熟稳定，用户庞大和文档资源丰富。<br>nginx<br>高性能高并发<br>低内存消耗和高可扩展性<br>配置简洁、灵活，易于学习和使用。<br>本身只能处理静态文件服务，要处理动态内容需要配合其他工具。<br>iis<br>支持多种 Web 技术和开发语言<br>在 Windows 平台上具有良好的性能和稳定性<br>5、tomcat属于WEB服务器吗？为什么需要先安装JDK，不安装对应的jdk会出现什么问题？</p><p>不属于WEB服务器，他是WEB应用服务器(容器)。<br>区分：web服务器不能解析jsp等页面，只能处理js、css、html等静态资源，web服务器的并发能力远高于web应用服务器<br>如果没有jdk就没有java环境，tomcat也就无法启动<br>6、简述服务上架的大致流程。<br>（1）安装jdk，配置环境变量文件<br>（2）安装Tomcat并检查是否可以启动<br>（3）安装mariadb数据库，并创建数据库。<br>（4）将项目的ROOT文件放入Tomcat的webapps目录下<br>（5）向数据库中导入数据，并设置数据库连接文件<br>（6）网页测试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived</title>
    <link href="https://l66stbz.github.io/2024/05/21/Keepalived/"/>
    <id>https://l66stbz.github.io/2024/05/21/Keepalived/</id>
    <published>2024-05-21T01:56:37.000Z</published>
    <updated>2024-06-22T07:52:09.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">keepalived是什么</span><br><span class="line">    keepalived是集群管理中保证集群高可用的一个服务软件，用来防止单节点故障。</span><br><span class="line"></span><br><span class="line">keepalived工作原理</span><br><span class="line">    keepalived是以VRRP协议为实现基础的，VRRP全称Virtual Router Redundancy Protocol，即虚拟路由冗余协议。</span><br><span class="line"></span><br><span class="line">    虚拟路由冗余协议，可以认为是实现高可用的协议，即将N台提供相同功能的路由器组成一个路由器组，这个组里面有一个master和多个backup，master上面有一个对外提供服务的vip（该路由器所在局域网内其他机器的默认路由为该vip），master会发组播，当backup收不到vrrp包时就认为master宕掉了，这时就需要根据VRRP的优先级来选举一个backup当master。这样的话就可以保证路由器的高可用了。</span><br><span class="line"></span><br><span class="line">keepalived主要有三个模块，分别是core、check和vrrp。core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。check负责健康检查，包括常见的各种检查方式。vrrp模块是来实现VRRP协议的。</span><br><span class="line">============================================================================</span><br><span class="line">脑裂(裂脑)：</span><br><span class="line">Keepalived的BACKUP主机在收到不MASTER主机报文后就会切换成为master，如果是它们之间的通信线路出现问题，无法接收到彼此的组播通知，但是两个节点实际都处于正常工作状态，这时两个节点均为master强行绑定虚拟IP，导致不可预料的后果，这就是脑裂。</span><br><span class="line">解决方式:</span><br><span class="line">1、添加更多的检测手段，比如冗余的心跳线（两块网卡做健康监测），ping对方等等。尽量减少"裂脑"发生机会。(治标不治本，只是提高了检测到的概率)；</span><br><span class="line">2、做好对裂脑的监控报警（如邮件及手机短信等或值班）.在问题发生时人为第一时间介入仲裁，降低损失。例如，百度的监控报警短倍就有上行和下行的区别。报警消息发送到管理员手机上，管理员可以通过手机回复对应数字或简单的字符串操作返回给服务器.让服务器根据指令自动处理相应故障，这样解决故障的时间更短；</span><br><span class="line">3、爆头，将master停掉。然后检查机器之间的防火墙。网络之间的通信;</span><br></pre></td></tr></table></figure><h3 id="实现nginx的反向代理"><a href="#实现nginx的反向代理" class="headerlink" title="实现nginx的反向代理"></a>实现nginx的反向代理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向代理代理的是服务端，正向代理代理的是客户端。</span><br><span class="line">proxy:反向代理</span><br><span class="line">agent:正向代理</span><br><span class="line">反向代理服务器自己本身并不存放页面，当有用户申请访问时，反向代理服务器会向下面的真实服务器转发，从而提供页面，转发前会先确认是否"活着"。如果没有服务器“活着”，那么就无法提供页面，从而用户访问不到。</span><br></pre></td></tr></table></figure><p>配置安装nginx 所有的机器，关闭防火墙和selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@zabbix-agent-node2 yum.repos.d]# vim nginx.repo</span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[root@zabbix-agent-node2 yum.repos.d]# yum install nginx -y</span><br></pre></td></tr></table></figure><p>此处将Alan游戏网站拖到了root目录下，因为想要展示的页面文件后缀名为htm。所以要想优先展示可以修改nginx的配置文件，让htm文件优先展示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# mv /root/alan游戏网站/* /usr/share/nginx/html/</span><br><span class="line">[root@zabbix-agent-node2 ~]# vi /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/21/Keepalived/1.png" class></strong></p><p>想让htm文件优先展示就让index.html文件在前，反之一样。</p><p>修改过后nginx的配置文件记得重启nginx服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server yum.repos.d]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p>浏览器访问：<a href="http://192.168.100.40成功显示" target="_blank" rel="noopener">http://192.168.100.40成功显示</a><strong><img src="/2024/05/21/Keepalived/2.png" class></strong></p><p>下面在node1节点再次安装nginx服务也作为真实服务器端。具体操作同上，页面方面可以换成别的页面，两节点不一样方便最后对照显示。此处node1节点使用的页面是nginx默认显示的页面。</p><h3 id="配置反向代理服务器端"><a href="#配置反向代理服务器端" class="headerlink" title="配置反向代理服务器端"></a>配置反向代理服务器端</h3><p>同上一样，配置安装nginx，关闭防火墙和selinux。因为此节点的80端口被其他服务占用了，所以此节点的nginx服务需要额外修改一下端口，具体配置如下，此处是将upstream index和server放在了一个文件当中，笔记中是分了两个文件。两种都是可以的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">子配置文件不管怎么写最终其实也都是放到了主配置文件当中，以.conf结尾的一般都是主配置文件，一般都放在 /etc/服务名 目录下，conf.d一般都是子配置文件目录。</span></span><br></pre></td></tr></table></figure><p>配置完成后重启nginx服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]# vi /etc/nginx/conf.d/default.conf </span><br><span class="line"></span><br><span class="line">upstream index &#123;</span><br><span class="line">        server 192.168.100.30:80 weight=1 max_fails=2 fail_timeout=2;</span><br><span class="line">        server 192.168.100.40:80 weight=2 max_fails=2 fail_timeout=2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">weight意为优先级，此处相当于找30一次，找40两次，由此往复，不写默认都是1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">max_fails意为最大失败次数，也就是询问该节点2次如果都无回应则不会再询问该节点。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">fail_timeout意为失败后的再次询问时间间隔，也就是询问后2秒无回应再询问下一次</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 81;#80端口被占用，启用81端口</span><br><span class="line">        server_name     localhost;</span><br><span class="line">        access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">         proxy_pass http://index;</span><br><span class="line">         #此处http://后的内容要与第一行upstream后的内容一致</span><br><span class="line">         proxy_redirect default;</span><br><span class="line">         proxy_set_header Host $http_host;</span><br><span class="line">         proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">[root@zabbix-server ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p>此时可以去浏览器访问：<a href="http://192.168.100.20:81,可以发现第一次是node1节点的nginx页面，刷新后是node2节点的设置的游戏页面，至此反向代理服务器设置成功。">http://192.168.100.20:81,可以发现第一次是node1节点的nginx页面，刷新后是node2节点的设置的游戏页面，至此反向代理服务器设置成功。</a></p><p><strong><img src="/2024/05/21/Keepalived/3.png" class></strong></p><p><strong><img src="/2024/05/21/Keepalived/4.png" class></strong></p><p>上述情况为高并发集群，当keepalived介入后，有了backup，就成了高可用集群，高可用集群是建立在高并发集群的基础上的。</p><h3 id="Keepalived实现调度器HA"><a href="#Keepalived实现调度器HA" class="headerlink" title="Keepalived实现调度器HA"></a>Keepalived实现调度器HA</h3><ol><li><p>主/备调度器安装软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-proxy-master ~]# yum install -y keepalived</span><br><span class="line">[root@nginx-proxy-slave ~]# yum install -y keepalived</span><br><span class="line">[root@nginx-proxy-slave ~]# cd /etc/nginx/conf.d/</span><br><span class="line">[root@nginx-proxy-slave conf.d]# mv default.conf default.conf.bak</span><br><span class="line">[root@nginx-proxy-master ~]# mv /etc/keepalived/keepalived.conf </span><br><span class="line">/etc/keepalived/keepalived.conf.bak</span><br><span class="line"><span class="meta">#</span><span class="bash">为了防止后续会用到原配置文件，所以将其加了后缀名封印了，重新创了新的进行编写</span></span><br><span class="line">[root@nginx-proxy-master ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory1   #辅助改为directory2，相当于是组内的主机名</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;     #组名</span><br><span class="line">    state MASTER        #定义主还是备</span><br><span class="line">    interface ens33     #VIP绑定接口</span><br><span class="line">    virtual_router_id 80  #整个集群的调度器一致</span><br><span class="line">    priority 100         #优先级，backup改为50</span><br><span class="line">    advert_int 1 #心跳检测的时间间隔1s</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS   #认证方式，可以是PASS或AH两种认证方式</span><br><span class="line">        auth_pass 1111   #认证密码，组内须一致</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24  #VIP</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-proxy-slave ~]# mv /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br><span class="line">[root@nginx-proxy-slave ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP    #设置为backup</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt        #设置到back上面，不抢占资源(VIP)</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50   #辅助改为50</span><br><span class="line">    advert_int 1#检测间隔1s</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  2.启动KeepAlived（主备均启动）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-proxy-master ~]# systemctl start keepalived</span><br><span class="line">[root@nginx-proxy-master ~]# systemctl enable keepalived</span><br><span class="line">[root@nginx-porxy-slave ~]# systemctl start keepalived</span><br><span class="line">[root@nginx-porxy-slave ~]# systemctl enable keepalived</span><br><span class="line">[root@nginx-proxy-master ~]# ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:8c:41:88 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.100.20/24 brd 192.168.100.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.100.100/24 scope global secondary ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe8c:4188/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>测试：<br>浏览器访问：<a href="http://192.168.100.100" target="_blank" rel="noopener">http://192.168.100.100</a><br>如能正常访问，将keepalived主节点关机，测试vip是否漂移</p><p>测试后发现VIP漂移到了从节点，并且浏览器访问：<a href="http://192.168.100.100依旧可以正常访问。" target="_blank" rel="noopener">http://192.168.100.100依旧可以正常访问。</a></p><h3 id="加入检测服务脚本"><a href="#加入检测服务脚本" class="headerlink" title="加入检测服务脚本"></a>加入检测服务脚本</h3><p>到此：<br>可以解决心跳故障keepalived<br>不能解决Nginx服务故障，也就是心跳检测，加入检测服务脚本的目的也就是要让主从反向代理服务器上的nginx服务和keepalived服务绑定在一起。</p><p>正常情况来讲，机器的keepalived服务挂掉了VIP才会进行漂移，但是在工作当中除了机器直接关机或者没了才会出现这种情况，大多数的情况是nginx挂掉而keepalived服务仍然正常，所以就会导致一种结果，nginx服务挂掉网页无法正常访问，但keepalived服务仍正常运行所以VIP并不会漂移到从节点。</p><p>所以加入检测脚本就是让脚本不断检测nginx服务是否挂掉，当确定挂掉时，脚本会关掉keepalived服务，使得VIP自动漂移到从节点。从而用户可以正常访问。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line">让Keepalived以一定时间间隔执行一个外部脚本，脚本的功能是当Nginx失败，则关闭本机的Keepalived</span><br><span class="line">(1) script</span><br><span class="line">[root@nginx-proxy-master ~]# vim /etc/keepalived/check_nginx_status.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash        </span></span><br><span class="line">/usr/bin/curl -I http://localhost &amp;&gt;/dev/null</span><br><span class="line">if [ $? -ne 0 ];then    </span><br><span class="line"><span class="meta">#</span><span class="bash">/etc/init.d/keepalived stop</span></span><br><span class="line">systemctl stop keepalived</span><br><span class="line">fi        </span><br><span class="line">[root@nginx-proxy-master ~]# chmod a+x /etc/keepalived/check_nginx_status.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">赋予文件执行权限</span></span><br><span class="line">(2). keepalived使用script</span><br><span class="line">[root@nginx-proxy-master ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123;     #check_nginx相当于文件的别名</span><br><span class="line">   script "/etc/keepalived/check_nginx_status.sh"  #文件路径</span><br><span class="line">   interval 5                #间隔时间，就是如果无回应多久进行下一次访问</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_nginx            #文件别名，需与上方的一致</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">注：必须先启动Nginx，再启动keepalived</span><br><span class="line"></span><br><span class="line">测试访问：  </span><br><span class="line">将keepalived集群的主节点的Nginx服务关闭，查看vip是否漂移，如果漂移，即成功。</span><br><span class="line">VIP成功漂移后再次启动主节点nginx服务，VIP会自动漂移回来主节点，原因是主节点优先级高。</span><br><span class="line">正常工作中不论主从节点都需要安装检测服务，此处只是为了展示实验结果所以只在主节点进行了配置。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">面试题：高可用时，你的备份机器（从机）是否存在可用性？</span><br><span class="line">是存在的，只不过是没有流量分发到备份机器，VIP不在从机。</span><br></pre></td></tr></table></figure><h3 id="Keepalived邮箱报警配置"><a href="#Keepalived邮箱报警配置" class="headerlink" title="Keepalived邮箱报警配置"></a>Keepalived邮箱报警配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主备都配置</span></span><br><span class="line"></span><br><span class="line">[root@keepalived-1 keepalived]# cat /etc/keepalived/notify.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">contact='ldq20000603@163.com'</span><br><span class="line">notify() &#123;</span><br><span class="line">local mailsubject="$(hostname) to be $1, vip floating"</span><br><span class="line">local mailbody="$(date +'%F %T'): vrrp transition, $(hostname) changed to be $1"</span><br><span class="line">echo "$mailbody" | mail -s "$mailsubject" $contact</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">contack为全局变量，<span class="built_in">local</span>为局部变量，<span class="variable">$0</span>为脚本文件，<span class="variable">$1</span>为执行命令后定义的变量，<span class="variable">$2</span>即为执行命令后定义的第二个变量（根据顺序排队确定第几个变量）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#如：</span></span></span><br><span class="line">[root@zabbix-server ~]# cat $$$.sh</span><br><span class="line">echo "$1 你好呀"</span><br><span class="line">[root@zabbix-server ~]# bash $$$.sh 刘 李</span><br><span class="line">刘 你好呀</span><br><span class="line">[root@zabbix-server ~]# bash $$$.sh 李 李</span><br><span class="line">李 你好呀</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></span><br><span class="line">case $1 in</span><br><span class="line">master)</span><br><span class="line">        notify master</span><br><span class="line">        ;;</span><br><span class="line">backup)</span><br><span class="line">        notify backup</span><br><span class="line">        ;;</span><br><span class="line">fault)</span><br><span class="line">        notify fault</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        echo "Usage: $(basename $0) &#123;master|backup|fault&#125;"</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">[root@keepalived-1 keepalived]# chmod 777 /etc/keepalived/notify.sh</span><br></pre></td></tr></table></figure><h4 id="配置发送邮件的设置："><a href="#配置发送邮件的设置：" class="headerlink" title="配置发送邮件的设置："></a>配置发送邮件的设置：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">主备都操作</span><br><span class="line">[root@keepalived-1 ~]# yum -y install mailx</span><br><span class="line">[root@keepalived-1 ~]# vim /etc/mail.rc  #在文件最后面添加</span><br><span class="line">set from=ldq20000603@163.com</span><br><span class="line">set smtp=smtp.163.com</span><br><span class="line">set smtp-auth-user=ldq20000603@163.com</span><br><span class="line">set smtp-auth-password=IKMQRYSVCTALDYNT  #邮箱需要开启POP3/SMTP服务并设置密钥</span><br><span class="line">set smtp-auth=login</span><br><span class="line">set ssl-verify=ignore</span><br><span class="line">[root@keepalived-1 ~]# echo test mail| mail -s "testa" ldq20000603@163.com</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/21/Keepalived/5.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]# vi /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">   router_id directory1   <span class="comment">#辅助改为directory2</span></span></span><br><span class="line"></span><br><span class="line">   notification_email &#123;</span><br><span class="line">    ldq20000603@163.com    # 报警邮件地址，也就是接收者</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc  #发送者的邮箱，指定发件人</span><br><span class="line">   smtp_server smtp.163.com</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id directory1   #辅助改为directory2</span><br><span class="line">   vrrp_garp_interval 0  # ARP报文发送延迟时间，可以精确到毫秒级。默认是0.</span><br><span class="line">   vrrp_gna_interval 0   # 信息发送延迟时间</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">   script "/etc/keepalived/check_nginx.sh"</span><br><span class="line">   interval 5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER        #定义主还是备</span><br><span class="line">    interface ens33     #VIP绑定接口</span><br><span class="line">    virtual_router_id 80  #整个集群的调度器一致</span><br><span class="line">    priority 100         #优先级，backup改为50</span><br><span class="line">    advert_int 1                 #心跳检测的时间间隔1s</span><br><span class="line">    #nopreempt</span><br><span class="line">    notify_master "/etc/keepalived/notify.sh master"  #当前节点成为master时，通知脚本执行任务</span><br><span class="line">    notify_backup "/etc/keepalived/notify.sh backup"  #当前节点成为backup时，通知脚本执行任务</span><br><span class="line">    notify_fault "/etc/keepalived/notify.sh fault"    #当当前节点出现故障，执行的任务</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">track_script &#123;</span><br><span class="line">        check_nginx</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">参数解释：</span></span><br><span class="line">notification_email &#123;...&#125;：该指令用于应用一段邮件接收者的一个配置段，用大括号括起来，里面可以配置多个邮件接收者；</span><br><span class="line">notification_email_from：该指令用于指定邮件发出者的邮箱；</span><br><span class="line">smtp_server：该指令用于指定邮件服务器地址；</span><br><span class="line">smtp_connect_timeout：该指令用于指定连接邮件服务器的超时时长，默认30秒；</span><br><span class="line">notify_master：配置节点成为master角色的触发的动作；通常为执行一个脚本；</span><br><span class="line">notify_backup：配置节点角色转换为backup触发的动作；</span><br><span class="line">notify_fault：配置节点为失败状态触发的动作；</span><br></pre></td></tr></table></figure><p>正常来讲主从节点机器都需要进行以上邮件报警设置操作，这里为了展示实验结果只在主节点进行了上述操作。自己操作时需要主从节点机器都进行操作。主从节点基本配置没有什么区别，注意一些组内主机机器名和主从设备的定义。</p><p>测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test-1 keepalived]# systemctl start keepalived</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/21/Keepalived/6.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test-1 keepalived]# systemctl stop keepalived</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/21/Keepalived/7.png" class></strong></p><h4 id="keepalived的vip不漂移问题"><a href="#keepalived的vip不漂移问题" class="headerlink" title="keepalived的vip不漂移问题"></a>keepalived的vip不漂移问题</h4><p>详细看参考链接：<a href="https://blog.csdn.net/Laymany/article/details/122978075" target="_blank" rel="noopener">https://blog.csdn.net/Laymany/article/details/122978075</a></p><h3 id="LVS-Director-KeepAlived"><a href="#LVS-Director-KeepAlived" class="headerlink" title="LVS_Director + KeepAlived"></a>LVS_Director + KeepAlived</h3><p><strong><img src="/2024/05/21/Keepalived/8.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">实施步骤：</span><br><span class="line"></span><br><span class="line">1. 主/备调度器安装软件</span><br><span class="line">   [root@lvs-keepalived-master ~]# yum -y install ipvsadm keepalived </span><br><span class="line">   [root@lvs-keepalived-slave ~]# yum -y install ipvsadm keepalived</span><br><span class="line">2. Keepalived</span><br><span class="line">   lvs-master</span><br><span class="line">   [root@lvs-keepalived-master ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id directory1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    #nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">virtual_server 192.168.100.100 80 &#123;</span><br><span class="line">        delay_loop 3</span><br><span class="line">        lb_algo rr</span><br><span class="line">        lb_kind DR</span><br><span class="line">        nat_mask 255.255.255.0</span><br><span class="line">        protocol TCP</span><br><span class="line">        real_server 192.168.100.30 80 &#123;</span><br><span class="line">                weight 1</span><br><span class="line">                inhibit_on_failure</span><br><span class="line">                TCP_CHECK &#123;</span><br><span class="line">                        connect_port 80</span><br><span class="line">                        connect_timeout 3</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        real_server 192.168.100.40 80 &#123;</span><br><span class="line">                weight 1</span><br><span class="line">                inhibit_on_failure</span><br><span class="line">                TCP_CHECK &#123;</span><br><span class="line">                        connect_timeout 3</span><br><span class="line">                        connect_port 80</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@lvs-keepalived-slave ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lvs-keepalived-slave</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt                    #不抢占资源</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">virtual_server 192.168.100.100 80 &#123;</span><br><span class="line">delay_loop 3</span><br><span class="line">lb_algo rr</span><br><span class="line">lb_kind DR</span><br><span class="line">nat_mask 255.255.255.0</span><br><span class="line">protocol TCP</span><br><span class="line">real_server 192.168.100.30 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure</span><br><span class="line">TCP_CHECK &#123;</span><br><span class="line">connect_port 80</span><br><span class="line">connect_timeout 3</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server 192.168.100.40 80 &#123;</span><br><span class="line">weight 1</span><br><span class="line">inhibit_on_failure</span><br><span class="line">TCP_CHECK &#123;</span><br><span class="line">connect_timeout 3</span><br><span class="line">connect_port 80</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">3. 启动KeepAlived（主备均启动）</span><br><span class="line">   [root@lvs-keepalived-master ~]# systemctl start keepalived</span><br><span class="line">   [root@lvs-keepalived-master ~]# systemctl enable keepalived</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">所有RS配置(nginx1,nginx2)</span><br><span class="line">配置好网站服务器，测试所有RS</span><br><span class="line">[root@test-nginx1 ~]# yum install -y nginx</span><br><span class="line">[root@test-nginx2 ~]# yum install -y nginx</span><br><span class="line"></span><br><span class="line">[root@test-nginx1 ~]# ip addr add dev lo 192.168.246.110/32</span><br><span class="line">[root@test-nginx2 ~]# ip addr add dev lo 192.168.246.110/32</span><br><span class="line"></span><br><span class="line">[root@test-nginx1 ~]# echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore #忽略arp广播</span><br><span class="line">[root@test-nginx1 ~]# echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce #匹配精确ip地址回包</span><br><span class="line"></span><br><span class="line">[root@test-nginx2 ~]# echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore #忽略arp广播</span><br><span class="line">[root@test-nginx2 ~]# echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce #匹配精确ip地</span><br><span class="line">[root@test-nginx1 ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p>测试<br>所有分发器和Real Server都正常。访问LVS的VIP可以访问到页面，关闭master节点的keepalived后，VIP漂移到slave节点。仍然可以访问到页面，master节点keepalived再次启动后，VIP飘回仍正常访问。</p><h3 id="LVS-NAT-Keepalived"><a href="#LVS-NAT-Keepalived" class="headerlink" title="LVS_NAT + Keepalived"></a>LVS_NAT + Keepalived</h3><p>四台机器（网络模式都设置为NAT模式）：<br>两台做lvs-nat模式的keepalived集群<br>两台做RS(Nginx提供静态页面即可)</p><p><strong><img src="/2024/05/21/Keepalived/9.png" class></strong></p><p>两台lvs操作<br>都添加一块桥接的网卡</p><p><strong><img src="/2024/05/21/Keepalived/10.png" class></strong></p><p>lvs的master节点配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@lvs-master ~]# yum -y install ipvsadm keepalived</span><br><span class="line">[root@lvs-master ~]# cat /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">     router_id directory1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens37#桥接网卡名称</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">      10.8.153.200/24#注意自己的网段</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.8.153.200 80 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    protocol TCP</span><br><span class="line">real_server 192.168.100.30 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">        connect_port 80</span><br><span class="line">        connect_timeout 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server 192.168.100.40 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">    connect_timeout 3</span><br><span class="line">    connect_port 80</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33#NAT模式网卡名称</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 2222</span><br><span class="line">        &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>lvs的slave节点配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@lvs-slave ~]# yum -y install ipvsadm keepalived</span><br><span class="line">[root@lvs-slave ~]# cat /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">     router_id directory2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens37</span><br><span class="line">    nopreempt</span><br><span class="line">    virtual_router_id 80</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">      10.8.153.200/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.8.153.200 80 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    protocol TCP</span><br><span class="line">real_server 192.168.100.30 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">        connect_port 80</span><br><span class="line">        connect_timeout 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">real_server 192.168.100.40 80 &#123;</span><br><span class="line">    weight 1</span><br><span class="line">    inhibit_on_failure</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">    connect_timeout 3</span><br><span class="line">    connect_port 80</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    nopreempt</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 2222</span><br><span class="line">        &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.100/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">注意开启路由转发</span><br><span class="line">[root@lvs-master ~]# vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">[root@lvs-master ~]# sysctl -p</span><br><span class="line"></span><br><span class="line">[root@lvs-slave ~]# vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">[root@lvs-slave ~]# sysctl -p</span><br><span class="line"></span><br><span class="line">安装nginx服务器，配置不同的静态页面过程：略</span><br><span class="line"></span><br><span class="line">[root@test-nginx1 ~]# route add default gw 192.168.100.100  dev ens33</span><br><span class="line">[root@test-nginx2 ~]# route add default gw 192.168.100.100  dev ens33</span><br><span class="line"></span><br><span class="line">提示：由于临时添加的方式，网关有可能会消失。也可以直接去网卡配置文件中修改网关，保存退出后记得重启网络。重启网络命令:systemctl restart network</span><br><span class="line">====================================================================================</span><br><span class="line"></span><br><span class="line">启动Keepalived服务</span><br><span class="line">[root@lvs-master ~]# systemctl start keepalived</span><br><span class="line">[root@lvs-slave ~]# systemctl start keepalived</span><br></pre></td></tr></table></figure><h5 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h5><p>当两个vip在master节点上时，访问浏览器</p><p>把master节点的keepalived服务停止，两个vip会漂移到backup节点，再次用浏览器访问</p><p>总结：如果ip漂移之后，访问不到，<br>1.查看backup节点是否开启了路由转发<br>2.查看RS上面的网关有没有消失</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Keepalived" scheme="https://l66stbz.github.io/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>基于云部署tomcat和jdk使jspgou项目上线</title>
    <link href="https://l66stbz.github.io/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/"/>
    <id>https://l66stbz.github.io/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/</id>
    <published>2024-05-20T01:56:37.000Z</published>
    <updated>2024-06-22T07:44:34.210Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基于云部署tomcat和jdk使jspgou项目上线"><a href="#基于云部署tomcat和jdk使jspgou项目上线" class="headerlink" title="基于云部署tomcat和jdk使jspgou项目上线"></a>基于云部署tomcat和jdk使jspgou项目上线</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">静态界面：html</span><br><span class="line">动态界面 ：php java python</span><br><span class="line">传统的web服务器只能解析静态界面:apache nginx</span><br><span class="line">如果解析动态界面,需要使用容器</span><br><span class="line">web容器:</span><br><span class="line">    web容器: uwsgi php tomcat</span><br><span class="line">    tomcat部署jspgou商城</span><br><span class="line">    </span><br><span class="line">java的项目运行依赖于java基础环境(JDK1.8 Linux)</span><br></pre></td></tr></table></figure><p>部署篇</p><p>JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。</p><p><a href="http://openjdk.java.net/" target="_blank" rel="noopener">http://openjdk.java.net/</a> //jdk官网</p><p><a href="http://tomcat.apache.org" target="_blank" rel="noopener">http://tomcat.apache.org</a> //tomcat官网</p><h3 id="一、部署Tomcat应用"><a href="#一、部署Tomcat应用" class="headerlink" title="一、部署Tomcat应用"></a>一、部署Tomcat应用</h3><p>此次是直接将项目所需的三个压缩包直接拖到了/root目录下。</p><p><strong><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/1.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">1.安装JDK和tomcat</span><br><span class="line">JDK 是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一堆Java工具和Java基础的类库(rt.jar)。不论什么Java应用服务器实质都是内置了某个版本的JDK</span><br><span class="line">[root@zabbix-agent-node2 ~]# tar xf apache-tomcat-8.5.45.tar.gz -C /usr/local/</span><br><span class="line">[root@zabbix-agent-node2 ~]# tar xf jdk-8u211-linux-x64.tar.gz -C /usr/local</span><br><span class="line">[root@zabbix-agent-node2 ~]# cd /usr/local/</span><br><span class="line">[root@zabbix-agent-node2 local]# mv apache-tomcat-8.5.45/ tomcat</span><br><span class="line">2.修改环境变量</span><br><span class="line">PATH：存放系统搜索指定的二进制程序的路径，依次在路径找，找不到就报错</span><br><span class="line">[root@zabbix-agent-node2 ~]# vim /etc/profile   #在文件最后面添加下面的内容</span><br><span class="line">export PATH=$PATH:/usr/local/jdk1.8.0_211/bin</span><br><span class="line">或（下方的是将文件名改成java后的，如果要添加下方的，需要把jdk文件名改为java）</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH 使用JAVA_HOME下的JAVA命令</span><br><span class="line">export JAVA_HOME PATH</span><br><span class="line">CATALINA_HOME=/usr/local/tomcat //Tomcat安装目录</span><br><span class="line">export CATALINA_HOME</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">配置的jdk。最重要使用它的bin/目录下的可执行的命令（比如启动tomcat时候，它要去使用java、javac）</span><br><span class="line">但是按照我们的配置/usr/local/java/bin并不在PATH变量中；所以我们要把/usr/local/java/bin加入到PATH变量里</span><br><span class="line">为了能直接引用java命令，不用写绝对路径，目的就像使用ls  cd  touch这些指令一样，因为ls  cd  touch,,,,这些指令</span><br><span class="line">存在/usr/bin目录下，且/usr/bin目录被PATH变量包含，所以我们敲ls  cd touch才能直接被识别到；</span><br><span class="line">所以我们在/etc/profile环境变量的配置文件的最后面，将/usr/local/java/bin目录添加到了PATH变量中；</span><br><span class="line">要理解以下两行配置的意义</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@zabbix-agent-node2 ~]# source /etc/profile</span><br><span class="line">3.检测</span><br><span class="line">[root@zabbix-agent-node2 ~]# java -version</span><br><span class="line">java version "1.7.0_67"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.7.0_67-b01)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)</span><br><span class="line">4.启动Tomcat</span><br><span class="line">[root@zabbix-agent-node2 ~]# /usr/local/tomcat/bin/startup.sh</span><br><span class="line">(如何关闭呢：[root@zabbix-agent-node2 ~]# /usr/local/tomcat/bin/shutdown.sh)</span><br><span class="line">5.检查是否启动成功</span><br><span class="line">[root@zabbix-agent-node2 ~]# netstat -tnlp | grep java</span><br><span class="line">tcp 0 0 ::ffff:127.0.0.1:8005 :::* LISTEN 6191/java</span><br><span class="line">tcp 0 0 :::8009 :::* LISTEN 6191/java</span><br><span class="line">tcp 0 0 :::8080 :::* LISTEN 6191/java</span><br><span class="line"></span><br><span class="line">[root@zabbix-agent-node2 ~]# setenforce 0</span><br><span class="line">[root@zabbix-agent-node2 ~]# systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">6.测试</span><br><span class="line">http://IP地址:8080/</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/2.png" class></strong></p><h3 id="二、安装数据库"><a href="#二、安装数据库" class="headerlink" title="二、安装数据库"></a>二、安装数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.使用mariadb</span><br><span class="line">[root@zabbix-agent-node2 ~]# yum -y install mariadb mariadb-server</span><br><span class="line">[root@zabbix-agent-node2 ~]# systemctl start mariadb</span><br><span class="line">[root@zabbix-agent-node2 ~]# mysql  #默认没有密码，工作中不会这样。设置密码使用如下命令：mysql_secure_installation</span><br><span class="line">[root@zabbix-agent-node2 ~]# mysql -u root -p1     #我这里的密码设置的为1</span><br><span class="line">create database jspgou default charset=utf8;//在数据库中操作，创建数据库并指定字符集utf8,显示中文</span><br></pre></td></tr></table></figure><h3 id="三、部署jspgou"><a href="#三、部署jspgou" class="headerlink" title="三、部署jspgou"></a>三、部署jspgou</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# /usr/local/tomcat/bin/shutdown.sh //部署之前先将服务停掉（可选操作）</span><br><span class="line">[root@zabbix-agent-node2 ~]# ls /usr/local/tomcat/webapps/ //默认网站的主目录</span><br><span class="line">docs examples host-manager manager ROOT</span><br><span class="line">[root@zabbix-agent-node2 ~]# rm -rf /usr/local/tomcat/webapps/ROOT</span><br><span class="line">[root@zabbix-agent-node2 ~]# yum -y install lrzsz</span><br><span class="line">[root@zabbix-agent-node2 ~]# rz //上传到项目服务器</span><br><span class="line">[root@zabbix-agent-node2 ~]# yum -y install unzip //安装解压工具</span><br><span class="line">[root@zabbix-agent-node2 ~]# unzip +包名</span><br><span class="line">[root@zabbix-agent-node2 ~]# mv  ROOT/ /usr/local/tomcat/webapps/</span><br></pre></td></tr></table></figure><h3 id="四、更改数据库链接"><a href="#四、更改数据库链接" class="headerlink" title="四、更改数据库链接"></a>四、更改数据库链接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]vim/usr/local/tomcat/webapps/ROOT/WEB-INF/config/jdbc.properties#文件第20行左右</span><br><span class="line">jdbc.url=jdbc:mysql://127.0.0.1:3306/创建好的数据库名?characterEncoding=UTF-8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=1#你的密码，无密码则不用填</span><br></pre></td></tr></table></figure><h3 id="五-导入数据"><a href="#五-导入数据" class="headerlink" title="五.导入数据"></a>五.导入数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# mysql -u root -p -D jspgou &lt; /DB/jspgou.sql</span><br></pre></td></tr></table></figure><p>回车后让提示让输入密码，输入密码即可，无密码直接回车。</p><h3 id="六、再次启动Tomcat服务"><a href="#六、再次启动Tomcat服务" class="headerlink" title="六、再次启动Tomcat服务"></a>六、再次启动Tomcat服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node2 ~]# /usr/local/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure><h3 id="七、测试"><a href="#七、测试" class="headerlink" title="七、测试"></a>七、测试</h3><p>访问商城页面：<strong><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/3.png" class></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">系统管理后台登录：</span><br><span class="line">http://IP地址:8080/jeeadmin/jspgou/index.do</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E%E4%BA%91%E9%83%A8%E7%BD%B2tomcat%E5%92%8Cjdk%E4%BD%BFjspgou%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF/4.png" class></strong></p><p>用户名：admin<br>密 码：123456</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="tomcat" scheme="https://l66stbz.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>作业_zabbix监控内存</title>
    <link href="https://l66stbz.github.io/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/"/>
    <id>https://l66stbz.github.io/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/</id>
    <published>2024-05-19T01:56:37.000Z</published>
    <updated>2024-06-22T07:36:46.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a>【作业】</h2><p>自定义监控项，使zabbix-server可以对被监控端的内存进行检测，如果被监控端的内存使用超过90%则报警，并发送邮件</p><p>新建文件，自定义监控项，也就是我们自己写监控项，需要在被监控端的/etc/zabbix/zabbix_agentd.d/目录下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]# vi /etc/zabbix/zabbix_agentd.d/userparameter_mem.conf</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/1.png" class></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=mem_status,free -m | awk <span class="string">'NR==2&#123;printf $3/$2*100&#125;'</span>|awk -F . <span class="string">'&#123;printf $1&#125;'</span></span><br></pre></td></tr></table></figure><p>其中UserParameter=mem_status是给自定义的监控项起个名字，锐变都可以。后半段其实就是把free -m得到的结果管道给后边，然后利用awk扣出我们想要的东西，第二行的第三列是已使用内存，第二行第二列是总内存，前者除以后者*100%即可得出内存使用率。这里是 *100。然后会得到结果。如果觉得小数看的不美观可以再次管道，使用awk -F以.作为分隔符最终输出整数。当然也可以保留两位小数，具体实现如下。</p><p><strong><img src="/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/2.png" class></strong></p><p><strong><img src="/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/3.png" class></strong></p><p><strong><img src="/2024/05/19/%E4%BD%9C%E4%B8%9A_zabbix%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98/4.png" class></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">free -m| awk <span class="string">'NR==2&#123;print $3/$2*100&#125;'</span><span class="comment">#正常输出</span></span><br><span class="line">free -m| awk <span class="string">'NR==2&#123;printf ("%.2f"), $3/$2*100&#125;'</span><span class="comment">#保留两位小数</span></span><br><span class="line">free -m | awk <span class="string">'NR==2&#123;printf $3/$2*100&#125;'</span>|awk -F . <span class="string">'&#123;printf $1&#125;'</span><span class="comment">#保留整数部分</span></span><br></pre></td></tr></table></figure><p>然后在zabbix创建对应监控项和触发器即可，监控项名称要与文件中的自定义监控项的名字一致。需要邮件报警的话就继续创建动作进行一系列设置即可，此处不再赘述！</p><p>友情提示：记得关闭防火墙，还有就是确认好被监控机器是哪一台，是自己监控自己还是监控别人。然后去修改对应的被监控节点的配置文件，如果对配置文件进行了修改记得重启zabbix-agent服务。</p><p>配置文件即如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node1 ~]# cd /etc/zabbix/</span><br><span class="line">[root@zabbix-agent-node1 zabbix]# vim zabbix_agentd.conf   ----修改如下</span><br><span class="line">Server=192.168.153.147 zabbix监控端的地址 </span><br><span class="line">ServerActive=192.168.153.147 主动模式 zabbix-server-ip</span><br><span class="line">Hostname=zabbix-agent-none1 </span><br><span class="line">UnsafeUserParameters=1 是否限制用户自定义 keys 使用特殊字符 1是可以启用特殊字符 0是不可以启用特殊字符</span><br><span class="line">EnableRemoteCommands=1 是否允许别人执行远程操作命令，默认是禁用的，打开的话会有安全风险.</span><br></pre></td></tr></table></figure><p>重启zabbix-agent服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node1 ~]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Zabbix" scheme="https://l66stbz.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix监控Nginx指标</title>
    <link href="https://l66stbz.github.io/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/"/>
    <id>https://l66stbz.github.io/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/</id>
    <published>2024-05-18T01:56:37.000Z</published>
    <updated>2024-06-22T07:30:31.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="监控Nginx性能状态"><a href="#监控Nginx性能状态" class="headerlink" title="监控Nginx性能状态"></a>监控Nginx性能状态</h2><p>Nginx在生产环境中的应用越来越广泛，所以需要对Nginx的性能状态做一些监控，从而发现故障隐患，Ngnx的监控指标可分为：基本活动指标，错误指标，性能指标</p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/1.png" class></strong></p><p>监控Nginx思路：<br>1）首先，要想监控Nginx，需要状态模块的支持，也就是-with-http_stub_status_module；随后在nginx.conf配置开启status状态<br>2）通过awk取status的各个状态数值<br>3）自定义模板将取值status的状态写成脚本，放在UserParmeter后面，最后通过zabbix_get测试·agent端是否得到状态值<br>Accepts：接受的客户端请求数<br>Active：当前活跃的连接数<br>Handled：处理的请求数（正常服务器响应）<br>Requests：客户端处理的请求出（吞吐量)<br>Reading:当接收到的请求时，连接离开waiting状态，并且该请求本身使Reading状态统计数增加，这种状态下，nginx会读取客户端请求首部，请求首部是比较小的，因此这通常是一种快捷的操作<br>Writing：请求被读取之后，使得Writing状态计数增加，并保持在该状态，直到响应返回给客户端，这便意味着，该请求在writing状态时，一方面NGINX</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>被监控做以下操作，如果是自己监控自己就在本机上操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node1 ~]# vim /etc/yum.repos.d/nginx.repo </span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=true</span><br><span class="line">[root@zabbix-agent-node1 ~]# yum -y install nginx</span><br><span class="line"></span><br><span class="line">[root@zabbix-agent-node1 ~]# vim /etc/nginx/conf.d/default.conf</span><br><span class="line">在配置的server模块中，加入以下几行；</span><br><span class="line">    location /status &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">      access_log off;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/2.png" class></strong></p><p>操作完后重启nginx服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node1 ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p>浏览器访问：<strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/3.png" class></strong></p><p>Linux命令访问：<strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/4.png" class></strong></p><p>由于，这些指标，Zabbix自带的监控项，不能满足我们的需求，也就是没有监控项，能提取到精确的数值。所以，我们只能自定义监控项，也就是我们自己写监控项，需要在被监控端的/etc/zabbix/zabbix_agentd.d/目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-agent-node1 ~]# cd /etc/zabbix/zabbix_agentd.d/</span><br><span class="line">[root@youngfit zabbix_agentd.d]# vim nginx_status.conf</span><br><span class="line">UserParameter=nginx_active_cons,curl -s localhost/status|awk 'NR==1&#123;print $3&#125;'</span><br><span class="line">[root@youngfit zabbix_agentd.d]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p>awk命令相当于是从某个东西里扣东西。默认以空格作为分隔符，也可以 使用参数 -F 符号来指定分隔符，如awk -F :   就是以冒号作为分隔符。NR==1代表是第一行，不写的话默认代表所有行，{print $3}代表第三列。例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]# free -m | awk 'NR==2&#123;printf $3/$2*100&#125;'</span><br><span class="line">68.6214[root@zabbix-server ~]# free -m | awk 'NR==2&#123;printf  $3/$2*100&#125;'|awk -F . '&#123;printf $1&#125;'</span><br><span class="line">68</span><br></pre></td></tr></table></figure><p>可以看到第二次以.作为分隔符后只输出了68，因为只有一行所以写不写NR都无所谓。</p><h3 id="在监控端zabbix-get测试"><a href="#在监控端zabbix-get测试" class="headerlink" title="在监控端zabbix_get测试"></a>在监控端zabbix_get测试</h3><p>如果是本机监控本机就在本机安装即可！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]# yum -y install zabbix-get   #zabbix-get是获取被监控端数据的一个工具</span><br></pre></td></tr></table></figure><p>监控端测试如下，ip写被监控端ip即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@feige ~]# zabbix_get -s 192.168.100.20 -p 10050 -k "nginx_active_cons"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s 指定被监控端的ip地址</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -p 指定被监控端的zabbix-agent服务监听的端口</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -k 指定key值</span></span><br></pre></td></tr></table></figure><p>来到监控端，创建对应的监控项</p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/5.png" class></strong></p><p>创建对应触发器</p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/6.png" class></strong></p><p>测试触发器</p><p>不断地去访问nginx的页面，它的活跃连接数就会增加，大于1，触发器就会触发，如下图</p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/7.png" class></strong></p><p>创建动作</p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/8.png" class></strong></p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/9.png" class></strong></p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/10.png" class></strong></p><p><strong><img src="/2024/05/18/Zabbix%E7%9B%91%E6%8E%A7Nginx%E6%8C%87%E6%A0%87/11.png" class></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://l66stbz.github.io/tags/Linux/"/>
    
      <category term="Zabbix" scheme="https://l66stbz.github.io/tags/Zabbix/"/>
    
      <category term="Nginx" scheme="https://l66stbz.github.io/tags/Nginx/"/>
    
  </entry>
  
</feed>
